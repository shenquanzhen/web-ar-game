import {
  __commonJS,
  __require
} from "./chunk-CQXHTUV2.js";

// browser-external:fs
var require_fs = __commonJS({
  "browser-external:fs"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key2) {
        if (key2 !== "__esModule" && key2 !== "__proto__" && key2 !== "constructor" && key2 !== "splice") {
          console.warn(`Module "fs" has been externalized for browser compatibility. Cannot access "fs.${key2}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:path
var require_path = __commonJS({
  "browser-external:path"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key2) {
        if (key2 !== "__esModule" && key2 !== "__proto__" && key2 !== "constructor" && key2 !== "splice") {
          console.warn(`Module "path" has been externalized for browser compatibility. Cannot access "path.${key2}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:crypto
var require_crypto = __commonJS({
  "browser-external:crypto"(exports2, module2) {
    module2.exports = Object.create(new Proxy({}, {
      get(_, key2) {
        if (key2 !== "__esModule" && key2 !== "__proto__" && key2 !== "constructor" && key2 !== "splice") {
          console.warn(`Module "crypto" has been externalized for browser compatibility. Cannot access "crypto.${key2}" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/ar.js/aframe/build/aframe-ar.min.js
var require_aframe_ar_min = __commonJS({
  "node_modules/ar.js/aframe/build/aframe-ar.min.js"(exports, module) {
    (function() {
      "use strict";
      var ARController2 = function(width, height, camera) {
        var id;
        var w = width, h = height;
        this.orientation = "landscape";
        this.listeners = {};
        if (typeof width !== "number") {
          var image = width;
          camera = height;
          w = image.videoWidth || image.width;
          h = image.videoHeight || image.height;
          this.image = image;
        }
        this.defaultMarkerWidth = 1;
        this.patternMarkers = {};
        this.barcodeMarkers = {};
        this.transform_mat = new Float32Array(16);
        this.canvas = document.createElement("canvas");
        this.canvas.width = w;
        this.canvas.height = h;
        this.ctx = this.canvas.getContext("2d");
        this.videoWidth = w;
        this.videoHeight = h;
        if (typeof camera === "string") {
          var self = this;
          this.cameraParam = new ARCameraParam2(camera, function() {
            self._initialize();
          }, function(err) {
            console.error("ARController: Failed to load ARCameraParam", err);
          });
        } else {
          this.cameraParam = camera;
          this._initialize();
        }
      };
      ARController2.prototype.dispose = function() {
        artoolkit2.teardown(this.id);
        for (var t in this) {
          this[t] = null;
        }
      };
      ARController2.prototype.process = function(image) {
        this.detectMarker(image);
        var markerNum = this.getMarkerNum();
        var k, o;
        for (k in this.patternMarkers) {
          o = this.patternMarkers[k];
          o.inPrevious = o.inCurrent;
          o.inCurrent = false;
        }
        for (k in this.barcodeMarkers) {
          o = this.barcodeMarkers[k];
          o.inPrevious = o.inCurrent;
          o.inCurrent = false;
        }
        for (var i2 = 0; i2 < markerNum; i2++) {
          var markerInfo = this.getMarker(i2);
          var markerType = artoolkit2.UNKNOWN_MARKER;
          var visible = this.trackPatternMarkerId(-1);
          if (markerInfo.idPatt > -1 && (markerInfo.id === markerInfo.idPatt || markerInfo.idMatrix === -1)) {
            visible = this.trackPatternMarkerId(markerInfo.idPatt);
            markerType = artoolkit2.PATTERN_MARKER;
            if (markerInfo.dir !== markerInfo.dirPatt) {
              this.setMarkerInfoDir(i2, markerInfo.dirPatt);
            }
          } else if (markerInfo.idMatrix > -1) {
            visible = this.trackBarcodeMarkerId(markerInfo.idMatrix);
            markerType = artoolkit2.BARCODE_MARKER;
            if (markerInfo.dir !== markerInfo.dirMatrix) {
              this.setMarkerInfoDir(i2, markerInfo.dirMatrix);
            }
          }
          if (markerType !== artoolkit2.UNKNOWN_MARKER && visible.inPrevious) {
            this.getTransMatSquareCont(i2, visible.markerWidth, visible.matrix, visible.matrix);
          } else {
            this.getTransMatSquare(i2, visible.markerWidth, visible.matrix);
          }
          visible.inCurrent = true;
          this.transMatToGLMat(visible.matrix, this.transform_mat);
          this.dispatchEvent({ name: "getMarker", target: this, data: { index: i2, type: markerType, marker: markerInfo, matrix: this.transform_mat } });
        }
        var multiMarkerCount = this.getMultiMarkerCount();
        for (var i2 = 0; i2 < multiMarkerCount; i2++) {
          var subMarkerCount = this.getMultiMarkerPatternCount(i2);
          var visible = false;
          artoolkit2.getTransMatMultiSquareRobust(this.id, i2);
          this.transMatToGLMat(this.marker_transform_mat, this.transform_mat);
          for (var j = 0; j < subMarkerCount; j++) {
            var multiEachMarkerInfo = this.getMultiEachMarker(i2, j);
            if (multiEachMarkerInfo.visible >= 0) {
              visible = true;
              this.dispatchEvent({ name: "getMultiMarker", target: this, data: { multiMarkerId: i2, matrix: this.transform_mat } });
              break;
            }
          }
          if (visible) {
            for (var j = 0; j < subMarkerCount; j++) {
              var multiEachMarkerInfo = this.getMultiEachMarker(i2, j);
              this.transMatToGLMat(this.marker_transform_mat, this.transform_mat);
              this.dispatchEvent({ name: "getMultiMarkerSub", target: this, data: { multiMarkerId: i2, markerIndex: j, marker: multiEachMarkerInfo, matrix: this.transform_mat } });
            }
          }
        }
        if (this._bwpointer) {
          this.debugDraw();
        }
      };
      ARController2.prototype.trackPatternMarkerId = function(id, markerWidth) {
        var obj = this.patternMarkers[id];
        if (!obj) {
          this.patternMarkers[id] = obj = { inPrevious: false, inCurrent: false, matrix: new Float32Array(12), markerWidth: markerWidth || this.defaultMarkerWidth };
        }
        if (markerWidth) {
          obj.markerWidth = markerWidth;
        }
        return obj;
      };
      ARController2.prototype.trackBarcodeMarkerId = function(id, markerWidth) {
        var obj = this.barcodeMarkers[id];
        if (!obj) {
          this.barcodeMarkers[id] = obj = { inPrevious: false, inCurrent: false, matrix: new Float32Array(12), markerWidth: markerWidth || this.defaultMarkerWidth };
        }
        if (markerWidth) {
          obj.markerWidth = markerWidth;
        }
        return obj;
      };
      ARController2.prototype.getMultiMarkerCount = function() {
        return artoolkit2.getMultiMarkerCount(this.id);
      };
      ARController2.prototype.getMultiMarkerPatternCount = function(multiMarkerId) {
        return artoolkit2.getMultiMarkerNum(this.id, multiMarkerId);
      };
      ARController2.prototype.addEventListener = function(name, callback) {
        if (!this.listeners[name]) {
          this.listeners[name] = [];
        }
        this.listeners[name].push(callback);
      };
      ARController2.prototype.removeEventListener = function(name, callback) {
        if (this.listeners[name]) {
          var index = this.listeners[name].indexOf(callback);
          if (index > -1) {
            this.listeners[name].splice(index, 1);
          }
        }
      };
      ARController2.prototype.dispatchEvent = function(event) {
        var listeners = this.listeners[event.name];
        if (listeners) {
          for (var i2 = 0; i2 < listeners.length; i2++) {
            listeners[i2].call(this, event);
          }
        }
      };
      ARController2.prototype.debugSetup = function() {
        document.body.appendChild(this.canvas);
        this.setDebugMode(1);
        this._bwpointer = this.getProcessingImage();
      };
      ARController2.prototype.loadMarker = function(markerURL, onSuccess, onError) {
        return artoolkit2.addMarker(this.id, markerURL, onSuccess, onError);
      };
      ARController2.prototype.loadMultiMarker = function(markerURL, onSuccess, onError) {
        return artoolkit2.addMultiMarker(this.id, markerURL, onSuccess, onError);
      };
      ARController2.prototype.getTransMatSquare = function(markerIndex, markerWidth, dst) {
        artoolkit2.getTransMatSquare(this.id, markerIndex, markerWidth);
        dst.set(this.marker_transform_mat);
        return dst;
      };
      ARController2.prototype.getTransMatSquareCont = function(markerIndex, markerWidth, previousMarkerTransform, dst) {
        this.marker_transform_mat.set(previousMarkerTransform);
        artoolkit2.getTransMatSquareCont(this.id, markerIndex, markerWidth);
        dst.set(this.marker_transform_mat);
        return dst;
      };
      ARController2.prototype.getTransMatMultiSquare = function(multiMarkerId, dst) {
        artoolkit2.getTransMatMultiSquare(this.id, multiMarkerId);
        dst.set(this.marker_transform_mat);
        return dst;
      };
      ARController2.prototype.getTransMatMultiSquareRobust = function(multiMarkerId, dst) {
        artoolkit2.getTransMatMultiSquare(this.id, multiMarkerId);
        dst.set(this.marker_transform_mat);
        return dst;
      };
      ARController2.prototype.transMatToGLMat = function(transMat, glMat, scale) {
        glMat[0 + 0 * 4] = transMat[0];
        glMat[0 + 1 * 4] = transMat[1];
        glMat[0 + 2 * 4] = transMat[2];
        glMat[0 + 3 * 4] = transMat[3];
        glMat[1 + 0 * 4] = transMat[4];
        glMat[1 + 1 * 4] = transMat[5];
        glMat[1 + 2 * 4] = transMat[6];
        glMat[1 + 3 * 4] = transMat[7];
        glMat[2 + 0 * 4] = transMat[8];
        glMat[2 + 1 * 4] = transMat[9];
        glMat[2 + 2 * 4] = transMat[10];
        glMat[2 + 3 * 4] = transMat[11];
        glMat[3 + 0 * 4] = 0;
        glMat[3 + 1 * 4] = 0;
        glMat[3 + 2 * 4] = 0;
        glMat[3 + 3 * 4] = 1;
        if (scale != void 0 && scale !== 0) {
          glMat[12] *= scale;
          glMat[13] *= scale;
          glMat[14] *= scale;
        }
        return glMat;
      };
      ARController2.prototype.detectMarker = function(image) {
        if (this._copyImageToHeap(image)) {
          return artoolkit2.detectMarker(this.id);
        }
        return -99;
      };
      ARController2.prototype.getMarkerNum = function() {
        return artoolkit2.getMarkerNum(this.id);
      };
      ARController2.prototype.getMarker = function(markerIndex) {
        if (0 === artoolkit2.getMarker(this.id, markerIndex)) {
          return artoolkit2.markerInfo;
        }
      };
      ARController2.prototype.setMarkerInfoVertex = function(markerIndex, vertexData) {
        for (var i2 = 0; i2 < vertexData.length; i2++) {
          this.marker_transform_mat[i2 * 2 + 0] = vertexData[i2][0];
          this.marker_transform_mat[i2 * 2 + 1] = vertexData[i2][1];
        }
        return artoolkit2.setMarkerInfoVertex(this.id, markerIndex);
      };
      ARController2.prototype.cloneMarkerInfo = function(markerInfo) {
        return JSON.parse(JSON.stringify(markerInfo));
      };
      ARController2.prototype.getMultiEachMarker = function(multiMarkerId, markerIndex) {
        if (0 === artoolkit2.getMultiEachMarker(this.id, multiMarkerId, markerIndex)) {
          return artoolkit2.multiEachMarkerInfo;
        }
      };
      ARController2.prototype.getTransformationMatrix = function() {
        return this.transform_mat;
      };
      ARController2.prototype.getCameraMatrix = function() {
        return this.camera_mat;
      };
      ARController2.prototype.getMarkerTransformationMatrix = function() {
        return this.marker_transform_mat;
      };
      ARController2.prototype.setDebugMode = function(mode) {
        return artoolkit2.setDebugMode(this.id, mode);
      };
      ARController2.prototype.getDebugMode = function() {
        return artoolkit2.getDebugMode(this.id);
      };
      ARController2.prototype.getProcessingImage = function() {
        return artoolkit2.getProcessingImage(this.id);
      };
      ARController2.prototype.setLogLevel = function(mode) {
        return artoolkit2.setLogLevel(mode);
      };
      ARController2.prototype.getLogLevel = function() {
        return artoolkit2.getLogLevel();
      };
      ARController2.prototype.setMarkerInfoDir = function(markerIndex, dir) {
        return artoolkit2.setMarkerInfoDir(this.id, markerIndex, dir);
      };
      ARController2.prototype.setProjectionNearPlane = function(value) {
        return artoolkit2.setProjectionNearPlane(this.id, value);
      };
      ARController2.prototype.getProjectionNearPlane = function() {
        return artoolkit2.getProjectionNearPlane(this.id);
      };
      ARController2.prototype.setProjectionFarPlane = function(value) {
        return artoolkit2.setProjectionFarPlane(this.id, value);
      };
      ARController2.prototype.getProjectionFarPlane = function() {
        return artoolkit2.getProjectionFarPlane(this.id);
      };
      ARController2.prototype.setThresholdMode = function(mode) {
        return artoolkit2.setThresholdMode(this.id, mode);
      };
      ARController2.prototype.getThresholdMode = function() {
        return artoolkit2.getThresholdMode(this.id);
      };
      ARController2.prototype.setThreshold = function(threshold) {
        return artoolkit2.setThreshold(this.id, threshold);
      };
      ARController2.prototype.getThreshold = function() {
        return artoolkit2.getThreshold(this.id);
      };
      ARController2.prototype.setPatternDetectionMode = function(value) {
        return artoolkit2.setPatternDetectionMode(this.id, value);
      };
      ARController2.prototype.getPatternDetectionMode = function() {
        return artoolkit2.getPatternDetectionMode(this.id);
      };
      ARController2.prototype.setMatrixCodeType = function(value) {
        return artoolkit2.setMatrixCodeType(this.id, value);
      };
      ARController2.prototype.getMatrixCodeType = function() {
        return artoolkit2.getMatrixCodeType(this.id);
      };
      ARController2.prototype.setLabelingMode = function(value) {
        return artoolkit2.setLabelingMode(this.id, value);
      };
      ARController2.prototype.getLabelingMode = function() {
        return artoolkit2.getLabelingMode(this.id);
      };
      ARController2.prototype.setPattRatio = function(value) {
        return artoolkit2.setPattRatio(this.id, value);
      };
      ARController2.prototype.getPattRatio = function() {
        return artoolkit2.getPattRatio(this.id);
      };
      ARController2.prototype.setImageProcMode = function(value) {
        return artoolkit2.setImageProcMode(this.id, value);
      };
      ARController2.prototype.getImageProcMode = function() {
        return artoolkit2.getImageProcMode(this.id);
      };
      ARController2.prototype.debugDraw = function() {
        var debugBuffer = new Uint8ClampedArray(Module.HEAPU8.buffer, this._bwpointer, this.framesize);
        var id = new ImageData(debugBuffer, this.canvas.width, this.canvas.height);
        this.ctx.putImageData(id, 0, 0);
        var marker_num = this.getMarkerNum();
        for (var i2 = 0; i2 < marker_num; i2++) {
          this._debugMarker(this.getMarker(i2));
        }
      };
      ARController2.prototype._initialize = function() {
        this.id = artoolkit2.setup(this.canvas.width, this.canvas.height, this.cameraParam.id);
        var params = artoolkit2.frameMalloc;
        this.framepointer = params.framepointer;
        this.framesize = params.framesize;
        this.dataHeap = new Uint8Array(Module.HEAPU8.buffer, this.framepointer, this.framesize);
        this.camera_mat = new Float64Array(Module.HEAPU8.buffer, params.camera, 16);
        this.marker_transform_mat = new Float64Array(Module.HEAPU8.buffer, params.transform, 12);
        this.setProjectionNearPlane(0.1);
        this.setProjectionFarPlane(1e3);
        var self = this;
        setTimeout(function() {
          if (self.onload) {
            self.onload();
          }
          self.dispatchEvent({ name: "load", target: self });
        }, 1);
      };
      ARController2.prototype._copyImageToHeap = function(image) {
        if (!image) {
          image = this.image;
        }
        this.ctx.save();
        if (this.orientation === "portrait") {
          this.ctx.translate(this.canvas.width, 0);
          this.ctx.rotate(Math.PI / 2);
          this.ctx.drawImage(image, 0, 0, this.canvas.height, this.canvas.width);
        } else {
          this.ctx.drawImage(image, 0, 0, this.canvas.width, this.canvas.height);
        }
        this.ctx.restore();
        var imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);
        var data = imageData.data;
        if (this.dataHeap) {
          this.dataHeap.set(data);
          return true;
        }
        return false;
      };
      ARController2.prototype._debugMarker = function(marker) {
        var vertex, pos;
        vertex = marker.vertex;
        var ctx = this.ctx;
        ctx.strokeStyle = "red";
        ctx.beginPath();
        ctx.moveTo(vertex[0][0], vertex[0][1]);
        ctx.lineTo(vertex[1][0], vertex[1][1]);
        ctx.stroke();
        ctx.beginPath();
        ctx.moveTo(vertex[2][0], vertex[2][1]);
        ctx.lineTo(vertex[3][0], vertex[3][1]);
        ctx.stroke();
        ctx.strokeStyle = "green";
        ctx.beginPath();
        ctx.lineTo(vertex[1][0], vertex[1][1]);
        ctx.lineTo(vertex[2][0], vertex[2][1]);
        ctx.stroke();
        ctx.beginPath();
        ctx.moveTo(vertex[3][0], vertex[3][1]);
        ctx.lineTo(vertex[0][0], vertex[0][1]);
        ctx.stroke();
        pos = marker.pos;
        ctx.beginPath();
        ctx.arc(pos[0], pos[1], 8, 0, Math.PI * 2);
        ctx.fillStyle = "red";
        ctx.fill();
      };
      ARController2.getUserMedia = function(configuration) {
        var facing = configuration.facingMode || "environment";
        var onSuccess = configuration.onSuccess;
        var onError = configuration.onError || function(err) {
          console.error("ARController.getUserMedia", err);
        };
        var video = document.createElement("video");
        var initProgress = function() {
          if (this.videoWidth !== 0) {
            onSuccess(video);
          }
        };
        var readyToPlay = false;
        var eventNames = ["touchstart", "touchend", "touchmove", "touchcancel", "click", "mousedown", "mouseup", "mousemove", "keydown", "keyup", "keypress", "scroll"];
        var play = function(ev) {
          if (readyToPlay) {
            video.play();
            if (!video.paused) {
              eventNames.forEach(function(eventName) {
                window.removeEventListener(eventName, play, true);
              });
            }
          }
        };
        eventNames.forEach(function(eventName) {
          window.addEventListener(eventName, play, true);
        });
        var success = function(stream) {
          video.addEventListener("loadedmetadata", initProgress, false);
          video.src = window.URL.createObjectURL(stream);
          readyToPlay = true;
          play();
        };
        var constraints = {};
        var mediaDevicesConstraints = {};
        if (configuration.width) {
          mediaDevicesConstraints.width = configuration.width;
          if (typeof configuration.width === "object") {
            if (configuration.width.max) {
              constraints.maxWidth = configuration.width.max;
            }
            if (configuration.width.min) {
              constraints.minWidth = configuration.width.max;
            }
          } else {
            constraints.maxWidth = configuration.width;
          }
        }
        if (configuration.height) {
          mediaDevicesConstraints.height = configuration.height;
          if (typeof configuration.height === "object") {
            if (configuration.height.max) {
              constraints.maxHeight = configuration.height.max;
            }
            if (configuration.height.min) {
              constraints.minHeight = configuration.height.max;
            }
          } else {
            constraints.maxHeight = configuration.height;
          }
        }
        mediaDevicesConstraints.facingMode = facing;
        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;
        var hdConstraints = { audio: false, video: { mandatory: constraints } };
        if (false) {
          if (navigator.mediaDevices) {
            navigator.mediaDevices.getUserMedia({ audio: false, video: mediaDevicesConstraints }).then(success, onError);
          } else {
            MediaStreamTrack.getSources(function(sources) {
              var facingDir = mediaDevicesConstraints.facingMode;
              if (facing && facing.exact) {
                facingDir = facing.exact;
              }
              for (var i2 = 0; i2 < sources.length; i2++) {
                if (sources[i2].kind === "video" && sources[i2].facing === facingDir) {
                  hdConstraints.video.mandatory.sourceId = sources[i2].id;
                  break;
                }
              }
              if (facing && facing.exact && !hdConstraints.video.mandatory.sourceId) {
                onError("Failed to get camera facing the wanted direction");
              } else {
                if (navigator.getUserMedia) {
                  navigator.getUserMedia(hdConstraints, success, onError);
                } else {
                  onError("navigator.getUserMedia is not supported on your browser");
                }
              }
            });
          }
        } else {
          if (navigator.getUserMedia) {
            navigator.getUserMedia(hdConstraints, success, onError);
          } else {
            onError("navigator.getUserMedia is not supported on your browser");
          }
        }
        return video;
      };
      ARController2.getUserMediaARController = function(configuration) {
        var obj = {};
        for (var i2 in configuration) {
          obj[i2] = configuration[i2];
        }
        var onSuccess = configuration.onSuccess;
        var cameraParamURL = configuration.cameraParam;
        obj.onSuccess = function() {
          new ARCameraParam2(cameraParamURL, function() {
            var arCameraParam = this;
            var maxSize = configuration.maxARVideoSize || Math.max(video.videoWidth, video.videoHeight);
            var f = maxSize / Math.max(video.videoWidth, video.videoHeight);
            var w = f * video.videoWidth;
            var h = f * video.videoHeight;
            if (video.videoWidth < video.videoHeight) {
              var tmp = w;
              w = h;
              h = tmp;
            }
            var arController = new ARController2(w, h, arCameraParam);
            arController.image = video;
            if (video.videoWidth < video.videoHeight) {
              arController.orientation = "portrait";
              arController.videoWidth = video.videoHeight;
              arController.videoHeight = video.videoWidth;
            } else {
              arController.orientation = "landscape";
              arController.videoWidth = video.videoWidth;
              arController.videoHeight = video.videoHeight;
            }
            onSuccess(arController, arCameraParam);
          }, function(err) {
            console.error("ARController: Failed to load ARCameraParam", err);
          });
        };
        var video = this.getUserMedia(obj);
        return video;
      };
      var ARCameraParam2 = function(src, onload, onerror) {
        this.id = -1;
        this._src = "";
        this.complete = false;
        this.onload = onload;
        this.onerror = onerror;
        if (src) {
          this.load(src);
        }
      };
      ARCameraParam2.prototype.load = function(src) {
        if (this._src !== "") {
          throw "ARCameraParam: Trying to load camera parameters twice.";
        }
        this._src = src;
        if (src) {
          var self = this;
          artoolkit2.loadCamera(src, function(id) {
            self.id = id;
            self.complete = true;
            self.onload();
          }, function(err) {
            self.onerror(err);
          });
        }
      };
      Object.defineProperty(ARCameraParam2.prototype, "src", { set: function(src) {
        this.load(src);
      }, get: function() {
        return this._src;
      } });
      ARCameraParam2.prototype.dispose = function() {
        if (this.id !== -1) {
          artoolkit2.deleteCamera(this.id);
        }
        this.id = -1;
        this._src = "";
        this.complete = false;
      };
      var artoolkit2 = { UNKNOWN_MARKER: -1, PATTERN_MARKER: 0, BARCODE_MARKER: 1, loadCamera, addMarker, addMultiMarker };
      var FUNCTIONS = ["setup", "teardown", "setLogLevel", "getLogLevel", "setDebugMode", "getDebugMode", "getProcessingImage", "setMarkerInfoDir", "setMarkerInfoVertex", "getTransMatSquare", "getTransMatSquareCont", "getTransMatMultiSquare", "getTransMatMultiSquareRobust", "getMultiMarkerNum", "getMultiMarkerCount", "detectMarker", "getMarkerNum", "getMarker", "getMultiEachMarker", "setProjectionNearPlane", "getProjectionNearPlane", "setProjectionFarPlane", "getProjectionFarPlane", "setThresholdMode", "getThresholdMode", "setThreshold", "getThreshold", "setPatternDetectionMode", "getPatternDetectionMode", "setMatrixCodeType", "getMatrixCodeType", "setLabelingMode", "getLabelingMode", "setPattRatio", "getPattRatio", "setImageProcMode", "getImageProcMode"];
      function runWhenLoaded() {
        FUNCTIONS.forEach(function(n) {
          artoolkit2[n] = Module[n];
        });
        for (var m in Module) {
          if (m.match(/^AR/))
            artoolkit2[m] = Module[m];
        }
      }
      var marker_count = 0;
      function addMarker(arId, url, callback) {
        var filename = "/marker_" + marker_count++;
        ajax(url, filename, function() {
          var id = Module._addMarker(arId, filename);
          if (callback)
            callback(id);
        });
      }
      function bytesToString(array) {
        return String.fromCharCode.apply(String, array);
      }
      function parseMultiFile(bytes) {
        var str = bytesToString(bytes);
        var lines = str.split("\n");
        var files = [];
        var state = 0;
        var markers = 0;
        lines.forEach(function(line) {
          line = line.trim();
          if (!line || line.startsWith("#"))
            return;
          switch (state) {
            case 0:
              markers = +line;
              state = 1;
              return;
            case 1:
              if (!line.match(/^\d+$/)) {
                files.push(line);
              }
              ;
            case 2:
            case 3:
            case 4:
              state++;
              return;
            case 5:
              state = 1;
              return;
          }
        });
        return files;
      }
      var multi_marker_count = 0;
      function addMultiMarker(arId, url, callback) {
        var filename = "/multi_marker_" + multi_marker_count++;
        ajax(url, filename, function(bytes) {
          var files = parseMultiFile(bytes);
          function ok() {
            var markerID = Module._addMultiMarker(arId, filename);
            var markerNum = Module.getMultiMarkerNum(arId, markerID);
            if (callback)
              callback(markerID, markerNum);
          }
          if (!files.length)
            return ok();
          var path2 = url.split("/").slice(0, -1).join("/");
          files = files.map(function(file) {
            return [path2 + "/" + file, file];
          });
          ajaxDependencies(files, ok);
        });
      }
      var camera_count = 0;
      function loadCamera(url, callback) {
        var filename = "/camera_param_" + camera_count++;
        var writeCallback = function() {
          var id = Module._loadCamera(filename);
          if (callback)
            callback(id);
        };
        if (typeof url === "object") {
          writeByteArrayToFS(filename, url, writeCallback);
        } else if (url.indexOf("\n") > -1) {
          writeStringToFS(filename, url, writeCallback);
        } else {
          ajax(url, filename, writeCallback);
        }
      }
      function writeStringToFS(target, string, callback) {
        var byteArray = new Uint8Array(string.length);
        for (var i2 = 0; i2 < byteArray.length; i2++) {
          byteArray[i2] = string.charCodeAt(i2) & 255;
        }
        writeByteArrayToFS(target, byteArray, callback);
      }
      function writeByteArrayToFS(target, byteArray, callback) {
        FS.writeFile(target, byteArray, { encoding: "binary" });
        callback(byteArray);
      }
      function ajax(url, target, callback) {
        var oReq = new XMLHttpRequest();
        oReq.open("GET", url, true);
        oReq.responseType = "arraybuffer";
        oReq.onload = function(oEvent) {
          var arrayBuffer = oReq.response;
          var byteArray = new Uint8Array(arrayBuffer);
          writeByteArrayToFS(target, byteArray, callback);
        };
        oReq.send();
      }
      function ajaxDependencies(files, callback) {
        var next = files.pop();
        if (next) {
          ajax(next[0], next[1], function() {
            ajaxDependencies(files, callback);
          });
        } else {
          callback();
        }
      }
      window.artoolkit = artoolkit2;
      window.ARController = ARController2;
      window.ARCameraParam = ARCameraParam2;
      if (window.Module) {
        runWhenLoaded();
      } else {
        window.Module = { onRuntimeInitialized: function() {
          runWhenLoaded();
        } };
      }
    })();
    var Module;
    if (!Module)
      Module = (typeof Module !== "undefined" ? Module : null) || {};
    var moduleOverrides = {};
    for (key in Module) {
      if (Module.hasOwnProperty(key)) {
        moduleOverrides[key] = Module[key];
      }
    }
    var key;
    var ENVIRONMENT_IS_WEB = typeof window === "object";
    var ENVIRONMENT_IS_WORKER = typeof importScripts === "function";
    var ENVIRONMENT_IS_NODE = typeof process === "object" && typeof __require === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
    var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
    if (ENVIRONMENT_IS_NODE) {
      if (!Module["print"])
        Module["print"] = function print2(x) {
          process["stdout"].write(x + "\n");
        };
      if (!Module["printErr"])
        Module["printErr"] = function printErr2(x) {
          process["stderr"].write(x + "\n");
        };
      nodeFS = require_fs();
      nodePath = require_path();
      Module["read"] = function read2(filename, binary) {
        filename = nodePath["normalize"](filename);
        var ret = nodeFS["readFileSync"](filename);
        if (!ret && filename != nodePath["resolve"](filename)) {
          filename = path.join(__dirname, "..", "src", filename);
          ret = nodeFS["readFileSync"](filename);
        }
        if (ret && !binary)
          ret = ret.toString();
        return ret;
      };
      Module["readBinary"] = function readBinary(filename) {
        var ret = Module["read"](filename, true);
        if (!ret.buffer) {
          ret = new Uint8Array(ret);
        }
        assert(ret.buffer);
        return ret;
      };
      Module["load"] = function load(f) {
        globalEval(read(f));
      };
      if (!Module["thisProgram"]) {
        if (process["argv"].length > 1) {
          Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
        } else {
          Module["thisProgram"] = "unknown-program";
        }
      }
      Module["arguments"] = process["argv"].slice(2);
      if (typeof module !== "undefined") {
        module["exports"] = Module;
      }
      process["on"]("uncaughtException", function(ex) {
        if (!(ex instanceof ExitStatus)) {
          throw ex;
        }
      });
      Module["inspect"] = function() {
        return "[Emscripten Module object]";
      };
    } else if (ENVIRONMENT_IS_SHELL) {
      if (!Module["print"])
        Module["print"] = print;
      if (typeof printErr != "undefined")
        Module["printErr"] = printErr;
      if (typeof read != "undefined") {
        Module["read"] = read;
      } else {
        Module["read"] = function read2() {
          throw "no read() available (jsc?)";
        };
      }
      Module["readBinary"] = function readBinary(f) {
        if (typeof readbuffer === "function") {
          return new Uint8Array(readbuffer(f));
        }
        var data = read(f, "binary");
        assert(typeof data === "object");
        return data;
      };
      if (typeof scriptArgs != "undefined") {
        Module["arguments"] = scriptArgs;
      } else if (typeof arguments != "undefined") {
        Module["arguments"] = arguments;
      }
    } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
      Module["read"] = function read2(url) {
        var xhr = new XMLHttpRequest();
        xhr.open("GET", url, false);
        xhr.send(null);
        return xhr.responseText;
      };
      if (typeof arguments != "undefined") {
        Module["arguments"] = arguments;
      }
      if (typeof console !== "undefined") {
        if (!Module["print"])
          Module["print"] = function print2(x) {
            console.log(x);
          };
        if (!Module["printErr"])
          Module["printErr"] = function printErr2(x) {
            console.log(x);
          };
      } else {
        TRY_USE_DUMP = false;
        if (!Module["print"])
          Module["print"] = TRY_USE_DUMP && typeof dump !== "undefined" ? function(x) {
            dump(x);
          } : function(x) {
          };
      }
      if (ENVIRONMENT_IS_WORKER) {
        Module["load"] = importScripts;
      }
      if (typeof Module["setWindowTitle"] === "undefined") {
        Module["setWindowTitle"] = function(title) {
          document.title = title;
        };
      }
    } else {
      throw "Unknown runtime environment. Where are we?";
    }
    var nodeFS;
    var nodePath;
    var TRY_USE_DUMP;
    function globalEval(x) {
      eval.call(null, x);
    }
    if (!Module["load"] && Module["read"]) {
      Module["load"] = function load(f) {
        globalEval(Module["read"](f));
      };
    }
    if (!Module["print"]) {
      Module["print"] = function() {
      };
    }
    if (!Module["printErr"]) {
      Module["printErr"] = Module["print"];
    }
    if (!Module["arguments"]) {
      Module["arguments"] = [];
    }
    if (!Module["thisProgram"]) {
      Module["thisProgram"] = "./this.program";
    }
    Module.print = Module["print"];
    Module.printErr = Module["printErr"];
    Module["preRun"] = [];
    Module["postRun"] = [];
    for (key in moduleOverrides) {
      if (moduleOverrides.hasOwnProperty(key)) {
        Module[key] = moduleOverrides[key];
      }
    }
    var key;
    var Runtime = { setTempRet0: function(value) {
      tempRet0 = value;
    }, getTempRet0: function() {
      return tempRet0;
    }, stackSave: function() {
      return STACKTOP;
    }, stackRestore: function(stackTop) {
      STACKTOP = stackTop;
    }, getNativeTypeSize: function(type2) {
      switch (type2) {
        case "i1":
        case "i8":
          return 1;
        case "i16":
          return 2;
        case "i32":
          return 4;
        case "i64":
          return 8;
        case "float":
          return 4;
        case "double":
          return 8;
        default: {
          if (type2[type2.length - 1] === "*") {
            return Runtime.QUANTUM_SIZE;
          } else if (type2[0] === "i") {
            var bits = parseInt(type2.substr(1));
            assert(bits % 8 === 0);
            return bits / 8;
          } else {
            return 0;
          }
        }
      }
    }, getNativeFieldSize: function(type2) {
      return Math.max(Runtime.getNativeTypeSize(type2), Runtime.QUANTUM_SIZE);
    }, STACK_ALIGN: 16, prepVararg: function(ptr, type2) {
      if (type2 === "double" || type2 === "i64") {
        if (ptr & 7) {
          assert((ptr & 7) === 4);
          ptr += 4;
        }
      } else {
        assert((ptr & 3) === 0);
      }
      return ptr;
    }, getAlignSize: function(type2, size, vararg) {
      if (!vararg && (type2 == "i64" || type2 == "double"))
        return 8;
      if (!type2)
        return Math.min(size, 8);
      return Math.min(size || (type2 ? Runtime.getNativeFieldSize(type2) : 0), Runtime.QUANTUM_SIZE);
    }, dynCall: function(sig, ptr, args) {
      if (args && args.length) {
        if (!args.splice)
          args = Array.prototype.slice.call(args);
        args.splice(0, 0, ptr);
        return Module["dynCall_" + sig].apply(null, args);
      } else {
        return Module["dynCall_" + sig].call(null, ptr);
      }
    }, functionPointers: [], addFunction: function(func2) {
      for (var i2 = 0; i2 < Runtime.functionPointers.length; i2++) {
        if (!Runtime.functionPointers[i2]) {
          Runtime.functionPointers[i2] = func2;
          return 2 * (1 + i2);
        }
      }
      throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
    }, removeFunction: function(index) {
      Runtime.functionPointers[(index - 2) / 2] = null;
    }, warnOnce: function(text) {
      if (!Runtime.warnOnce.shown)
        Runtime.warnOnce.shown = {};
      if (!Runtime.warnOnce.shown[text]) {
        Runtime.warnOnce.shown[text] = 1;
        Module.printErr(text);
      }
    }, funcWrappers: {}, getFuncWrapper: function(func2, sig) {
      assert(sig);
      if (!Runtime.funcWrappers[sig]) {
        Runtime.funcWrappers[sig] = {};
      }
      var sigCache = Runtime.funcWrappers[sig];
      if (!sigCache[func2]) {
        sigCache[func2] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func2, arguments);
        };
      }
      return sigCache[func2];
    }, getCompilerSetting: function(name) {
      throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
    }, stackAlloc: function(size) {
      var ret = STACKTOP;
      STACKTOP = STACKTOP + size | 0;
      STACKTOP = STACKTOP + 15 & -16;
      return ret;
    }, staticAlloc: function(size) {
      var ret = STATICTOP;
      STATICTOP = STATICTOP + size | 0;
      STATICTOP = STATICTOP + 15 & -16;
      return ret;
    }, dynamicAlloc: function(size) {
      var ret = DYNAMICTOP;
      DYNAMICTOP = DYNAMICTOP + size | 0;
      DYNAMICTOP = DYNAMICTOP + 15 & -16;
      if (DYNAMICTOP >= TOTAL_MEMORY) {
        var success = enlargeMemory();
        if (!success) {
          DYNAMICTOP = ret;
          return 0;
        }
      }
      return ret;
    }, alignMemory: function(size, quantum) {
      var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);
      return ret;
    }, makeBigInt: function(low, high, unsigned) {
      var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * 4294967296 : +(low >>> 0) + +(high | 0) * 4294967296;
      return ret;
    }, GLOBAL_BASE: 8, QUANTUM_SIZE: 4, __dummy__: 0 };
    Module["Runtime"] = Runtime;
    var __THREW__ = 0;
    var ABORT = false;
    var EXITSTATUS = 0;
    var undef = 0;
    var tempValue;
    var tempInt;
    var tempBigInt;
    var tempInt2;
    var tempBigInt2;
    var tempPair;
    var tempBigIntI;
    var tempBigIntR;
    var tempBigIntS;
    var tempBigIntP;
    var tempBigIntD;
    var tempDouble;
    var tempFloat;
    var tempI64;
    var tempI64b;
    var tempRet0;
    var tempRet1;
    var tempRet2;
    var tempRet3;
    var tempRet4;
    var tempRet5;
    var tempRet6;
    var tempRet7;
    var tempRet8;
    var tempRet9;
    function assert(condition, text) {
      if (!condition) {
        abort("Assertion failed: " + text);
      }
    }
    var globalScope = exports;
    function getCFunc(ident) {
      var func = Module["_" + ident];
      if (!func) {
        try {
          func = eval("_" + ident);
        } catch (e) {
        }
      }
      assert(func, "Cannot call unknown function " + ident + " (perhaps LLVM optimizations or closure removed it?)");
      return func;
    }
    var cwrap;
    var ccall;
    (function() {
      var JSfuncs = { stackSave: function() {
        Runtime.stackSave();
      }, stackRestore: function() {
        Runtime.stackRestore();
      }, arrayToC: function(arr) {
        var ret = Runtime.stackAlloc(arr.length);
        writeArrayToMemory(arr, ret);
        return ret;
      }, stringToC: function(str) {
        var ret = 0;
        if (str !== null && str !== void 0 && str !== 0) {
          ret = Runtime.stackAlloc((str.length << 2) + 1);
          writeStringToMemory(str, ret);
        }
        return ret;
      } };
      var toC = { string: JSfuncs["stringToC"], array: JSfuncs["arrayToC"] };
      ccall = function ccallFunc(ident2, returnType2, argTypes2, args, opts) {
        var func2 = getCFunc(ident2);
        var cArgs = [];
        var stack = 0;
        if (args) {
          for (var i2 = 0; i2 < args.length; i2++) {
            var converter = toC[argTypes2[i2]];
            if (converter) {
              if (stack === 0)
                stack = Runtime.stackSave();
              cArgs[i2] = converter(args[i2]);
            } else {
              cArgs[i2] = args[i2];
            }
          }
        }
        var ret = func2.apply(null, cArgs);
        if (returnType2 === "string")
          ret = Pointer_stringify(ret);
        if (stack !== 0) {
          if (opts && opts.async) {
            EmterpreterAsync.asyncFinalizers.push(function() {
              Runtime.stackRestore(stack);
            });
            return;
          }
          Runtime.stackRestore(stack);
        }
        return ret;
      };
      var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
      function parseJSFunc(jsfunc) {
        var parsed = jsfunc.toString().match(sourceRegex).slice(1);
        return { arguments: parsed[0], body: parsed[1], returnValue: parsed[2] };
      }
      var JSsource = {};
      for (var fun in JSfuncs) {
        if (JSfuncs.hasOwnProperty(fun)) {
          JSsource[fun] = parseJSFunc(JSfuncs[fun]);
        }
      }
      cwrap = function cwrap(ident, returnType, argTypes) {
        argTypes = argTypes || [];
        var cfunc = getCFunc(ident);
        var numericArgs = argTypes.every(function(type2) {
          return type2 === "number";
        });
        var numericRet = returnType !== "string";
        if (numericRet && numericArgs) {
          return cfunc;
        }
        var argNames = argTypes.map(function(x, i2) {
          return "$" + i2;
        });
        var funcstr = "(function(" + argNames.join(",") + ") {";
        var nargs = argTypes.length;
        if (!numericArgs) {
          funcstr += "var stack = " + JSsource["stackSave"].body + ";";
          for (var i = 0; i < nargs; i++) {
            var arg = argNames[i], type = argTypes[i];
            if (type === "number")
              continue;
            var convertCode = JSsource[type + "ToC"];
            funcstr += "var " + convertCode.arguments + " = " + arg + ";";
            funcstr += convertCode.body + ";";
            funcstr += arg + "=" + convertCode.returnValue + ";";
          }
        }
        var cfuncname = parseJSFunc(function() {
          return cfunc;
        }).returnValue;
        funcstr += "var ret = " + cfuncname + "(" + argNames.join(",") + ");";
        if (!numericRet) {
          var strgfy = parseJSFunc(function() {
            return Pointer_stringify;
          }).returnValue;
          funcstr += "ret = " + strgfy + "(ret);";
        }
        if (!numericArgs) {
          funcstr += JSsource["stackRestore"].body.replace("()", "(stack)") + ";";
        }
        funcstr += "return ret})";
        return eval(funcstr);
      };
    })();
    Module["ccall"] = ccall;
    Module["cwrap"] = cwrap;
    function setValue(ptr, value, type2, noSafe) {
      type2 = type2 || "i8";
      if (type2.charAt(type2.length - 1) === "*")
        type2 = "i32";
      switch (type2) {
        case "i1":
          HEAP8[ptr >> 0] = value;
          break;
        case "i8":
          HEAP8[ptr >> 0] = value;
          break;
        case "i16":
          HEAP16[ptr >> 1] = value;
          break;
        case "i32":
          HEAP32[ptr >> 2] = value;
          break;
        case "i64":
          tempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
          break;
        case "float":
          HEAPF32[ptr >> 2] = value;
          break;
        case "double":
          HEAPF64[ptr >> 3] = value;
          break;
        default:
          abort("invalid type for setValue: " + type2);
      }
    }
    Module["setValue"] = setValue;
    function getValue(ptr, type2, noSafe) {
      type2 = type2 || "i8";
      if (type2.charAt(type2.length - 1) === "*")
        type2 = "i32";
      switch (type2) {
        case "i1":
          return HEAP8[ptr >> 0];
        case "i8":
          return HEAP8[ptr >> 0];
        case "i16":
          return HEAP16[ptr >> 1];
        case "i32":
          return HEAP32[ptr >> 2];
        case "i64":
          return HEAP32[ptr >> 2];
        case "float":
          return HEAPF32[ptr >> 2];
        case "double":
          return HEAPF64[ptr >> 3];
        default:
          abort("invalid type for setValue: " + type2);
      }
      return null;
    }
    Module["getValue"] = getValue;
    var ALLOC_NORMAL = 0;
    var ALLOC_STACK = 1;
    var ALLOC_STATIC = 2;
    var ALLOC_DYNAMIC = 3;
    var ALLOC_NONE = 4;
    Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
    Module["ALLOC_STACK"] = ALLOC_STACK;
    Module["ALLOC_STATIC"] = ALLOC_STATIC;
    Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
    Module["ALLOC_NONE"] = ALLOC_NONE;
    function allocate(slab, types, allocator, ptr) {
      var zeroinit, size;
      if (typeof slab === "number") {
        zeroinit = true;
        size = slab;
      } else {
        zeroinit = false;
        size = slab.length;
      }
      var singleType = typeof types === "string" ? types : null;
      var ret;
      if (allocator == ALLOC_NONE) {
        ret = ptr;
      } else {
        ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === void 0 ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
      }
      if (zeroinit) {
        var ptr = ret, stop;
        assert((ret & 3) == 0);
        stop = ret + (size & ~3);
        for (; ptr < stop; ptr += 4) {
          HEAP32[ptr >> 2] = 0;
        }
        stop = ret + size;
        while (ptr < stop) {
          HEAP8[ptr++ >> 0] = 0;
        }
        return ret;
      }
      if (singleType === "i8") {
        if (slab.subarray || slab.slice) {
          HEAPU8.set(slab, ret);
        } else {
          HEAPU8.set(new Uint8Array(slab), ret);
        }
        return ret;
      }
      var i2 = 0, type2, typeSize, previousType;
      while (i2 < size) {
        var curr = slab[i2];
        if (typeof curr === "function") {
          curr = Runtime.getFunctionIndex(curr);
        }
        type2 = singleType || types[i2];
        if (type2 === 0) {
          i2++;
          continue;
        }
        if (type2 == "i64")
          type2 = "i32";
        setValue(ret + i2, curr, type2);
        if (previousType !== type2) {
          typeSize = Runtime.getNativeTypeSize(type2);
          previousType = type2;
        }
        i2 += typeSize;
      }
      return ret;
    }
    Module["allocate"] = allocate;
    function getMemory(size) {
      if (!staticSealed)
        return Runtime.staticAlloc(size);
      if (typeof _sbrk !== "undefined" && !_sbrk.called || !runtimeInitialized)
        return Runtime.dynamicAlloc(size);
      return _malloc(size);
    }
    Module["getMemory"] = getMemory;
    function Pointer_stringify(ptr, length) {
      if (length === 0 || !ptr)
        return "";
      var hasUtf = 0;
      var t;
      var i2 = 0;
      while (1) {
        t = HEAPU8[ptr + i2 >> 0];
        hasUtf |= t;
        if (t == 0 && !length)
          break;
        i2++;
        if (length && i2 == length)
          break;
      }
      if (!length)
        length = i2;
      var ret = "";
      if (hasUtf < 128) {
        var MAX_CHUNK = 1024;
        var curr;
        while (length > 0) {
          curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
          ret = ret ? ret + curr : curr;
          ptr += MAX_CHUNK;
          length -= MAX_CHUNK;
        }
        return ret;
      }
      return Module["UTF8ToString"](ptr);
    }
    Module["Pointer_stringify"] = Pointer_stringify;
    function AsciiToString(ptr) {
      var str = "";
      while (1) {
        var ch = HEAP8[ptr++ >> 0];
        if (!ch)
          return str;
        str += String.fromCharCode(ch);
      }
    }
    Module["AsciiToString"] = AsciiToString;
    function stringToAscii(str, outPtr) {
      return writeAsciiToMemory(str, outPtr, false);
    }
    Module["stringToAscii"] = stringToAscii;
    function UTF8ArrayToString(u8Array, idx) {
      var u0, u1, u2, u3, u4, u5;
      var str = "";
      while (1) {
        u0 = u8Array[idx++];
        if (!u0)
          return str;
        if (!(u0 & 128)) {
          str += String.fromCharCode(u0);
          continue;
        }
        u1 = u8Array[idx++] & 63;
        if ((u0 & 224) == 192) {
          str += String.fromCharCode((u0 & 31) << 6 | u1);
          continue;
        }
        u2 = u8Array[idx++] & 63;
        if ((u0 & 240) == 224) {
          u0 = (u0 & 15) << 12 | u1 << 6 | u2;
        } else {
          u3 = u8Array[idx++] & 63;
          if ((u0 & 248) == 240) {
            u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
          } else {
            u4 = u8Array[idx++] & 63;
            if ((u0 & 252) == 248) {
              u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
            } else {
              u5 = u8Array[idx++] & 63;
              u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
            }
          }
        }
        if (u0 < 65536) {
          str += String.fromCharCode(u0);
        } else {
          var ch = u0 - 65536;
          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
        }
      }
    }
    Module["UTF8ArrayToString"] = UTF8ArrayToString;
    function UTF8ToString(ptr) {
      return UTF8ArrayToString(HEAPU8, ptr);
    }
    Module["UTF8ToString"] = UTF8ToString;
    function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
      if (!(maxBytesToWrite > 0))
        return 0;
      var startIdx = outIdx;
      var endIdx = outIdx + maxBytesToWrite - 1;
      for (var i2 = 0; i2 < str.length; ++i2) {
        var u = str.charCodeAt(i2);
        if (u >= 55296 && u <= 57343)
          u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i2) & 1023;
        if (u <= 127) {
          if (outIdx >= endIdx)
            break;
          outU8Array[outIdx++] = u;
        } else if (u <= 2047) {
          if (outIdx + 1 >= endIdx)
            break;
          outU8Array[outIdx++] = 192 | u >> 6;
          outU8Array[outIdx++] = 128 | u & 63;
        } else if (u <= 65535) {
          if (outIdx + 2 >= endIdx)
            break;
          outU8Array[outIdx++] = 224 | u >> 12;
          outU8Array[outIdx++] = 128 | u >> 6 & 63;
          outU8Array[outIdx++] = 128 | u & 63;
        } else if (u <= 2097151) {
          if (outIdx + 3 >= endIdx)
            break;
          outU8Array[outIdx++] = 240 | u >> 18;
          outU8Array[outIdx++] = 128 | u >> 12 & 63;
          outU8Array[outIdx++] = 128 | u >> 6 & 63;
          outU8Array[outIdx++] = 128 | u & 63;
        } else if (u <= 67108863) {
          if (outIdx + 4 >= endIdx)
            break;
          outU8Array[outIdx++] = 248 | u >> 24;
          outU8Array[outIdx++] = 128 | u >> 18 & 63;
          outU8Array[outIdx++] = 128 | u >> 12 & 63;
          outU8Array[outIdx++] = 128 | u >> 6 & 63;
          outU8Array[outIdx++] = 128 | u & 63;
        } else {
          if (outIdx + 5 >= endIdx)
            break;
          outU8Array[outIdx++] = 252 | u >> 30;
          outU8Array[outIdx++] = 128 | u >> 24 & 63;
          outU8Array[outIdx++] = 128 | u >> 18 & 63;
          outU8Array[outIdx++] = 128 | u >> 12 & 63;
          outU8Array[outIdx++] = 128 | u >> 6 & 63;
          outU8Array[outIdx++] = 128 | u & 63;
        }
      }
      outU8Array[outIdx] = 0;
      return outIdx - startIdx;
    }
    Module["stringToUTF8Array"] = stringToUTF8Array;
    function stringToUTF8(str, outPtr, maxBytesToWrite) {
      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
    }
    Module["stringToUTF8"] = stringToUTF8;
    function lengthBytesUTF8(str) {
      var len = 0;
      for (var i2 = 0; i2 < str.length; ++i2) {
        var u = str.charCodeAt(i2);
        if (u >= 55296 && u <= 57343)
          u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i2) & 1023;
        if (u <= 127) {
          ++len;
        } else if (u <= 2047) {
          len += 2;
        } else if (u <= 65535) {
          len += 3;
        } else if (u <= 2097151) {
          len += 4;
        } else if (u <= 67108863) {
          len += 5;
        } else {
          len += 6;
        }
      }
      return len;
    }
    Module["lengthBytesUTF8"] = lengthBytesUTF8;
    function UTF16ToString(ptr) {
      var i2 = 0;
      var str = "";
      while (1) {
        var codeUnit = HEAP16[ptr + i2 * 2 >> 1];
        if (codeUnit == 0)
          return str;
        ++i2;
        str += String.fromCharCode(codeUnit);
      }
    }
    Module["UTF16ToString"] = UTF16ToString;
    function stringToUTF16(str, outPtr, maxBytesToWrite) {
      if (maxBytesToWrite === void 0) {
        maxBytesToWrite = 2147483647;
      }
      if (maxBytesToWrite < 2)
        return 0;
      maxBytesToWrite -= 2;
      var startPtr = outPtr;
      var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;
      for (var i2 = 0; i2 < numCharsToWrite; ++i2) {
        var codeUnit = str.charCodeAt(i2);
        HEAP16[outPtr >> 1] = codeUnit;
        outPtr += 2;
      }
      HEAP16[outPtr >> 1] = 0;
      return outPtr - startPtr;
    }
    Module["stringToUTF16"] = stringToUTF16;
    function lengthBytesUTF16(str) {
      return str.length * 2;
    }
    Module["lengthBytesUTF16"] = lengthBytesUTF16;
    function UTF32ToString(ptr) {
      var i2 = 0;
      var str = "";
      while (1) {
        var utf32 = HEAP32[ptr + i2 * 4 >> 2];
        if (utf32 == 0)
          return str;
        ++i2;
        if (utf32 >= 65536) {
          var ch = utf32 - 65536;
          str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
        } else {
          str += String.fromCharCode(utf32);
        }
      }
    }
    Module["UTF32ToString"] = UTF32ToString;
    function stringToUTF32(str, outPtr, maxBytesToWrite) {
      if (maxBytesToWrite === void 0) {
        maxBytesToWrite = 2147483647;
      }
      if (maxBytesToWrite < 4)
        return 0;
      var startPtr = outPtr;
      var endPtr = startPtr + maxBytesToWrite - 4;
      for (var i2 = 0; i2 < str.length; ++i2) {
        var codeUnit = str.charCodeAt(i2);
        if (codeUnit >= 55296 && codeUnit <= 57343) {
          var trailSurrogate = str.charCodeAt(++i2);
          codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;
        }
        HEAP32[outPtr >> 2] = codeUnit;
        outPtr += 4;
        if (outPtr + 4 > endPtr)
          break;
      }
      HEAP32[outPtr >> 2] = 0;
      return outPtr - startPtr;
    }
    Module["stringToUTF32"] = stringToUTF32;
    function lengthBytesUTF32(str) {
      var len = 0;
      for (var i2 = 0; i2 < str.length; ++i2) {
        var codeUnit = str.charCodeAt(i2);
        if (codeUnit >= 55296 && codeUnit <= 57343)
          ++i2;
        len += 4;
      }
      return len;
    }
    Module["lengthBytesUTF32"] = lengthBytesUTF32;
    function demangle(func2) {
      var hasLibcxxabi = !!Module["___cxa_demangle"];
      if (hasLibcxxabi) {
        try {
          var buf = _malloc(func2.length);
          writeStringToMemory(func2.substr(1), buf);
          var status = _malloc(4);
          var ret = Module["___cxa_demangle"](buf, 0, 0, status);
          if (getValue(status, "i32") === 0 && ret) {
            return Pointer_stringify(ret);
          }
        } catch (e) {
        } finally {
          if (buf)
            _free(buf);
          if (status)
            _free(status);
          if (ret)
            _free(ret);
        }
      }
      var i2 = 3;
      var basicTypes = { v: "void", b: "bool", c: "char", s: "short", i: "int", l: "long", f: "float", d: "double", w: "wchar_t", a: "signed char", h: "unsigned char", t: "unsigned short", j: "unsigned int", m: "unsigned long", x: "long long", y: "unsigned long long", z: "..." };
      var subs = [];
      var first = true;
      function dump2(x) {
        if (x)
          Module.print(x);
        Module.print(func2);
        var pre = "";
        for (var a = 0; a < i2; a++)
          pre += " ";
        Module.print(pre + "^");
      }
      function parseNested() {
        i2++;
        if (func2[i2] === "K")
          i2++;
        var parts = [];
        while (func2[i2] !== "E") {
          if (func2[i2] === "S") {
            i2++;
            var next = func2.indexOf("_", i2);
            var num = func2.substring(i2, next) || 0;
            parts.push(subs[num] || "?");
            i2 = next + 1;
            continue;
          }
          if (func2[i2] === "C") {
            parts.push(parts[parts.length - 1]);
            i2 += 2;
            continue;
          }
          var size = parseInt(func2.substr(i2));
          var pre = size.toString().length;
          if (!size || !pre) {
            i2--;
            break;
          }
          var curr = func2.substr(i2 + pre, size);
          parts.push(curr);
          subs.push(curr);
          i2 += pre + size;
        }
        i2++;
        return parts;
      }
      function parse(rawList, limit, allowVoid) {
        limit = limit || Infinity;
        var ret2 = "", list = [];
        function flushList() {
          return "(" + list.join(", ") + ")";
        }
        var name;
        if (func2[i2] === "N") {
          name = parseNested().join("::");
          limit--;
          if (limit === 0)
            return rawList ? [name] : name;
        } else {
          if (func2[i2] === "K" || first && func2[i2] === "L")
            i2++;
          var size = parseInt(func2.substr(i2));
          if (size) {
            var pre = size.toString().length;
            name = func2.substr(i2 + pre, size);
            i2 += pre + size;
          }
        }
        first = false;
        if (func2[i2] === "I") {
          i2++;
          var iList = parse(true);
          var iRet = parse(true, 1, true);
          ret2 += iRet[0] + " " + name + "<" + iList.join(", ") + ">";
        } else {
          ret2 = name;
        }
        paramLoop:
          while (i2 < func2.length && limit-- > 0) {
            var c = func2[i2++];
            if (c in basicTypes) {
              list.push(basicTypes[c]);
            } else {
              switch (c) {
                case "P":
                  list.push(parse(true, 1, true)[0] + "*");
                  break;
                case "R":
                  list.push(parse(true, 1, true)[0] + "&");
                  break;
                case "L":
                  {
                    i2++;
                    var end = func2.indexOf("E", i2);
                    var size = end - i2;
                    list.push(func2.substr(i2, size));
                    i2 += size + 2;
                    break;
                  }
                  ;
                case "A":
                  {
                    var size = parseInt(func2.substr(i2));
                    i2 += size.toString().length;
                    if (func2[i2] !== "_")
                      throw "?";
                    i2++;
                    list.push(parse(true, 1, true)[0] + " [" + size + "]");
                    break;
                  }
                  ;
                case "E":
                  break paramLoop;
                default:
                  ret2 += "?" + c;
                  break paramLoop;
              }
            }
          }
        if (!allowVoid && list.length === 1 && list[0] === "void")
          list = [];
        if (rawList) {
          if (ret2) {
            list.push(ret2 + "?");
          }
          return list;
        } else {
          return ret2 + flushList();
        }
      }
      var parsed = func2;
      try {
        if (func2 == "Object._main" || func2 == "_main") {
          return "main()";
        }
        if (typeof func2 === "number")
          func2 = Pointer_stringify(func2);
        if (func2[0] !== "_")
          return func2;
        if (func2[1] !== "_")
          return func2;
        if (func2[2] !== "Z")
          return func2;
        switch (func2[3]) {
          case "n":
            return "operator new()";
          case "d":
            return "operator delete()";
        }
        parsed = parse();
      } catch (e) {
        parsed += "?";
      }
      if (parsed.indexOf("?") >= 0 && !hasLibcxxabi) {
        Runtime.warnOnce("warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");
      }
      return parsed;
    }
    function demangleAll(text) {
      return text.replace(/__Z[\w\d_]+/g, function(x) {
        var y = demangle(x);
        return x === y ? x : x + " [" + y + "]";
      });
    }
    function jsStackTrace() {
      var err = new Error();
      if (!err.stack) {
        try {
          throw new Error(0);
        } catch (e) {
          err = e;
        }
        if (!err.stack) {
          return "(no stack trace available)";
        }
      }
      return err.stack.toString();
    }
    function stackTrace() {
      return demangleAll(jsStackTrace());
    }
    Module["stackTrace"] = stackTrace;
    var PAGE_SIZE = 4096;
    function alignMemoryPage(x) {
      if (x % 4096 > 0) {
        x += 4096 - x % 4096;
      }
      return x;
    }
    var HEAP;
    var HEAP8;
    var HEAPU8;
    var HEAP16;
    var HEAPU16;
    var HEAP32;
    var HEAPU32;
    var HEAPF32;
    var HEAPF64;
    var STATIC_BASE = 0;
    var STATICTOP = 0;
    var staticSealed = false;
    var STACK_BASE = 0;
    var STACKTOP = 0;
    var STACK_MAX = 0;
    var DYNAMIC_BASE = 0;
    var DYNAMICTOP = 0;
    function abortOnCannotGrowMemory() {
      abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + TOTAL_MEMORY + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");
    }
    function enlargeMemory() {
      abortOnCannotGrowMemory();
    }
    var TOTAL_STACK = Module["TOTAL_STACK"] || 5242880;
    var TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 268435456;
    var totalMemory = 64 * 1024;
    while (totalMemory < TOTAL_MEMORY || totalMemory < 2 * TOTAL_STACK) {
      if (totalMemory < 16 * 1024 * 1024) {
        totalMemory *= 2;
      } else {
        totalMemory += 16 * 1024 * 1024;
      }
    }
    if (totalMemory !== TOTAL_MEMORY) {
      TOTAL_MEMORY = totalMemory;
    }
    assert(typeof Int32Array !== "undefined" && typeof Float64Array !== "undefined" && !!new Int32Array(1)["subarray"] && !!new Int32Array(1)["set"], "JS engine does not provide full typed array support");
    var buffer;
    buffer = new ArrayBuffer(TOTAL_MEMORY);
    HEAP8 = new Int8Array(buffer);
    HEAP16 = new Int16Array(buffer);
    HEAP32 = new Int32Array(buffer);
    HEAPU8 = new Uint8Array(buffer);
    HEAPU16 = new Uint16Array(buffer);
    HEAPU32 = new Uint32Array(buffer);
    HEAPF32 = new Float32Array(buffer);
    HEAPF64 = new Float64Array(buffer);
    HEAP32[0] = 255;
    assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, "Typed arrays 2 must be run on a little-endian system");
    Module["HEAP"] = HEAP;
    Module["buffer"] = buffer;
    Module["HEAP8"] = HEAP8;
    Module["HEAP16"] = HEAP16;
    Module["HEAP32"] = HEAP32;
    Module["HEAPU8"] = HEAPU8;
    Module["HEAPU16"] = HEAPU16;
    Module["HEAPU32"] = HEAPU32;
    Module["HEAPF32"] = HEAPF32;
    Module["HEAPF64"] = HEAPF64;
    function callRuntimeCallbacks(callbacks) {
      while (callbacks.length > 0) {
        var callback = callbacks.shift();
        if (typeof callback == "function") {
          callback();
          continue;
        }
        var func2 = callback.func;
        if (typeof func2 === "number") {
          if (callback.arg === void 0) {
            Runtime.dynCall("v", func2);
          } else {
            Runtime.dynCall("vi", func2, [callback.arg]);
          }
        } else {
          func2(callback.arg === void 0 ? null : callback.arg);
        }
      }
    }
    var __ATPRERUN__ = [];
    var __ATINIT__ = [];
    var __ATMAIN__ = [];
    var __ATEXIT__ = [];
    var __ATPOSTRUN__ = [];
    var runtimeInitialized = false;
    var runtimeExited = false;
    function preRun() {
      if (Module["preRun"]) {
        if (typeof Module["preRun"] == "function")
          Module["preRun"] = [Module["preRun"]];
        while (Module["preRun"].length) {
          addOnPreRun(Module["preRun"].shift());
        }
      }
      callRuntimeCallbacks(__ATPRERUN__);
    }
    function ensureInitRuntime() {
      if (runtimeInitialized)
        return;
      runtimeInitialized = true;
      callRuntimeCallbacks(__ATINIT__);
    }
    function preMain() {
      callRuntimeCallbacks(__ATMAIN__);
    }
    function exitRuntime() {
      callRuntimeCallbacks(__ATEXIT__);
      runtimeExited = true;
    }
    function postRun() {
      if (Module["postRun"]) {
        if (typeof Module["postRun"] == "function")
          Module["postRun"] = [Module["postRun"]];
        while (Module["postRun"].length) {
          addOnPostRun(Module["postRun"].shift());
        }
      }
      callRuntimeCallbacks(__ATPOSTRUN__);
    }
    function addOnPreRun(cb) {
      __ATPRERUN__.unshift(cb);
    }
    Module["addOnPreRun"] = addOnPreRun;
    function addOnInit(cb) {
      __ATINIT__.unshift(cb);
    }
    Module["addOnInit"] = addOnInit;
    function addOnPreMain(cb) {
      __ATMAIN__.unshift(cb);
    }
    Module["addOnPreMain"] = addOnPreMain;
    function addOnExit(cb) {
      __ATEXIT__.unshift(cb);
    }
    Module["addOnExit"] = addOnExit;
    function addOnPostRun(cb) {
      __ATPOSTRUN__.unshift(cb);
    }
    Module["addOnPostRun"] = addOnPostRun;
    function intArrayFromString(stringy, dontAddNull, length) {
      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
      var u8array = new Array(len);
      var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
      if (dontAddNull)
        u8array.length = numBytesWritten;
      return u8array;
    }
    Module["intArrayFromString"] = intArrayFromString;
    function intArrayToString(array) {
      var ret = [];
      for (var i2 = 0; i2 < array.length; i2++) {
        var chr = array[i2];
        if (chr > 255) {
          chr &= 255;
        }
        ret.push(String.fromCharCode(chr));
      }
      return ret.join("");
    }
    Module["intArrayToString"] = intArrayToString;
    function writeStringToMemory(string, buffer2, dontAddNull) {
      var array = intArrayFromString(string, dontAddNull);
      var i2 = 0;
      while (i2 < array.length) {
        var chr = array[i2];
        HEAP8[buffer2 + i2 >> 0] = chr;
        i2 = i2 + 1;
      }
    }
    Module["writeStringToMemory"] = writeStringToMemory;
    function writeArrayToMemory(array, buffer2) {
      for (var i2 = 0; i2 < array.length; i2++) {
        HEAP8[buffer2++ >> 0] = array[i2];
      }
    }
    Module["writeArrayToMemory"] = writeArrayToMemory;
    function writeAsciiToMemory(str, buffer2, dontAddNull) {
      for (var i2 = 0; i2 < str.length; ++i2) {
        HEAP8[buffer2++ >> 0] = str.charCodeAt(i2);
      }
      if (!dontAddNull)
        HEAP8[buffer2 >> 0] = 0;
    }
    Module["writeAsciiToMemory"] = writeAsciiToMemory;
    function unSign(value, bits, ignore) {
      if (value >= 0) {
        return value;
      }
      return bits <= 32 ? 2 * Math.abs(1 << bits - 1) + value : Math.pow(2, bits) + value;
    }
    function reSign(value, bits, ignore) {
      if (value <= 0) {
        return value;
      }
      var half = bits <= 32 ? Math.abs(1 << bits - 1) : Math.pow(2, bits - 1);
      if (value >= half && (bits <= 32 || value > half)) {
        value = -2 * half + value;
      }
      return value;
    }
    if (!Math["imul"] || Math["imul"](4294967295, 5) !== -5)
      Math["imul"] = function imul(a, b) {
        var ah = a >>> 16;
        var al = a & 65535;
        var bh = b >>> 16;
        var bl = b & 65535;
        return al * bl + (ah * bl + al * bh << 16) | 0;
      };
    Math.imul = Math["imul"];
    if (!Math["clz32"])
      Math["clz32"] = function(x) {
        x = x >>> 0;
        for (var i2 = 0; i2 < 32; i2++) {
          if (x & 1 << 31 - i2)
            return i2;
        }
        return 32;
      };
    Math.clz32 = Math["clz32"];
    var Math_abs = Math.abs;
    var Math_cos = Math.cos;
    var Math_sin = Math.sin;
    var Math_tan = Math.tan;
    var Math_acos = Math.acos;
    var Math_asin = Math.asin;
    var Math_atan = Math.atan;
    var Math_atan2 = Math.atan2;
    var Math_exp = Math.exp;
    var Math_log = Math.log;
    var Math_sqrt = Math.sqrt;
    var Math_ceil = Math.ceil;
    var Math_floor = Math.floor;
    var Math_pow = Math.pow;
    var Math_imul = Math.imul;
    var Math_fround = Math.fround;
    var Math_min = Math.min;
    var Math_clz32 = Math.clz32;
    var runDependencies = 0;
    var runDependencyWatcher = null;
    var dependenciesFulfilled = null;
    function getUniqueRunDependency(id) {
      return id;
    }
    function addRunDependency(id) {
      runDependencies++;
      if (Module["monitorRunDependencies"]) {
        Module["monitorRunDependencies"](runDependencies);
      }
    }
    Module["addRunDependency"] = addRunDependency;
    function removeRunDependency(id) {
      runDependencies--;
      if (Module["monitorRunDependencies"]) {
        Module["monitorRunDependencies"](runDependencies);
      }
      if (runDependencies == 0) {
        if (runDependencyWatcher !== null) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
        }
        if (dependenciesFulfilled) {
          var callback = dependenciesFulfilled;
          dependenciesFulfilled = null;
          callback();
        }
      }
    }
    Module["removeRunDependency"] = removeRunDependency;
    Module["preloadedImages"] = {};
    Module["preloadedAudios"] = {};
    var memoryInitializer = null;
    var ASM_CONSTS = [function($0, $1, $2, $3) {
      {
        if (!artoolkit["multiEachMarkerInfo"]) {
          artoolkit["multiEachMarkerInfo"] = {};
        }
        var multiEachMarker = artoolkit["multiEachMarkerInfo"];
        multiEachMarker["visible"] = $0;
        multiEachMarker["pattId"] = $1;
        multiEachMarker["pattType"] = $2;
        multiEachMarker["width"] = $3;
      }
    }, function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32) {
      {
        var $a = arguments;
        var i2 = 12;
        if (!artoolkit["markerInfo"]) {
          artoolkit["markerInfo"] = { pos: [0, 0], line: [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], vertex: [[0, 0], [0, 0], [0, 0], [0, 0]] };
        }
        var markerInfo = artoolkit["markerInfo"];
        markerInfo["area"] = $0;
        markerInfo["id"] = $1;
        markerInfo["idPatt"] = $2;
        markerInfo["idMatrix"] = $3;
        markerInfo["dir"] = $4;
        markerInfo["dirPatt"] = $5;
        markerInfo["dirMatrix"] = $6;
        markerInfo["cf"] = $7;
        markerInfo["cfPatt"] = $8;
        markerInfo["cfMatrix"] = $9;
        markerInfo["pos"][0] = $10;
        markerInfo["pos"][1] = $11;
        markerInfo["line"][0][0] = $a[i2++];
        markerInfo["line"][0][1] = $a[i2++];
        markerInfo["line"][0][2] = $a[i2++];
        markerInfo["line"][1][0] = $a[i2++];
        markerInfo["line"][1][1] = $a[i2++];
        markerInfo["line"][1][2] = $a[i2++];
        markerInfo["line"][2][0] = $a[i2++];
        markerInfo["line"][2][1] = $a[i2++];
        markerInfo["line"][2][2] = $a[i2++];
        markerInfo["line"][3][0] = $a[i2++];
        markerInfo["line"][3][1] = $a[i2++];
        markerInfo["line"][3][2] = $a[i2++];
        markerInfo["vertex"][0][0] = $a[i2++];
        markerInfo["vertex"][0][1] = $a[i2++];
        markerInfo["vertex"][1][0] = $a[i2++];
        markerInfo["vertex"][1][1] = $a[i2++];
        markerInfo["vertex"][2][0] = $a[i2++];
        markerInfo["vertex"][2][1] = $a[i2++];
        markerInfo["vertex"][3][0] = $a[i2++];
        markerInfo["vertex"][3][1] = $a[i2++];
        markerInfo["errorCorrected"] = $a[i2++];
      }
    }, function($0, $1, $2, $3, $4) {
      {
        if (!artoolkit["frameMalloc"]) {
          artoolkit["frameMalloc"] = {};
        }
        var frameMalloc = artoolkit["frameMalloc"];
        frameMalloc["framepointer"] = $1;
        frameMalloc["framesize"] = $2;
        frameMalloc["camera"] = $3;
        frameMalloc["transform"] = $4;
      }
    }];
    function _emscripten_asm_const_33(code, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32) {
      return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32);
    }
    function _emscripten_asm_const_4(code, a0, a1, a2, a3) {
      return ASM_CONSTS[code](a0, a1, a2, a3);
    }
    function _emscripten_asm_const_5(code, a0, a1, a2, a3, a4) {
      return ASM_CONSTS[code](a0, a1, a2, a3, a4);
    }
    STATIC_BASE = 8;
    STATICTOP = STATIC_BASE + 16496;
    __ATINIT__.push({ func: function() {
      __GLOBAL__sub_I_ARToolKitJS_cpp();
    } }, { func: function() {
      __GLOBAL__sub_I_bind_cpp();
    } });
    allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 9, 0, 0, 53, 42, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 128, 1, 0, 0, 0, 0, 0, 0, 228, 8, 0, 0, 116, 42, 0, 0, 52, 9, 0, 0, 136, 47, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 128, 1, 0, 0, 0, 0, 0, 0, 52, 9, 0, 0, 73, 47, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 128, 1, 0, 0, 0, 0, 0, 0, 228, 8, 0, 0, 54, 47, 0, 0, 228, 8, 0, 0, 23, 47, 0, 0, 228, 8, 0, 0, 62, 46, 0, 0, 228, 8, 0, 0, 31, 46, 0, 0, 228, 8, 0, 0, 0, 46, 0, 0, 228, 8, 0, 0, 225, 45, 0, 0, 228, 8, 0, 0, 194, 45, 0, 0, 228, 8, 0, 0, 93, 46, 0, 0, 228, 8, 0, 0, 124, 46, 0, 0, 228, 8, 0, 0, 155, 46, 0, 0, 228, 8, 0, 0, 186, 46, 0, 0, 228, 8, 0, 0, 217, 46, 0, 0, 228, 8, 0, 0, 248, 46, 0, 0, 12, 9, 0, 0, 199, 47, 0, 0, 48, 2, 0, 0, 0, 0, 0, 0, 228, 8, 0, 0, 212, 47, 0, 0, 228, 8, 0, 0, 225, 47, 0, 0, 12, 9, 0, 0, 238, 47, 0, 0, 56, 2, 0, 0, 0, 0, 0, 0, 12, 9, 0, 0, 15, 48, 0, 0, 64, 2, 0, 0, 0, 0, 0, 0, 12, 9, 0, 0, 49, 48, 0, 0, 64, 2, 0, 0, 0, 0, 0, 0, 200, 8, 0, 0, 89, 48, 0, 0, 200, 8, 0, 0, 91, 48, 0, 0, 200, 8, 0, 0, 93, 48, 0, 0, 200, 8, 0, 0, 95, 48, 0, 0, 200, 8, 0, 0, 97, 48, 0, 0, 200, 8, 0, 0, 99, 48, 0, 0, 200, 8, 0, 0, 101, 48, 0, 0, 200, 8, 0, 0, 103, 48, 0, 0, 200, 8, 0, 0, 105, 48, 0, 0, 200, 8, 0, 0, 107, 48, 0, 0, 200, 8, 0, 0, 109, 48, 0, 0, 200, 8, 0, 0, 111, 48, 0, 0, 200, 8, 0, 0, 113, 48, 0, 0, 12, 9, 0, 0, 115, 48, 0, 0, 80, 2, 0, 0, 0, 0, 0, 0, 12, 9, 0, 0, 152, 48, 0, 0, 80, 2, 0, 0, 0, 0, 0, 0, 255, 15, 0, 0, 6, 16, 0, 0, 18, 16, 0, 0, 28, 16, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 12, 0, 0, 0, 11, 0, 0, 0, 5, 0, 0, 0, 10, 0, 0, 0, 7, 0, 0, 0, 14, 0, 0, 0, 15, 0, 0, 0, 13, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 32, 0, 0, 0, 64, 0, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 12, 0, 0, 0, 24, 0, 0, 0, 48, 0, 0, 0, 96, 0, 0, 0, 67, 0, 0, 0, 5, 0, 0, 0, 10, 0, 0, 0, 20, 0, 0, 0, 40, 0, 0, 0, 80, 0, 0, 0, 35, 0, 0, 0, 70, 0, 0, 0, 15, 0, 0, 0, 30, 0, 0, 0, 60, 0, 0, 0, 120, 0, 0, 0, 115, 0, 0, 0, 101, 0, 0, 0, 73, 0, 0, 0, 17, 0, 0, 0, 34, 0, 0, 0, 68, 0, 0, 0, 11, 0, 0, 0, 22, 0, 0, 0, 44, 0, 0, 0, 88, 0, 0, 0, 51, 0, 0, 0, 102, 0, 0, 0, 79, 0, 0, 0, 29, 0, 0, 0, 58, 0, 0, 0, 116, 0, 0, 0, 107, 0, 0, 0, 85, 0, 0, 0, 41, 0, 0, 0, 82, 0, 0, 0, 39, 0, 0, 0, 78, 0, 0, 0, 31, 0, 0, 0, 62, 0, 0, 0, 124, 0, 0, 0, 123, 0, 0, 0, 117, 0, 0, 0, 105, 0, 0, 0, 81, 0, 0, 0, 33, 0, 0, 0, 66, 0, 0, 0, 7, 0, 0, 0, 14, 0, 0, 0, 28, 0, 0, 0, 56, 0, 0, 0, 112, 0, 0, 0, 99, 0, 0, 0, 69, 0, 0, 0, 9, 0, 0, 0, 18, 0, 0, 0, 36, 0, 0, 0, 72, 0, 0, 0, 19, 0, 0, 0, 38, 0, 0, 0, 76, 0, 0, 0, 27, 0, 0, 0, 54, 0, 0, 0, 108, 0, 0, 0, 91, 0, 0, 0, 53, 0, 0, 0, 106, 0, 0, 0, 87, 0, 0, 0, 45, 0, 0, 0, 90, 0, 0, 0, 55, 0, 0, 0, 110, 0, 0, 0, 95, 0, 0, 0, 61, 0, 0, 0, 122, 0, 0, 0, 119, 0, 0, 0, 109, 0, 0, 0, 89, 0, 0, 0, 49, 0, 0, 0, 98, 0, 0, 0, 71, 0, 0, 0, 13, 0, 0, 0, 26, 0, 0, 0, 52, 0, 0, 0, 104, 0, 0, 0, 83, 0, 0, 0, 37, 0, 0, 0, 74, 0, 0, 0, 23, 0, 0, 0, 46, 0, 0, 0, 92, 0, 0, 0, 59, 0, 0, 0, 118, 0, 0, 0, 111, 0, 0, 0, 93, 0, 0, 0, 57, 0, 0, 0, 114, 0, 0, 0, 103, 0, 0, 0, 77, 0, 0, 0, 25, 0, 0, 0, 50, 0, 0, 0, 100, 0, 0, 0, 75, 0, 0, 0, 21, 0, 0, 0, 42, 0, 0, 0, 84, 0, 0, 0, 43, 0, 0, 0, 86, 0, 0, 0, 47, 0, 0, 0, 94, 0, 0, 0, 63, 0, 0, 0, 126, 0, 0, 0, 127, 0, 0, 0, 125, 0, 0, 0, 121, 0, 0, 0, 113, 0, 0, 0, 97, 0, 0, 0, 65, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 8, 0, 0, 0, 5, 0, 0, 0, 10, 0, 0, 0, 3, 0, 0, 0, 14, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 6, 0, 0, 0, 13, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 14, 0, 0, 0, 8, 0, 0, 0, 56, 0, 0, 0, 3, 0, 0, 0, 63, 0, 0, 0, 15, 0, 0, 0, 31, 0, 0, 0, 9, 0, 0, 0, 90, 0, 0, 0, 57, 0, 0, 0, 21, 0, 0, 0, 4, 0, 0, 0, 28, 0, 0, 0, 64, 0, 0, 0, 67, 0, 0, 0, 16, 0, 0, 0, 112, 0, 0, 0, 32, 0, 0, 0, 97, 0, 0, 0, 10, 0, 0, 0, 108, 0, 0, 0, 91, 0, 0, 0, 70, 0, 0, 0, 58, 0, 0, 0, 38, 0, 0, 0, 22, 0, 0, 0, 47, 0, 0, 0, 5, 0, 0, 0, 54, 0, 0, 0, 29, 0, 0, 0, 19, 0, 0, 0, 65, 0, 0, 0, 95, 0, 0, 0, 68, 0, 0, 0, 45, 0, 0, 0, 17, 0, 0, 0, 43, 0, 0, 0, 113, 0, 0, 0, 115, 0, 0, 0, 33, 0, 0, 0, 77, 0, 0, 0, 98, 0, 0, 0, 117, 0, 0, 0, 11, 0, 0, 0, 87, 0, 0, 0, 109, 0, 0, 0, 35, 0, 0, 0, 92, 0, 0, 0, 74, 0, 0, 0, 71, 0, 0, 0, 79, 0, 0, 0, 59, 0, 0, 0, 104, 0, 0, 0, 39, 0, 0, 0, 100, 0, 0, 0, 23, 0, 0, 0, 82, 0, 0, 0, 48, 0, 0, 0, 119, 0, 0, 0, 6, 0, 0, 0, 126, 0, 0, 0, 55, 0, 0, 0, 13, 0, 0, 0, 30, 0, 0, 0, 62, 0, 0, 0, 20, 0, 0, 0, 89, 0, 0, 0, 66, 0, 0, 0, 27, 0, 0, 0, 96, 0, 0, 0, 111, 0, 0, 0, 69, 0, 0, 0, 107, 0, 0, 0, 46, 0, 0, 0, 37, 0, 0, 0, 18, 0, 0, 0, 53, 0, 0, 0, 44, 0, 0, 0, 94, 0, 0, 0, 114, 0, 0, 0, 42, 0, 0, 0, 116, 0, 0, 0, 76, 0, 0, 0, 34, 0, 0, 0, 86, 0, 0, 0, 78, 0, 0, 0, 73, 0, 0, 0, 99, 0, 0, 0, 103, 0, 0, 0, 118, 0, 0, 0, 81, 0, 0, 0, 12, 0, 0, 0, 125, 0, 0, 0, 88, 0, 0, 0, 61, 0, 0, 0, 110, 0, 0, 0, 26, 0, 0, 0, 36, 0, 0, 0, 106, 0, 0, 0, 93, 0, 0, 0, 52, 0, 0, 0, 75, 0, 0, 0, 41, 0, 0, 0, 72, 0, 0, 0, 85, 0, 0, 0, 80, 0, 0, 0, 102, 0, 0, 0, 60, 0, 0, 0, 124, 0, 0, 0, 105, 0, 0, 0, 25, 0, 0, 0, 40, 0, 0, 0, 51, 0, 0, 0, 101, 0, 0, 0, 84, 0, 0, 0, 24, 0, 0, 0, 123, 0, 0, 0, 83, 0, 0, 0, 50, 0, 0, 0, 49, 0, 0, 0, 122, 0, 0, 0, 120, 0, 0, 0, 121, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 136, 0, 0, 0, 5, 0, 0, 0, 144, 0, 0, 0, 6, 0, 0, 0, 152, 0, 0, 0, 9, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 253, 255, 255, 255, 254, 255, 255, 255, 0, 0, 0, 0, 112, 2, 0, 0, 168, 2, 0, 0, 200, 2, 0, 0, 112, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 208, 2, 0, 0, 168, 2, 0, 0, 112, 2, 0, 0, 168, 2, 0, 0, 208, 2, 0, 0, 168, 2, 0, 0, 112, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 104, 1, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 104, 1, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 168, 2, 0, 0, 0, 0, 0, 0, 32, 2, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 2, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 80, 2, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 216, 2, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 232, 2, 0, 0, 3, 0, 0, 0, 9, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 192, 3, 0, 0, 192, 4, 0, 0, 192, 5, 0, 0, 192, 6, 0, 0, 192, 7, 0, 0, 192, 8, 0, 0, 192, 9, 0, 0, 192, 10, 0, 0, 192, 11, 0, 0, 192, 12, 0, 0, 192, 13, 0, 0, 192, 14, 0, 0, 192, 15, 0, 0, 192, 16, 0, 0, 192, 17, 0, 0, 192, 18, 0, 0, 192, 19, 0, 0, 192, 20, 0, 0, 192, 21, 0, 0, 192, 22, 0, 0, 192, 23, 0, 0, 192, 24, 0, 0, 192, 25, 0, 0, 192, 26, 0, 0, 192, 27, 0, 0, 192, 28, 0, 0, 192, 29, 0, 0, 192, 30, 0, 0, 192, 31, 0, 0, 192, 0, 0, 0, 179, 1, 0, 0, 195, 2, 0, 0, 195, 3, 0, 0, 195, 4, 0, 0, 195, 5, 0, 0, 195, 6, 0, 0, 195, 7, 0, 0, 195, 8, 0, 0, 195, 9, 0, 0, 195, 10, 0, 0, 195, 11, 0, 0, 195, 12, 0, 0, 195, 13, 0, 0, 211, 14, 0, 0, 195, 15, 0, 0, 195, 0, 0, 12, 187, 1, 0, 12, 195, 2, 0, 12, 195, 3, 0, 12, 195, 4, 0, 12, 211, 240, 10, 0, 0, 96, 11, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 100, 0, 0, 0, 232, 3, 0, 0, 16, 39, 0, 0, 160, 134, 1, 0, 64, 66, 15, 0, 128, 150, 152, 0, 0, 225, 245, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 81, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 5, 0, 0, 0, 73, 58, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 7, 0, 0, 0, 11, 0, 0, 0, 13, 0, 0, 0, 17, 0, 0, 0, 19, 0, 0, 0, 23, 0, 0, 0, 29, 0, 0, 0, 31, 0, 0, 0, 37, 0, 0, 0, 41, 0, 0, 0, 43, 0, 0, 0, 47, 0, 0, 0, 53, 0, 0, 0, 59, 0, 0, 0, 61, 0, 0, 0, 67, 0, 0, 0, 71, 0, 0, 0, 73, 0, 0, 0, 79, 0, 0, 0, 83, 0, 0, 0, 89, 0, 0, 0, 97, 0, 0, 0, 101, 0, 0, 0, 103, 0, 0, 0, 107, 0, 0, 0, 109, 0, 0, 0, 113, 0, 0, 0, 127, 0, 0, 0, 131, 0, 0, 0, 137, 0, 0, 0, 139, 0, 0, 0, 149, 0, 0, 0, 151, 0, 0, 0, 157, 0, 0, 0, 163, 0, 0, 0, 167, 0, 0, 0, 173, 0, 0, 0, 179, 0, 0, 0, 181, 0, 0, 0, 191, 0, 0, 0, 193, 0, 0, 0, 197, 0, 0, 0, 199, 0, 0, 0, 211, 0, 0, 0, 1, 0, 0, 0, 11, 0, 0, 0, 13, 0, 0, 0, 17, 0, 0, 0, 19, 0, 0, 0, 23, 0, 0, 0, 29, 0, 0, 0, 31, 0, 0, 0, 37, 0, 0, 0, 41, 0, 0, 0, 43, 0, 0, 0, 47, 0, 0, 0, 53, 0, 0, 0, 59, 0, 0, 0, 61, 0, 0, 0, 67, 0, 0, 0, 71, 0, 0, 0, 73, 0, 0, 0, 79, 0, 0, 0, 83, 0, 0, 0, 89, 0, 0, 0, 97, 0, 0, 0, 101, 0, 0, 0, 103, 0, 0, 0, 107, 0, 0, 0, 109, 0, 0, 0, 113, 0, 0, 0, 121, 0, 0, 0, 127, 0, 0, 0, 131, 0, 0, 0, 137, 0, 0, 0, 139, 0, 0, 0, 143, 0, 0, 0, 149, 0, 0, 0, 151, 0, 0, 0, 157, 0, 0, 0, 163, 0, 0, 0, 167, 0, 0, 0, 169, 0, 0, 0, 173, 0, 0, 0, 179, 0, 0, 0, 181, 0, 0, 0, 187, 0, 0, 0, 191, 0, 0, 0, 193, 0, 0, 0, 197, 0, 0, 0, 199, 0, 0, 0, 209, 0, 0, 0, 69, 114, 114, 111, 114, 58, 32, 108, 97, 98, 101, 108, 105, 110, 103, 32, 119, 111, 114, 107, 32, 111, 118, 101, 114, 102, 108, 111, 119, 46, 10, 0, 69, 114, 114, 111, 114, 58, 32, 85, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 112, 105, 120, 101, 108, 32, 102, 111, 114, 109, 97, 116, 32, 40, 37, 100, 41, 32, 114, 101, 113, 117, 101, 115, 116, 101, 100, 46, 10, 0, 85, 110, 107, 110, 111, 119, 110, 32, 111, 114, 32, 117, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 108, 97, 98, 101, 108, 105, 110, 103, 32, 116, 104, 114, 101, 115, 104, 111, 108, 100, 32, 109, 111, 100, 101, 32, 114, 101, 113, 117, 101, 115, 116, 101, 100, 46, 32, 83, 101, 116, 32, 116, 111, 32, 109, 97, 110, 117, 97, 108, 46, 10, 0, 76, 97, 98, 101, 108, 105, 110, 103, 32, 116, 104, 114, 101, 115, 104, 111, 108, 100, 32, 109, 111, 100, 101, 32, 115, 101, 116, 32, 116, 111, 32, 37, 115, 46, 10, 0, 77, 65, 78, 85, 65, 76, 0, 65, 85, 84, 79, 95, 77, 69, 68, 73, 65, 78, 0, 65, 85, 84, 79, 95, 79, 84, 83, 85, 0, 65, 85, 84, 79, 95, 65, 68, 65, 80, 84, 73, 86, 69, 65, 85, 84, 79, 95, 66, 82, 65, 67, 75, 69, 84, 73, 78, 71, 0, 65, 117, 116, 111, 32, 116, 104, 114, 101, 115, 104, 111, 108, 100, 32, 40, 98, 114, 97, 99, 107, 101, 116, 41, 32, 109, 97, 114, 107, 101, 114, 32, 99, 111, 117, 110, 116, 115, 32, 45, 91, 37, 51, 100, 58, 32, 37, 51, 100, 93, 32, 91, 37, 51, 100, 58, 32, 37, 51, 100, 93, 32, 91, 37, 51, 100, 58, 32, 37, 51, 100, 93, 43, 46, 10, 0, 65, 117, 116, 111, 32, 116, 104, 114, 101, 115, 104, 111, 108, 100, 32, 40, 98, 114, 97, 99, 107, 101, 116, 41, 32, 97, 100, 106, 117, 115, 116, 101, 100, 32, 116, 104, 114, 101, 115, 104, 111, 108, 100, 32, 116, 111, 32, 37, 100, 46, 10, 0, 109, 101, 100, 105, 97, 110, 0, 79, 116, 115, 117, 0, 65, 117, 116, 111, 32, 116, 104, 114, 101, 115, 104, 111, 108, 100, 32, 40, 37, 115, 41, 32, 97, 100, 106, 117, 115, 116, 101, 100, 32, 116, 104, 114, 101, 115, 104, 111, 108, 100, 32, 116, 111, 32, 37, 100, 46, 10, 0, 63, 63, 63, 32, 49, 10, 0, 63, 63, 63, 32, 50, 10, 0, 63, 63, 63, 32, 51, 10, 0, 69, 114, 114, 111, 114, 58, 32, 85, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 112, 105, 120, 101, 108, 32, 102, 111, 114, 109, 97, 116, 32, 112, 97, 115, 115, 101, 100, 32, 116, 111, 32, 97, 114, 73, 109, 97, 103, 101, 80, 114, 111, 99, 72, 105, 115, 116, 40, 41, 46, 10, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 2, 4, 255, 255, 5, 3, 1, 0, 2, 255, 6, 7, 255, 3, 1, 2, 2, 3, 2, 3, 2, 3, 3, 0, 255, 4, 6, 7, 5, 255, 1, 4, 5, 4, 4, 5, 5, 4, 5, 7, 6, 6, 6, 7, 7, 7, 6, 255, 2, 4, 6, 7, 5, 3, 255, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 255, 255, 3, 255, 5, 6, 255, 255, 9, 10, 255, 12, 255, 255, 15, 255, 17, 18, 255, 20, 255, 255, 23, 24, 255, 255, 27, 255, 29, 30, 255, 255, 1, 2, 255, 4, 255, 255, 7, 8, 255, 255, 11, 255, 13, 14, 255, 16, 255, 255, 19, 255, 21, 22, 255, 255, 25, 26, 255, 28, 255, 255, 31, 69, 114, 114, 111, 114, 58, 32, 117, 110, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 112, 105, 120, 101, 108, 32, 102, 111, 114, 109, 97, 116, 46, 10, 0, 69, 114, 114, 111, 114, 58, 32, 78, 85, 76, 76, 32, 112, 97, 116, 116, 72, 97, 110, 100, 108, 101, 46, 10, 0, 69, 114, 114, 111, 114, 58, 32, 99, 97, 110, 39, 116, 32, 108, 111, 97, 100, 32, 112, 97, 116, 116, 101, 114, 110, 32, 102, 114, 111, 109, 32, 78, 85, 76, 76, 32, 98, 117, 102, 102, 101, 114, 46, 10, 0, 69, 114, 114, 111, 114, 58, 32, 111, 117, 116, 32, 111, 102, 32, 109, 101, 109, 111, 114, 121, 46, 10, 0, 32, 9, 10, 13, 0, 80, 97, 116, 116, 101, 114, 110, 32, 68, 97, 116, 97, 32, 114, 101, 97, 100, 32, 101, 114, 114, 111, 114, 33, 33, 10, 0, 69, 114, 114, 111, 114, 32, 111, 112, 101, 110, 105, 110, 103, 32, 112, 97, 116, 116, 101, 114, 110, 32, 102, 105, 108, 101, 32, 39, 37, 115, 39, 32, 102, 111, 114, 32, 114, 101, 97, 100, 105, 110, 103, 46, 10, 0, 69, 114, 114, 111, 114, 32, 114, 101, 97, 100, 105, 110, 103, 32, 112, 97, 116, 116, 101, 114, 110, 32, 102, 105, 108, 101, 32, 39, 37, 115, 39, 46, 10, 0, 114, 98, 0, 69, 114, 114, 111, 114, 32, 40, 37, 100, 41, 58, 32, 117, 110, 97, 98, 108, 101, 32, 116, 111, 32, 111, 112, 101, 110, 32, 99, 97, 109, 101, 114, 97, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 115, 32, 102, 105, 108, 101, 32, 34, 37, 115, 34, 32, 102, 111, 114, 32, 114, 101, 97, 100, 105, 110, 103, 46, 10, 0, 69, 114, 114, 111, 114, 32, 40, 37, 100, 41, 58, 32, 117, 110, 97, 98, 108, 101, 32, 116, 111, 32, 100, 101, 116, 101, 114, 109, 105, 110, 101, 32, 102, 105, 108, 101, 32, 108, 101, 110, 103, 116, 104, 46, 0, 69, 114, 114, 111, 114, 58, 32, 115, 117, 112, 112, 108, 105, 101, 100, 32, 102, 105, 108, 101, 32, 100, 111, 101, 115, 32, 110, 111, 116, 32, 97, 112, 112, 101, 97, 114, 32, 116, 111, 32, 98, 101, 32, 97, 110, 32, 65, 82, 84, 111, 111, 108, 75, 105, 116, 32, 99, 97, 109, 101, 114, 97, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 32, 102, 105, 108, 101, 46, 10, 0, 69, 114, 114, 111, 114, 32, 40, 37, 100, 41, 58, 32, 117, 110, 97, 98, 108, 101, 32, 116, 111, 32, 114, 101, 97, 100, 32, 102, 114, 111, 109, 32, 102, 105, 108, 101, 46, 0, 69, 114, 114, 111, 114, 58, 32, 105, 99, 112, 71, 101, 116, 74, 95, 85, 95, 88, 99, 0, 69, 114, 114, 111, 114, 58, 32, 109, 97, 108, 108, 111, 99, 10, 0, 69, 114, 114, 111, 114, 32, 49, 58, 32, 105, 99, 112, 71, 101, 116, 73, 110, 105, 116, 88, 119, 50, 88, 99, 10, 0, 69, 114, 114, 111, 114, 32, 50, 58, 32, 105, 99, 112, 71, 101, 116, 73, 110, 105, 116, 88, 119, 50, 88, 99, 10, 0, 69, 114, 114, 111, 114, 32, 51, 58, 32, 105, 99, 112, 71, 101, 116, 73, 110, 105, 116, 88, 119, 50, 88, 99, 10, 0, 69, 114, 114, 111, 114, 32, 52, 58, 32, 105, 99, 112, 71, 101, 116, 73, 110, 105, 116, 88, 119, 50, 88, 99, 10, 0, 69, 114, 114, 111, 114, 32, 53, 58, 32, 105, 99, 112, 71, 101, 116, 73, 110, 105, 116, 88, 119, 50, 88, 99, 10, 0, 69, 114, 114, 111, 114, 32, 54, 58, 32, 105, 99, 112, 71, 101, 116, 73, 110, 105, 116, 88, 119, 50, 88, 99, 10, 0, 69, 114, 114, 111, 114, 32, 55, 58, 32, 105, 99, 112, 71, 101, 116, 73, 110, 105, 116, 88, 119, 50, 88, 99, 10, 0, 114, 0, 69, 114, 114, 111, 114, 58, 32, 117, 110, 97, 98, 108, 101, 32, 116, 111, 32, 111, 112, 101, 110, 32, 109, 117, 108, 116, 105, 109, 97, 114, 107, 101, 114, 32, 99, 111, 110, 102, 105, 103, 32, 102, 105, 108, 101, 32, 39, 37, 115, 39, 46, 10, 0, 37, 115, 37, 115, 10, 0, 0, 37, 100, 0, 69, 114, 114, 111, 114, 32, 112, 114, 111, 99, 101, 115, 115, 105, 110, 103, 32, 109, 117, 108, 116, 105, 109, 97, 114, 107, 101, 114, 32, 99, 111, 110, 102, 105, 103, 32, 102, 105, 108, 101, 32, 39, 37, 115, 39, 58, 32, 70, 105, 114, 115, 116, 32, 108, 105, 110, 101, 32, 109, 117, 115, 116, 32, 98, 101, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 109, 97, 114, 107, 101, 114, 32, 99, 111, 110, 102, 105, 103, 115, 32, 116, 111, 32, 114, 101, 97, 100, 46, 10, 0, 79, 117, 116, 32, 111, 102, 32, 109, 101, 109, 111, 114, 121, 33, 33, 10, 0, 37, 108, 108, 117, 37, 99, 0, 69, 114, 114, 111, 114, 32, 112, 114, 111, 99, 101, 115, 115, 105, 110, 103, 32, 109, 117, 108, 116, 105, 109, 97, 114, 107, 101, 114, 32, 99, 111, 110, 102, 105, 103, 32, 102, 105, 108, 101, 32, 39, 37, 115, 39, 58, 32, 112, 97, 116, 116, 101, 114, 110, 32, 39, 37, 115, 39, 32, 115, 112, 101, 99, 105, 102, 105, 101, 100, 32, 105, 110, 32, 109, 117, 108, 116, 105, 109, 97, 114, 107, 101, 114, 32, 99, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111, 110, 32, 119, 104, 105, 108, 101, 32, 105, 110, 32, 98, 97, 114, 99, 111, 100, 101, 45, 111, 110, 108, 121, 32, 109, 111, 100, 101, 46, 10, 0, 69, 114, 114, 111, 114, 32, 112, 114, 111, 99, 101, 115, 115, 105, 110, 103, 32, 109, 117, 108, 116, 105, 109, 97, 114, 107, 101, 114, 32, 99, 111, 110, 102, 105, 103, 32, 102, 105, 108, 101, 32, 39, 37, 115, 39, 58, 32, 85, 110, 97, 98, 108, 101, 32, 116, 111, 32, 100, 101, 116, 101, 114, 109, 105, 110, 101, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 110, 97, 109, 101, 46, 10, 0, 69, 114, 114, 111, 114, 32, 112, 114, 111, 99, 101, 115, 115, 105, 110, 103, 32, 109, 117, 108, 116, 105, 109, 97, 114, 107, 101, 114, 32, 99, 111, 110, 102, 105, 103, 32, 102, 105, 108, 101, 32, 39, 37, 115, 39, 58, 32, 85, 110, 97, 98, 108, 101, 32, 116, 111, 32, 108, 111, 97, 100, 32, 112, 97, 116, 116, 101, 114, 110, 32, 39, 37, 115, 39, 46, 10, 0, 37, 108, 102, 0, 69, 114, 114, 111, 114, 32, 112, 114, 111, 99, 101, 115, 115, 105, 110, 103, 32, 109, 117, 108, 116, 105, 109, 97, 114, 107, 101, 114, 32, 99, 111, 110, 102, 105, 103, 32, 102, 105, 108, 101, 32, 39, 37, 115, 39, 44, 32, 109, 97, 114, 107, 101, 114, 32, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 32, 37, 51, 100, 58, 32, 70, 105, 114, 115, 116, 32, 108, 105, 110, 101, 32, 109, 117, 115, 116, 32, 98, 101, 32, 112, 97, 116, 116, 101, 114, 110, 32, 119, 105, 100, 116, 104, 46, 10, 0, 37, 108, 102, 32, 37, 108, 102, 32, 37, 108, 102, 32, 37, 108, 102, 0, 37, 102, 32, 37, 102, 0, 69, 114, 114, 111, 114, 32, 112, 114, 111, 99, 101, 115, 115, 105, 110, 103, 32, 109, 117, 108, 116, 105, 109, 97, 114, 107, 101, 114, 32, 99, 111, 110, 102, 105, 103, 32, 102, 105, 108, 101, 32, 39, 37, 115, 39, 44, 32, 109, 97, 114, 107, 101, 114, 32, 100, 101, 102, 105, 110, 105, 116, 105, 111, 110, 32, 37, 51, 100, 58, 32, 76, 105, 110, 101, 115, 32, 50, 32, 45, 32, 52, 32, 109, 117, 115, 116, 32, 98, 101, 32, 109, 97, 114, 107, 101, 114, 32, 116, 114, 97, 110, 115, 102, 111, 114, 109, 46, 10, 0, 97, 114, 103, 108, 67, 97, 109, 101, 114, 97, 70, 114, 117, 115, 116, 117, 109, 40, 41, 58, 32, 97, 114, 80, 97, 114, 97, 109, 68, 101, 99, 111, 109, 112, 77, 97, 116, 40, 41, 32, 105, 110, 100, 105, 99, 97, 116, 101, 100, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 32, 101, 114, 114, 111, 114, 46, 10, 0, 108, 111, 97, 100, 67, 97, 109, 101, 114, 97, 40, 41, 58, 32, 69, 114, 114, 111, 114, 32, 108, 111, 97, 100, 105, 110, 103, 32, 112, 97, 114, 97, 109, 101, 116, 101, 114, 32, 102, 105, 108, 101, 32, 37, 115, 32, 102, 111, 114, 32, 99, 97, 109, 101, 114, 97, 46, 10, 0, 42, 42, 42, 32, 67, 97, 109, 101, 114, 97, 32, 80, 97, 114, 97, 109, 101, 116, 101, 114, 32, 114, 101, 115, 105, 122, 101, 100, 32, 102, 114, 111, 109, 32, 37, 100, 44, 32, 37, 100, 46, 32, 42, 42, 42, 10, 0, 115, 101, 116, 67, 97, 109, 101, 114, 97, 40, 41, 58, 32, 69, 114, 114, 111, 114, 58, 32, 97, 114, 80, 97, 114, 97, 109, 76, 84, 67, 114, 101, 97, 116, 101, 46, 10, 0, 115, 101, 116, 67, 97, 109, 101, 114, 97, 40, 41, 58, 32, 69, 114, 114, 111, 114, 58, 32, 97, 114, 67, 114, 101, 97, 116, 101, 72, 97, 110, 100, 108, 101, 46, 10, 0, 115, 101, 116, 67, 97, 109, 101, 114, 97, 40, 41, 58, 32, 69, 114, 114, 111, 114, 32, 99, 114, 101, 97, 116, 105, 110, 103, 32, 51, 68, 32, 104, 97, 110, 100, 108, 101, 0, 108, 111, 97, 100, 77, 97, 114, 107, 101, 114, 40, 41, 58, 32, 69, 114, 114, 111, 114, 32, 108, 111, 97, 100, 105, 110, 103, 32, 112, 97, 116, 116, 101, 114, 110, 32, 102, 105, 108, 101, 32, 37, 115, 46, 10, 0, 65, 82, 84, 111, 111, 108, 75, 105, 116, 74, 83, 40, 41, 58, 32, 85, 110, 97, 98, 108, 101, 32, 116, 111, 32, 115, 101, 116, 32, 117, 112, 32, 65, 82, 32, 109, 97, 114, 107, 101, 114, 46, 10, 0, 99, 111, 110, 102, 105, 103, 32, 100, 97, 116, 97, 32, 108, 111, 97, 100, 32, 101, 114, 114, 111, 114, 32, 33, 33, 10, 0, 65, 82, 84, 111, 111, 108, 75, 105, 116, 74, 83, 40, 41, 58, 32, 85, 110, 97, 98, 108, 101, 32, 116, 111, 32, 115, 101, 116, 32, 117, 112, 32, 65, 82, 32, 109, 117, 108, 116, 105, 109, 97, 114, 107, 101, 114, 46, 10, 0, 80, 97, 116, 116, 101, 114, 110, 32, 100, 101, 116, 101, 99, 116, 105, 111, 110, 32, 109, 111, 100, 101, 32, 115, 101, 116, 32, 116, 111, 32, 37, 100, 46, 10, 0, 80, 97, 116, 116, 101, 114, 110, 32, 114, 97, 116, 105, 111, 32, 115, 105, 122, 101, 32, 115, 101, 116, 32, 116, 111, 32, 37, 102, 46, 10, 0, 76, 97, 98, 101, 108, 105, 110, 103, 32, 109, 111, 100, 101, 32, 115, 101, 116, 32, 116, 111, 32, 37, 100, 10, 0, 84, 104, 114, 101, 115, 104, 111, 108, 100, 32, 115, 101, 116, 32, 116, 111, 32, 37, 100, 10, 0, 84, 104, 114, 101, 115, 104, 111, 108, 100, 32, 109, 111, 100, 101, 32, 115, 101, 116, 32, 116, 111, 32, 37, 100, 10, 0, 111, 110, 46, 0, 111, 102, 102, 46, 0, 68, 101, 98, 117, 103, 32, 109, 111, 100, 101, 32, 115, 101, 116, 32, 116, 111, 32, 37, 115, 10, 0, 73, 109, 97, 103, 101, 32, 112, 114, 111, 99, 46, 32, 109, 111, 100, 101, 32, 115, 101, 116, 32, 116, 111, 32, 37, 100, 46, 10, 0, 123, 32, 105, 102, 32, 40, 33, 97, 114, 116, 111, 111, 108, 107, 105, 116, 91, 34, 109, 117, 108, 116, 105, 69, 97, 99, 104, 77, 97, 114, 107, 101, 114, 73, 110, 102, 111, 34, 93, 41, 32, 123, 32, 97, 114, 116, 111, 111, 108, 107, 105, 116, 91, 34, 109, 117, 108, 116, 105, 69, 97, 99, 104, 77, 97, 114, 107, 101, 114, 73, 110, 102, 111, 34, 93, 32, 61, 32, 40, 123, 125, 41, 59, 32, 125, 32, 118, 97, 114, 32, 109, 117, 108, 116, 105, 69, 97, 99, 104, 77, 97, 114, 107, 101, 114, 32, 61, 32, 97, 114, 116, 111, 111, 108, 107, 105, 116, 91, 34, 109, 117, 108, 116, 105, 69, 97, 99, 104, 77, 97, 114, 107, 101, 114, 73, 110, 102, 111, 34, 93, 59, 32, 109, 117, 108, 116, 105, 69, 97, 99, 104, 77, 97, 114, 107, 101, 114, 91, 39, 118, 105, 115, 105, 98, 108, 101, 39, 93, 32, 61, 32, 36, 48, 59, 32, 109, 117, 108, 116, 105, 69, 97, 99, 104, 77, 97, 114, 107, 101, 114, 91, 39, 112, 97, 116, 116, 73, 100, 39, 93, 32, 61, 32, 36, 49, 59, 32, 109, 117, 108, 116, 105, 69, 97, 99, 104, 77, 97, 114, 107, 101, 114, 91, 39, 112, 97, 116, 116, 84, 121, 112, 101, 39, 93, 32, 61, 32, 36, 50, 59, 32, 109, 117, 108, 116, 105, 69, 97, 99, 104, 77, 97, 114, 107, 101, 114, 91, 39, 119, 105, 100, 116, 104, 39, 93, 32, 61, 32, 36, 51, 59, 32, 125, 0, 123, 32, 118, 97, 114, 32, 36, 97, 32, 61, 32, 97, 114, 103, 117, 109, 101, 110, 116, 115, 59, 32, 118, 97, 114, 32, 105, 32, 61, 32, 49, 50, 59, 32, 105, 102, 32, 40, 33, 97, 114, 116, 111, 111, 108, 107, 105, 116, 91, 34, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 34, 93, 41, 32, 123, 32, 97, 114, 116, 111, 111, 108, 107, 105, 116, 91, 34, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 34, 93, 32, 61, 32, 40, 123, 32, 112, 111, 115, 58, 32, 91, 48, 44, 48, 93, 44, 32, 108, 105, 110, 101, 58, 32, 91, 91, 48, 44, 48, 44, 48, 93, 44, 32, 91, 48, 44, 48, 44, 48, 93, 44, 32, 91, 48, 44, 48, 44, 48, 93, 44, 32, 91, 48, 44, 48, 44, 48, 93, 93, 44, 32, 118, 101, 114, 116, 101, 120, 58, 32, 91, 91, 48, 44, 48, 93, 44, 32, 91, 48, 44, 48, 93, 44, 32, 91, 48, 44, 48, 93, 44, 32, 91, 48, 44, 48, 93, 93, 32, 125, 41, 59, 32, 125, 32, 118, 97, 114, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 32, 61, 32, 97, 114, 116, 111, 111, 108, 107, 105, 116, 91, 34, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 34, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 97, 114, 101, 97, 34, 93, 32, 61, 32, 36, 48, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 105, 100, 34, 93, 32, 61, 32, 36, 49, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 105, 100, 80, 97, 116, 116, 34, 93, 32, 61, 32, 36, 50, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 105, 100, 77, 97, 116, 114, 105, 120, 34, 93, 32, 61, 32, 36, 51, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 100, 105, 114, 34, 93, 32, 61, 32, 36, 52, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 100, 105, 114, 80, 97, 116, 116, 34, 93, 32, 61, 32, 36, 53, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 100, 105, 114, 77, 97, 116, 114, 105, 120, 34, 93, 32, 61, 32, 36, 54, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 99, 102, 34, 93, 32, 61, 32, 36, 55, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 99, 102, 80, 97, 116, 116, 34, 93, 32, 61, 32, 36, 56, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 99, 102, 77, 97, 116, 114, 105, 120, 34, 93, 32, 61, 32, 36, 57, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 112, 111, 115, 34, 93, 91, 48, 93, 32, 61, 32, 36, 49, 48, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 112, 111, 115, 34, 93, 91, 49, 93, 32, 61, 32, 36, 49, 49, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 108, 105, 110, 101, 34, 93, 91, 48, 93, 91, 48, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 108, 105, 110, 101, 34, 93, 91, 48, 93, 91, 49, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 108, 105, 110, 101, 34, 93, 91, 48, 93, 91, 50, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 108, 105, 110, 101, 34, 93, 91, 49, 93, 91, 48, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 108, 105, 110, 101, 34, 93, 91, 49, 93, 91, 49, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 108, 105, 110, 101, 34, 93, 91, 49, 93, 91, 50, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 108, 105, 110, 101, 34, 93, 91, 50, 93, 91, 48, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 108, 105, 110, 101, 34, 93, 91, 50, 93, 91, 49, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 108, 105, 110, 101, 34, 93, 91, 50, 93, 91, 50, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 108, 105, 110, 101, 34, 93, 91, 51, 93, 91, 48, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 108, 105, 110, 101, 34, 93, 91, 51, 93, 91, 49, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 108, 105, 110, 101, 34, 93, 91, 51, 93, 91, 50, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 118, 101, 114, 116, 101, 120, 34, 93, 91, 48, 93, 91, 48, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 118, 101, 114, 116, 101, 120, 34, 93, 91, 48, 93, 91, 49, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 118, 101, 114, 116, 101, 120, 34, 93, 91, 49, 93, 91, 48, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 118, 101, 114, 116, 101, 120, 34, 93, 91, 49, 93, 91, 49, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 118, 101, 114, 116, 101, 120, 34, 93, 91, 50, 93, 91, 48, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 118, 101, 114, 116, 101, 120, 34, 93, 91, 50, 93, 91, 49, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 118, 101, 114, 116, 101, 120, 34, 93, 91, 51, 93, 91, 48, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 118, 101, 114, 116, 101, 120, 34, 93, 91, 51, 93, 91, 49, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 109, 97, 114, 107, 101, 114, 73, 110, 102, 111, 91, 34, 101, 114, 114, 111, 114, 67, 111, 114, 114, 101, 99, 116, 101, 100, 34, 93, 32, 61, 32, 36, 97, 91, 105, 43, 43, 93, 59, 32, 125, 0, 115, 101, 116, 117, 112, 40, 41, 58, 32, 69, 114, 114, 111, 114, 58, 32, 97, 114, 80, 97, 116, 116, 67, 114, 101, 97, 116, 101, 72, 97, 110, 100, 108, 101, 46, 10, 0, 65, 108, 108, 111, 99, 97, 116, 101, 100, 32, 118, 105, 100, 101, 111, 70, 114, 97, 109, 101, 83, 105, 122, 101, 32, 37, 100, 10, 0, 123, 32, 105, 102, 32, 40, 33, 97, 114, 116, 111, 111, 108, 107, 105, 116, 91, 34, 102, 114, 97, 109, 101, 77, 97, 108, 108, 111, 99, 34, 93, 41, 32, 123, 32, 97, 114, 116, 111, 111, 108, 107, 105, 116, 91, 34, 102, 114, 97, 109, 101, 77, 97, 108, 108, 111, 99, 34, 93, 32, 61, 32, 40, 123, 125, 41, 59, 32, 125, 32, 118, 97, 114, 32, 102, 114, 97, 109, 101, 77, 97, 108, 108, 111, 99, 32, 61, 32, 97, 114, 116, 111, 111, 108, 107, 105, 116, 91, 34, 102, 114, 97, 109, 101, 77, 97, 108, 108, 111, 99, 34, 93, 59, 32, 102, 114, 97, 109, 101, 77, 97, 108, 108, 111, 99, 91, 34, 102, 114, 97, 109, 101, 112, 111, 105, 110, 116, 101, 114, 34, 93, 32, 61, 32, 36, 49, 59, 32, 102, 114, 97, 109, 101, 77, 97, 108, 108, 111, 99, 91, 34, 102, 114, 97, 109, 101, 115, 105, 122, 101, 34, 93, 32, 61, 32, 36, 50, 59, 32, 102, 114, 97, 109, 101, 77, 97, 108, 108, 111, 99, 91, 34, 99, 97, 109, 101, 114, 97, 34, 93, 32, 61, 32, 36, 51, 59, 32, 102, 114, 97, 109, 101, 77, 97, 108, 108, 111, 99, 91, 34, 116, 114, 97, 110, 115, 102, 111, 114, 109, 34, 93, 32, 61, 32, 36, 52, 59, 32, 125, 0, 115, 101, 116, 117, 112, 0, 116, 101, 97, 114, 100, 111, 119, 110, 0, 95, 97, 100, 100, 77, 97, 114, 107, 101, 114, 0, 95, 97, 100, 100, 77, 117, 108, 116, 105, 77, 97, 114, 107, 101, 114, 0, 103, 101, 116, 77, 117, 108, 116, 105, 77, 97, 114, 107, 101, 114, 78, 117, 109, 0, 103, 101, 116, 77, 117, 108, 116, 105, 77, 97, 114, 107, 101, 114, 67, 111, 117, 110, 116, 0, 95, 108, 111, 97, 100, 67, 97, 109, 101, 114, 97, 0, 115, 101, 116, 77, 97, 114, 107, 101, 114, 73, 110, 102, 111, 68, 105, 114, 0, 115, 101, 116, 77, 97, 114, 107, 101, 114, 73, 110, 102, 111, 86, 101, 114, 116, 101, 120, 0, 103, 101, 116, 84, 114, 97, 110, 115, 77, 97, 116, 83, 113, 117, 97, 114, 101, 0, 103, 101, 116, 84, 114, 97, 110, 115, 77, 97, 116, 83, 113, 117, 97, 114, 101, 67, 111, 110, 116, 0, 103, 101, 116, 84, 114, 97, 110, 115, 77, 97, 116, 77, 117, 108, 116, 105, 83, 113, 117, 97, 114, 101, 0, 103, 101, 116, 84, 114, 97, 110, 115, 77, 97, 116, 77, 117, 108, 116, 105, 83, 113, 117, 97, 114, 101, 82, 111, 98, 117, 115, 116, 0, 100, 101, 116, 101, 99, 116, 77, 97, 114, 107, 101, 114, 0, 103, 101, 116, 77, 97, 114, 107, 101, 114, 78, 117, 109, 0, 103, 101, 116, 77, 117, 108, 116, 105, 69, 97, 99, 104, 77, 97, 114, 107, 101, 114, 0, 103, 101, 116, 77, 97, 114, 107, 101, 114, 0, 115, 101, 116, 68, 101, 98, 117, 103, 77, 111, 100, 101, 0, 103, 101, 116, 68, 101, 98, 117, 103, 77, 111, 100, 101, 0, 103, 101, 116, 80, 114, 111, 99, 101, 115, 115, 105, 110, 103, 73, 109, 97, 103, 101, 0, 115, 101, 116, 76, 111, 103, 76, 101, 118, 101, 108, 0, 103, 101, 116, 76, 111, 103, 76, 101, 118, 101, 108, 0, 115, 101, 116, 80, 114, 111, 106, 101, 99, 116, 105, 111, 110, 78, 101, 97, 114, 80, 108, 97, 110, 101, 0, 103, 101, 116, 80, 114, 111, 106, 101, 99, 116, 105, 111, 110, 78, 101, 97, 114, 80, 108, 97, 110, 101, 0, 115, 101, 116, 80, 114, 111, 106, 101, 99, 116, 105, 111, 110, 70, 97, 114, 80, 108, 97, 110, 101, 0, 103, 101, 116, 80, 114, 111, 106, 101, 99, 116, 105, 111, 110, 70, 97, 114, 80, 108, 97, 110, 101, 0, 115, 101, 116, 84, 104, 114, 101, 115, 104, 111, 108, 100, 77, 111, 100, 101, 0, 103, 101, 116, 84, 104, 114, 101, 115, 104, 111, 108, 100, 77, 111, 100, 101, 0, 115, 101, 116, 84, 104, 114, 101, 115, 104, 111, 108, 100, 0, 103, 101, 116, 84, 104, 114, 101, 115, 104, 111, 108, 100, 0, 115, 101, 116, 80, 97, 116, 116, 101, 114, 110, 68, 101, 116, 101, 99, 116, 105, 111, 110, 77, 111, 100, 101, 0, 103, 101, 116, 80, 97, 116, 116, 101, 114, 110, 68, 101, 116, 101, 99, 116, 105, 111, 110, 77, 111, 100, 101, 0, 115, 101, 116, 80, 97, 116, 116, 82, 97, 116, 105, 111, 0, 103, 101, 116, 80, 97, 116, 116, 82, 97, 116, 105, 111, 0, 115, 101, 116, 77, 97, 116, 114, 105, 120, 67, 111, 100, 101, 84, 121, 112, 101, 0, 103, 101, 116, 77, 97, 116, 114, 105, 120, 67, 111, 100, 101, 84, 121, 112, 101, 0, 115, 101, 116, 76, 97, 98, 101, 108, 105, 110, 103, 77, 111, 100, 101, 0, 103, 101, 116, 76, 97, 98, 101, 108, 105, 110, 103, 77, 111, 100, 101, 0, 115, 101, 116, 73, 109, 97, 103, 101, 80, 114, 111, 99, 77, 111, 100, 101, 0, 103, 101, 116, 73, 109, 97, 103, 101, 80, 114, 111, 99, 77, 111, 100, 101, 0, 69, 82, 82, 79, 82, 95, 65, 82, 67, 79, 78, 84, 82, 79, 76, 76, 69, 82, 95, 78, 79, 84, 95, 70, 79, 85, 78, 68, 0, 69, 82, 82, 79, 82, 95, 77, 85, 76, 84, 73, 77, 65, 82, 75, 69, 82, 95, 78, 79, 84, 95, 70, 79, 85, 78, 68, 0, 69, 82, 82, 79, 82, 95, 77, 65, 82, 75, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 0, 65, 82, 95, 68, 69, 66, 85, 71, 95, 68, 73, 83, 65, 66, 76, 69, 0, 65, 82, 95, 68, 69, 66, 85, 71, 95, 69, 78, 65, 66, 76, 69, 0, 65, 82, 95, 68, 69, 70, 65, 85, 76, 84, 95, 68, 69, 66, 85, 71, 95, 77, 79, 68, 69, 0, 65, 82, 95, 76, 65, 66, 69, 76, 73, 78, 71, 95, 87, 72, 73, 84, 69, 95, 82, 69, 71, 73, 79, 78, 0, 65, 82, 95, 76, 65, 66, 69, 76, 73, 78, 71, 95, 66, 76, 65, 67, 75, 95, 82, 69, 71, 73, 79, 78, 0, 65, 82, 95, 68, 69, 70, 65, 85, 76, 84, 95, 76, 65, 66, 69, 76, 73, 78, 71, 95, 77, 79, 68, 69, 0, 65, 82, 95, 68, 69, 70, 65, 85, 76, 84, 95, 76, 65, 66, 69, 76, 73, 78, 71, 95, 84, 72, 82, 69, 83, 72, 0, 65, 82, 95, 73, 77, 65, 71, 69, 95, 80, 82, 79, 67, 95, 70, 82, 65, 77, 69, 95, 73, 77, 65, 71, 69, 0, 65, 82, 95, 73, 77, 65, 71, 69, 95, 80, 82, 79, 67, 95, 70, 73, 69, 76, 68, 95, 73, 77, 65, 71, 69, 0, 65, 82, 95, 68, 69, 70, 65, 85, 76, 84, 95, 73, 77, 65, 71, 69, 95, 80, 82, 79, 67, 95, 77, 79, 68, 69, 0, 65, 82, 95, 84, 69, 77, 80, 76, 65, 84, 69, 95, 77, 65, 84, 67, 72, 73, 78, 71, 95, 67, 79, 76, 79, 82, 0, 65, 82, 95, 84, 69, 77, 80, 76, 65, 84, 69, 95, 77, 65, 84, 67, 72, 73, 78, 71, 95, 77, 79, 78, 79, 0, 65, 82, 95, 77, 65, 84, 82, 73, 88, 95, 67, 79, 68, 69, 95, 68, 69, 84, 69, 67, 84, 73, 79, 78, 0, 65, 82, 95, 84, 69, 77, 80, 76, 65, 84, 69, 95, 77, 65, 84, 67, 72, 73, 78, 71, 95, 67, 79, 76, 79, 82, 95, 65, 78, 68, 95, 77, 65, 84, 82, 73, 88, 0, 65, 82, 95, 84, 69, 77, 80, 76, 65, 84, 69, 95, 77, 65, 84, 67, 72, 73, 78, 71, 95, 77, 79, 78, 79, 95, 65, 78, 68, 95, 77, 65, 84, 82, 73, 88, 0, 65, 82, 95, 68, 69, 70, 65, 85, 76, 84, 95, 80, 65, 84, 84, 69, 82, 78, 95, 68, 69, 84, 69, 67, 84, 73, 79, 78, 95, 77, 79, 68, 69, 0, 65, 82, 95, 85, 83, 69, 95, 84, 82, 65, 67, 75, 73, 78, 71, 95, 72, 73, 83, 84, 79, 82, 89, 0, 65, 82, 95, 78, 79, 85, 83, 69, 95, 84, 82, 65, 67, 75, 73, 78, 71, 95, 72, 73, 83, 84, 79, 82, 89, 0, 65, 82, 95, 85, 83, 69, 95, 84, 82, 65, 67, 75, 73, 78, 71, 95, 72, 73, 83, 84, 79, 82, 89, 95, 86, 50, 0, 65, 82, 95, 68, 69, 70, 65, 85, 76, 84, 95, 77, 65, 82, 75, 69, 82, 95, 69, 88, 84, 82, 65, 67, 84, 73, 79, 78, 95, 77, 79, 68, 69, 0, 65, 82, 95, 77, 65, 88, 95, 76, 79, 79, 80, 95, 67, 79, 85, 78, 84, 0, 65, 82, 95, 76, 79, 79, 80, 95, 66, 82, 69, 65, 75, 95, 84, 72, 82, 69, 83, 72, 0, 65, 82, 95, 76, 79, 71, 95, 76, 69, 86, 69, 76, 95, 68, 69, 66, 85, 71, 0, 65, 82, 95, 76, 79, 71, 95, 76, 69, 86, 69, 76, 95, 73, 78, 70, 79, 0, 65, 82, 95, 76, 79, 71, 95, 76, 69, 86, 69, 76, 95, 87, 65, 82, 78, 0, 65, 82, 95, 76, 79, 71, 95, 76, 69, 86, 69, 76, 95, 69, 82, 82, 79, 82, 0, 65, 82, 95, 76, 79, 71, 95, 76, 69, 86, 69, 76, 95, 82, 69, 76, 95, 73, 78, 70, 79, 0, 65, 82, 95, 77, 65, 84, 82, 73, 88, 95, 67, 79, 68, 69, 95, 51, 120, 51, 0, 65, 82, 95, 77, 65, 84, 82, 73, 88, 95, 67, 79, 68, 69, 95, 51, 120, 51, 95, 72, 65, 77, 77, 73, 78, 71, 54, 51, 0, 65, 82, 95, 77, 65, 84, 82, 73, 88, 95, 67, 79, 68, 69, 95, 51, 120, 51, 95, 80, 65, 82, 73, 84, 89, 54, 53, 0, 65, 82, 95, 77, 65, 84, 82, 73, 88, 95, 67, 79, 68, 69, 95, 52, 120, 52, 0, 65, 82, 95, 77, 65, 84, 82, 73, 88, 95, 67, 79, 68, 69, 95, 52, 120, 52, 95, 66, 67, 72, 95, 49, 51, 95, 57, 95, 51, 0, 65, 82, 95, 77, 65, 84, 82, 73, 88, 95, 67, 79, 68, 69, 95, 52, 120, 52, 95, 66, 67, 72, 95, 49, 51, 95, 53, 95, 53, 0, 65, 82, 95, 76, 65, 66, 69, 76, 73, 78, 71, 95, 84, 72, 82, 69, 83, 72, 95, 77, 79, 68, 69, 95, 77, 65, 78, 85, 65, 76, 0, 65, 82, 95, 76, 65, 66, 69, 76, 73, 78, 71, 95, 84, 72, 82, 69, 83, 72, 95, 77, 79, 68, 69, 95, 65, 85, 84, 79, 95, 77, 69, 68, 73, 65, 78, 0, 65, 82, 95, 76, 65], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
    allocate([66, 69, 76, 73, 78, 71, 95, 84, 72, 82, 69, 83, 72, 95, 77, 79, 68, 69, 95, 65, 85, 84, 79, 95, 79, 84, 83, 85, 0, 65, 82, 95, 76, 65, 66, 69, 76, 73, 78, 71, 95, 84, 72, 82, 69, 83, 72, 95, 77, 79, 68, 69, 95, 65, 85, 84, 79, 95, 65, 68, 65, 80, 84, 73, 86, 69, 0, 65, 82, 95, 77, 65, 82, 75, 69, 82, 95, 73, 78, 70, 79, 95, 67, 85, 84, 79, 70, 70, 95, 80, 72, 65, 83, 69, 95, 78, 79, 78, 69, 0, 65, 82, 95, 77, 65, 82, 75, 69, 82, 95, 73, 78, 70, 79, 95, 67, 85, 84, 79, 70, 70, 95, 80, 72, 65, 83, 69, 95, 80, 65, 84, 84, 69, 82, 78, 95, 69, 88, 84, 82, 65, 67, 84, 73, 79, 78, 0, 65, 82, 95, 77, 65, 82, 75, 69, 82, 95, 73, 78, 70, 79, 95, 67, 85, 84, 79, 70, 70, 95, 80, 72, 65, 83, 69, 95, 77, 65, 84, 67, 72, 95, 71, 69, 78, 69, 82, 73, 67, 0, 65, 82, 95, 77, 65, 82, 75, 69, 82, 95, 73, 78, 70, 79, 95, 67, 85, 84, 79, 70, 70, 95, 80, 72, 65, 83, 69, 95, 77, 65, 84, 67, 72, 95, 67, 79, 78, 84, 82, 65, 83, 84, 0, 65, 82, 95, 77, 65, 82, 75, 69, 82, 95, 73, 78, 70, 79, 95, 67, 85, 84, 79, 70, 70, 95, 80, 72, 65, 83, 69, 95, 77, 65, 84, 67, 72, 95, 66, 65, 82, 67, 79, 68, 69, 95, 78, 79, 84, 95, 70, 79, 85, 78, 68, 0, 65, 82, 95, 77, 65, 82, 75, 69, 82, 95, 73, 78, 70, 79, 95, 67, 85, 84, 79, 70, 70, 95, 80, 72, 65, 83, 69, 95, 77, 65, 84, 67, 72, 95, 66, 65, 82, 67, 79, 68, 69, 95, 69, 68, 67, 95, 70, 65, 73, 76, 0, 65, 82, 95, 77, 65, 82, 75, 69, 82, 95, 73, 78, 70, 79, 95, 67, 85, 84, 79, 70, 70, 95, 80, 72, 65, 83, 69, 95, 77, 65, 84, 67, 72, 95, 67, 79, 78, 70, 73, 68, 69, 78, 67, 69, 0, 65, 82, 95, 77, 65, 82, 75, 69, 82, 95, 73, 78, 70, 79, 95, 67, 85, 84, 79, 70, 70, 95, 80, 72, 65, 83, 69, 95, 80, 79, 83, 69, 95, 69, 82, 82, 79, 82, 0, 65, 82, 95, 77, 65, 82, 75, 69, 82, 95, 73, 78, 70, 79, 95, 67, 85, 84, 79, 70, 70, 95, 80, 72, 65, 83, 69, 95, 80, 79, 83, 69, 95, 69, 82, 82, 79, 82, 95, 77, 85, 76, 84, 73, 0, 65, 82, 95, 77, 65, 82, 75, 69, 82, 95, 73, 78, 70, 79, 95, 67, 85, 84, 79, 70, 70, 95, 80, 72, 65, 83, 69, 95, 72, 69, 85, 82, 73, 83, 84, 73, 67, 95, 84, 82, 79, 85, 66, 76, 69, 83, 79, 77, 69, 95, 77, 65, 84, 82, 73, 88, 95, 67, 79, 68, 69, 83, 0, 118, 105, 105, 102, 0, 118, 105, 105, 105, 0, 100, 105, 105, 0, 118, 105, 105, 100, 0, 105, 105, 0, 118, 105, 105, 0, 105, 105, 105, 0, 78, 83, 116, 51, 95, 95, 49, 49, 50, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 73, 99, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 99, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 99, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 50, 49, 95, 95, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 95, 99, 111, 109, 109, 111, 110, 73, 76, 98, 49, 69, 69, 69, 0, 105, 105, 105, 105, 0, 105, 105, 105, 105, 105, 0, 118, 111, 105, 100, 0, 98, 111, 111, 108, 0, 99, 104, 97, 114, 0, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 0, 115, 104, 111, 114, 116, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 115, 104, 111, 114, 116, 0, 105, 110, 116, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0, 108, 111, 110, 103, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 0, 102, 108, 111, 97, 116, 0, 100, 111, 117, 98, 108, 101, 0, 115, 116, 100, 58, 58, 115, 116, 114, 105, 110, 103, 0, 115, 116, 100, 58, 58, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 62, 0, 115, 116, 100, 58, 58, 119, 115, 116, 114, 105, 110, 103, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 118, 97, 108, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 99, 104, 97, 114, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 99, 104, 97, 114, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 115, 104, 111, 114, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 115, 104, 111, 114, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 105, 110, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 108, 111, 110, 103, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 105, 110, 116, 56, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 105, 110, 116, 56, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 105, 110, 116, 49, 54, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 105, 110, 116, 49, 54, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 105, 110, 116, 51, 50, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 117, 105, 110, 116, 51, 50, 95, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 102, 108, 111, 97, 116, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 100, 111, 117, 98, 108, 101, 62, 0, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 58, 58, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 60, 108, 111, 110, 103, 32, 100, 111, 117, 98, 108, 101, 62, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 101, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 100, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 102, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 109, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 108, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 106, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 105, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 116, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 115, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 104, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 97, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 49, 49, 109, 101, 109, 111, 114, 121, 95, 118, 105, 101, 119, 73, 99, 69, 69, 0, 78, 49, 48, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 51, 118, 97, 108, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 50, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 73, 119, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 119, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 119, 69, 69, 69, 69, 0, 78, 83, 116, 51, 95, 95, 49, 49, 50, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 73, 104, 78, 83, 95, 49, 49, 99, 104, 97, 114, 95, 116, 114, 97, 105, 116, 115, 73, 104, 69, 69, 78, 83, 95, 57, 97, 108, 108, 111, 99, 97, 116, 111, 114, 73, 104, 69, 69, 69, 69, 0, 83, 116, 57, 98, 97, 100, 95, 97, 108, 108, 111, 99, 0, 83, 116, 57, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0, 83, 116, 57, 116, 121, 112, 101, 95, 105, 110, 102, 111, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 54, 95, 95, 115, 104, 105, 109, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 55, 95, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 51, 95, 95, 102, 117, 110, 100, 97, 109, 101, 110, 116, 97, 108, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 118, 0, 98, 0, 99, 0, 104, 0, 97, 0, 115, 0, 116, 0, 105, 0, 106, 0, 108, 0, 109, 0, 102, 0, 100, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 48, 95, 95, 115, 105, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 49, 95, 95, 118, 109, 105, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 33, 34, 118, 101, 99, 116, 111, 114, 32, 108, 101, 110, 103, 116, 104, 95, 101, 114, 114, 111, 114, 34, 0, 47, 85, 115, 101, 114, 115, 47, 106, 101, 114, 111, 109, 101, 101, 116, 105, 101, 110, 110, 101, 47, 119, 111, 114, 107, 47, 101, 109, 115, 100, 107, 95, 112, 111, 114, 116, 97, 98, 108, 101, 47, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 47, 49, 46, 51, 53, 46, 48, 47, 115, 121, 115, 116, 101, 109, 47, 105, 110, 99, 108, 117, 100, 101, 47, 108, 105, 98, 99, 120, 120, 47, 118, 101, 99, 116, 111, 114, 0, 95, 95, 116, 104, 114, 111, 119, 95, 108, 101, 110, 103, 116, 104, 95, 101, 114, 114, 111, 114, 0, 115, 116, 100, 58, 58, 98, 97, 100, 95, 97, 108, 108, 111, 99, 0, 33, 34, 98, 97, 115, 105, 99, 95, 115, 116, 114, 105, 110, 103, 32, 108, 101, 110, 103, 116, 104, 95, 101, 114, 114, 111, 114, 34, 0, 47, 85, 115, 101, 114, 115, 47, 106, 101, 114, 111, 109, 101, 101, 116, 105, 101, 110, 110, 101, 47, 119, 111, 114, 107, 47, 101, 109, 115, 100, 107, 95, 112, 111, 114, 116, 97, 98, 108, 101, 47, 101, 109, 115, 99, 114, 105, 112, 116, 101, 110, 47, 49, 46, 51, 53, 46, 48, 47, 115, 121, 115, 116, 101, 109, 47, 105, 110, 99, 108, 117, 100, 101, 47, 108, 105, 98, 99, 120, 120, 47, 115, 116, 114, 105, 110, 103, 0, 84, 33, 34, 25, 13, 1, 2, 3, 17, 75, 28, 12, 16, 4, 11, 29, 18, 30, 39, 104, 110, 111, 112, 113, 98, 32, 5, 6, 15, 19, 20, 21, 26, 8, 22, 7, 40, 36, 23, 24, 9, 10, 14, 27, 31, 37, 35, 131, 130, 125, 38, 42, 43, 60, 61, 62, 63, 67, 71, 74, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 114, 115, 116, 121, 122, 123, 124, 0, 73, 108, 108, 101, 103, 97, 108, 32, 98, 121, 116, 101, 32, 115, 101, 113, 117, 101, 110, 99, 101, 0, 68, 111, 109, 97, 105, 110, 32, 101, 114, 114, 111, 114, 0, 82, 101, 115, 117, 108, 116, 32, 110, 111, 116, 32, 114, 101, 112, 114, 101, 115, 101, 110, 116, 97, 98, 108, 101, 0, 78, 111, 116, 32, 97, 32, 116, 116, 121, 0, 80, 101, 114, 109, 105, 115, 115, 105, 111, 110, 32, 100, 101, 110, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 110, 111, 116, 32, 112, 101, 114, 109, 105, 116, 116, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 102, 105, 108, 101, 32, 111, 114, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 78, 111, 32, 115, 117, 99, 104, 32, 112, 114, 111, 99, 101, 115, 115, 0, 70, 105, 108, 101, 32, 101, 120, 105, 115, 116, 115, 0, 86, 97, 108, 117, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 32, 102, 111, 114, 32, 100, 97, 116, 97, 32, 116, 121, 112, 101, 0, 78, 111, 32, 115, 112, 97, 99, 101, 32, 108, 101, 102, 116, 32, 111, 110, 32, 100, 101, 118, 105, 99, 101, 0, 79, 117, 116, 32, 111, 102, 32, 109, 101, 109, 111, 114, 121, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 98, 117, 115, 121, 0, 73, 110, 116, 101, 114, 114, 117, 112, 116, 101, 100, 32, 115, 121, 115, 116, 101, 109, 32, 99, 97, 108, 108, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 116, 101, 109, 112, 111, 114, 97, 114, 105, 108, 121, 32, 117, 110, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 73, 110, 118, 97, 108, 105, 100, 32, 115, 101, 101, 107, 0, 67, 114, 111, 115, 115, 45, 100, 101, 118, 105, 99, 101, 32, 108, 105, 110, 107, 0, 82, 101, 97, 100, 45, 111, 110, 108, 121, 32, 102, 105, 108, 101, 32, 115, 121, 115, 116, 101, 109, 0, 68, 105, 114, 101, 99, 116, 111, 114, 121, 32, 110, 111, 116, 32, 101, 109, 112, 116, 121, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 112, 101, 101, 114, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 116, 105, 109, 101, 100, 32, 111, 117, 116, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 102, 117, 115, 101, 100, 0, 72, 111, 115, 116, 32, 105, 115, 32, 100, 111, 119, 110, 0, 72, 111, 115, 116, 32, 105, 115, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 65, 100, 100, 114, 101, 115, 115, 32, 105, 110, 32, 117, 115, 101, 0, 66, 114, 111, 107, 101, 110, 32, 112, 105, 112, 101, 0, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 32, 111, 114, 32, 97, 100, 100, 114, 101, 115, 115, 0, 66, 108, 111, 99, 107, 32, 100, 101, 118, 105, 99, 101, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 0, 78, 111, 116, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 73, 115, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 84, 101, 120, 116, 32, 102, 105, 108, 101, 32, 98, 117, 115, 121, 0, 69, 120, 101, 99, 32, 102, 111, 114, 109, 97, 116, 32, 101, 114, 114, 111, 114, 0, 73, 110, 118, 97, 108, 105, 100, 32, 97, 114, 103, 117, 109, 101, 110, 116, 0, 65, 114, 103, 117, 109, 101, 110, 116, 32, 108, 105, 115, 116, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 83, 121, 109, 98, 111, 108, 105, 99, 32, 108, 105, 110, 107, 32, 108, 111, 111, 112, 0, 70, 105, 108, 101, 110, 97, 109, 101, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 111, 112, 101, 110, 32, 102, 105, 108, 101, 115, 32, 105, 110, 32, 115, 121, 115, 116, 101, 109, 0, 78, 111, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 66, 97, 100, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 0, 78, 111, 32, 99, 104, 105, 108, 100, 32, 112, 114, 111, 99, 101, 115, 115, 0, 66, 97, 100, 32, 97, 100, 100, 114, 101, 115, 115, 0, 70, 105, 108, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 108, 105, 110, 107, 115, 0, 78, 111, 32, 108, 111, 99, 107, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 100, 101, 97, 100, 108, 111, 99, 107, 32, 119, 111, 117, 108, 100, 32, 111, 99, 99, 117, 114, 0, 83, 116, 97, 116, 101, 32, 110, 111, 116, 32, 114, 101, 99, 111, 118, 101, 114, 97, 98, 108, 101, 0, 80, 114, 101, 118, 105, 111, 117, 115, 32, 111, 119, 110, 101, 114, 32, 100, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 99, 97, 110, 99, 101, 108, 101, 100, 0, 70, 117, 110, 99, 116, 105, 111, 110, 32, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 0, 78, 111, 32, 109, 101, 115, 115, 97, 103, 101, 32, 111, 102, 32, 100, 101, 115, 105, 114, 101, 100, 32, 116, 121, 112, 101, 0, 73, 100, 101, 110, 116, 105, 102, 105, 101, 114, 32, 114, 101, 109, 111, 118, 101, 100, 0, 68, 101, 118, 105, 99, 101, 32, 110, 111, 116, 32, 97, 32, 115, 116, 114, 101, 97, 109, 0, 78, 111, 32, 100, 97, 116, 97, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 68, 101, 118, 105, 99, 101, 32, 116, 105, 109, 101, 111, 117, 116, 0, 79, 117, 116, 32, 111, 102, 32, 115, 116, 114, 101, 97, 109, 115, 32, 114, 101, 115, 111, 117, 114, 99, 101, 115, 0, 76, 105, 110, 107, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 115, 101, 118, 101, 114, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 101, 114, 114, 111, 114, 0, 66, 97, 100, 32, 109, 101, 115, 115, 97, 103, 101, 0, 70, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 105, 110, 32, 98, 97, 100, 32, 115, 116, 97, 116, 101, 0, 78, 111, 116, 32, 97, 32, 115, 111, 99, 107, 101, 116, 0, 68, 101, 115, 116, 105, 110, 97, 116, 105, 111, 110, 32, 97, 100, 100, 114, 101, 115, 115, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 77, 101, 115, 115, 97, 103, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 119, 114, 111, 110, 103, 32, 116, 121, 112, 101, 32, 102, 111, 114, 32, 115, 111, 99, 107, 101, 116, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 116, 121, 112, 101, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 78, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 65, 100, 100, 114, 101, 115, 115, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 98, 121, 32, 112, 114, 111, 116, 111, 99, 111, 108, 0, 65, 100, 100, 114, 101, 115, 115, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 78, 101, 116, 119, 111, 114, 107, 32, 105, 115, 32, 100, 111, 119, 110, 0, 78, 101, 116, 119, 111, 114, 107, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 110, 101, 116, 119, 111, 114, 107, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 97, 98, 111, 114, 116, 101, 100, 0, 78, 111, 32, 98, 117, 102, 102, 101, 114, 32, 115, 112, 97, 99, 101, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 83, 111, 99, 107, 101, 116, 32, 105, 115, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 110, 111, 116, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 67, 97, 110, 110, 111, 116, 32, 115, 101, 110, 100, 32, 97, 102, 116, 101, 114, 32, 115, 111, 99, 107, 101, 116, 32, 115, 104, 117, 116, 100, 111, 119, 110, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 97, 108, 114, 101, 97, 100, 121, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 83, 116, 97, 108, 101, 32, 102, 105, 108, 101, 32, 104, 97, 110, 100, 108, 101, 0, 82, 101, 109, 111, 116, 101, 32, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 81, 117, 111, 116, 97, 32, 101, 120, 99, 101, 101, 100, 101, 100, 0, 78, 111, 32, 109, 101, 100, 105, 117, 109, 32, 102, 111, 117, 110, 100, 0, 87, 114, 111, 110, 103, 32, 109, 101, 100, 105, 117, 109, 32, 116, 121, 112, 101, 0, 78, 111, 32, 101, 114, 114, 111, 114, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 0, 0, 105, 110, 102, 105, 110, 105, 116, 121, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 255, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 255, 255, 255, 255, 255, 255, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 4, 7, 3, 6, 5, 0, 114, 119, 97], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 10240);
    allocate([17, 0, 10, 0, 17, 17, 17, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 15, 10, 17, 17, 17, 3, 10, 7, 0, 1, 19, 9, 11, 11, 0, 0, 9, 6, 11, 0, 0, 11, 0, 6, 17, 0, 0, 0, 17, 17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 10, 10, 17, 17, 17, 0, 10, 0, 0, 2, 0, 9, 11, 0, 0, 0, 9, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 4, 13, 0, 0, 0, 0, 9, 14, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 15, 0, 0, 0, 0, 9, 16, 0, 0, 0, 0, 0, 16, 0, 0, 16, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 9, 11, 0, 0, 0, 0, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 45, 43, 32, 32, 32, 48, 88, 48, 120, 0, 40, 110, 117, 108, 108, 41, 0, 45, 48, 88, 43, 48, 88, 32, 48, 88, 45, 48, 120, 43, 48, 120, 32, 48, 120, 0, 105, 110, 102, 0, 73, 78, 70, 0, 110, 97, 110, 0, 78, 65, 78, 0, 46, 0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 15945);
    var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
    assert(tempDoublePtr % 8 == 0);
    function copyTempFloat(ptr) {
      HEAP8[tempDoublePtr] = HEAP8[ptr];
      HEAP8[tempDoublePtr + 1] = HEAP8[ptr + 1];
      HEAP8[tempDoublePtr + 2] = HEAP8[ptr + 2];
      HEAP8[tempDoublePtr + 3] = HEAP8[ptr + 3];
    }
    function copyTempDouble(ptr) {
      HEAP8[tempDoublePtr] = HEAP8[ptr];
      HEAP8[tempDoublePtr + 1] = HEAP8[ptr + 1];
      HEAP8[tempDoublePtr + 2] = HEAP8[ptr + 2];
      HEAP8[tempDoublePtr + 3] = HEAP8[ptr + 3];
      HEAP8[tempDoublePtr + 4] = HEAP8[ptr + 4];
      HEAP8[tempDoublePtr + 5] = HEAP8[ptr + 5];
      HEAP8[tempDoublePtr + 6] = HEAP8[ptr + 6];
      HEAP8[tempDoublePtr + 7] = HEAP8[ptr + 7];
    }
    function _atexit(func2, arg2) {
      __ATEXIT__.unshift({ func: func2, arg: arg2 });
    }
    function ___cxa_atexit() {
      return _atexit.apply(null, arguments);
    }
    Module["_i64Subtract"] = _i64Subtract;
    function ___assert_fail(condition, filename, line, func2) {
      ABORT = true;
      throw "Assertion failed: " + Pointer_stringify(condition) + ", at: " + [filename ? Pointer_stringify(filename) : "unknown filename", line, func2 ? Pointer_stringify(func2) : "unknown function"] + " at " + stackTrace();
    }
    function embind_init_charCodes() {
      var codes = new Array(256);
      for (var i2 = 0; i2 < 256; ++i2) {
        codes[i2] = String.fromCharCode(i2);
      }
      embind_charCodes = codes;
    }
    var embind_charCodes = void 0;
    function readLatin1String(ptr) {
      var ret = "";
      var c = ptr;
      while (HEAPU8[c]) {
        ret += embind_charCodes[HEAPU8[c++]];
      }
      return ret;
    }
    var awaitingDependencies = {};
    var registeredTypes = {};
    var typeDependencies = {};
    var char_0 = 48;
    var char_9 = 57;
    function makeLegalFunctionName(name) {
      if (void 0 === name) {
        return "_unknown";
      }
      name = name.replace(/[^a-zA-Z0-9_]/g, "$");
      var f = name.charCodeAt(0);
      if (f >= char_0 && f <= char_9) {
        return "_" + name;
      } else {
        return name;
      }
    }
    function createNamedFunction(name, body) {
      name = makeLegalFunctionName(name);
      return new Function("body", "return function " + name + '() {\n    "use strict";    return body.apply(this, arguments);\n};\n')(body);
    }
    function extendError(baseErrorType, errorName) {
      var errorClass = createNamedFunction(errorName, function(message) {
        this.name = errorName;
        this.message = message;
        var stack = new Error(message).stack;
        if (stack !== void 0) {
          this.stack = this.toString() + "\n" + stack.replace(/^Error(:[^\n]*)?\n/, "");
        }
      });
      errorClass.prototype = Object.create(baseErrorType.prototype);
      errorClass.prototype.constructor = errorClass;
      errorClass.prototype.toString = function() {
        if (this.message === void 0) {
          return this.name;
        } else {
          return this.name + ": " + this.message;
        }
      };
      return errorClass;
    }
    var BindingError = void 0;
    function throwBindingError(message) {
      throw new BindingError(message);
    }
    var InternalError = void 0;
    function throwInternalError(message) {
      throw new InternalError(message);
    }
    function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
      myTypes.forEach(function(type2) {
        typeDependencies[type2] = dependentTypes;
      });
      function onComplete(typeConverters2) {
        var myTypeConverters = getTypeConverters(typeConverters2);
        if (myTypeConverters.length !== myTypes.length) {
          throwInternalError("Mismatched type converter count");
        }
        for (var i2 = 0; i2 < myTypes.length; ++i2) {
          registerType(myTypes[i2], myTypeConverters[i2]);
        }
      }
      var typeConverters = new Array(dependentTypes.length);
      var unregisteredTypes = [];
      var registered = 0;
      dependentTypes.forEach(function(dt, i2) {
        if (registeredTypes.hasOwnProperty(dt)) {
          typeConverters[i2] = registeredTypes[dt];
        } else {
          unregisteredTypes.push(dt);
          if (!awaitingDependencies.hasOwnProperty(dt)) {
            awaitingDependencies[dt] = [];
          }
          awaitingDependencies[dt].push(function() {
            typeConverters[i2] = registeredTypes[dt];
            ++registered;
            if (registered === unregisteredTypes.length) {
              onComplete(typeConverters);
            }
          });
        }
      });
      if (0 === unregisteredTypes.length) {
        onComplete(typeConverters);
      }
    }
    function registerType(rawType, registeredInstance, options) {
      options = options || {};
      if (!("argPackAdvance" in registeredInstance)) {
        throw new TypeError("registerType registeredInstance requires argPackAdvance");
      }
      var name = registeredInstance.name;
      if (!rawType) {
        throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
      }
      if (registeredTypes.hasOwnProperty(rawType)) {
        if (options.ignoreDuplicateRegistrations) {
          return;
        } else {
          throwBindingError("Cannot register type '" + name + "' twice");
        }
      }
      registeredTypes[rawType] = registeredInstance;
      delete typeDependencies[rawType];
      if (awaitingDependencies.hasOwnProperty(rawType)) {
        var callbacks = awaitingDependencies[rawType];
        delete awaitingDependencies[rawType];
        callbacks.forEach(function(cb) {
          cb();
        });
      }
    }
    function __embind_register_void(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, { isVoid: true, name, argPackAdvance: 0, fromWireType: function() {
        return void 0;
      }, toWireType: function(destructors, o) {
        return void 0;
      } });
    }
    function __ZSt18uncaught_exceptionv() {
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
    var EXCEPTIONS = { last: 0, caught: [], infos: {}, deAdjust: function(adjusted) {
      if (!adjusted || EXCEPTIONS.infos[adjusted])
        return adjusted;
      for (var ptr in EXCEPTIONS.infos) {
        var info = EXCEPTIONS.infos[ptr];
        if (info.adjusted === adjusted) {
          return ptr;
        }
      }
      return adjusted;
    }, addRef: function(ptr) {
      if (!ptr)
        return;
      var info = EXCEPTIONS.infos[ptr];
      info.refcount++;
    }, decRef: function(ptr) {
      if (!ptr)
        return;
      var info = EXCEPTIONS.infos[ptr];
      assert(info.refcount > 0);
      info.refcount--;
      if (info.refcount === 0) {
        if (info.destructor) {
          Runtime.dynCall("vi", info.destructor, [ptr]);
        }
        delete EXCEPTIONS.infos[ptr];
        ___cxa_free_exception(ptr);
      }
    }, clearRef: function(ptr) {
      if (!ptr)
        return;
      var info = EXCEPTIONS.infos[ptr];
      info.refcount = 0;
    } };
    function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) {
        EXCEPTIONS.last = ptr;
      }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr));
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }
    function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        return (asm["setTempRet0"](0), 0) | 0;
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        return (asm["setTempRet0"](0), thrown) | 0;
      }
      var typeArray = Array.prototype.slice.call(arguments);
      var pointer = Module["___cxa_is_pointer_type"](throwntype);
      if (!___cxa_find_matching_catch.buffer)
        ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[___cxa_find_matching_catch.buffer >> 2] = thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      for (var i2 = 0; i2 < typeArray.length; i2++) {
        if (typeArray[i2] && Module["___cxa_can_catch"](typeArray[i2], throwntype, thrown)) {
          thrown = HEAP32[thrown >> 2];
          info.adjusted = thrown;
          return (asm["setTempRet0"](typeArray[i2]), thrown) | 0;
        }
      }
      thrown = HEAP32[thrown >> 2];
      return (asm["setTempRet0"](throwntype), thrown) | 0;
    }
    function ___cxa_throw(ptr, type2, destructor) {
      EXCEPTIONS.infos[ptr] = { ptr, adjusted: ptr, type: type2, destructor, refcount: 0 };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }
    Module["_memset"] = _memset;
    var _BDtoILow = true;
    function getShiftFromSize(size) {
      switch (size) {
        case 1:
          return 0;
        case 2:
          return 1;
        case 4:
          return 2;
        case 8:
          return 3;
        default:
          throw new TypeError("Unknown type size: " + size);
      }
    }
    function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
      registerType(rawType, { name, fromWireType: function(wt) {
        return !!wt;
      }, toWireType: function(destructors, o) {
        return o ? trueValue : falseValue;
      }, argPackAdvance: 8, readValueFromPointer: function(pointer) {
        var heap;
        if (size === 1) {
          heap = HEAP8;
        } else if (size === 2) {
          heap = HEAP16;
        } else if (size === 4) {
          heap = HEAP32;
        } else {
          throw new TypeError("Unknown boolean type size: " + name);
        }
        return this["fromWireType"](heap[pointer >> shift]);
      }, destructorFunction: null });
    }
    Module["_bitshift64Shl"] = _bitshift64Shl;
    function _abort() {
      Module["abort"]();
    }
    function _free() {
    }
    Module["_free"] = _free;
    function _malloc(bytes) {
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return ptr + 8 & 4294967288;
    }
    Module["_malloc"] = _malloc;
    function simpleReadValueFromPointer(pointer) {
      return this["fromWireType"](HEAPU32[pointer >> 2]);
    }
    function __embind_register_std_string(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, { name, fromWireType: function(value) {
        var length = HEAPU32[value >> 2];
        var a = new Array(length);
        for (var i2 = 0; i2 < length; ++i2) {
          a[i2] = String.fromCharCode(HEAPU8[value + 4 + i2]);
        }
        _free(value);
        return a.join("");
      }, toWireType: function(destructors, value) {
        if (value instanceof ArrayBuffer) {
          value = new Uint8Array(value);
        }
        function getTAElement(ta, index) {
          return ta[index];
        }
        function getStringElement(string, index) {
          return string.charCodeAt(index);
        }
        var getElement;
        if (value instanceof Uint8Array) {
          getElement = getTAElement;
        } else if (value instanceof Int8Array) {
          getElement = getTAElement;
        } else if (typeof value === "string") {
          getElement = getStringElement;
        } else {
          throwBindingError("Cannot pass non-string to std::string");
        }
        var length = value.length;
        var ptr = _malloc(4 + length);
        HEAPU32[ptr >> 2] = length;
        for (var i2 = 0; i2 < length; ++i2) {
          var charCode = getElement(value, i2);
          if (charCode > 255) {
            _free(ptr);
            throwBindingError("String has UTF-16 code units that do not fit in 8 bits");
          }
          HEAPU8[ptr + 4 + i2] = charCode;
        }
        if (destructors !== null) {
          destructors.push(_free, ptr);
        }
        return ptr;
      }, argPackAdvance: 8, readValueFromPointer: simpleReadValueFromPointer, destructorFunction: function(ptr) {
        _free(ptr);
      } });
    }
    function __embind_register_std_wstring(rawType, charSize, name) {
      name = readLatin1String(name);
      var getHeap, shift;
      if (charSize === 2) {
        getHeap = function() {
          return HEAPU16;
        };
        shift = 1;
      } else if (charSize === 4) {
        getHeap = function() {
          return HEAPU32;
        };
        shift = 2;
      }
      registerType(rawType, { name, fromWireType: function(value) {
        var HEAP2 = getHeap();
        var length = HEAPU32[value >> 2];
        var a = new Array(length);
        var start = value + 4 >> shift;
        for (var i2 = 0; i2 < length; ++i2) {
          a[i2] = String.fromCharCode(HEAP2[start + i2]);
        }
        _free(value);
        return a.join("");
      }, toWireType: function(destructors, value) {
        var HEAP2 = getHeap();
        var length = value.length;
        var ptr = _malloc(4 + length * charSize);
        HEAPU32[ptr >> 2] = length;
        var start = ptr + 4 >> shift;
        for (var i2 = 0; i2 < length; ++i2) {
          HEAP2[start + i2] = value.charCodeAt(i2);
        }
        if (destructors !== null) {
          destructors.push(_free, ptr);
        }
        return ptr;
      }, argPackAdvance: 8, readValueFromPointer: simpleReadValueFromPointer, destructorFunction: function(ptr) {
        _free(ptr);
      } });
    }
    function ___lock() {
    }
    function ___unlock() {
    }
    var _emscripten_asm_const_int = true;
    Module["_i64Add"] = _i64Add;
    var _fabs = Math_abs;
    var _sqrt = Math_sqrt;
    function _embind_repr(v) {
      if (v === null) {
        return "null";
      }
      var t = typeof v;
      if (t === "object" || t === "array" || t === "function") {
        return v.toString();
      } else {
        return "" + v;
      }
    }
    function integerReadValueFromPointer(name, shift, signed) {
      switch (shift) {
        case 0:
          return signed ? function readS8FromPointer(pointer) {
            return HEAP8[pointer];
          } : function readU8FromPointer(pointer) {
            return HEAPU8[pointer];
          };
        case 1:
          return signed ? function readS16FromPointer(pointer) {
            return HEAP16[pointer >> 1];
          } : function readU16FromPointer(pointer) {
            return HEAPU16[pointer >> 1];
          };
        case 2:
          return signed ? function readS32FromPointer(pointer) {
            return HEAP32[pointer >> 2];
          } : function readU32FromPointer(pointer) {
            return HEAPU32[pointer >> 2];
          };
        default:
          throw new TypeError("Unknown integer type: " + name);
      }
    }
    function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
      name = readLatin1String(name);
      if (maxRange === -1) {
        maxRange = 4294967295;
      }
      var shift = getShiftFromSize(size);
      var fromWireType = function(value) {
        return value;
      };
      if (minRange === 0) {
        var bitshift = 32 - 8 * size;
        fromWireType = function(value) {
          return value << bitshift >>> bitshift;
        };
      }
      registerType(primitiveType, { name, fromWireType, toWireType: function(destructors, value) {
        if (typeof value !== "number" && typeof value !== "boolean") {
          throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
        }
        if (value < minRange || value > maxRange) {
          throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ", " + maxRange + "]!");
        }
        return value | 0;
      }, argPackAdvance: 8, readValueFromPointer: integerReadValueFromPointer(name, shift, minRange !== 0), destructorFunction: null });
    }
    var emval_free_list = [];
    var emval_handle_array = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];
    function __emval_decref(handle) {
      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
        emval_handle_array[handle] = void 0;
        emval_free_list.push(handle);
      }
    }
    function count_emval_handles() {
      var count = 0;
      for (var i2 = 5; i2 < emval_handle_array.length; ++i2) {
        if (emval_handle_array[i2] !== void 0) {
          ++count;
        }
      }
      return count;
    }
    function get_first_emval() {
      for (var i2 = 5; i2 < emval_handle_array.length; ++i2) {
        if (emval_handle_array[i2] !== void 0) {
          return emval_handle_array[i2];
        }
      }
      return null;
    }
    function init_emval() {
      Module["count_emval_handles"] = count_emval_handles;
      Module["get_first_emval"] = get_first_emval;
    }
    function __emval_register(value) {
      switch (value) {
        case void 0:
          {
            return 1;
          }
          ;
        case null:
          {
            return 2;
          }
          ;
        case true:
          {
            return 3;
          }
          ;
        case false:
          {
            return 4;
          }
          ;
        default: {
          var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;
          emval_handle_array[handle] = { refcount: 1, value };
          return handle;
        }
      }
    }
    function __embind_register_emval(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, { name, fromWireType: function(handle) {
        var rv = emval_handle_array[handle].value;
        __emval_decref(handle);
        return rv;
      }, toWireType: function(destructors, value) {
        return __emval_register(value);
      }, argPackAdvance: 8, readValueFromPointer: simpleReadValueFromPointer, destructorFunction: null });
    }
    function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }
    var _sin = Math_sin;
    function ___setErrNo(value) {
      if (Module["___errno_location"])
        HEAP32[Module["___errno_location"]() >> 2] = value;
      return value;
    }
    var ERRNO_CODES = { EPERM: 1, ENOENT: 2, ESRCH: 3, EINTR: 4, EIO: 5, ENXIO: 6, E2BIG: 7, ENOEXEC: 8, EBADF: 9, ECHILD: 10, EAGAIN: 11, EWOULDBLOCK: 11, ENOMEM: 12, EACCES: 13, EFAULT: 14, ENOTBLK: 15, EBUSY: 16, EEXIST: 17, EXDEV: 18, ENODEV: 19, ENOTDIR: 20, EISDIR: 21, EINVAL: 22, ENFILE: 23, EMFILE: 24, ENOTTY: 25, ETXTBSY: 26, EFBIG: 27, ENOSPC: 28, ESPIPE: 29, EROFS: 30, EMLINK: 31, EPIPE: 32, EDOM: 33, ERANGE: 34, ENOMSG: 42, EIDRM: 43, ECHRNG: 44, EL2NSYNC: 45, EL3HLT: 46, EL3RST: 47, ELNRNG: 48, EUNATCH: 49, ENOCSI: 50, EL2HLT: 51, EDEADLK: 35, ENOLCK: 37, EBADE: 52, EBADR: 53, EXFULL: 54, ENOANO: 55, EBADRQC: 56, EBADSLT: 57, EDEADLOCK: 35, EBFONT: 59, ENOSTR: 60, ENODATA: 61, ETIME: 62, ENOSR: 63, ENONET: 64, ENOPKG: 65, EREMOTE: 66, ENOLINK: 67, EADV: 68, ESRMNT: 69, ECOMM: 70, EPROTO: 71, EMULTIHOP: 72, EDOTDOT: 73, EBADMSG: 74, ENOTUNIQ: 76, EBADFD: 77, EREMCHG: 78, ELIBACC: 79, ELIBBAD: 80, ELIBSCN: 81, ELIBMAX: 82, ELIBEXEC: 83, ENOSYS: 38, ENOTEMPTY: 39, ENAMETOOLONG: 36, ELOOP: 40, EOPNOTSUPP: 95, EPFNOSUPPORT: 96, ECONNRESET: 104, ENOBUFS: 105, EAFNOSUPPORT: 97, EPROTOTYPE: 91, ENOTSOCK: 88, ENOPROTOOPT: 92, ESHUTDOWN: 108, ECONNREFUSED: 111, EADDRINUSE: 98, ECONNABORTED: 103, ENETUNREACH: 101, ENETDOWN: 100, ETIMEDOUT: 110, EHOSTDOWN: 112, EHOSTUNREACH: 113, EINPROGRESS: 115, EALREADY: 114, EDESTADDRREQ: 89, EMSGSIZE: 90, EPROTONOSUPPORT: 93, ESOCKTNOSUPPORT: 94, EADDRNOTAVAIL: 99, ENETRESET: 102, EISCONN: 106, ENOTCONN: 107, ETOOMANYREFS: 109, EUSERS: 87, EDQUOT: 122, ESTALE: 116, ENOTSUP: 95, ENOMEDIUM: 123, EILSEQ: 84, EOVERFLOW: 75, ECANCELED: 125, ENOTRECOVERABLE: 131, EOWNERDEAD: 130, ESTRPIPE: 86 };
    function _sysconf(name) {
      switch (name) {
        case 30:
          return PAGE_SIZE;
        case 85:
          return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 79:
          return 0;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0:
          return 2097152;
        case 3:
          return 65536;
        case 28:
          return 32768;
        case 44:
          return 32767;
        case 75:
          return 16384;
        case 39:
          return 1e3;
        case 89:
          return 700;
        case 71:
          return 256;
        case 40:
          return 255;
        case 2:
          return 100;
        case 180:
          return 64;
        case 25:
          return 20;
        case 5:
          return 16;
        case 6:
          return 6;
        case 73:
          return 4;
        case 84: {
          if (typeof navigator === "object")
            return navigator["hardwareConcurrency"] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }
    Module["_bitshift64Lshr"] = _bitshift64Lshr;
    function __exit(status) {
      Module["exit"](status);
    }
    function _exit(status) {
      __exit(status);
    }
    var _llvm_ctlz_i32 = true;
    function floatReadValueFromPointer(name, shift) {
      switch (shift) {
        case 2:
          return function(pointer) {
            return this["fromWireType"](HEAPF32[pointer >> 2]);
          };
        case 3:
          return function(pointer) {
            return this["fromWireType"](HEAPF64[pointer >> 3]);
          };
        default:
          throw new TypeError("Unknown float type: " + name);
      }
    }
    function __embind_register_float(rawType, name, size) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
      registerType(rawType, { name, fromWireType: function(value) {
        return value;
      }, toWireType: function(destructors, value) {
        if (typeof value !== "number" && typeof value !== "boolean") {
          throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
        }
        return value;
      }, argPackAdvance: 8, readValueFromPointer: floatReadValueFromPointer(name, shift), destructorFunction: null });
    }
    var _BDtoIHigh = true;
    function _pthread_cleanup_push(routine, arg2) {
      __ATEXIT__.push(function() {
        Runtime.dynCall("vi", routine, [arg2]);
      });
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }
    function new_(constructor, argumentList) {
      if (!(constructor instanceof Function)) {
        throw new TypeError("new_ called with constructor type " + typeof constructor + " which is not a function");
      }
      var dummy = createNamedFunction(constructor.name || "unknownFunctionName", function() {
      });
      dummy.prototype = constructor.prototype;
      var obj = new dummy();
      var r = constructor.apply(obj, argumentList);
      return r instanceof Object ? r : obj;
    }
    function runDestructors(destructors) {
      while (destructors.length) {
        var ptr = destructors.pop();
        var del = destructors.pop();
        del(ptr);
      }
    }
    function craftInvokerFunction(humanName, argTypes2, classType, cppInvokerFunc, cppTargetFunc) {
      var argCount = argTypes2.length;
      if (argCount < 2) {
        throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
      }
      var isClassMethodFunc = argTypes2[1] !== null && classType !== null;
      var argsList = "";
      var argsListWired = "";
      for (var i2 = 0; i2 < argCount - 2; ++i2) {
        argsList += (i2 !== 0 ? ", " : "") + "arg" + i2;
        argsListWired += (i2 !== 0 ? ", " : "") + "arg" + i2 + "Wired";
      }
      var invokerFnBody = "return function " + makeLegalFunctionName(humanName) + "(" + argsList + ") {\nif (arguments.length !== " + (argCount - 2) + ") {\nthrowBindingError('function " + humanName + " called with ' + arguments.length + ' arguments, expected " + (argCount - 2) + " args!');\n}\n";
      var needsDestructorStack = false;
      for (var i2 = 1; i2 < argTypes2.length; ++i2) {
        if (argTypes2[i2] !== null && argTypes2[i2].destructorFunction === void 0) {
          needsDestructorStack = true;
          break;
        }
      }
      if (needsDestructorStack) {
        invokerFnBody += "var destructors = [];\n";
      }
      var dtorStack = needsDestructorStack ? "destructors" : "null";
      var args1 = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"];
      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes2[0], argTypes2[1]];
      if (isClassMethodFunc) {
        invokerFnBody += "var thisWired = classParam.toWireType(" + dtorStack + ", this);\n";
      }
      for (var i2 = 0; i2 < argCount - 2; ++i2) {
        invokerFnBody += "var arg" + i2 + "Wired = argType" + i2 + ".toWireType(" + dtorStack + ", arg" + i2 + "); // " + argTypes2[i2 + 2].name + "\n";
        args1.push("argType" + i2);
        args2.push(argTypes2[i2 + 2]);
      }
      if (isClassMethodFunc) {
        argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
      }
      var returns = argTypes2[0].name !== "void";
      invokerFnBody += (returns ? "var rv = " : "") + "invoker(fn" + (argsListWired.length > 0 ? ", " : "") + argsListWired + ");\n";
      if (needsDestructorStack) {
        invokerFnBody += "runDestructors(destructors);\n";
      } else {
        for (var i2 = isClassMethodFunc ? 1 : 2; i2 < argTypes2.length; ++i2) {
          var paramName = i2 === 1 ? "thisWired" : "arg" + (i2 - 2) + "Wired";
          if (argTypes2[i2].destructorFunction !== null) {
            invokerFnBody += paramName + "_dtor(" + paramName + "); // " + argTypes2[i2].name + "\n";
            args1.push(paramName + "_dtor");
            args2.push(argTypes2[i2].destructorFunction);
          }
        }
      }
      if (returns) {
        invokerFnBody += "var ret = retType.fromWireType(rv);\nreturn ret;\n";
      } else {
      }
      invokerFnBody += "}\n";
      args1.push(invokerFnBody);
      var invokerFunction = new_(Function, args1).apply(null, args2);
      return invokerFunction;
    }
    function ensureOverloadTable(proto, methodName, humanName) {
      if (void 0 === proto[methodName].overloadTable) {
        var prevFunc = proto[methodName];
        proto[methodName] = function() {
          if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
            throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
          }
          return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
        };
        proto[methodName].overloadTable = [];
        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
      }
    }
    function exposePublicSymbol(name, value, numArguments) {
      if (Module.hasOwnProperty(name)) {
        if (void 0 === numArguments || void 0 !== Module[name].overloadTable && void 0 !== Module[name].overloadTable[numArguments]) {
          throwBindingError("Cannot register public name '" + name + "' twice");
        }
        ensureOverloadTable(Module, name, name);
        if (Module.hasOwnProperty(numArguments)) {
          throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
        }
        Module[name].overloadTable[numArguments] = value;
      } else {
        Module[name] = value;
        if (void 0 !== numArguments) {
          Module[name].numArguments = numArguments;
        }
      }
    }
    function heap32VectorToArray(count, firstElement) {
      var array = [];
      for (var i2 = 0; i2 < count; i2++) {
        array.push(HEAP32[(firstElement >> 2) + i2]);
      }
      return array;
    }
    function replacePublicSymbol(name, value, numArguments) {
      if (!Module.hasOwnProperty(name)) {
        throwInternalError("Replacing nonexistant public symbol");
      }
      if (void 0 !== Module[name].overloadTable && void 0 !== numArguments) {
        Module[name].overloadTable[numArguments] = value;
      } else {
        Module[name] = value;
      }
    }
    function requireFunction(signature, rawFunction) {
      signature = readLatin1String(signature);
      function makeDynCaller(dynCall) {
        var args = [];
        for (var i2 = 1; i2 < signature.length; ++i2) {
          args.push("a" + i2);
        }
        var name = "dynCall_" + signature + "_" + rawFunction;
        var body = "return function " + name + "(" + args.join(", ") + ") {\n";
        body += "    return dynCall(rawFunction" + (args.length ? ", " : "") + args.join(", ") + ");\n";
        body += "};\n";
        return new Function("dynCall", "rawFunction", body)(dynCall, rawFunction);
      }
      var fp;
      if (Module["FUNCTION_TABLE_" + signature] !== void 0) {
        fp = Module["FUNCTION_TABLE_" + signature][rawFunction];
      } else if (typeof FUNCTION_TABLE !== "undefined") {
        fp = FUNCTION_TABLE[rawFunction];
      } else {
        var dc = asm["dynCall_" + signature];
        if (dc === void 0) {
          dc = asm["dynCall_" + signature.replace(/f/g, "d")];
          if (dc === void 0) {
            throwBindingError("No dynCall invoker for signature: " + signature);
          }
        }
        fp = makeDynCaller(dc);
      }
      if (typeof fp !== "function") {
        throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
      }
      return fp;
    }
    var UnboundTypeError = void 0;
    function getTypeName(type2) {
      var ptr = ___getTypeName(type2);
      var rv = readLatin1String(ptr);
      _free(ptr);
      return rv;
    }
    function throwUnboundTypeError(message, types) {
      var unboundTypes = [];
      var seen = {};
      function visit(type2) {
        if (seen[type2]) {
          return;
        }
        if (registeredTypes[type2]) {
          return;
        }
        if (typeDependencies[type2]) {
          typeDependencies[type2].forEach(visit);
          return;
        }
        unboundTypes.push(type2);
        seen[type2] = true;
      }
      types.forEach(visit);
      throw new UnboundTypeError(message + ": " + unboundTypes.map(getTypeName).join([", "]));
    }
    function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {
      var argTypes2 = heap32VectorToArray(argCount, rawArgTypesAddr);
      name = readLatin1String(name);
      rawInvoker = requireFunction(signature, rawInvoker);
      exposePublicSymbol(name, function() {
        throwUnboundTypeError("Cannot call " + name + " due to unbound types", argTypes2);
      }, argCount - 1);
      whenDependentTypesAreResolved([], argTypes2, function(argTypes3) {
        var invokerArgsArray = [argTypes3[0], null].concat(argTypes3.slice(1));
        replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);
        return [];
      });
    }
    function __embind_register_constant(name, type2, value) {
      name = readLatin1String(name);
      whenDependentTypesAreResolved([], [type2], function(type3) {
        type3 = type3[0];
        Module[name] = type3["fromWireType"](value);
        return [];
      });
    }
    function _pthread_cleanup_pop() {
      assert(_pthread_cleanup_push.level == __ATEXIT__.length, "cannot pop if something else added meanwhile!");
      __ATEXIT__.pop();
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }
    var ERRNO_MESSAGES = { 0: "Success", 1: "Not super-user", 2: "No such file or directory", 3: "No such process", 4: "Interrupted system call", 5: "I/O error", 6: "No such device or address", 7: "Arg list too long", 8: "Exec format error", 9: "Bad file number", 10: "No children", 11: "No more processes", 12: "Not enough core", 13: "Permission denied", 14: "Bad address", 15: "Block device required", 16: "Mount device busy", 17: "File exists", 18: "Cross-device link", 19: "No such device", 20: "Not a directory", 21: "Is a directory", 22: "Invalid argument", 23: "Too many open files in system", 24: "Too many open files", 25: "Not a typewriter", 26: "Text file busy", 27: "File too large", 28: "No space left on device", 29: "Illegal seek", 30: "Read only file system", 31: "Too many links", 32: "Broken pipe", 33: "Math arg out of domain of func", 34: "Math result not representable", 35: "File locking deadlock error", 36: "File or path name too long", 37: "No record locks available", 38: "Function not implemented", 39: "Directory not empty", 40: "Too many symbolic links", 42: "No message of desired type", 43: "Identifier removed", 44: "Channel number out of range", 45: "Level 2 not synchronized", 46: "Level 3 halted", 47: "Level 3 reset", 48: "Link number out of range", 49: "Protocol driver not attached", 50: "No CSI structure available", 51: "Level 2 halted", 52: "Invalid exchange", 53: "Invalid request descriptor", 54: "Exchange full", 55: "No anode", 56: "Invalid request code", 57: "Invalid slot", 59: "Bad font file fmt", 60: "Device not a stream", 61: "No data (for no delay io)", 62: "Timer expired", 63: "Out of streams resources", 64: "Machine is not on the network", 65: "Package not installed", 66: "The object is remote", 67: "The link has been severed", 68: "Advertise error", 69: "Srmount error", 70: "Communication error on send", 71: "Protocol error", 72: "Multihop attempted", 73: "Cross mount point (not really error)", 74: "Trying to read unreadable message", 75: "Value too large for defined data type", 76: "Given log. name not unique", 77: "f.d. invalid for this operation", 78: "Remote address changed", 79: "Can   access a needed shared lib", 80: "Accessing a corrupted shared lib", 81: ".lib section in a.out corrupted", 82: "Attempting to link in too many libs", 83: "Attempting to exec a shared library", 84: "Illegal byte sequence", 86: "Streams pipe error", 87: "Too many users", 88: "Socket operation on non-socket", 89: "Destination address required", 90: "Message too long", 91: "Protocol wrong type for socket", 92: "Protocol not available", 93: "Unknown protocol", 94: "Socket type not supported", 95: "Not supported", 96: "Protocol family not supported", 97: "Address family not supported by protocol family", 98: "Address already in use", 99: "Address not available", 100: "Network interface is not configured", 101: "Network is unreachable", 102: "Connection reset by network", 103: "Connection aborted", 104: "Connection reset by peer", 105: "No buffer space available", 106: "Socket is already connected", 107: "Socket is not connected", 108: "Can't send after socket shutdown", 109: "Too many references", 110: "Connection timed out", 111: "Connection refused", 112: "Host is down", 113: "Host is unreachable", 114: "Socket already connected", 115: "Connection already in progress", 116: "Stale file handle", 122: "Quota exceeded", 123: "No medium (in tape drive)", 125: "Operation canceled", 130: "Previous owner died", 131: "State not recoverable" };
    var PATH = { splitPath: function(filename) {
      var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
      return splitPathRe.exec(filename).slice(1);
    }, normalizeArray: function(parts, allowAboveRoot) {
      var up = 0;
      for (var i2 = parts.length - 1; i2 >= 0; i2--) {
        var last = parts[i2];
        if (last === ".") {
          parts.splice(i2, 1);
        } else if (last === "..") {
          parts.splice(i2, 1);
          up++;
        } else if (up) {
          parts.splice(i2, 1);
          up--;
        }
      }
      if (allowAboveRoot) {
        for (; up--; up) {
          parts.unshift("..");
        }
      }
      return parts;
    }, normalize: function(path2) {
      var isAbsolute = path2.charAt(0) === "/", trailingSlash = path2.substr(-1) === "/";
      path2 = PATH.normalizeArray(path2.split("/").filter(function(p) {
        return !!p;
      }), !isAbsolute).join("/");
      if (!path2 && !isAbsolute) {
        path2 = ".";
      }
      if (path2 && trailingSlash) {
        path2 += "/";
      }
      return (isAbsolute ? "/" : "") + path2;
    }, dirname: function(path2) {
      var result = PATH.splitPath(path2), root = result[0], dir = result[1];
      if (!root && !dir) {
        return ".";
      }
      if (dir) {
        dir = dir.substr(0, dir.length - 1);
      }
      return root + dir;
    }, basename: function(path2) {
      if (path2 === "/")
        return "/";
      var lastSlash = path2.lastIndexOf("/");
      if (lastSlash === -1)
        return path2;
      return path2.substr(lastSlash + 1);
    }, extname: function(path2) {
      return PATH.splitPath(path2)[3];
    }, join: function() {
      var paths = Array.prototype.slice.call(arguments, 0);
      return PATH.normalize(paths.join("/"));
    }, join2: function(l, r) {
      return PATH.normalize(l + "/" + r);
    }, resolve: function() {
      var resolvedPath = "", resolvedAbsolute = false;
      for (var i2 = arguments.length - 1; i2 >= -1 && !resolvedAbsolute; i2--) {
        var path2 = i2 >= 0 ? arguments[i2] : FS.cwd();
        if (typeof path2 !== "string") {
          throw new TypeError("Arguments to path.resolve must be strings");
        } else if (!path2) {
          return "";
        }
        resolvedPath = path2 + "/" + resolvedPath;
        resolvedAbsolute = path2.charAt(0) === "/";
      }
      resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter(function(p) {
        return !!p;
      }), !resolvedAbsolute).join("/");
      return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
    }, relative: function(from, to) {
      from = PATH.resolve(from).substr(1);
      to = PATH.resolve(to).substr(1);
      function trim(arr) {
        var start = 0;
        for (; start < arr.length; start++) {
          if (arr[start] !== "")
            break;
        }
        var end = arr.length - 1;
        for (; end >= 0; end--) {
          if (arr[end] !== "")
            break;
        }
        if (start > end)
          return [];
        return arr.slice(start, end - start + 1);
      }
      var fromParts = trim(from.split("/"));
      var toParts = trim(to.split("/"));
      var length = Math.min(fromParts.length, toParts.length);
      var samePartsLength = length;
      for (var i2 = 0; i2 < length; i2++) {
        if (fromParts[i2] !== toParts[i2]) {
          samePartsLength = i2;
          break;
        }
      }
      var outputParts = [];
      for (var i2 = samePartsLength; i2 < fromParts.length; i2++) {
        outputParts.push("..");
      }
      outputParts = outputParts.concat(toParts.slice(samePartsLength));
      return outputParts.join("/");
    } };
    var TTY = { ttys: [], init: function() {
    }, shutdown: function() {
    }, register: function(dev, ops) {
      TTY.ttys[dev] = { input: [], output: [], ops };
      FS.registerDevice(dev, TTY.stream_ops);
    }, stream_ops: { open: function(stream) {
      var tty = TTY.ttys[stream.node.rdev];
      if (!tty) {
        throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
      }
      stream.tty = tty;
      stream.seekable = false;
    }, close: function(stream) {
      stream.tty.ops.flush(stream.tty);
    }, flush: function(stream) {
      stream.tty.ops.flush(stream.tty);
    }, read: function(stream, buffer2, offset, length, pos) {
      if (!stream.tty || !stream.tty.ops.get_char) {
        throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
      }
      var bytesRead = 0;
      for (var i2 = 0; i2 < length; i2++) {
        var result;
        try {
          result = stream.tty.ops.get_char(stream.tty);
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        }
        if (result === void 0 && bytesRead === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
        }
        if (result === null || result === void 0)
          break;
        bytesRead++;
        buffer2[offset + i2] = result;
      }
      if (bytesRead) {
        stream.node.timestamp = Date.now();
      }
      return bytesRead;
    }, write: function(stream, buffer2, offset, length, pos) {
      if (!stream.tty || !stream.tty.ops.put_char) {
        throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
      }
      for (var i2 = 0; i2 < length; i2++) {
        try {
          stream.tty.ops.put_char(stream.tty, buffer2[offset + i2]);
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        }
      }
      if (length) {
        stream.node.timestamp = Date.now();
      }
      return i2;
    } }, default_tty_ops: { get_char: function(tty) {
      if (!tty.input.length) {
        var result = null;
        if (ENVIRONMENT_IS_NODE) {
          var BUFSIZE = 256;
          var buf = new Buffer(BUFSIZE);
          var bytesRead = 0;
          var fd = process.stdin.fd;
          var usingDevice = false;
          try {
            fd = fs.openSync("/dev/stdin", "r");
            usingDevice = true;
          } catch (e) {
          }
          bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
          if (usingDevice) {
            fs.closeSync(fd);
          }
          if (bytesRead > 0) {
            result = buf.slice(0, bytesRead).toString("utf-8");
          } else {
            result = null;
          }
        } else if (typeof window != "undefined" && typeof window.prompt == "function") {
          result = window.prompt("Input: ");
          if (result !== null) {
            result += "\n";
          }
        } else if (typeof readline == "function") {
          result = readline();
          if (result !== null) {
            result += "\n";
          }
        }
        if (!result) {
          return null;
        }
        tty.input = intArrayFromString(result, true);
      }
      return tty.input.shift();
    }, put_char: function(tty, val) {
      if (val === null || val === 10) {
        Module["print"](UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      } else {
        if (val != 0)
          tty.output.push(val);
      }
    }, flush: function(tty) {
      if (tty.output && tty.output.length > 0) {
        Module["print"](UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      }
    } }, default_tty1_ops: { put_char: function(tty, val) {
      if (val === null || val === 10) {
        Module["printErr"](UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      } else {
        if (val != 0)
          tty.output.push(val);
      }
    }, flush: function(tty) {
      if (tty.output && tty.output.length > 0) {
        Module["printErr"](UTF8ArrayToString(tty.output, 0));
        tty.output = [];
      }
    } } };
    var MEMFS = { ops_table: null, mount: function(mount) {
      return MEMFS.createNode(null, "/", 16384 | 511, 0);
    }, createNode: function(parent, name, mode, dev) {
      if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      if (!MEMFS.ops_table) {
        MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };
      }
      var node2 = FS.createNode(parent, name, mode, dev);
      if (FS.isDir(node2.mode)) {
        node2.node_ops = MEMFS.ops_table.dir.node;
        node2.stream_ops = MEMFS.ops_table.dir.stream;
        node2.contents = {};
      } else if (FS.isFile(node2.mode)) {
        node2.node_ops = MEMFS.ops_table.file.node;
        node2.stream_ops = MEMFS.ops_table.file.stream;
        node2.usedBytes = 0;
        node2.contents = null;
      } else if (FS.isLink(node2.mode)) {
        node2.node_ops = MEMFS.ops_table.link.node;
        node2.stream_ops = MEMFS.ops_table.link.stream;
      } else if (FS.isChrdev(node2.mode)) {
        node2.node_ops = MEMFS.ops_table.chrdev.node;
        node2.stream_ops = MEMFS.ops_table.chrdev.stream;
      }
      node2.timestamp = Date.now();
      if (parent) {
        parent.contents[name] = node2;
      }
      return node2;
    }, getFileDataAsRegularArray: function(node2) {
      if (node2.contents && node2.contents.subarray) {
        var arr = [];
        for (var i2 = 0; i2 < node2.usedBytes; ++i2)
          arr.push(node2.contents[i2]);
        return arr;
      }
      return node2.contents;
    }, getFileDataAsTypedArray: function(node2) {
      if (!node2.contents)
        return new Uint8Array();
      if (node2.contents.subarray)
        return node2.contents.subarray(0, node2.usedBytes);
      return new Uint8Array(node2.contents);
    }, expandFileStorage: function(node2, newCapacity) {
      if (node2.contents && node2.contents.subarray && newCapacity > node2.contents.length) {
        node2.contents = MEMFS.getFileDataAsRegularArray(node2);
        node2.usedBytes = node2.contents.length;
      }
      if (!node2.contents || node2.contents.subarray) {
        var prevCapacity = node2.contents ? node2.contents.buffer.byteLength : 0;
        if (prevCapacity >= newCapacity)
          return;
        var CAPACITY_DOUBLING_MAX = 1024 * 1024;
        newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);
        if (prevCapacity != 0)
          newCapacity = Math.max(newCapacity, 256);
        var oldContents = node2.contents;
        node2.contents = new Uint8Array(newCapacity);
        if (node2.usedBytes > 0)
          node2.contents.set(oldContents.subarray(0, node2.usedBytes), 0);
        return;
      }
      if (!node2.contents && newCapacity > 0)
        node2.contents = [];
      while (node2.contents.length < newCapacity)
        node2.contents.push(0);
    }, resizeFileStorage: function(node2, newSize) {
      if (node2.usedBytes == newSize)
        return;
      if (newSize == 0) {
        node2.contents = null;
        node2.usedBytes = 0;
        return;
      }
      if (!node2.contents || node2.contents.subarray) {
        var oldContents = node2.contents;
        node2.contents = new Uint8Array(new ArrayBuffer(newSize));
        if (oldContents) {
          node2.contents.set(oldContents.subarray(0, Math.min(newSize, node2.usedBytes)));
        }
        node2.usedBytes = newSize;
        return;
      }
      if (!node2.contents)
        node2.contents = [];
      if (node2.contents.length > newSize)
        node2.contents.length = newSize;
      else
        while (node2.contents.length < newSize)
          node2.contents.push(0);
      node2.usedBytes = newSize;
    }, node_ops: { getattr: function(node2) {
      var attr = {};
      attr.dev = FS.isChrdev(node2.mode) ? node2.id : 1;
      attr.ino = node2.id;
      attr.mode = node2.mode;
      attr.nlink = 1;
      attr.uid = 0;
      attr.gid = 0;
      attr.rdev = node2.rdev;
      if (FS.isDir(node2.mode)) {
        attr.size = 4096;
      } else if (FS.isFile(node2.mode)) {
        attr.size = node2.usedBytes;
      } else if (FS.isLink(node2.mode)) {
        attr.size = node2.link.length;
      } else {
        attr.size = 0;
      }
      attr.atime = new Date(node2.timestamp);
      attr.mtime = new Date(node2.timestamp);
      attr.ctime = new Date(node2.timestamp);
      attr.blksize = 4096;
      attr.blocks = Math.ceil(attr.size / attr.blksize);
      return attr;
    }, setattr: function(node2, attr) {
      if (attr.mode !== void 0) {
        node2.mode = attr.mode;
      }
      if (attr.timestamp !== void 0) {
        node2.timestamp = attr.timestamp;
      }
      if (attr.size !== void 0) {
        MEMFS.resizeFileStorage(node2, attr.size);
      }
    }, lookup: function(parent, name) {
      throw FS.genericErrors[ERRNO_CODES.ENOENT];
    }, mknod: function(parent, name, mode, dev) {
      return MEMFS.createNode(parent, name, mode, dev);
    }, rename: function(old_node, new_dir, new_name) {
      if (FS.isDir(old_node.mode)) {
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
        }
        if (new_node) {
          for (var i2 in new_node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
        }
      }
      delete old_node.parent.contents[old_node.name];
      old_node.name = new_name;
      new_dir.contents[new_name] = old_node;
      old_node.parent = new_dir;
    }, unlink: function(parent, name) {
      delete parent.contents[name];
    }, rmdir: function(parent, name) {
      var node2 = FS.lookupNode(parent, name);
      for (var i2 in node2.contents) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
      }
      delete parent.contents[name];
    }, readdir: function(node2) {
      var entries = [".", ".."];
      for (var key2 in node2.contents) {
        if (!node2.contents.hasOwnProperty(key2)) {
          continue;
        }
        entries.push(key2);
      }
      return entries;
    }, symlink: function(parent, newname, oldpath) {
      var node2 = MEMFS.createNode(parent, newname, 511 | 40960, 0);
      node2.link = oldpath;
      return node2;
    }, readlink: function(node2) {
      if (!FS.isLink(node2.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      return node2.link;
    } }, stream_ops: { read: function(stream, buffer2, offset, length, position) {
      var contents = stream.node.contents;
      if (position >= stream.node.usedBytes)
        return 0;
      var size = Math.min(stream.node.usedBytes - position, length);
      assert(size >= 0);
      if (size > 8 && contents.subarray) {
        buffer2.set(contents.subarray(position, position + size), offset);
      } else {
        for (var i2 = 0; i2 < size; i2++)
          buffer2[offset + i2] = contents[position + i2];
      }
      return size;
    }, write: function(stream, buffer2, offset, length, position, canOwn) {
      if (!length)
        return 0;
      var node2 = stream.node;
      node2.timestamp = Date.now();
      if (buffer2.subarray && (!node2.contents || node2.contents.subarray)) {
        if (canOwn) {
          node2.contents = buffer2.subarray(offset, offset + length);
          node2.usedBytes = length;
          return length;
        } else if (node2.usedBytes === 0 && position === 0) {
          node2.contents = new Uint8Array(buffer2.subarray(offset, offset + length));
          node2.usedBytes = length;
          return length;
        } else if (position + length <= node2.usedBytes) {
          node2.contents.set(buffer2.subarray(offset, offset + length), position);
          return length;
        }
      }
      MEMFS.expandFileStorage(node2, position + length);
      if (node2.contents.subarray && buffer2.subarray)
        node2.contents.set(buffer2.subarray(offset, offset + length), position);
      else {
        for (var i2 = 0; i2 < length; i2++) {
          node2.contents[position + i2] = buffer2[offset + i2];
        }
      }
      node2.usedBytes = Math.max(node2.usedBytes, position + length);
      return length;
    }, llseek: function(stream, offset, whence) {
      var position = offset;
      if (whence === 1) {
        position += stream.position;
      } else if (whence === 2) {
        if (FS.isFile(stream.node.mode)) {
          position += stream.node.usedBytes;
        }
      }
      if (position < 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      return position;
    }, allocate: function(stream, offset, length) {
      MEMFS.expandFileStorage(stream.node, offset + length);
      stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
    }, mmap: function(stream, buffer2, offset, length, position, prot, flags) {
      if (!FS.isFile(stream.node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
      }
      var ptr;
      var allocated;
      var contents = stream.node.contents;
      if (!(flags & 2) && (contents.buffer === buffer2 || contents.buffer === buffer2.buffer)) {
        allocated = false;
        ptr = contents.byteOffset;
      } else {
        if (position > 0 || position + length < stream.node.usedBytes) {
          if (contents.subarray) {
            contents = contents.subarray(position, position + length);
          } else {
            contents = Array.prototype.slice.call(contents, position, position + length);
          }
        }
        allocated = true;
        ptr = _malloc(length);
        if (!ptr) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
        }
        buffer2.set(contents, ptr);
      }
      return { ptr, allocated };
    }, msync: function(stream, buffer2, offset, length, mmapFlags) {
      if (!FS.isFile(stream.node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
      }
      if (mmapFlags & 2) {
        return 0;
      }
      var bytesWritten = MEMFS.stream_ops.write(stream, buffer2, 0, length, offset, false);
      return 0;
    } } };
    var IDBFS = { dbs: {}, indexedDB: function() {
      if (typeof indexedDB !== "undefined")
        return indexedDB;
      var ret = null;
      if (typeof window === "object")
        ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      assert(ret, "IDBFS used, but indexedDB not supported");
      return ret;
    }, DB_VERSION: 21, DB_STORE_NAME: "FILE_DATA", mount: function(mount) {
      return MEMFS.mount.apply(null, arguments);
    }, syncfs: function(mount, populate, callback) {
      IDBFS.getLocalSet(mount, function(err, local) {
        if (err)
          return callback(err);
        IDBFS.getRemoteSet(mount, function(err2, remote) {
          if (err2)
            return callback(err2);
          var src = populate ? remote : local;
          var dst = populate ? local : remote;
          IDBFS.reconcile(src, dst, callback);
        });
      });
    }, getDB: function(name, callback) {
      var db = IDBFS.dbs[name];
      if (db) {
        return callback(null, db);
      }
      var req;
      try {
        req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
      } catch (e) {
        return callback(e);
      }
      req.onupgradeneeded = function(e) {
        var db2 = e.target.result;
        var transaction = e.target.transaction;
        var fileStore;
        if (db2.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
          fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
        } else {
          fileStore = db2.createObjectStore(IDBFS.DB_STORE_NAME);
        }
        if (!fileStore.indexNames.contains("timestamp")) {
          fileStore.createIndex("timestamp", "timestamp", { unique: false });
        }
      };
      req.onsuccess = function() {
        db = req.result;
        IDBFS.dbs[name] = db;
        callback(null, db);
      };
      req.onerror = function(e) {
        callback(this.error);
        e.preventDefault();
      };
    }, getLocalSet: function(mount, callback) {
      var entries = {};
      function isRealDir(p) {
        return p !== "." && p !== "..";
      }
      function toAbsolute(root) {
        return function(p) {
          return PATH.join2(root, p);
        };
      }
      var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
      while (check.length) {
        var path2 = check.pop();
        var stat;
        try {
          stat = FS.stat(path2);
        } catch (e) {
          return callback(e);
        }
        if (FS.isDir(stat.mode)) {
          check.push.apply(check, FS.readdir(path2).filter(isRealDir).map(toAbsolute(path2)));
        }
        entries[path2] = { timestamp: stat.mtime };
      }
      return callback(null, { type: "local", entries });
    }, getRemoteSet: function(mount, callback) {
      var entries = {};
      IDBFS.getDB(mount.mountpoint, function(err, db) {
        if (err)
          return callback(err);
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], "readonly");
        transaction.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
        var index = store.index("timestamp");
        index.openKeyCursor().onsuccess = function(event) {
          var cursor = event.target.result;
          if (!cursor) {
            return callback(null, { type: "remote", db, entries });
          }
          entries[cursor.primaryKey] = { timestamp: cursor.key };
          cursor.continue();
        };
      });
    }, loadLocalEntry: function(path2, callback) {
      var stat, node2;
      try {
        var lookup = FS.lookupPath(path2);
        node2 = lookup.node;
        stat = FS.stat(path2);
      } catch (e) {
        return callback(e);
      }
      if (FS.isDir(stat.mode)) {
        return callback(null, { timestamp: stat.mtime, mode: stat.mode });
      } else if (FS.isFile(stat.mode)) {
        node2.contents = MEMFS.getFileDataAsTypedArray(node2);
        return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node2.contents });
      } else {
        return callback(new Error("node type not supported"));
      }
    }, storeLocalEntry: function(path2, entry, callback) {
      try {
        if (FS.isDir(entry.mode)) {
          FS.mkdir(path2, entry.mode);
        } else if (FS.isFile(entry.mode)) {
          FS.writeFile(path2, entry.contents, { encoding: "binary", canOwn: true });
        } else {
          return callback(new Error("node type not supported"));
        }
        FS.chmod(path2, entry.mode);
        FS.utime(path2, entry.timestamp, entry.timestamp);
      } catch (e) {
        return callback(e);
      }
      callback(null);
    }, removeLocalEntry: function(path2, callback) {
      try {
        var lookup = FS.lookupPath(path2);
        var stat = FS.stat(path2);
        if (FS.isDir(stat.mode)) {
          FS.rmdir(path2);
        } else if (FS.isFile(stat.mode)) {
          FS.unlink(path2);
        }
      } catch (e) {
        return callback(e);
      }
      callback(null);
    }, loadRemoteEntry: function(store, path2, callback) {
      var req = store.get(path2);
      req.onsuccess = function(event) {
        callback(null, event.target.result);
      };
      req.onerror = function(e) {
        callback(this.error);
        e.preventDefault();
      };
    }, storeRemoteEntry: function(store, path2, entry, callback) {
      var req = store.put(entry, path2);
      req.onsuccess = function() {
        callback(null);
      };
      req.onerror = function(e) {
        callback(this.error);
        e.preventDefault();
      };
    }, removeRemoteEntry: function(store, path2, callback) {
      var req = store.delete(path2);
      req.onsuccess = function() {
        callback(null);
      };
      req.onerror = function(e) {
        callback(this.error);
        e.preventDefault();
      };
    }, reconcile: function(src, dst, callback) {
      var total = 0;
      var create = [];
      Object.keys(src.entries).forEach(function(key2) {
        var e = src.entries[key2];
        var e2 = dst.entries[key2];
        if (!e2 || e.timestamp > e2.timestamp) {
          create.push(key2);
          total++;
        }
      });
      var remove = [];
      Object.keys(dst.entries).forEach(function(key2) {
        var e = dst.entries[key2];
        var e2 = src.entries[key2];
        if (!e2) {
          remove.push(key2);
          total++;
        }
      });
      if (!total) {
        return callback(null);
      }
      var errored = false;
      var completed = 0;
      var db = src.type === "remote" ? src.db : dst.db;
      var transaction = db.transaction([IDBFS.DB_STORE_NAME], "readwrite");
      var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
      function done(err) {
        if (err) {
          if (!done.errored) {
            done.errored = true;
            return callback(err);
          }
          return;
        }
        if (++completed >= total) {
          return callback(null);
        }
      }
      transaction.onerror = function(e) {
        done(this.error);
        e.preventDefault();
      };
      create.sort().forEach(function(path2) {
        if (dst.type === "local") {
          IDBFS.loadRemoteEntry(store, path2, function(err, entry) {
            if (err)
              return done(err);
            IDBFS.storeLocalEntry(path2, entry, done);
          });
        } else {
          IDBFS.loadLocalEntry(path2, function(err, entry) {
            if (err)
              return done(err);
            IDBFS.storeRemoteEntry(store, path2, entry, done);
          });
        }
      });
      remove.sort().reverse().forEach(function(path2) {
        if (dst.type === "local") {
          IDBFS.removeLocalEntry(path2, done);
        } else {
          IDBFS.removeRemoteEntry(store, path2, done);
        }
      });
    } };
    var NODEFS = { isWindows: false, staticInit: function() {
      NODEFS.isWindows = !!process.platform.match(/^win/);
    }, mount: function(mount) {
      assert(ENVIRONMENT_IS_NODE);
      return NODEFS.createNode(null, "/", NODEFS.getMode(mount.opts.root), 0);
    }, createNode: function(parent, name, mode, dev) {
      if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      var node2 = FS.createNode(parent, name, mode);
      node2.node_ops = NODEFS.node_ops;
      node2.stream_ops = NODEFS.stream_ops;
      return node2;
    }, getMode: function(path2) {
      var stat;
      try {
        stat = fs.lstatSync(path2);
        if (NODEFS.isWindows) {
          stat.mode = stat.mode | (stat.mode & 146) >> 1;
        }
      } catch (e) {
        if (!e.code)
          throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
      return stat.mode;
    }, realPath: function(node2) {
      var parts = [];
      while (node2.parent !== node2) {
        parts.push(node2.name);
        node2 = node2.parent;
      }
      parts.push(node2.mount.opts.root);
      parts.reverse();
      return PATH.join.apply(null, parts);
    }, flagsToPermissionStringMap: { 0: "r", 1: "r+", 2: "r+", 64: "r", 65: "r+", 66: "r+", 129: "rx+", 193: "rx+", 514: "w+", 577: "w", 578: "w+", 705: "wx", 706: "wx+", 1024: "a", 1025: "a", 1026: "a+", 1089: "a", 1090: "a+", 1153: "ax", 1154: "ax+", 1217: "ax", 1218: "ax+", 4096: "rs", 4098: "rs+" }, flagsToPermissionString: function(flags) {
      flags &= ~32768;
      if (flags in NODEFS.flagsToPermissionStringMap) {
        return NODEFS.flagsToPermissionStringMap[flags];
      } else {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
    }, node_ops: { getattr: function(node2) {
      var path2 = NODEFS.realPath(node2);
      var stat;
      try {
        stat = fs.lstatSync(path2);
      } catch (e) {
        if (!e.code)
          throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
      if (NODEFS.isWindows && !stat.blksize) {
        stat.blksize = 4096;
      }
      if (NODEFS.isWindows && !stat.blocks) {
        stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;
      }
      return { dev: stat.dev, ino: stat.ino, mode: stat.mode, nlink: stat.nlink, uid: stat.uid, gid: stat.gid, rdev: stat.rdev, size: stat.size, atime: stat.atime, mtime: stat.mtime, ctime: stat.ctime, blksize: stat.blksize, blocks: stat.blocks };
    }, setattr: function(node2, attr) {
      var path2 = NODEFS.realPath(node2);
      try {
        if (attr.mode !== void 0) {
          fs.chmodSync(path2, attr.mode);
          node2.mode = attr.mode;
        }
        if (attr.timestamp !== void 0) {
          var date = new Date(attr.timestamp);
          fs.utimesSync(path2, date, date);
        }
        if (attr.size !== void 0) {
          fs.truncateSync(path2, attr.size);
        }
      } catch (e) {
        if (!e.code)
          throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }, lookup: function(parent, name) {
      var path2 = PATH.join2(NODEFS.realPath(parent), name);
      var mode = NODEFS.getMode(path2);
      return NODEFS.createNode(parent, name, mode);
    }, mknod: function(parent, name, mode, dev) {
      var node2 = NODEFS.createNode(parent, name, mode, dev);
      var path2 = NODEFS.realPath(node2);
      try {
        if (FS.isDir(node2.mode)) {
          fs.mkdirSync(path2, node2.mode);
        } else {
          fs.writeFileSync(path2, "", { mode: node2.mode });
        }
      } catch (e) {
        if (!e.code)
          throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
      return node2;
    }, rename: function(oldNode, newDir, newName) {
      var oldPath = NODEFS.realPath(oldNode);
      var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
      try {
        fs.renameSync(oldPath, newPath);
      } catch (e) {
        if (!e.code)
          throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }, unlink: function(parent, name) {
      var path2 = PATH.join2(NODEFS.realPath(parent), name);
      try {
        fs.unlinkSync(path2);
      } catch (e) {
        if (!e.code)
          throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }, rmdir: function(parent, name) {
      var path2 = PATH.join2(NODEFS.realPath(parent), name);
      try {
        fs.rmdirSync(path2);
      } catch (e) {
        if (!e.code)
          throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }, readdir: function(node2) {
      var path2 = NODEFS.realPath(node2);
      try {
        return fs.readdirSync(path2);
      } catch (e) {
        if (!e.code)
          throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }, symlink: function(parent, newName, oldPath) {
      var newPath = PATH.join2(NODEFS.realPath(parent), newName);
      try {
        fs.symlinkSync(oldPath, newPath);
      } catch (e) {
        if (!e.code)
          throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }, readlink: function(node2) {
      var path2 = NODEFS.realPath(node2);
      try {
        path2 = fs.readlinkSync(path2);
        path2 = NODEJS_PATH.relative(NODEJS_PATH.resolve(node2.mount.opts.root), path2);
        return path2;
      } catch (e) {
        if (!e.code)
          throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    } }, stream_ops: { open: function(stream) {
      var path2 = NODEFS.realPath(stream.node);
      try {
        if (FS.isFile(stream.node.mode)) {
          stream.nfd = fs.openSync(path2, NODEFS.flagsToPermissionString(stream.flags));
        }
      } catch (e) {
        if (!e.code)
          throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }, close: function(stream) {
      try {
        if (FS.isFile(stream.node.mode) && stream.nfd) {
          fs.closeSync(stream.nfd);
        }
      } catch (e) {
        if (!e.code)
          throw e;
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
    }, read: function(stream, buffer2, offset, length, position) {
      if (length === 0)
        return 0;
      var nbuffer = new Buffer(length);
      var res;
      try {
        res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
      } catch (e) {
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
      if (res > 0) {
        for (var i2 = 0; i2 < res; i2++) {
          buffer2[offset + i2] = nbuffer[i2];
        }
      }
      return res;
    }, write: function(stream, buffer2, offset, length, position) {
      var nbuffer = new Buffer(buffer2.subarray(offset, offset + length));
      var res;
      try {
        res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
      } catch (e) {
        throw new FS.ErrnoError(ERRNO_CODES[e.code]);
      }
      return res;
    }, llseek: function(stream, offset, whence) {
      var position = offset;
      if (whence === 1) {
        position += stream.position;
      } else if (whence === 2) {
        if (FS.isFile(stream.node.mode)) {
          try {
            var stat = fs.fstatSync(stream.nfd);
            position += stat.size;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }
      }
      if (position < 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      return position;
    } } };
    var WORKERFS = { DIR_MODE: 16895, FILE_MODE: 33279, reader: null, mount: function(mount) {
      assert(ENVIRONMENT_IS_WORKER);
      if (!WORKERFS.reader)
        WORKERFS.reader = new FileReaderSync();
      var root = WORKERFS.createNode(null, "/", WORKERFS.DIR_MODE, 0);
      var createdParents = {};
      function ensureParent(path2) {
        var parts = path2.split("/");
        var parent = root;
        for (var i2 = 0; i2 < parts.length - 1; i2++) {
          var curr = parts.slice(0, i2 + 1).join("/");
          if (!createdParents[curr]) {
            createdParents[curr] = WORKERFS.createNode(parent, curr, WORKERFS.DIR_MODE, 0);
          }
          parent = createdParents[curr];
        }
        return parent;
      }
      function base(path2) {
        var parts = path2.split("/");
        return parts[parts.length - 1];
      }
      Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
        WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
      });
      (mount.opts["blobs"] || []).forEach(function(obj) {
        WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
      });
      (mount.opts["packages"] || []).forEach(function(pack) {
        pack["metadata"].files.forEach(function(file) {
          var name = file.filename.substr(1);
          WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack["blob"].slice(file.start, file.end));
        });
      });
      return root;
    }, createNode: function(parent, name, mode, dev, contents, mtime) {
      var node2 = FS.createNode(parent, name, mode);
      node2.mode = mode;
      node2.node_ops = WORKERFS.node_ops;
      node2.stream_ops = WORKERFS.stream_ops;
      node2.timestamp = (mtime || /* @__PURE__ */ new Date()).getTime();
      assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
      if (mode === WORKERFS.FILE_MODE) {
        node2.size = contents.size;
        node2.contents = contents;
      } else {
        node2.size = 4096;
        node2.contents = {};
      }
      if (parent) {
        parent.contents[name] = node2;
      }
      return node2;
    }, node_ops: { getattr: function(node2) {
      return { dev: 1, ino: void 0, mode: node2.mode, nlink: 1, uid: 0, gid: 0, rdev: void 0, size: node2.size, atime: new Date(node2.timestamp), mtime: new Date(node2.timestamp), ctime: new Date(node2.timestamp), blksize: 4096, blocks: Math.ceil(node2.size / 4096) };
    }, setattr: function(node2, attr) {
      if (attr.mode !== void 0) {
        node2.mode = attr.mode;
      }
      if (attr.timestamp !== void 0) {
        node2.timestamp = attr.timestamp;
      }
    }, lookup: function(parent, name) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
    }, mknod: function(parent, name, mode, dev) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }, rename: function(oldNode, newDir, newName) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }, unlink: function(parent, name) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }, rmdir: function(parent, name) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }, readdir: function(node2) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }, symlink: function(parent, newName, oldPath) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    }, readlink: function(node2) {
      throw new FS.ErrnoError(ERRNO_CODES.EPERM);
    } }, stream_ops: { read: function(stream, buffer2, offset, length, position) {
      if (position >= stream.node.size)
        return 0;
      var chunk = stream.node.contents.slice(position, position + length);
      var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
      buffer2.set(new Uint8Array(ab), offset);
      return chunk.size;
    }, write: function(stream, buffer2, offset, length, position) {
      throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }, llseek: function(stream, offset, whence) {
      var position = offset;
      if (whence === 1) {
        position += stream.position;
      } else if (whence === 2) {
        if (FS.isFile(stream.node.mode)) {
          position += stream.node.size;
        }
      }
      if (position < 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      return position;
    } } };
    var _stdin = allocate(1, "i32*", ALLOC_STATIC);
    var _stdout = allocate(1, "i32*", ALLOC_STATIC);
    var _stderr = allocate(1, "i32*", ALLOC_STATIC);
    var FS = { root: null, mounts: [], devices: [null], streams: [], nextInode: 1, nameTable: null, currentPath: "/", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, handleFSError: function(e) {
      if (!(e instanceof FS.ErrnoError))
        throw e + " : " + stackTrace();
      return ___setErrNo(e.errno);
    }, lookupPath: function(path2, opts) {
      path2 = PATH.resolve(FS.cwd(), path2);
      opts = opts || {};
      if (!path2)
        return { path: "", node: null };
      var defaults = { follow_mount: true, recurse_count: 0 };
      for (var key2 in defaults) {
        if (opts[key2] === void 0) {
          opts[key2] = defaults[key2];
        }
      }
      if (opts.recurse_count > 8) {
        throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
      }
      var parts = PATH.normalizeArray(path2.split("/").filter(function(p) {
        return !!p;
      }), false);
      var current = FS.root;
      var current_path = "/";
      for (var i2 = 0; i2 < parts.length; i2++) {
        var islast = i2 === parts.length - 1;
        if (islast && opts.parent) {
          break;
        }
        current = FS.lookupNode(current, parts[i2]);
        current_path = PATH.join2(current_path, parts[i2]);
        if (FS.isMountpoint(current)) {
          if (!islast || islast && opts.follow_mount) {
            current = current.mounted.root;
          }
        }
        if (!islast || opts.follow) {
          var count = 0;
          while (FS.isLink(current.mode)) {
            var link = FS.readlink(current_path);
            current_path = PATH.resolve(PATH.dirname(current_path), link);
            var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
            current = lookup.node;
            if (count++ > 40) {
              throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
            }
          }
        }
      }
      return { path: current_path, node: current };
    }, getPath: function(node2) {
      var path2;
      while (true) {
        if (FS.isRoot(node2)) {
          var mount = node2.mount.mountpoint;
          if (!path2)
            return mount;
          return mount[mount.length - 1] !== "/" ? mount + "/" + path2 : mount + path2;
        }
        path2 = path2 ? node2.name + "/" + path2 : node2.name;
        node2 = node2.parent;
      }
    }, hashName: function(parentid, name) {
      var hash = 0;
      for (var i2 = 0; i2 < name.length; i2++) {
        hash = (hash << 5) - hash + name.charCodeAt(i2) | 0;
      }
      return (parentid + hash >>> 0) % FS.nameTable.length;
    }, hashAddNode: function(node2) {
      var hash = FS.hashName(node2.parent.id, node2.name);
      node2.name_next = FS.nameTable[hash];
      FS.nameTable[hash] = node2;
    }, hashRemoveNode: function(node2) {
      var hash = FS.hashName(node2.parent.id, node2.name);
      if (FS.nameTable[hash] === node2) {
        FS.nameTable[hash] = node2.name_next;
      } else {
        var current = FS.nameTable[hash];
        while (current) {
          if (current.name_next === node2) {
            current.name_next = node2.name_next;
            break;
          }
          current = current.name_next;
        }
      }
    }, lookupNode: function(parent, name) {
      var err = FS.mayLookup(parent);
      if (err) {
        throw new FS.ErrnoError(err, parent);
      }
      var hash = FS.hashName(parent.id, name);
      for (var node2 = FS.nameTable[hash]; node2; node2 = node2.name_next) {
        var nodeName = node2.name;
        if (node2.parent.id === parent.id && nodeName === name) {
          return node2;
        }
      }
      return FS.lookup(parent, name);
    }, createNode: function(parent, name, mode, rdev) {
      if (!FS.FSNode) {
        FS.FSNode = function(parent2, name2, mode2, rdev2) {
          if (!parent2) {
            parent2 = this;
          }
          this.parent = parent2;
          this.mount = parent2.mount;
          this.mounted = null;
          this.id = FS.nextInode++;
          this.name = name2;
          this.mode = mode2;
          this.node_ops = {};
          this.stream_ops = {};
          this.rdev = rdev2;
        };
        FS.FSNode.prototype = {};
        var readMode = 292 | 73;
        var writeMode = 146;
        Object.defineProperties(FS.FSNode.prototype, { read: { get: function() {
          return (this.mode & readMode) === readMode;
        }, set: function(val) {
          val ? this.mode |= readMode : this.mode &= ~readMode;
        } }, write: { get: function() {
          return (this.mode & writeMode) === writeMode;
        }, set: function(val) {
          val ? this.mode |= writeMode : this.mode &= ~writeMode;
        } }, isFolder: { get: function() {
          return FS.isDir(this.mode);
        } }, isDevice: { get: function() {
          return FS.isChrdev(this.mode);
        } } });
      }
      var node2 = new FS.FSNode(parent, name, mode, rdev);
      FS.hashAddNode(node2);
      return node2;
    }, destroyNode: function(node2) {
      FS.hashRemoveNode(node2);
    }, isRoot: function(node2) {
      return node2 === node2.parent;
    }, isMountpoint: function(node2) {
      return !!node2.mounted;
    }, isFile: function(mode) {
      return (mode & 61440) === 32768;
    }, isDir: function(mode) {
      return (mode & 61440) === 16384;
    }, isLink: function(mode) {
      return (mode & 61440) === 40960;
    }, isChrdev: function(mode) {
      return (mode & 61440) === 8192;
    }, isBlkdev: function(mode) {
      return (mode & 61440) === 24576;
    }, isFIFO: function(mode) {
      return (mode & 61440) === 4096;
    }, isSocket: function(mode) {
      return (mode & 49152) === 49152;
    }, flagModes: { r: 0, rs: 1052672, "r+": 2, w: 577, wx: 705, xw: 705, "w+": 578, "wx+": 706, "xw+": 706, a: 1089, ax: 1217, xa: 1217, "a+": 1090, "ax+": 1218, "xa+": 1218 }, modeStringToFlags: function(str) {
      var flags = FS.flagModes[str];
      if (typeof flags === "undefined") {
        throw new Error("Unknown file open mode: " + str);
      }
      return flags;
    }, flagsToPermissionString: function(flag) {
      var perms = ["r", "w", "rw"][flag & 3];
      if (flag & 512) {
        perms += "w";
      }
      return perms;
    }, nodePermissions: function(node2, perms) {
      if (FS.ignorePermissions) {
        return 0;
      }
      if (perms.indexOf("r") !== -1 && !(node2.mode & 292)) {
        return ERRNO_CODES.EACCES;
      } else if (perms.indexOf("w") !== -1 && !(node2.mode & 146)) {
        return ERRNO_CODES.EACCES;
      } else if (perms.indexOf("x") !== -1 && !(node2.mode & 73)) {
        return ERRNO_CODES.EACCES;
      }
      return 0;
    }, mayLookup: function(dir) {
      var err = FS.nodePermissions(dir, "x");
      if (err)
        return err;
      if (!dir.node_ops.lookup)
        return ERRNO_CODES.EACCES;
      return 0;
    }, mayCreate: function(dir, name) {
      try {
        var node2 = FS.lookupNode(dir, name);
        return ERRNO_CODES.EEXIST;
      } catch (e) {
      }
      return FS.nodePermissions(dir, "wx");
    }, mayDelete: function(dir, name, isdir) {
      var node2;
      try {
        node2 = FS.lookupNode(dir, name);
      } catch (e) {
        return e.errno;
      }
      var err = FS.nodePermissions(dir, "wx");
      if (err) {
        return err;
      }
      if (isdir) {
        if (!FS.isDir(node2.mode)) {
          return ERRNO_CODES.ENOTDIR;
        }
        if (FS.isRoot(node2) || FS.getPath(node2) === FS.cwd()) {
          return ERRNO_CODES.EBUSY;
        }
      } else {
        if (FS.isDir(node2.mode)) {
          return ERRNO_CODES.EISDIR;
        }
      }
      return 0;
    }, mayOpen: function(node2, flags) {
      if (!node2) {
        return ERRNO_CODES.ENOENT;
      }
      if (FS.isLink(node2.mode)) {
        return ERRNO_CODES.ELOOP;
      } else if (FS.isDir(node2.mode)) {
        if ((flags & 2097155) !== 0 || flags & 512) {
          return ERRNO_CODES.EISDIR;
        }
      }
      return FS.nodePermissions(node2, FS.flagsToPermissionString(flags));
    }, MAX_OPEN_FDS: 4096, nextfd: function(fd_start, fd_end) {
      fd_start = fd_start || 0;
      fd_end = fd_end || FS.MAX_OPEN_FDS;
      for (var fd = fd_start; fd <= fd_end; fd++) {
        if (!FS.streams[fd]) {
          return fd;
        }
      }
      throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
    }, getStream: function(fd) {
      return FS.streams[fd];
    }, createStream: function(stream, fd_start, fd_end) {
      if (!FS.FSStream) {
        FS.FSStream = function() {
        };
        FS.FSStream.prototype = {};
        Object.defineProperties(FS.FSStream.prototype, { object: { get: function() {
          return this.node;
        }, set: function(val) {
          this.node = val;
        } }, isRead: { get: function() {
          return (this.flags & 2097155) !== 1;
        } }, isWrite: { get: function() {
          return (this.flags & 2097155) !== 0;
        } }, isAppend: { get: function() {
          return this.flags & 1024;
        } } });
      }
      var newStream = new FS.FSStream();
      for (var p in stream) {
        newStream[p] = stream[p];
      }
      stream = newStream;
      var fd = FS.nextfd(fd_start, fd_end);
      stream.fd = fd;
      FS.streams[fd] = stream;
      return stream;
    }, closeStream: function(fd) {
      FS.streams[fd] = null;
    }, chrdev_stream_ops: { open: function(stream) {
      var device = FS.getDevice(stream.node.rdev);
      stream.stream_ops = device.stream_ops;
      if (stream.stream_ops.open) {
        stream.stream_ops.open(stream);
      }
    }, llseek: function() {
      throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
    } }, major: function(dev) {
      return dev >> 8;
    }, minor: function(dev) {
      return dev & 255;
    }, makedev: function(ma, mi) {
      return ma << 8 | mi;
    }, registerDevice: function(dev, ops) {
      FS.devices[dev] = { stream_ops: ops };
    }, getDevice: function(dev) {
      return FS.devices[dev];
    }, getMounts: function(mount) {
      var mounts = [];
      var check = [mount];
      while (check.length) {
        var m = check.pop();
        mounts.push(m);
        check.push.apply(check, m.mounts);
      }
      return mounts;
    }, syncfs: function(populate, callback) {
      if (typeof populate === "function") {
        callback = populate;
        populate = false;
      }
      var mounts = FS.getMounts(FS.root.mount);
      var completed = 0;
      function done(err) {
        if (err) {
          if (!done.errored) {
            done.errored = true;
            return callback(err);
          }
          return;
        }
        if (++completed >= mounts.length) {
          callback(null);
        }
      }
      mounts.forEach(function(mount) {
        if (!mount.type.syncfs) {
          return done(null);
        }
        mount.type.syncfs(mount, populate, done);
      });
    }, mount: function(type2, opts, mountpoint) {
      var root = mountpoint === "/";
      var pseudo = !mountpoint;
      var node2;
      if (root && FS.root) {
        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
      } else if (!root && !pseudo) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
        mountpoint = lookup.path;
        node2 = lookup.node;
        if (FS.isMountpoint(node2)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!FS.isDir(node2.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
      }
      var mount = { type: type2, opts, mountpoint, mounts: [] };
      var mountRoot = type2.mount(mount);
      mountRoot.mount = mount;
      mount.root = mountRoot;
      if (root) {
        FS.root = mountRoot;
      } else if (node2) {
        node2.mounted = mount;
        if (node2.mount) {
          node2.mount.mounts.push(mount);
        }
      }
      return mountRoot;
    }, unmount: function(mountpoint) {
      var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
      if (!FS.isMountpoint(lookup.node)) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      var node2 = lookup.node;
      var mount = node2.mounted;
      var mounts = FS.getMounts(mount);
      Object.keys(FS.nameTable).forEach(function(hash) {
        var current = FS.nameTable[hash];
        while (current) {
          var next = current.name_next;
          if (mounts.indexOf(current.mount) !== -1) {
            FS.destroyNode(current);
          }
          current = next;
        }
      });
      node2.mounted = null;
      var idx = node2.mount.mounts.indexOf(mount);
      assert(idx !== -1);
      node2.mount.mounts.splice(idx, 1);
    }, lookup: function(parent, name) {
      return parent.node_ops.lookup(parent, name);
    }, mknod: function(path2, mode, dev) {
      var lookup = FS.lookupPath(path2, { parent: true });
      var parent = lookup.node;
      var name = PATH.basename(path2);
      if (!name || name === "." || name === "..") {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      var err = FS.mayCreate(parent, name);
      if (err) {
        throw new FS.ErrnoError(err);
      }
      if (!parent.node_ops.mknod) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      return parent.node_ops.mknod(parent, name, mode, dev);
    }, create: function(path2, mode) {
      mode = mode !== void 0 ? mode : 438;
      mode &= 4095;
      mode |= 32768;
      return FS.mknod(path2, mode, 0);
    }, mkdir: function(path2, mode) {
      mode = mode !== void 0 ? mode : 511;
      mode &= 511 | 512;
      mode |= 16384;
      return FS.mknod(path2, mode, 0);
    }, mkdev: function(path2, mode, dev) {
      if (typeof dev === "undefined") {
        dev = mode;
        mode = 438;
      }
      mode |= 8192;
      return FS.mknod(path2, mode, dev);
    }, symlink: function(oldpath, newpath) {
      if (!PATH.resolve(oldpath)) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
      }
      var lookup = FS.lookupPath(newpath, { parent: true });
      var parent = lookup.node;
      if (!parent) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
      }
      var newname = PATH.basename(newpath);
      var err = FS.mayCreate(parent, newname);
      if (err) {
        throw new FS.ErrnoError(err);
      }
      if (!parent.node_ops.symlink) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      return parent.node_ops.symlink(parent, newname, oldpath);
    }, rename: function(old_path, new_path) {
      var old_dirname = PATH.dirname(old_path);
      var new_dirname = PATH.dirname(new_path);
      var old_name = PATH.basename(old_path);
      var new_name = PATH.basename(new_path);
      var lookup, old_dir, new_dir;
      try {
        lookup = FS.lookupPath(old_path, { parent: true });
        old_dir = lookup.node;
        lookup = FS.lookupPath(new_path, { parent: true });
        new_dir = lookup.node;
      } catch (e) {
        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
      }
      if (!old_dir || !new_dir)
        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
      if (old_dir.mount !== new_dir.mount) {
        throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
      }
      var old_node = FS.lookupNode(old_dir, old_name);
      var relative = PATH.relative(old_path, new_dirname);
      if (relative.charAt(0) !== ".") {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      relative = PATH.relative(new_path, old_dirname);
      if (relative.charAt(0) !== ".") {
        throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
      }
      var new_node;
      try {
        new_node = FS.lookupNode(new_dir, new_name);
      } catch (e) {
      }
      if (old_node === new_node) {
        return;
      }
      var isdir = FS.isDir(old_node.mode);
      var err = FS.mayDelete(old_dir, old_name, isdir);
      if (err) {
        throw new FS.ErrnoError(err);
      }
      err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
      if (err) {
        throw new FS.ErrnoError(err);
      }
      if (!old_dir.node_ops.rename) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
      }
      if (new_dir !== old_dir) {
        err = FS.nodePermissions(old_dir, "w");
        if (err) {
          throw new FS.ErrnoError(err);
        }
      }
      try {
        if (FS.trackingDelegate["willMovePath"]) {
          FS.trackingDelegate["willMovePath"](old_path, new_path);
        }
      } catch (e) {
        console.log("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
      }
      FS.hashRemoveNode(old_node);
      try {
        old_dir.node_ops.rename(old_node, new_dir, new_name);
      } catch (e) {
        throw e;
      } finally {
        FS.hashAddNode(old_node);
      }
      try {
        if (FS.trackingDelegate["onMovePath"])
          FS.trackingDelegate["onMovePath"](old_path, new_path);
      } catch (e) {
        console.log("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
      }
    }, rmdir: function(path2) {
      var lookup = FS.lookupPath(path2, { parent: true });
      var parent = lookup.node;
      var name = PATH.basename(path2);
      var node2 = FS.lookupNode(parent, name);
      var err = FS.mayDelete(parent, name, true);
      if (err) {
        throw new FS.ErrnoError(err);
      }
      if (!parent.node_ops.rmdir) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      if (FS.isMountpoint(node2)) {
        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
      }
      try {
        if (FS.trackingDelegate["willDeletePath"]) {
          FS.trackingDelegate["willDeletePath"](path2);
        }
      } catch (e) {
        console.log("FS.trackingDelegate['willDeletePath']('" + path2 + "') threw an exception: " + e.message);
      }
      parent.node_ops.rmdir(parent, name);
      FS.destroyNode(node2);
      try {
        if (FS.trackingDelegate["onDeletePath"])
          FS.trackingDelegate["onDeletePath"](path2);
      } catch (e) {
        console.log("FS.trackingDelegate['onDeletePath']('" + path2 + "') threw an exception: " + e.message);
      }
    }, readdir: function(path2) {
      var lookup = FS.lookupPath(path2, { follow: true });
      var node2 = lookup.node;
      if (!node2.node_ops.readdir) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
      }
      return node2.node_ops.readdir(node2);
    }, unlink: function(path2) {
      var lookup = FS.lookupPath(path2, { parent: true });
      var parent = lookup.node;
      var name = PATH.basename(path2);
      var node2 = FS.lookupNode(parent, name);
      var err = FS.mayDelete(parent, name, false);
      if (err) {
        if (err === ERRNO_CODES.EISDIR)
          err = ERRNO_CODES.EPERM;
        throw new FS.ErrnoError(err);
      }
      if (!parent.node_ops.unlink) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      if (FS.isMountpoint(node2)) {
        throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
      }
      try {
        if (FS.trackingDelegate["willDeletePath"]) {
          FS.trackingDelegate["willDeletePath"](path2);
        }
      } catch (e) {
        console.log("FS.trackingDelegate['willDeletePath']('" + path2 + "') threw an exception: " + e.message);
      }
      parent.node_ops.unlink(parent, name);
      FS.destroyNode(node2);
      try {
        if (FS.trackingDelegate["onDeletePath"])
          FS.trackingDelegate["onDeletePath"](path2);
      } catch (e) {
        console.log("FS.trackingDelegate['onDeletePath']('" + path2 + "') threw an exception: " + e.message);
      }
    }, readlink: function(path2) {
      var lookup = FS.lookupPath(path2);
      var link = lookup.node;
      if (!link) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
      }
      if (!link.node_ops.readlink) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
    }, stat: function(path2, dontFollow) {
      var lookup = FS.lookupPath(path2, { follow: !dontFollow });
      var node2 = lookup.node;
      if (!node2) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
      }
      if (!node2.node_ops.getattr) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      return node2.node_ops.getattr(node2);
    }, lstat: function(path2) {
      return FS.stat(path2, true);
    }, chmod: function(path2, mode, dontFollow) {
      var node2;
      if (typeof path2 === "string") {
        var lookup = FS.lookupPath(path2, { follow: !dontFollow });
        node2 = lookup.node;
      } else {
        node2 = path2;
      }
      if (!node2.node_ops.setattr) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      node2.node_ops.setattr(node2, { mode: mode & 4095 | node2.mode & ~4095, timestamp: Date.now() });
    }, lchmod: function(path2, mode) {
      FS.chmod(path2, mode, true);
    }, fchmod: function(fd, mode) {
      var stream = FS.getStream(fd);
      if (!stream) {
        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      }
      FS.chmod(stream.node, mode);
    }, chown: function(path2, uid, gid, dontFollow) {
      var node2;
      if (typeof path2 === "string") {
        var lookup = FS.lookupPath(path2, { follow: !dontFollow });
        node2 = lookup.node;
      } else {
        node2 = path2;
      }
      if (!node2.node_ops.setattr) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      node2.node_ops.setattr(node2, { timestamp: Date.now() });
    }, lchown: function(path2, uid, gid) {
      FS.chown(path2, uid, gid, true);
    }, fchown: function(fd, uid, gid) {
      var stream = FS.getStream(fd);
      if (!stream) {
        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      }
      FS.chown(stream.node, uid, gid);
    }, truncate: function(path2, len) {
      if (len < 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      var node2;
      if (typeof path2 === "string") {
        var lookup = FS.lookupPath(path2, { follow: true });
        node2 = lookup.node;
      } else {
        node2 = path2;
      }
      if (!node2.node_ops.setattr) {
        throw new FS.ErrnoError(ERRNO_CODES.EPERM);
      }
      if (FS.isDir(node2.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
      }
      if (!FS.isFile(node2.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      var err = FS.nodePermissions(node2, "w");
      if (err) {
        throw new FS.ErrnoError(err);
      }
      node2.node_ops.setattr(node2, { size: len, timestamp: Date.now() });
    }, ftruncate: function(fd, len) {
      var stream = FS.getStream(fd);
      if (!stream) {
        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      }
      if ((stream.flags & 2097155) === 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      FS.truncate(stream.node, len);
    }, utime: function(path2, atime, mtime) {
      var lookup = FS.lookupPath(path2, { follow: true });
      var node2 = lookup.node;
      node2.node_ops.setattr(node2, { timestamp: Math.max(atime, mtime) });
    }, open: function(path2, flags, mode, fd_start, fd_end) {
      if (path2 === "") {
        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
      }
      flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;
      mode = typeof mode === "undefined" ? 438 : mode;
      if (flags & 64) {
        mode = mode & 4095 | 32768;
      } else {
        mode = 0;
      }
      var node2;
      if (typeof path2 === "object") {
        node2 = path2;
      } else {
        path2 = PATH.normalize(path2);
        try {
          var lookup = FS.lookupPath(path2, { follow: !(flags & 131072) });
          node2 = lookup.node;
        } catch (e) {
        }
      }
      var created = false;
      if (flags & 64) {
        if (node2) {
          if (flags & 128) {
            throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
          }
        } else {
          node2 = FS.mknod(path2, mode, 0);
          created = true;
        }
      }
      if (!node2) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
      }
      if (FS.isChrdev(node2.mode)) {
        flags &= ~512;
      }
      if (flags & 65536 && !FS.isDir(node2.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
      }
      if (!created) {
        var err = FS.mayOpen(node2, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
      }
      if (flags & 512) {
        FS.truncate(node2, 0);
      }
      flags &= ~(128 | 512);
      var stream = FS.createStream({ node: node2, path: FS.getPath(node2), flags, seekable: true, position: 0, stream_ops: node2.stream_ops, ungotten: [], error: false }, fd_start, fd_end);
      if (stream.stream_ops.open) {
        stream.stream_ops.open(stream);
      }
      if (Module["logReadFiles"] && !(flags & 1)) {
        if (!FS.readFiles)
          FS.readFiles = {};
        if (!(path2 in FS.readFiles)) {
          FS.readFiles[path2] = 1;
          Module["printErr"]("read file: " + path2);
        }
      }
      try {
        if (FS.trackingDelegate["onOpenFile"]) {
          var trackingFlags = 0;
          if ((flags & 2097155) !== 1) {
            trackingFlags |= FS.tracking.openFlags.READ;
          }
          if ((flags & 2097155) !== 0) {
            trackingFlags |= FS.tracking.openFlags.WRITE;
          }
          FS.trackingDelegate["onOpenFile"](path2, trackingFlags);
        }
      } catch (e) {
        console.log("FS.trackingDelegate['onOpenFile']('" + path2 + "', flags) threw an exception: " + e.message);
      }
      return stream;
    }, close: function(stream) {
      if (stream.getdents)
        stream.getdents = null;
      try {
        if (stream.stream_ops.close) {
          stream.stream_ops.close(stream);
        }
      } catch (e) {
        throw e;
      } finally {
        FS.closeStream(stream.fd);
      }
    }, llseek: function(stream, offset, whence) {
      if (!stream.seekable || !stream.stream_ops.llseek) {
        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
      }
      stream.position = stream.stream_ops.llseek(stream, offset, whence);
      stream.ungotten = [];
      return stream.position;
    }, read: function(stream, buffer2, offset, length, position) {
      if (length < 0 || position < 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      if ((stream.flags & 2097155) === 1) {
        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      }
      if (FS.isDir(stream.node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
      }
      if (!stream.stream_ops.read) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      var seeking = true;
      if (typeof position === "undefined") {
        position = stream.position;
        seeking = false;
      } else if (!stream.seekable) {
        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
      }
      var bytesRead = stream.stream_ops.read(stream, buffer2, offset, length, position);
      if (!seeking)
        stream.position += bytesRead;
      return bytesRead;
    }, write: function(stream, buffer2, offset, length, position, canOwn) {
      if (length < 0 || position < 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      if ((stream.flags & 2097155) === 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      }
      if (FS.isDir(stream.node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
      }
      if (!stream.stream_ops.write) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      if (stream.flags & 1024) {
        FS.llseek(stream, 0, 2);
      }
      var seeking = true;
      if (typeof position === "undefined") {
        position = stream.position;
        seeking = false;
      } else if (!stream.seekable) {
        throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
      }
      var bytesWritten = stream.stream_ops.write(stream, buffer2, offset, length, position, canOwn);
      if (!seeking)
        stream.position += bytesWritten;
      try {
        if (stream.path && FS.trackingDelegate["onWriteToFile"])
          FS.trackingDelegate["onWriteToFile"](stream.path);
      } catch (e) {
        console.log("FS.trackingDelegate['onWriteToFile']('" + path + "') threw an exception: " + e.message);
      }
      return bytesWritten;
    }, allocate: function(stream, offset, length) {
      if (offset < 0 || length <= 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
      }
      if ((stream.flags & 2097155) === 0) {
        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      }
      if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
      }
      if (!stream.stream_ops.allocate) {
        throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
      }
      stream.stream_ops.allocate(stream, offset, length);
    }, mmap: function(stream, buffer2, offset, length, position, prot, flags) {
      if ((stream.flags & 2097155) === 1) {
        throw new FS.ErrnoError(ERRNO_CODES.EACCES);
      }
      if (!stream.stream_ops.mmap) {
        throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
      }
      return stream.stream_ops.mmap(stream, buffer2, offset, length, position, prot, flags);
    }, msync: function(stream, buffer2, offset, length, mmapFlags) {
      if (!stream || !stream.stream_ops.msync) {
        return 0;
      }
      return stream.stream_ops.msync(stream, buffer2, offset, length, mmapFlags);
    }, munmap: function(stream) {
      return 0;
    }, ioctl: function(stream, cmd, arg2) {
      if (!stream.stream_ops.ioctl) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
      }
      return stream.stream_ops.ioctl(stream, cmd, arg2);
    }, readFile: function(path2, opts) {
      opts = opts || {};
      opts.flags = opts.flags || "r";
      opts.encoding = opts.encoding || "binary";
      if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
        throw new Error('Invalid encoding type "' + opts.encoding + '"');
      }
      var ret;
      var stream = FS.open(path2, opts.flags);
      var stat = FS.stat(path2);
      var length = stat.size;
      var buf = new Uint8Array(length);
      FS.read(stream, buf, 0, length, 0);
      if (opts.encoding === "utf8") {
        ret = UTF8ArrayToString(buf, 0);
      } else if (opts.encoding === "binary") {
        ret = buf;
      }
      FS.close(stream);
      return ret;
    }, writeFile: function(path2, data, opts) {
      opts = opts || {};
      opts.flags = opts.flags || "w";
      opts.encoding = opts.encoding || "utf8";
      if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
        throw new Error('Invalid encoding type "' + opts.encoding + '"');
      }
      var stream = FS.open(path2, opts.flags, opts.mode);
      if (opts.encoding === "utf8") {
        var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
        var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
        FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
      } else if (opts.encoding === "binary") {
        FS.write(stream, data, 0, data.length, 0, opts.canOwn);
      }
      FS.close(stream);
    }, cwd: function() {
      return FS.currentPath;
    }, chdir: function(path2) {
      var lookup = FS.lookupPath(path2, { follow: true });
      if (!FS.isDir(lookup.node.mode)) {
        throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
      }
      var err = FS.nodePermissions(lookup.node, "x");
      if (err) {
        throw new FS.ErrnoError(err);
      }
      FS.currentPath = lookup.path;
    }, createDefaultDirectories: function() {
      FS.mkdir("/tmp");
      FS.mkdir("/home");
      FS.mkdir("/home/web_user");
    }, createDefaultDevices: function() {
      FS.mkdir("/dev");
      FS.registerDevice(FS.makedev(1, 3), { read: function() {
        return 0;
      }, write: function(stream, buffer2, offset, length, pos) {
        return length;
      } });
      FS.mkdev("/dev/null", FS.makedev(1, 3));
      TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
      TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
      FS.mkdev("/dev/tty", FS.makedev(5, 0));
      FS.mkdev("/dev/tty1", FS.makedev(6, 0));
      var random_device;
      if (typeof crypto !== "undefined") {
        var randomBuffer = new Uint8Array(1);
        random_device = function() {
          crypto.getRandomValues(randomBuffer);
          return randomBuffer[0];
        };
      } else if (ENVIRONMENT_IS_NODE) {
        random_device = function() {
          return require_crypto().randomBytes(1)[0];
        };
      } else {
        random_device = function() {
          return Math.random() * 256 | 0;
        };
      }
      FS.createDevice("/dev", "random", random_device);
      FS.createDevice("/dev", "urandom", random_device);
      FS.mkdir("/dev/shm");
      FS.mkdir("/dev/shm/tmp");
    }, createSpecialDirectories: function() {
      FS.mkdir("/proc");
      FS.mkdir("/proc/self");
      FS.mkdir("/proc/self/fd");
      FS.mount({ mount: function() {
        var node2 = FS.createNode("/proc/self", "fd", 16384 | 511, 73);
        node2.node_ops = { lookup: function(parent, name) {
          var fd = +name;
          var stream = FS.getStream(fd);
          if (!stream)
            throw new FS.ErrnoError(ERRNO_CODES.EBADF);
          var ret = { parent: null, mount: { mountpoint: "fake" }, node_ops: { readlink: function() {
            return stream.path;
          } } };
          ret.parent = ret;
          return ret;
        } };
        return node2;
      } }, {}, "/proc/self/fd");
    }, createStandardStreams: function() {
      if (Module["stdin"]) {
        FS.createDevice("/dev", "stdin", Module["stdin"]);
      } else {
        FS.symlink("/dev/tty", "/dev/stdin");
      }
      if (Module["stdout"]) {
        FS.createDevice("/dev", "stdout", null, Module["stdout"]);
      } else {
        FS.symlink("/dev/tty", "/dev/stdout");
      }
      if (Module["stderr"]) {
        FS.createDevice("/dev", "stderr", null, Module["stderr"]);
      } else {
        FS.symlink("/dev/tty1", "/dev/stderr");
      }
      var stdin = FS.open("/dev/stdin", "r");
      assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");
      var stdout = FS.open("/dev/stdout", "w");
      assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");
      var stderr = FS.open("/dev/stderr", "w");
      assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
    }, ensureErrnoError: function() {
      if (FS.ErrnoError)
        return;
      FS.ErrnoError = function ErrnoError(errno, node2) {
        this.node = node2;
        this.setErrno = function(errno2) {
          this.errno = errno2;
          for (var key2 in ERRNO_CODES) {
            if (ERRNO_CODES[key2] === errno2) {
              this.code = key2;
              break;
            }
          }
        };
        this.setErrno(errno);
        this.message = ERRNO_MESSAGES[errno];
      };
      FS.ErrnoError.prototype = new Error();
      FS.ErrnoError.prototype.constructor = FS.ErrnoError;
      [ERRNO_CODES.ENOENT].forEach(function(code) {
        FS.genericErrors[code] = new FS.ErrnoError(code);
        FS.genericErrors[code].stack = "<generic error, no stack>";
      });
    }, staticInit: function() {
      FS.ensureErrnoError();
      FS.nameTable = new Array(4096);
      FS.mount(MEMFS, {}, "/");
      FS.createDefaultDirectories();
      FS.createDefaultDevices();
      FS.createSpecialDirectories();
      FS.filesystems = { MEMFS, IDBFS, NODEFS, WORKERFS };
    }, init: function(input, output, error) {
      assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
      FS.init.initialized = true;
      FS.ensureErrnoError();
      Module["stdin"] = input || Module["stdin"];
      Module["stdout"] = output || Module["stdout"];
      Module["stderr"] = error || Module["stderr"];
      FS.createStandardStreams();
    }, quit: function() {
      FS.init.initialized = false;
      var fflush = Module["_fflush"];
      if (fflush)
        fflush(0);
      for (var i2 = 0; i2 < FS.streams.length; i2++) {
        var stream = FS.streams[i2];
        if (!stream) {
          continue;
        }
        FS.close(stream);
      }
    }, getMode: function(canRead, canWrite) {
      var mode = 0;
      if (canRead)
        mode |= 292 | 73;
      if (canWrite)
        mode |= 146;
      return mode;
    }, joinPath: function(parts, forceRelative) {
      var path2 = PATH.join.apply(null, parts);
      if (forceRelative && path2[0] == "/")
        path2 = path2.substr(1);
      return path2;
    }, absolutePath: function(relative, base) {
      return PATH.resolve(base, relative);
    }, standardizePath: function(path2) {
      return PATH.normalize(path2);
    }, findObject: function(path2, dontResolveLastLink) {
      var ret = FS.analyzePath(path2, dontResolveLastLink);
      if (ret.exists) {
        return ret.object;
      } else {
        ___setErrNo(ret.error);
        return null;
      }
    }, analyzePath: function(path2, dontResolveLastLink) {
      try {
        var lookup = FS.lookupPath(path2, { follow: !dontResolveLastLink });
        path2 = lookup.path;
      } catch (e) {
      }
      var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };
      try {
        var lookup = FS.lookupPath(path2, { parent: true });
        ret.parentExists = true;
        ret.parentPath = lookup.path;
        ret.parentObject = lookup.node;
        ret.name = PATH.basename(path2);
        lookup = FS.lookupPath(path2, { follow: !dontResolveLastLink });
        ret.exists = true;
        ret.path = lookup.path;
        ret.object = lookup.node;
        ret.name = lookup.node.name;
        ret.isRoot = lookup.path === "/";
      } catch (e) {
        ret.error = e.errno;
      }
      return ret;
    }, createFolder: function(parent, name, canRead, canWrite) {
      var path2 = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
      var mode = FS.getMode(canRead, canWrite);
      return FS.mkdir(path2, mode);
    }, createPath: function(parent, path2, canRead, canWrite) {
      parent = typeof parent === "string" ? parent : FS.getPath(parent);
      var parts = path2.split("/").reverse();
      while (parts.length) {
        var part = parts.pop();
        if (!part)
          continue;
        var current = PATH.join2(parent, part);
        try {
          FS.mkdir(current);
        } catch (e) {
        }
        parent = current;
      }
      return current;
    }, createFile: function(parent, name, properties, canRead, canWrite) {
      var path2 = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
      var mode = FS.getMode(canRead, canWrite);
      return FS.create(path2, mode);
    }, createDataFile: function(parent, name, data, canRead, canWrite, canOwn) {
      var path2 = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;
      var mode = FS.getMode(canRead, canWrite);
      var node2 = FS.create(path2, mode);
      if (data) {
        if (typeof data === "string") {
          var arr = new Array(data.length);
          for (var i2 = 0, len = data.length; i2 < len; ++i2)
            arr[i2] = data.charCodeAt(i2);
          data = arr;
        }
        FS.chmod(node2, mode | 146);
        var stream = FS.open(node2, "w");
        FS.write(stream, data, 0, data.length, 0, canOwn);
        FS.close(stream);
        FS.chmod(node2, mode);
      }
      return node2;
    }, createDevice: function(parent, name, input, output) {
      var path2 = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
      var mode = FS.getMode(!!input, !!output);
      if (!FS.createDevice.major)
        FS.createDevice.major = 64;
      var dev = FS.makedev(FS.createDevice.major++, 0);
      FS.registerDevice(dev, { open: function(stream) {
        stream.seekable = false;
      }, close: function(stream) {
        if (output && output.buffer && output.buffer.length) {
          output(10);
        }
      }, read: function(stream, buffer2, offset, length, pos) {
        var bytesRead = 0;
        for (var i2 = 0; i2 < length; i2++) {
          var result;
          try {
            result = input();
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          if (result === void 0 && bytesRead === 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
          }
          if (result === null || result === void 0)
            break;
          bytesRead++;
          buffer2[offset + i2] = result;
        }
        if (bytesRead) {
          stream.node.timestamp = Date.now();
        }
        return bytesRead;
      }, write: function(stream, buffer2, offset, length, pos) {
        for (var i2 = 0; i2 < length; i2++) {
          try {
            output(buffer2[offset + i2]);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
        }
        if (length) {
          stream.node.timestamp = Date.now();
        }
        return i2;
      } });
      return FS.mkdev(path2, mode, dev);
    }, createLink: function(parent, name, target, canRead, canWrite) {
      var path2 = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
      return FS.symlink(target, path2);
    }, forceLoadFile: function(obj) {
      if (obj.isDevice || obj.isFolder || obj.link || obj.contents)
        return true;
      var success = true;
      if (typeof XMLHttpRequest !== "undefined") {
        throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
      } else if (Module["read"]) {
        try {
          obj.contents = intArrayFromString(Module["read"](obj.url), true);
          obj.usedBytes = obj.contents.length;
        } catch (e) {
          success = false;
        }
      } else {
        throw new Error("Cannot load without read() or XMLHttpRequest.");
      }
      if (!success)
        ___setErrNo(ERRNO_CODES.EIO);
      return success;
    }, createLazyFile: function(parent, name, url, canRead, canWrite) {
      function LazyUint8Array() {
        this.lengthKnown = false;
        this.chunks = [];
      }
      LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
        if (idx > this.length - 1 || idx < 0) {
          return void 0;
        }
        var chunkOffset = idx % this.chunkSize;
        var chunkNum = idx / this.chunkSize | 0;
        return this.getter(chunkNum)[chunkOffset];
      };
      LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
        this.getter = getter;
      };
      LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
        var xhr = new XMLHttpRequest();
        xhr.open("HEAD", url, false);
        xhr.send(null);
        if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))
          throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
        var datalength = Number(xhr.getResponseHeader("Content-length"));
        var header;
        var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
        var chunkSize = 1024 * 1024;
        if (!hasByteServing)
          chunkSize = datalength;
        var doXHR = function(from, to) {
          if (from > to)
            throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
          if (to > datalength - 1)
            throw new Error("only " + datalength + " bytes available! programmer error!");
          var xhr2 = new XMLHttpRequest();
          xhr2.open("GET", url, false);
          if (datalength !== chunkSize)
            xhr2.setRequestHeader("Range", "bytes=" + from + "-" + to);
          if (typeof Uint8Array != "undefined")
            xhr2.responseType = "arraybuffer";
          if (xhr2.overrideMimeType) {
            xhr2.overrideMimeType("text/plain; charset=x-user-defined");
          }
          xhr2.send(null);
          if (!(xhr2.status >= 200 && xhr2.status < 300 || xhr2.status === 304))
            throw new Error("Couldn't load " + url + ". Status: " + xhr2.status);
          if (xhr2.response !== void 0) {
            return new Uint8Array(xhr2.response || []);
          } else {
            return intArrayFromString(xhr2.responseText || "", true);
          }
        };
        var lazyArray2 = this;
        lazyArray2.setDataGetter(function(chunkNum) {
          var start = chunkNum * chunkSize;
          var end = (chunkNum + 1) * chunkSize - 1;
          end = Math.min(end, datalength - 1);
          if (typeof lazyArray2.chunks[chunkNum] === "undefined") {
            lazyArray2.chunks[chunkNum] = doXHR(start, end);
          }
          if (typeof lazyArray2.chunks[chunkNum] === "undefined")
            throw new Error("doXHR failed!");
          return lazyArray2.chunks[chunkNum];
        });
        this._length = datalength;
        this._chunkSize = chunkSize;
        this.lengthKnown = true;
      };
      if (typeof XMLHttpRequest !== "undefined") {
        if (!ENVIRONMENT_IS_WORKER)
          throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
        var lazyArray = new LazyUint8Array();
        Object.defineProperty(lazyArray, "length", { get: function() {
          if (!this.lengthKnown) {
            this.cacheLength();
          }
          return this._length;
        } });
        Object.defineProperty(lazyArray, "chunkSize", { get: function() {
          if (!this.lengthKnown) {
            this.cacheLength();
          }
          return this._chunkSize;
        } });
        var properties = { isDevice: false, contents: lazyArray };
      } else {
        var properties = { isDevice: false, url };
      }
      var node2 = FS.createFile(parent, name, properties, canRead, canWrite);
      if (properties.contents) {
        node2.contents = properties.contents;
      } else if (properties.url) {
        node2.contents = null;
        node2.url = properties.url;
      }
      Object.defineProperty(node2, "usedBytes", { get: function() {
        return this.contents.length;
      } });
      var stream_ops = {};
      var keys = Object.keys(node2.stream_ops);
      keys.forEach(function(key2) {
        var fn = node2.stream_ops[key2];
        stream_ops[key2] = function forceLoadLazyFile() {
          if (!FS.forceLoadFile(node2)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          return fn.apply(null, arguments);
        };
      });
      stream_ops.read = function stream_ops_read(stream, buffer2, offset, length, position) {
        if (!FS.forceLoadFile(node2)) {
          throw new FS.ErrnoError(ERRNO_CODES.EIO);
        }
        var contents = stream.node.contents;
        if (position >= contents.length)
          return 0;
        var size = Math.min(contents.length - position, length);
        assert(size >= 0);
        if (contents.slice) {
          for (var i2 = 0; i2 < size; i2++) {
            buffer2[offset + i2] = contents[position + i2];
          }
        } else {
          for (var i2 = 0; i2 < size; i2++) {
            buffer2[offset + i2] = contents.get(position + i2);
          }
        }
        return size;
      };
      node2.stream_ops = stream_ops;
      return node2;
    }, createPreloadedFile: function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
      Browser.init();
      var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
      var dep = getUniqueRunDependency("cp " + fullname);
      function processData(byteArray) {
        function finish(byteArray2) {
          if (preFinish)
            preFinish();
          if (!dontCreateFile) {
            FS.createDataFile(parent, name, byteArray2, canRead, canWrite, canOwn);
          }
          if (onload)
            onload();
          removeRunDependency(dep);
        }
        var handled = false;
        Module["preloadPlugins"].forEach(function(plugin) {
          if (handled)
            return;
          if (plugin["canHandle"](fullname)) {
            plugin["handle"](byteArray, fullname, finish, function() {
              if (onerror)
                onerror();
              removeRunDependency(dep);
            });
            handled = true;
          }
        });
        if (!handled)
          finish(byteArray);
      }
      addRunDependency(dep);
      if (typeof url == "string") {
        Browser.asyncLoad(url, function(byteArray) {
          processData(byteArray);
        }, onerror);
      } else {
        processData(url);
      }
    }, indexedDB: function() {
      return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
    }, DB_NAME: function() {
      return "EM_FS_" + window.location.pathname;
    }, DB_VERSION: 20, DB_STORE_NAME: "FILE_DATA", saveFilesToDB: function(paths, onload, onerror) {
      onload = onload || function() {
      };
      onerror = onerror || function() {
      };
      var indexedDB2 = FS.indexedDB();
      try {
        var openRequest = indexedDB2.open(FS.DB_NAME(), FS.DB_VERSION);
      } catch (e) {
        return onerror(e);
      }
      openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
        console.log("creating db");
        var db = openRequest.result;
        db.createObjectStore(FS.DB_STORE_NAME);
      };
      openRequest.onsuccess = function openRequest_onsuccess() {
        var db = openRequest.result;
        var transaction = db.transaction([FS.DB_STORE_NAME], "readwrite");
        var files = transaction.objectStore(FS.DB_STORE_NAME);
        var ok = 0, fail = 0, total = paths.length;
        function finish() {
          if (fail == 0)
            onload();
          else
            onerror();
        }
        paths.forEach(function(path2) {
          var putRequest = files.put(FS.analyzePath(path2).object.contents, path2);
          putRequest.onsuccess = function putRequest_onsuccess() {
            ok++;
            if (ok + fail == total)
              finish();
          };
          putRequest.onerror = function putRequest_onerror() {
            fail++;
            if (ok + fail == total)
              finish();
          };
        });
        transaction.onerror = onerror;
      };
      openRequest.onerror = onerror;
    }, loadFilesFromDB: function(paths, onload, onerror) {
      onload = onload || function() {
      };
      onerror = onerror || function() {
      };
      var indexedDB2 = FS.indexedDB();
      try {
        var openRequest = indexedDB2.open(FS.DB_NAME(), FS.DB_VERSION);
      } catch (e) {
        return onerror(e);
      }
      openRequest.onupgradeneeded = onerror;
      openRequest.onsuccess = function openRequest_onsuccess() {
        var db = openRequest.result;
        try {
          var transaction = db.transaction([FS.DB_STORE_NAME], "readonly");
        } catch (e) {
          onerror(e);
          return;
        }
        var files = transaction.objectStore(FS.DB_STORE_NAME);
        var ok = 0, fail = 0, total = paths.length;
        function finish() {
          if (fail == 0)
            onload();
          else
            onerror();
        }
        paths.forEach(function(path2) {
          var getRequest = files.get(path2);
          getRequest.onsuccess = function getRequest_onsuccess() {
            if (FS.analyzePath(path2).exists) {
              FS.unlink(path2);
            }
            FS.createDataFile(PATH.dirname(path2), PATH.basename(path2), getRequest.result, true, true, true);
            ok++;
            if (ok + fail == total)
              finish();
          };
          getRequest.onerror = function getRequest_onerror() {
            fail++;
            if (ok + fail == total)
              finish();
          };
        });
        transaction.onerror = onerror;
      };
      openRequest.onerror = onerror;
    } };
    var SYSCALLS = { DEFAULT_POLLMASK: 5, mappings: {}, umask: 511, calculateAt: function(dirfd, path2) {
      if (path2[0] !== "/") {
        var dir;
        if (dirfd === -100) {
          dir = FS.cwd();
        } else {
          var dirstream = FS.getStream(dirfd);
          if (!dirstream)
            throw new FS.ErrnoError(ERRNO_CODES.EBADF);
          dir = dirstream.path;
        }
        path2 = PATH.join2(dir, path2);
      }
      return path2;
    }, doStat: function(func2, path2, buf) {
      try {
        var stat = func2(path2);
      } catch (e) {
        if (e && e.node && PATH.normalize(path2) !== PATH.normalize(FS.getPath(e.node))) {
          return -ERRNO_CODES.ENOTDIR;
        }
        throw e;
      }
      HEAP32[buf >> 2] = stat.dev;
      HEAP32[buf + 4 >> 2] = 0;
      HEAP32[buf + 8 >> 2] = stat.ino;
      HEAP32[buf + 12 >> 2] = stat.mode;
      HEAP32[buf + 16 >> 2] = stat.nlink;
      HEAP32[buf + 20 >> 2] = stat.uid;
      HEAP32[buf + 24 >> 2] = stat.gid;
      HEAP32[buf + 28 >> 2] = stat.rdev;
      HEAP32[buf + 32 >> 2] = 0;
      HEAP32[buf + 36 >> 2] = stat.size;
      HEAP32[buf + 40 >> 2] = 4096;
      HEAP32[buf + 44 >> 2] = stat.blocks;
      HEAP32[buf + 48 >> 2] = stat.atime.getTime() / 1e3 | 0;
      HEAP32[buf + 52 >> 2] = 0;
      HEAP32[buf + 56 >> 2] = stat.mtime.getTime() / 1e3 | 0;
      HEAP32[buf + 60 >> 2] = 0;
      HEAP32[buf + 64 >> 2] = stat.ctime.getTime() / 1e3 | 0;
      HEAP32[buf + 68 >> 2] = 0;
      HEAP32[buf + 72 >> 2] = stat.ino;
      return 0;
    }, doMsync: function(addr, stream, len, flags) {
      var buffer2 = new Uint8Array(HEAPU8.subarray(addr, addr + len));
      FS.msync(stream, buffer2, 0, len, flags);
    }, doMkdir: function(path2, mode) {
      path2 = PATH.normalize(path2);
      if (path2[path2.length - 1] === "/")
        path2 = path2.substr(0, path2.length - 1);
      FS.mkdir(path2, mode, 0);
      return 0;
    }, doMknod: function(path2, mode, dev) {
      switch (mode & 61440) {
        case 32768:
        case 8192:
        case 24576:
        case 4096:
        case 49152:
          break;
        default:
          return -ERRNO_CODES.EINVAL;
      }
      FS.mknod(path2, mode, dev);
      return 0;
    }, doReadlink: function(path2, buf, bufsize) {
      if (bufsize <= 0)
        return -ERRNO_CODES.EINVAL;
      var ret = FS.readlink(path2);
      ret = ret.slice(0, Math.max(0, bufsize));
      writeStringToMemory(ret, buf, true);
      return ret.length;
    }, doAccess: function(path2, amode) {
      if (amode & ~7) {
        return -ERRNO_CODES.EINVAL;
      }
      var node2;
      var lookup = FS.lookupPath(path2, { follow: true });
      node2 = lookup.node;
      var perms = "";
      if (amode & 4)
        perms += "r";
      if (amode & 2)
        perms += "w";
      if (amode & 1)
        perms += "x";
      if (perms && FS.nodePermissions(node2, perms)) {
        return -ERRNO_CODES.EACCES;
      }
      return 0;
    }, doDup: function(path2, flags, suggestFD) {
      var suggest = FS.getStream(suggestFD);
      if (suggest)
        FS.close(suggest);
      return FS.open(path2, flags, 0, suggestFD, suggestFD).fd;
    }, doReadv: function(stream, iov, iovcnt, offset) {
      var ret = 0;
      for (var i2 = 0; i2 < iovcnt; i2++) {
        var ptr = HEAP32[iov + i2 * 8 >> 2];
        var len = HEAP32[iov + (i2 * 8 + 4) >> 2];
        var curr = FS.read(stream, HEAP8, ptr, len, offset);
        if (curr < 0)
          return -1;
        ret += curr;
        if (curr < len)
          break;
      }
      return ret;
    }, doWritev: function(stream, iov, iovcnt, offset) {
      var ret = 0;
      for (var i2 = 0; i2 < iovcnt; i2++) {
        var ptr = HEAP32[iov + i2 * 8 >> 2];
        var len = HEAP32[iov + (i2 * 8 + 4) >> 2];
        var curr = FS.write(stream, HEAP8, ptr, len, offset);
        if (curr < 0)
          return -1;
        ret += curr;
      }
      return ret;
    }, varargs: 0, get: function(varargs) {
      SYSCALLS.varargs += 4;
      var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
      return ret;
    }, getStr: function() {
      var ret = Pointer_stringify(SYSCALLS.get());
      return ret;
    }, getStreamFromFD: function() {
      var stream = FS.getStream(SYSCALLS.get());
      if (!stream)
        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      return stream;
    }, getSocketFromFD: function() {
      var socket = SOCKFS.getSocket(SYSCALLS.get());
      if (!socket)
        throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      return socket;
    }, getSocketAddress: function(allowNull) {
      var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
      if (allowNull && addrp === 0)
        return null;
      var info = __read_sockaddr(addrp, addrlen);
      if (info.errno)
        throw new FS.ErrnoError(info.errno);
      info.addr = DNS.lookup_addr(info.addr) || info.addr;
      return info;
    }, get64: function() {
      var low = SYSCALLS.get(), high = SYSCALLS.get();
      if (low >= 0)
        assert(high === 0);
      else
        assert(high === -1);
      return low;
    }, getZero: function() {
      assert(SYSCALLS.get() === 0);
    } };
    function ___syscall5(which, varargs) {
      SYSCALLS.varargs = varargs;
      try {
        var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get();
        var stream = FS.open(pathname, flags, mode);
        return stream.fd;
      } catch (e) {
        if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
          abort(e);
        return -e.errno;
      }
    }
    function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
      return dest;
    }
    Module["_memcpy"] = _memcpy;
    function ___syscall6(which, varargs) {
      SYSCALLS.varargs = varargs;
      try {
        var stream = SYSCALLS.getStreamFromFD();
        FS.close(stream);
        return 0;
      } catch (e) {
        if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
          abort(e);
        return -e.errno;
      }
    }
    var _cos = Math_cos;
    function _sbrk(bytes) {
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP);
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() {
          abort("cannot dynamically allocate, sbrk now has control");
        };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success)
          return -1 >>> 0;
      }
      return ret;
    }
    var _BItoD = true;
    function ___syscall54(which, varargs) {
      SYSCALLS.varargs = varargs;
      try {
        var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
        switch (op) {
          case 21505:
            {
              if (!stream.tty)
                return -ERRNO_CODES.ENOTTY;
              return 0;
            }
            ;
          case 21506:
            {
              if (!stream.tty)
                return -ERRNO_CODES.ENOTTY;
              return 0;
            }
            ;
          case 21519:
            {
              if (!stream.tty)
                return -ERRNO_CODES.ENOTTY;
              var argp = SYSCALLS.get();
              HEAP32[argp >> 2] = 0;
              return 0;
            }
            ;
          case 21520:
            {
              if (!stream.tty)
                return -ERRNO_CODES.ENOTTY;
              return -ERRNO_CODES.EINVAL;
            }
            ;
          case 21531:
            {
              var argp = SYSCALLS.get();
              return FS.ioctl(stream, op, argp);
            }
            ;
          default:
            abort("bad ioctl syscall " + op);
        }
      } catch (e) {
        if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
          abort(e);
        return -e.errno;
      }
    }
    var _ceilf = Math_ceil;
    function __embind_register_memory_view(rawType, dataTypeIndex, name) {
      var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];
      var TA = typeMapping[dataTypeIndex];
      function decodeMemoryView(handle) {
        handle = handle >> 2;
        var heap = HEAPU32;
        var size = heap[handle];
        var data = heap[handle + 1];
        return new TA(heap["buffer"], data, size);
      }
      name = readLatin1String(name);
      registerType(rawType, { name, fromWireType: decodeMemoryView, argPackAdvance: 8, readValueFromPointer: decodeMemoryView }, { ignoreDuplicateRegistrations: true });
    }
    function _time(ptr) {
      var ret = Date.now() / 1e3 | 0;
      if (ptr) {
        HEAP32[ptr >> 2] = ret;
      }
      return ret;
    }
    function _pthread_self() {
      return 0;
    }
    function ___syscall140(which, varargs) {
      SYSCALLS.varargs = varargs;
      try {
        var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
        var offset = offset_low;
        assert(offset_high === 0);
        FS.llseek(stream, offset, whence);
        HEAP32[result >> 2] = stream.position;
        if (stream.getdents && offset === 0 && whence === 0)
          stream.getdents = null;
        return 0;
      } catch (e) {
        if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
          abort(e);
        return -e.errno;
      }
    }
    function ___syscall146(which, varargs) {
      SYSCALLS.varargs = varargs;
      try {
        var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
        return SYSCALLS.doWritev(stream, iov, iovcnt);
      } catch (e) {
        if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
          abort(e);
        return -e.errno;
      }
    }
    function ___syscall221(which, varargs) {
      SYSCALLS.varargs = varargs;
      try {
        var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
        switch (cmd) {
          case 0:
            {
              var arg2 = SYSCALLS.get();
              if (arg2 < 0) {
                return -ERRNO_CODES.EINVAL;
              }
              var newStream;
              newStream = FS.open(stream.path, stream.flags, 0, arg2);
              return newStream.fd;
            }
            ;
          case 1:
          case 2:
            return 0;
          case 3:
            return stream.flags;
          case 4:
            {
              var arg2 = SYSCALLS.get();
              stream.flags |= arg2;
              return 0;
            }
            ;
          case 12:
          case 12:
            {
              var arg2 = SYSCALLS.get();
              var offset = 0;
              HEAP16[arg2 + offset >> 1] = 2;
              return 0;
            }
            ;
          case 13:
          case 14:
          case 13:
          case 14:
            return 0;
          case 16:
          case 8:
            return -ERRNO_CODES.EINVAL;
          case 9:
            ___setErrNo(ERRNO_CODES.EINVAL);
            return -1;
          default: {
            return -ERRNO_CODES.EINVAL;
          }
        }
      } catch (e) {
        if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
          abort(e);
        return -e.errno;
      }
    }
    function ___syscall145(which, varargs) {
      SYSCALLS.varargs = varargs;
      try {
        var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
        return SYSCALLS.doReadv(stream, iov, iovcnt);
      } catch (e) {
        if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
          abort(e);
        return -e.errno;
      }
    }
    var ___dso_handle = allocate(1, "i32*", ALLOC_STATIC);
    embind_init_charCodes();
    BindingError = Module["BindingError"] = extendError(Error, "BindingError");
    InternalError = Module["InternalError"] = extendError(Error, "InternalError");
    init_emval();
    UnboundTypeError = Module["UnboundTypeError"] = extendError(Error, "UnboundTypeError");
    FS.staticInit();
    __ATINIT__.unshift(function() {
      if (!Module["noFSInit"] && !FS.init.initialized)
        FS.init();
    });
    __ATMAIN__.push(function() {
      FS.ignorePermissions = false;
    });
    __ATEXIT__.push(function() {
      FS.quit();
    });
    Module["FS_createFolder"] = FS.createFolder;
    Module["FS_createPath"] = FS.createPath;
    Module["FS_createDataFile"] = FS.createDataFile;
    Module["FS_createPreloadedFile"] = FS.createPreloadedFile;
    Module["FS_createLazyFile"] = FS.createLazyFile;
    Module["FS_createLink"] = FS.createLink;
    Module["FS_createDevice"] = FS.createDevice;
    Module["FS_unlink"] = FS.unlink;
    __ATINIT__.unshift(function() {
      TTY.init();
    });
    __ATEXIT__.push(function() {
      TTY.shutdown();
    });
    if (ENVIRONMENT_IS_NODE) {
      fs = require_fs();
      NODEJS_PATH = require_path();
      NODEFS.staticInit();
    }
    var fs;
    var NODEJS_PATH;
    STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
    staticSealed = true;
    STACK_MAX = STACK_BASE + TOTAL_STACK;
    DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
    assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");
    var cttz_i8 = allocate([8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0], "i8", ALLOC_DYNAMIC);
    function invoke_iiii(index, a1, a2, a3) {
      try {
        return Module["dynCall_iiii"](index, a1, a2, a3);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_viiiii(index, a1, a2, a3, a4, a5) {
      try {
        Module["dynCall_viiiii"](index, a1, a2, a3, a4, a5);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_dii(index, a1, a2) {
      try {
        return Module["dynCall_dii"](index, a1, a2);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_vid(index, a1, a2) {
      try {
        Module["dynCall_vid"](index, a1, a2);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_di(index, a1) {
      try {
        return Module["dynCall_di"](index, a1);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_i(index) {
      try {
        return Module["dynCall_i"](index);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_vi(index, a1) {
      try {
        Module["dynCall_vi"](index, a1);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_vii(index, a1, a2) {
      try {
        Module["dynCall_vii"](index, a1, a2);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_ii(index, a1) {
      try {
        return Module["dynCall_ii"](index, a1);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_viii(index, a1, a2, a3) {
      try {
        Module["dynCall_viii"](index, a1, a2, a3);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_v(index) {
      try {
        Module["dynCall_v"](index);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_viid(index, a1, a2, a3) {
      try {
        Module["dynCall_viid"](index, a1, a2, a3);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_iiiii(index, a1, a2, a3, a4) {
      try {
        return Module["dynCall_iiiii"](index, a1, a2, a3, a4);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
      try {
        Module["dynCall_viiiiii"](index, a1, a2, a3, a4, a5, a6);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_iii(index, a1, a2) {
      try {
        return Module["dynCall_iii"](index, a1, a2);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    function invoke_viiii(index, a1, a2, a3, a4) {
      try {
        Module["dynCall_viiii"](index, a1, a2, a3, a4);
      } catch (e) {
        if (typeof e !== "number" && e !== "longjmp")
          throw e;
        asm["setThrew"](1, 0);
      }
    }
    Module.asmGlobalArg = { Math, Int8Array, Int16Array, Int32Array, Uint8Array, Uint16Array, Uint32Array, Float32Array, Float64Array, NaN: NaN, Infinity: Infinity };
    Module.asmLibraryArg = { abort, assert, invoke_iiii, invoke_viiiii, invoke_dii, invoke_vid, invoke_di, invoke_i, invoke_vi, invoke_vii, invoke_ii, invoke_viii, invoke_v, invoke_viid, invoke_iiiii, invoke_viiiiii, invoke_iii, invoke_viiii, _fabs, ___syscall221, _sin, floatReadValueFromPointer, simpleReadValueFromPointer, integerReadValueFromPointer, __embind_register_memory_view, throwInternalError, get_first_emval, _abort, count_emval_handles, _pthread_cleanup_push, __embind_register_integer, extendError, ___assert_fail, init_emval, __embind_register_void, ___cxa_find_matching_catch, _ceilf, getShiftFromSize, __embind_register_function, embind_init_charCodes, _emscripten_asm_const_33, throwBindingError, ___setErrNo, __emval_register, _sbrk, readLatin1String, ___cxa_allocate_exception, _emscripten_memcpy_big, __embind_register_bool, ___resumeException, __ZSt18uncaught_exceptionv, _sysconf, _embind_repr, __embind_register_std_wstring, createNamedFunction, __embind_register_emval, _cos, throwUnboundTypeError, _pthread_self, craftInvokerFunction, __emval_decref, _sqrt, __embind_register_float, makeLegalFunctionName, ___syscall54, ___unlock, heap32VectorToArray, _pthread_cleanup_pop, whenDependentTypesAreResolved, _exit, __embind_register_std_string, new_, ___cxa_atexit, registerType, ___cxa_throw, __exit, ___lock, ___syscall6, ___syscall5, ensureOverloadTable, __embind_register_constant, _time, requireFunction, runDestructors, getTypeName, _atexit, ___syscall140, exposePublicSymbol, _emscripten_asm_const_5, _emscripten_asm_const_4, replacePublicSymbol, ___syscall145, ___syscall146, STACKTOP, STACK_MAX, tempDoublePtr, ABORT, cttz_i8, ___dso_handle };
    var asm = function(global, env, buffer2) {
      ;
      var a = new global.Int8Array(buffer2);
      var b = new global.Int16Array(buffer2);
      var c = new global.Int32Array(buffer2);
      var d = new global.Uint8Array(buffer2);
      var e = new global.Uint16Array(buffer2);
      var f = new global.Uint32Array(buffer2);
      var g = new global.Float32Array(buffer2);
      var h = new global.Float64Array(buffer2);
      var i2 = env.STACKTOP | 0;
      var j = env.STACK_MAX | 0;
      var k = env.tempDoublePtr | 0;
      var l = env.ABORT | 0;
      var m = env.cttz_i8 | 0;
      var n = env.___dso_handle | 0;
      var o = 0;
      var p = 0;
      var q = 0;
      var r = 0;
      var s = global.NaN, t = global.Infinity;
      var u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0;
      var D = 0;
      var E = 0;
      var F = 0;
      var G = 0;
      var H = 0;
      var I = 0;
      var J = 0;
      var K = 0;
      var L = 0;
      var M = 0;
      var N = global.Math.floor;
      var O = global.Math.abs;
      var P = global.Math.sqrt;
      var Q = global.Math.pow;
      var R = global.Math.cos;
      var S = global.Math.sin;
      var T = global.Math.tan;
      var U = global.Math.acos;
      var V = global.Math.asin;
      var W = global.Math.atan;
      var X = global.Math.atan2;
      var Y = global.Math.exp;
      var Z = global.Math.log;
      var _ = global.Math.ceil;
      var $ = global.Math.imul;
      var aa = global.Math.min;
      var ba = global.Math.clz32;
      var ca = env.abort;
      var da = env.assert;
      var ea = env.invoke_iiii;
      var fa = env.invoke_viiiii;
      var ga = env.invoke_dii;
      var ha = env.invoke_vid;
      var ia = env.invoke_di;
      var ja = env.invoke_i;
      var ka = env.invoke_vi;
      var la = env.invoke_vii;
      var ma = env.invoke_ii;
      var na = env.invoke_viii;
      var oa = env.invoke_v;
      var pa = env.invoke_viid;
      var qa = env.invoke_iiiii;
      var ra = env.invoke_viiiiii;
      var sa = env.invoke_iii;
      var ta = env.invoke_viiii;
      var ua = env._fabs;
      var va = env.___syscall221;
      var wa = env._sin;
      var xa = env.floatReadValueFromPointer;
      var ya = env.simpleReadValueFromPointer;
      var za = env.integerReadValueFromPointer;
      var Aa = env.__embind_register_memory_view;
      var Ba = env.throwInternalError;
      var Ca = env.get_first_emval;
      var Da = env._abort;
      var Ea = env.count_emval_handles;
      var Fa = env._pthread_cleanup_push;
      var Ga = env.__embind_register_integer;
      var Ha = env.extendError;
      var Ia = env.___assert_fail;
      var Ja = env.init_emval;
      var Ka = env.__embind_register_void;
      var La = env.___cxa_find_matching_catch;
      var Ma = env._ceilf;
      var Na = env.getShiftFromSize;
      var Oa = env.__embind_register_function;
      var Pa = env.embind_init_charCodes;
      var Qa = env._emscripten_asm_const_33;
      var Ra = env.throwBindingError;
      var Sa = env.___setErrNo;
      var Ta = env.__emval_register;
      var Ua = env._sbrk;
      var Va = env.readLatin1String;
      var Wa = env.___cxa_allocate_exception;
      var Xa = env._emscripten_memcpy_big;
      var Ya = env.__embind_register_bool;
      var Za = env.___resumeException;
      var _a = env.__ZSt18uncaught_exceptionv;
      var $a = env._sysconf;
      var ab = env._embind_repr;
      var bb = env.__embind_register_std_wstring;
      var cb = env.createNamedFunction;
      var db = env.__embind_register_emval;
      var eb = env._cos;
      var fb = env.throwUnboundTypeError;
      var gb = env._pthread_self;
      var hb = env.craftInvokerFunction;
      var ib = env.__emval_decref;
      var jb = env._sqrt;
      var kb = env.__embind_register_float;
      var lb = env.makeLegalFunctionName;
      var mb = env.___syscall54;
      var nb = env.___unlock;
      var ob = env.heap32VectorToArray;
      var pb = env._pthread_cleanup_pop;
      var qb = env.whenDependentTypesAreResolved;
      var rb = env._exit;
      var sb = env.__embind_register_std_string;
      var tb = env.new_;
      var ub = env.___cxa_atexit;
      var vb = env.registerType;
      var wb = env.___cxa_throw;
      var xb = env.__exit;
      var yb = env.___lock;
      var zb = env.___syscall6;
      var Ab = env.___syscall5;
      var Bb = env.ensureOverloadTable;
      var Cb = env.__embind_register_constant;
      var Db = env._time;
      var Eb = env.requireFunction;
      var Fb = env.runDestructors;
      var Gb = env.getTypeName;
      var Hb = env._atexit;
      var Ib = env.___syscall140;
      var Jb = env.exposePublicSymbol;
      var Kb = env._emscripten_asm_const_5;
      var Lb = env._emscripten_asm_const_4;
      var Mb = env.replacePublicSymbol;
      var Nb = env.___syscall145;
      var Ob = env.___syscall146;
      var Pb = 0;
      function dd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              m2 = m2 + (D2 << 1) | 0;
              n2 = n2 + (D2 << 1) | 0;
            }
          }
        }
        n2 = k2 + 1179664 | 0;
        m2 = D2 + 1 | 0;
        w2 = 0 - D2 | 0;
        u2 = 1 - D2 | 0;
        v2 = ~D2;
        t2 = f2 + 4 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + m2 | 0;
              y2 = 1;
              g2 = e2 + ((f2 << 1) + 2) | 0;
              e2 = o2 + (m2 << 1) | 0;
              m2 = 0;
              b:
                while (1) {
                  if (x2) {
                    s2 = 1;
                    r2 = g2;
                    q2 = m2;
                    while (1) {
                      do {
                        if ((d[r2 >> 0] | 0 | 0) > (j2 | 0)) {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          m2 = q2;
                        } else {
                          a[l2 >> 0] = -1;
                          m2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (m2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = m2;
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          f2 = b[e2 + (u2 << 1) >> 1] | 0;
                          o2 = f2 << 16 >> 16;
                          m2 = b[e2 + (v2 << 1) >> 1] | 0;
                          p2 = m2 << 16 >> 16;
                          g2 = m2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (g2) {
                              b[e2 >> 1] = m2;
                              m2 = p2 * 7 | 0;
                              g2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
                              g2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + s2;
                              g2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + y2;
                              g2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[g2 >> 2] | 0) < (s2 | 0))
                                c[g2 >> 2] = s2;
                              c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                              m2 = q2;
                              break;
                            }
                            m2 = b[e2 + -2 >> 1] | 0;
                            if (m2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = m2;
                              m2 = (m2 << 16 >> 16) * 7 | 0;
                              p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                              p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                              p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                              m2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) >= (s2 | 0)) {
                                m2 = q2;
                                break;
                              }
                              c[m2 >> 2] = s2;
                              m2 = q2;
                              break;
                            } else {
                              m2 = q2 + 1 | 0;
                              if ((q2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = m2;
                              c[k2 + 1179664 + (q2 << 2) >> 2] = m2 << 16 >> 16;
                              q2 = q2 * 7 | 0;
                              c[k2 + 1310736 + (q2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (q2 + 1 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (q2 + 3 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 4 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (q2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (g2) {
                            m2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            o2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            if ((m2 | 0) > (o2 | 0)) {
                              b[e2 >> 1] = o2;
                              if ((q2 | 0) > 0) {
                                g2 = 0;
                                f2 = n2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (m2 | 0))
                                    c[f2 >> 2] = o2;
                                  g2 = g2 + 1 | 0;
                                  if ((g2 | 0) >= (q2 | 0)) {
                                    m2 = o2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                m2 = o2;
                            } else {
                              b[e2 >> 1] = m2;
                              if ((m2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                                g2 = 0;
                                f2 = n2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (o2 | 0))
                                    c[f2 >> 2] = m2;
                                  g2 = g2 + 1 | 0;
                                  if ((g2 | 0) >= (q2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          g2 = b[e2 + -2 >> 1] | 0;
                          if (g2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = f2;
                            m2 = o2 * 7 | 0;
                            g2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
                            g2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + s2;
                            g2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + y2;
                            g2 = k2 + 1310736 + (m2 + -4 << 2) | 0;
                            if ((c[g2 >> 2] | 0) > (s2 | 0))
                              c[g2 >> 2] = s2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          m2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                          o2 = c[k2 + 1179664 + ((g2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((m2 | 0) > (o2 | 0)) {
                            b[e2 >> 1] = o2;
                            if ((q2 | 0) > 0) {
                              g2 = 0;
                              f2 = n2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (m2 | 0))
                                  c[f2 >> 2] = o2;
                                g2 = g2 + 1 | 0;
                                if ((g2 | 0) >= (q2 | 0)) {
                                  m2 = o2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              m2 = o2;
                          } else {
                            b[e2 >> 1] = m2;
                            if ((m2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                              g2 = 0;
                              f2 = n2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (o2 | 0))
                                  c[f2 >> 2] = m2;
                                g2 = g2 + 1 | 0;
                                if ((g2 | 0) >= (q2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          m2 = (m2 << 16 >> 16) * 7 | 0;
                          p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                          p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                          m2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                          c[m2 >> 2] = (c[m2 >> 2] | 0) + y2;
                          m2 = q2;
                        }
                      } while (0);
                      s2 = s2 + 1 | 0;
                      g2 = r2 + 2 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((s2 | 0) >= (z2 | 0))
                        break;
                      else {
                        r2 = g2;
                        q2 = m2;
                      }
                    }
                  }
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (A2 | 0)) {
                    o2 = m2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    g2 = g2 + t2 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              o2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((o2 | 0) < 1)
            m2 = 1;
          else {
            g2 = 1;
            m2 = 1;
            while (1) {
              l2 = c[n2 >> 2] | 0;
              if ((l2 | 0) == (g2 | 0)) {
                l2 = m2;
                m2 = m2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[n2 >> 2] = l2;
              if ((g2 | 0) < (o2 | 0)) {
                g2 = g2 + 1 | 0;
                n2 = n2 + 4 | 0;
              } else
                break;
            }
          }
          f2 = k2 + 8 | 0;
          l2 = m2 + -1 | 0;
          c[f2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((m2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[f2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              e2 = 0;
              do {
                n2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                g2 = e2 * 7 | 0;
                l2 = k2 + 12 + (n2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (g2 << 2) >> 2] | 0);
                l2 = n2 << 1;
                m2 = k2 + 655376 + (l2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +(c[k2 + 1310736 + (g2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (g2 + 2 << 2) >> 2] | 0);
                n2 = n2 << 2;
                l2 = k2 + 131084 + (n2 << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 1) << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 2) << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                m2 = k2 + 131084 + ((n2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (g2 + 6 << 2) >> 2] | 0;
                if ((c[m2 >> 2] | 0) < (l2 | 0))
                  c[m2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (o2 | 0));
            }
            if ((c[f2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[f2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function ed(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              m2 = m2 + (D2 << 1) | 0;
              n2 = n2 + (D2 << 1) | 0;
            }
          }
        }
        n2 = k2 + 1179664 | 0;
        m2 = D2 + 1 | 0;
        w2 = 0 - D2 | 0;
        u2 = 1 - D2 | 0;
        v2 = ~D2;
        t2 = (f2 << 1) + 8 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + m2 | 0;
              y2 = 1;
              g2 = e2 + ((f2 << 2) + 4) | 0;
              e2 = o2 + (m2 << 1) | 0;
              m2 = 0;
              b:
                while (1) {
                  if (x2) {
                    s2 = 1;
                    r2 = g2;
                    q2 = m2;
                    while (1) {
                      do {
                        if ((d[r2 + 1 >> 0] | 0 | 0) > (j2 | 0)) {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          m2 = q2;
                        } else {
                          a[l2 >> 0] = -1;
                          m2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (m2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = m2;
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          f2 = b[e2 + (u2 << 1) >> 1] | 0;
                          o2 = f2 << 16 >> 16;
                          m2 = b[e2 + (v2 << 1) >> 1] | 0;
                          p2 = m2 << 16 >> 16;
                          g2 = m2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (g2) {
                              b[e2 >> 1] = m2;
                              m2 = p2 * 7 | 0;
                              g2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
                              g2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + s2;
                              g2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + y2;
                              g2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[g2 >> 2] | 0) < (s2 | 0))
                                c[g2 >> 2] = s2;
                              c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                              m2 = q2;
                              break;
                            }
                            m2 = b[e2 + -2 >> 1] | 0;
                            if (m2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = m2;
                              m2 = (m2 << 16 >> 16) * 7 | 0;
                              p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                              p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                              p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                              m2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) >= (s2 | 0)) {
                                m2 = q2;
                                break;
                              }
                              c[m2 >> 2] = s2;
                              m2 = q2;
                              break;
                            } else {
                              m2 = q2 + 1 | 0;
                              if ((q2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = m2;
                              c[k2 + 1179664 + (q2 << 2) >> 2] = m2 << 16 >> 16;
                              q2 = q2 * 7 | 0;
                              c[k2 + 1310736 + (q2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (q2 + 1 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (q2 + 3 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 4 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (q2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (g2) {
                            m2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            o2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            if ((m2 | 0) > (o2 | 0)) {
                              b[e2 >> 1] = o2;
                              if ((q2 | 0) > 0) {
                                g2 = 0;
                                f2 = n2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (m2 | 0))
                                    c[f2 >> 2] = o2;
                                  g2 = g2 + 1 | 0;
                                  if ((g2 | 0) >= (q2 | 0)) {
                                    m2 = o2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                m2 = o2;
                            } else {
                              b[e2 >> 1] = m2;
                              if ((m2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                                g2 = 0;
                                f2 = n2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (o2 | 0))
                                    c[f2 >> 2] = m2;
                                  g2 = g2 + 1 | 0;
                                  if ((g2 | 0) >= (q2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          g2 = b[e2 + -2 >> 1] | 0;
                          if (g2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = f2;
                            m2 = o2 * 7 | 0;
                            g2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
                            g2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + s2;
                            g2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + y2;
                            g2 = k2 + 1310736 + (m2 + -4 << 2) | 0;
                            if ((c[g2 >> 2] | 0) > (s2 | 0))
                              c[g2 >> 2] = s2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          m2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                          o2 = c[k2 + 1179664 + ((g2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((m2 | 0) > (o2 | 0)) {
                            b[e2 >> 1] = o2;
                            if ((q2 | 0) > 0) {
                              g2 = 0;
                              f2 = n2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (m2 | 0))
                                  c[f2 >> 2] = o2;
                                g2 = g2 + 1 | 0;
                                if ((g2 | 0) >= (q2 | 0)) {
                                  m2 = o2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              m2 = o2;
                          } else {
                            b[e2 >> 1] = m2;
                            if ((m2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                              g2 = 0;
                              f2 = n2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (o2 | 0))
                                  c[f2 >> 2] = m2;
                                g2 = g2 + 1 | 0;
                                if ((g2 | 0) >= (q2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          m2 = (m2 << 16 >> 16) * 7 | 0;
                          p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                          p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                          m2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                          c[m2 >> 2] = (c[m2 >> 2] | 0) + y2;
                          m2 = q2;
                        }
                      } while (0);
                      s2 = s2 + 1 | 0;
                      g2 = r2 + 4 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((s2 | 0) >= (z2 | 0))
                        break;
                      else {
                        r2 = g2;
                        q2 = m2;
                      }
                    }
                  }
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (A2 | 0)) {
                    o2 = m2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    g2 = g2 + t2 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              o2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((o2 | 0) < 1)
            m2 = 1;
          else {
            g2 = 1;
            m2 = 1;
            while (1) {
              l2 = c[n2 >> 2] | 0;
              if ((l2 | 0) == (g2 | 0)) {
                l2 = m2;
                m2 = m2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[n2 >> 2] = l2;
              if ((g2 | 0) < (o2 | 0)) {
                g2 = g2 + 1 | 0;
                n2 = n2 + 4 | 0;
              } else
                break;
            }
          }
          f2 = k2 + 8 | 0;
          l2 = m2 + -1 | 0;
          c[f2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((m2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[f2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              e2 = 0;
              do {
                n2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                g2 = e2 * 7 | 0;
                l2 = k2 + 12 + (n2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (g2 << 2) >> 2] | 0);
                l2 = n2 << 1;
                m2 = k2 + 655376 + (l2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +(c[k2 + 1310736 + (g2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (g2 + 2 << 2) >> 2] | 0);
                n2 = n2 << 2;
                l2 = k2 + 131084 + (n2 << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 1) << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 2) << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                m2 = k2 + 131084 + ((n2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (g2 + 6 << 2) >> 2] | 0;
                if ((c[m2 >> 2] | 0) < (l2 | 0))
                  c[m2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (o2 | 0));
            }
            if ((c[f2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[f2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function fd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              m2 = m2 + (D2 << 1) | 0;
              n2 = n2 + (D2 << 1) | 0;
            }
          }
        }
        n2 = k2 + 1179664 | 0;
        m2 = D2 + 1 | 0;
        w2 = 0 - D2 | 0;
        u2 = 1 - D2 | 0;
        v2 = ~D2;
        t2 = (f2 << 1) + 8 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + m2 | 0;
              y2 = 1;
              g2 = e2 + ((f2 << 2) + 4) | 0;
              e2 = o2 + (m2 << 1) | 0;
              m2 = 0;
              b:
                while (1) {
                  if (x2) {
                    s2 = 1;
                    r2 = g2;
                    q2 = m2;
                    while (1) {
                      do {
                        if ((d[r2 >> 0] | 0 | 0) > (j2 | 0)) {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          m2 = q2;
                        } else {
                          a[l2 >> 0] = -1;
                          m2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (m2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = m2;
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          f2 = b[e2 + (u2 << 1) >> 1] | 0;
                          o2 = f2 << 16 >> 16;
                          m2 = b[e2 + (v2 << 1) >> 1] | 0;
                          p2 = m2 << 16 >> 16;
                          g2 = m2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (g2) {
                              b[e2 >> 1] = m2;
                              m2 = p2 * 7 | 0;
                              g2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
                              g2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + s2;
                              g2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + y2;
                              g2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[g2 >> 2] | 0) < (s2 | 0))
                                c[g2 >> 2] = s2;
                              c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                              m2 = q2;
                              break;
                            }
                            m2 = b[e2 + -2 >> 1] | 0;
                            if (m2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = m2;
                              m2 = (m2 << 16 >> 16) * 7 | 0;
                              p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                              p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                              p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                              m2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) >= (s2 | 0)) {
                                m2 = q2;
                                break;
                              }
                              c[m2 >> 2] = s2;
                              m2 = q2;
                              break;
                            } else {
                              m2 = q2 + 1 | 0;
                              if ((q2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = m2;
                              c[k2 + 1179664 + (q2 << 2) >> 2] = m2 << 16 >> 16;
                              q2 = q2 * 7 | 0;
                              c[k2 + 1310736 + (q2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (q2 + 1 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (q2 + 3 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 4 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (q2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (g2) {
                            m2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            o2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            if ((m2 | 0) > (o2 | 0)) {
                              b[e2 >> 1] = o2;
                              if ((q2 | 0) > 0) {
                                g2 = 0;
                                f2 = n2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (m2 | 0))
                                    c[f2 >> 2] = o2;
                                  g2 = g2 + 1 | 0;
                                  if ((g2 | 0) >= (q2 | 0)) {
                                    m2 = o2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                m2 = o2;
                            } else {
                              b[e2 >> 1] = m2;
                              if ((m2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                                g2 = 0;
                                f2 = n2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (o2 | 0))
                                    c[f2 >> 2] = m2;
                                  g2 = g2 + 1 | 0;
                                  if ((g2 | 0) >= (q2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          g2 = b[e2 + -2 >> 1] | 0;
                          if (g2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = f2;
                            m2 = o2 * 7 | 0;
                            g2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
                            g2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + s2;
                            g2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + y2;
                            g2 = k2 + 1310736 + (m2 + -4 << 2) | 0;
                            if ((c[g2 >> 2] | 0) > (s2 | 0))
                              c[g2 >> 2] = s2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          m2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                          o2 = c[k2 + 1179664 + ((g2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((m2 | 0) > (o2 | 0)) {
                            b[e2 >> 1] = o2;
                            if ((q2 | 0) > 0) {
                              g2 = 0;
                              f2 = n2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (m2 | 0))
                                  c[f2 >> 2] = o2;
                                g2 = g2 + 1 | 0;
                                if ((g2 | 0) >= (q2 | 0)) {
                                  m2 = o2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              m2 = o2;
                          } else {
                            b[e2 >> 1] = m2;
                            if ((m2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                              g2 = 0;
                              f2 = n2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (o2 | 0))
                                  c[f2 >> 2] = m2;
                                g2 = g2 + 1 | 0;
                                if ((g2 | 0) >= (q2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          m2 = (m2 << 16 >> 16) * 7 | 0;
                          p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                          p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                          m2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                          c[m2 >> 2] = (c[m2 >> 2] | 0) + y2;
                          m2 = q2;
                        }
                      } while (0);
                      s2 = s2 + 1 | 0;
                      g2 = r2 + 4 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((s2 | 0) >= (z2 | 0))
                        break;
                      else {
                        r2 = g2;
                        q2 = m2;
                      }
                    }
                  }
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (A2 | 0)) {
                    o2 = m2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    g2 = g2 + t2 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              o2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((o2 | 0) < 1)
            m2 = 1;
          else {
            g2 = 1;
            m2 = 1;
            while (1) {
              l2 = c[n2 >> 2] | 0;
              if ((l2 | 0) == (g2 | 0)) {
                l2 = m2;
                m2 = m2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[n2 >> 2] = l2;
              if ((g2 | 0) < (o2 | 0)) {
                g2 = g2 + 1 | 0;
                n2 = n2 + 4 | 0;
              } else
                break;
            }
          }
          f2 = k2 + 8 | 0;
          l2 = m2 + -1 | 0;
          c[f2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((m2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[f2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              e2 = 0;
              do {
                n2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                g2 = e2 * 7 | 0;
                l2 = k2 + 12 + (n2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (g2 << 2) >> 2] | 0);
                l2 = n2 << 1;
                m2 = k2 + 655376 + (l2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +(c[k2 + 1310736 + (g2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (g2 + 2 << 2) >> 2] | 0);
                n2 = n2 << 2;
                l2 = k2 + 131084 + (n2 << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 1) << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 2) << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                m2 = k2 + 131084 + ((n2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (g2 + 6 << 2) >> 2] | 0;
                if ((c[m2 >> 2] | 0) < (l2 | 0))
                  c[m2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (o2 | 0));
            }
            if ((c[f2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[f2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function gd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        p2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = p2;
          n2 = p2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = j2 * 3 | 0;
        z2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          j2 = p2;
          m2 = p2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              j2 = j2 + (f2 << 1) | 0;
              m2 = m2 + (f2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        w2 = 0 - f2 | 0;
        u2 = 1 - f2 | 0;
        v2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              o2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              y2 = 1;
              n2 = e2 + (l2 * 3 | 0) | 0;
              e2 = p2 + (l2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (x2) {
                    l2 = o2;
                    t2 = 1;
                    s2 = n2;
                    r2 = j2;
                    while (1) {
                      do {
                        if (((d[s2 + 1 >> 0] | 0) + (d[s2 >> 0] | 0) + (d[s2 + 2 >> 0] | 0) | 0) > (A2 | 0)) {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = r2;
                        } else {
                          a[l2 >> 0] = -1;
                          j2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          o2 = b[e2 + (u2 << 1) >> 1] | 0;
                          p2 = o2 << 16 >> 16;
                          j2 = b[e2 + (v2 << 1) >> 1] | 0;
                          q2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (o2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[e2 >> 1] = j2;
                              j2 = q2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (t2 | 0))
                                c[n2 >> 2] = t2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                              j2 = r2;
                              break;
                            }
                            j2 = b[e2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                              q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                              q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (t2 | 0)) {
                                j2 = r2;
                                break;
                              }
                              c[j2 >> 2] = t2;
                              j2 = r2;
                              break;
                            } else {
                              j2 = r2 + 1 | 0;
                              if ((r2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = j2;
                              c[k2 + 1179664 + (r2 << 2) >> 2] = j2 << 16 >> 16;
                              r2 = r2 * 7 | 0;
                              c[k2 + 1310736 + (r2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (r2 + 1 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 3 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 4 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            p2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (p2 | 0)) {
                              b[e2 >> 1] = p2;
                              if ((r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (j2 | 0))
                                    c[o2 >> 2] = p2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0)) {
                                    j2 = p2;
                                    break;
                                  } else
                                    o2 = o2 + 4 | 0;
                                }
                              } else
                                j2 = p2;
                            } else {
                              b[e2 >> 1] = j2;
                              if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (p2 | 0))
                                    c[o2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0))
                                    break;
                                  else
                                    o2 = o2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          n2 = b[e2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = o2;
                            j2 = p2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (t2 | 0))
                              c[n2 >> 2] = t2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                          p2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (p2 | 0)) {
                            b[e2 >> 1] = p2;
                            if ((r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (j2 | 0))
                                  c[o2 >> 2] = p2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0)) {
                                  j2 = p2;
                                  break;
                                } else
                                  o2 = o2 + 4 | 0;
                              }
                            } else
                              j2 = p2;
                          } else {
                            b[e2 >> 1] = j2;
                            if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (p2 | 0))
                                  c[o2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0))
                                  break;
                                else
                                  o2 = o2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                          q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + y2;
                          j2 = r2;
                        }
                      } while (0);
                      t2 = t2 + 1 | 0;
                      n2 = s2 + 3 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((t2 | 0) >= (z2 | 0))
                        break;
                      else {
                        s2 = n2;
                        r2 = j2;
                      }
                    }
                  } else
                    l2 = o2;
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (B2 | 0)) {
                    p2 = j2;
                    D2 = 52;
                    break a;
                  } else {
                    o2 = l2 + 2 | 0;
                    n2 = n2 + 6 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              p2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((p2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (p2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[o2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              e2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                n2 = e2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function hd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        p2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = p2;
          n2 = p2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = j2 * 3 | 0;
        z2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          j2 = p2;
          m2 = p2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              j2 = j2 + (f2 << 1) | 0;
              m2 = m2 + (f2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        w2 = 0 - f2 | 0;
        u2 = 1 - f2 | 0;
        v2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              o2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              y2 = 1;
              n2 = e2 + (l2 << 1) | 0;
              e2 = p2 + (l2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (x2) {
                    l2 = o2;
                    t2 = 1;
                    s2 = n2;
                    r2 = j2;
                    while (1) {
                      p2 = d[s2 >> 0] | 0;
                      q2 = d[s2 + 1 >> 0] | 0;
                      do {
                        if (((p2 & 248) + 10 + (p2 << 5 & 224) + (q2 >>> 3 & 28) + (q2 << 3 & 248) | 0) > (A2 | 0)) {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = r2;
                        } else {
                          a[l2 >> 0] = -1;
                          j2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          o2 = b[e2 + (u2 << 1) >> 1] | 0;
                          p2 = o2 << 16 >> 16;
                          j2 = b[e2 + (v2 << 1) >> 1] | 0;
                          q2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (o2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[e2 >> 1] = j2;
                              j2 = q2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (t2 | 0))
                                c[n2 >> 2] = t2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                              j2 = r2;
                              break;
                            }
                            j2 = b[e2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                              q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                              q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (t2 | 0)) {
                                j2 = r2;
                                break;
                              }
                              c[j2 >> 2] = t2;
                              j2 = r2;
                              break;
                            } else {
                              j2 = r2 + 1 | 0;
                              if ((r2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = j2;
                              c[k2 + 1179664 + (r2 << 2) >> 2] = j2 << 16 >> 16;
                              r2 = r2 * 7 | 0;
                              c[k2 + 1310736 + (r2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (r2 + 1 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 3 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 4 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            p2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (p2 | 0)) {
                              b[e2 >> 1] = p2;
                              if ((r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (j2 | 0))
                                    c[o2 >> 2] = p2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0)) {
                                    j2 = p2;
                                    break;
                                  } else
                                    o2 = o2 + 4 | 0;
                                }
                              } else
                                j2 = p2;
                            } else {
                              b[e2 >> 1] = j2;
                              if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (p2 | 0))
                                    c[o2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0))
                                    break;
                                  else
                                    o2 = o2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          n2 = b[e2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = o2;
                            j2 = p2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (t2 | 0))
                              c[n2 >> 2] = t2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                          p2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (p2 | 0)) {
                            b[e2 >> 1] = p2;
                            if ((r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (j2 | 0))
                                  c[o2 >> 2] = p2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0)) {
                                  j2 = p2;
                                  break;
                                } else
                                  o2 = o2 + 4 | 0;
                              }
                            } else
                              j2 = p2;
                          } else {
                            b[e2 >> 1] = j2;
                            if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (p2 | 0))
                                  c[o2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0))
                                  break;
                                else
                                  o2 = o2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                          q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + y2;
                          j2 = r2;
                        }
                      } while (0);
                      t2 = t2 + 1 | 0;
                      n2 = s2 + 2 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((t2 | 0) >= (z2 | 0))
                        break;
                      else {
                        s2 = n2;
                        r2 = j2;
                      }
                    }
                  } else
                    l2 = o2;
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (B2 | 0)) {
                    p2 = j2;
                    D2 = 52;
                    break a;
                  } else {
                    o2 = l2 + 2 | 0;
                    n2 = n2 + 4 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              p2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((p2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (p2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[o2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              e2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                n2 = e2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function id(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        p2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = p2;
          n2 = p2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = j2 * 3 | 0;
        z2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          j2 = p2;
          m2 = p2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              j2 = j2 + (f2 << 1) | 0;
              m2 = m2 + (f2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        w2 = 0 - f2 | 0;
        u2 = 1 - f2 | 0;
        v2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              o2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              y2 = 1;
              n2 = e2 + (l2 << 2) | 0;
              e2 = p2 + (l2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (x2) {
                    l2 = o2;
                    t2 = 1;
                    s2 = n2;
                    r2 = j2;
                    while (1) {
                      do {
                        if (((d[s2 + 1 >> 0] | 0) + (d[s2 >> 0] | 0) + (d[s2 + 2 >> 0] | 0) | 0) > (A2 | 0)) {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = r2;
                        } else {
                          a[l2 >> 0] = -1;
                          j2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          o2 = b[e2 + (u2 << 1) >> 1] | 0;
                          p2 = o2 << 16 >> 16;
                          j2 = b[e2 + (v2 << 1) >> 1] | 0;
                          q2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (o2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[e2 >> 1] = j2;
                              j2 = q2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (t2 | 0))
                                c[n2 >> 2] = t2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                              j2 = r2;
                              break;
                            }
                            j2 = b[e2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                              q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                              q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (t2 | 0)) {
                                j2 = r2;
                                break;
                              }
                              c[j2 >> 2] = t2;
                              j2 = r2;
                              break;
                            } else {
                              j2 = r2 + 1 | 0;
                              if ((r2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = j2;
                              c[k2 + 1179664 + (r2 << 2) >> 2] = j2 << 16 >> 16;
                              r2 = r2 * 7 | 0;
                              c[k2 + 1310736 + (r2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (r2 + 1 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 3 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 4 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            p2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (p2 | 0)) {
                              b[e2 >> 1] = p2;
                              if ((r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (j2 | 0))
                                    c[o2 >> 2] = p2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0)) {
                                    j2 = p2;
                                    break;
                                  } else
                                    o2 = o2 + 4 | 0;
                                }
                              } else
                                j2 = p2;
                            } else {
                              b[e2 >> 1] = j2;
                              if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (p2 | 0))
                                    c[o2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0))
                                    break;
                                  else
                                    o2 = o2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          n2 = b[e2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = o2;
                            j2 = p2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (t2 | 0))
                              c[n2 >> 2] = t2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                          p2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (p2 | 0)) {
                            b[e2 >> 1] = p2;
                            if ((r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (j2 | 0))
                                  c[o2 >> 2] = p2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0)) {
                                  j2 = p2;
                                  break;
                                } else
                                  o2 = o2 + 4 | 0;
                              }
                            } else
                              j2 = p2;
                          } else {
                            b[e2 >> 1] = j2;
                            if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (p2 | 0))
                                  c[o2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0))
                                  break;
                                else
                                  o2 = o2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                          q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + y2;
                          j2 = r2;
                        }
                      } while (0);
                      t2 = t2 + 1 | 0;
                      n2 = s2 + 4 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((t2 | 0) >= (z2 | 0))
                        break;
                      else {
                        s2 = n2;
                        r2 = j2;
                      }
                    }
                  } else
                    l2 = o2;
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (B2 | 0)) {
                    p2 = j2;
                    D2 = 52;
                    break a;
                  } else {
                    o2 = l2 + 2 | 0;
                    n2 = n2 + 8 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              p2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((p2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (p2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[o2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              e2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                n2 = e2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function jd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        p2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = p2;
          n2 = p2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = j2 * 3 | 0;
        z2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          j2 = p2;
          m2 = p2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              j2 = j2 + (f2 << 1) | 0;
              m2 = m2 + (f2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        w2 = 0 - f2 | 0;
        u2 = 1 - f2 | 0;
        v2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              o2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              y2 = 1;
              n2 = e2 + (l2 << 1) | 0;
              e2 = p2 + (l2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (x2) {
                    l2 = o2;
                    t2 = 1;
                    s2 = n2;
                    r2 = j2;
                    while (1) {
                      q2 = d[s2 >> 0] | 0;
                      do {
                        if (((q2 & 240) + 24 + (q2 << 4 & 240) + ((d[s2 + 1 >> 0] | 0) & 240) | 0) > (A2 | 0)) {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = r2;
                        } else {
                          a[l2 >> 0] = -1;
                          j2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          o2 = b[e2 + (u2 << 1) >> 1] | 0;
                          p2 = o2 << 16 >> 16;
                          j2 = b[e2 + (v2 << 1) >> 1] | 0;
                          q2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (o2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[e2 >> 1] = j2;
                              j2 = q2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (t2 | 0))
                                c[n2 >> 2] = t2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                              j2 = r2;
                              break;
                            }
                            j2 = b[e2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                              q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                              q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (t2 | 0)) {
                                j2 = r2;
                                break;
                              }
                              c[j2 >> 2] = t2;
                              j2 = r2;
                              break;
                            } else {
                              j2 = r2 + 1 | 0;
                              if ((r2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = j2;
                              c[k2 + 1179664 + (r2 << 2) >> 2] = j2 << 16 >> 16;
                              r2 = r2 * 7 | 0;
                              c[k2 + 1310736 + (r2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (r2 + 1 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 3 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 4 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            p2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (p2 | 0)) {
                              b[e2 >> 1] = p2;
                              if ((r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (j2 | 0))
                                    c[o2 >> 2] = p2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0)) {
                                    j2 = p2;
                                    break;
                                  } else
                                    o2 = o2 + 4 | 0;
                                }
                              } else
                                j2 = p2;
                            } else {
                              b[e2 >> 1] = j2;
                              if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (p2 | 0))
                                    c[o2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0))
                                    break;
                                  else
                                    o2 = o2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          n2 = b[e2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = o2;
                            j2 = p2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (t2 | 0))
                              c[n2 >> 2] = t2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                          p2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (p2 | 0)) {
                            b[e2 >> 1] = p2;
                            if ((r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (j2 | 0))
                                  c[o2 >> 2] = p2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0)) {
                                  j2 = p2;
                                  break;
                                } else
                                  o2 = o2 + 4 | 0;
                              }
                            } else
                              j2 = p2;
                          } else {
                            b[e2 >> 1] = j2;
                            if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (p2 | 0))
                                  c[o2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0))
                                  break;
                                else
                                  o2 = o2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                          q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + y2;
                          j2 = r2;
                        }
                      } while (0);
                      t2 = t2 + 1 | 0;
                      n2 = s2 + 2 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((t2 | 0) >= (z2 | 0))
                        break;
                      else {
                        s2 = n2;
                        r2 = j2;
                      }
                    }
                  } else
                    l2 = o2;
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (B2 | 0)) {
                    p2 = j2;
                    D2 = 52;
                    break a;
                  } else {
                    o2 = l2 + 2 | 0;
                    n2 = n2 + 4 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              p2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((p2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (p2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[o2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              e2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                n2 = e2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function kd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        p2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = p2;
          n2 = p2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = j2 * 3 | 0;
        z2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          j2 = p2;
          m2 = p2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              j2 = j2 + (f2 << 1) | 0;
              m2 = m2 + (f2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        w2 = 0 - f2 | 0;
        u2 = 1 - f2 | 0;
        v2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              o2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              y2 = 1;
              n2 = e2 + (l2 << 1) | 0;
              e2 = p2 + (l2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (x2) {
                    l2 = o2;
                    t2 = 1;
                    s2 = n2;
                    r2 = j2;
                    while (1) {
                      p2 = d[s2 >> 0] | 0;
                      q2 = d[s2 + 1 >> 0] | 0;
                      do {
                        if (((p2 & 248) + 12 + (p2 << 5 & 224) + (q2 >>> 3 & 24) + (q2 << 2 & 248) | 0) > (A2 | 0)) {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = r2;
                        } else {
                          a[l2 >> 0] = -1;
                          j2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          o2 = b[e2 + (u2 << 1) >> 1] | 0;
                          p2 = o2 << 16 >> 16;
                          j2 = b[e2 + (v2 << 1) >> 1] | 0;
                          q2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (o2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[e2 >> 1] = j2;
                              j2 = q2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (t2 | 0))
                                c[n2 >> 2] = t2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                              j2 = r2;
                              break;
                            }
                            j2 = b[e2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                              q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                              q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (t2 | 0)) {
                                j2 = r2;
                                break;
                              }
                              c[j2 >> 2] = t2;
                              j2 = r2;
                              break;
                            } else {
                              j2 = r2 + 1 | 0;
                              if ((r2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = j2;
                              c[k2 + 1179664 + (r2 << 2) >> 2] = j2 << 16 >> 16;
                              r2 = r2 * 7 | 0;
                              c[k2 + 1310736 + (r2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (r2 + 1 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 3 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 4 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            p2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (p2 | 0)) {
                              b[e2 >> 1] = p2;
                              if ((r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (j2 | 0))
                                    c[o2 >> 2] = p2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0)) {
                                    j2 = p2;
                                    break;
                                  } else
                                    o2 = o2 + 4 | 0;
                                }
                              } else
                                j2 = p2;
                            } else {
                              b[e2 >> 1] = j2;
                              if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (p2 | 0))
                                    c[o2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0))
                                    break;
                                  else
                                    o2 = o2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          n2 = b[e2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = o2;
                            j2 = p2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (t2 | 0))
                              c[n2 >> 2] = t2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                          p2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (p2 | 0)) {
                            b[e2 >> 1] = p2;
                            if ((r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (j2 | 0))
                                  c[o2 >> 2] = p2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0)) {
                                  j2 = p2;
                                  break;
                                } else
                                  o2 = o2 + 4 | 0;
                              }
                            } else
                              j2 = p2;
                          } else {
                            b[e2 >> 1] = j2;
                            if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (p2 | 0))
                                  c[o2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0))
                                  break;
                                else
                                  o2 = o2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                          q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + y2;
                          j2 = r2;
                        }
                      } while (0);
                      t2 = t2 + 1 | 0;
                      n2 = s2 + 2 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((t2 | 0) >= (z2 | 0))
                        break;
                      else {
                        s2 = n2;
                        r2 = j2;
                      }
                    }
                  } else
                    l2 = o2;
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (B2 | 0)) {
                    p2 = j2;
                    D2 = 52;
                    break a;
                  } else {
                    o2 = l2 + 2 | 0;
                    n2 = n2 + 4 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              p2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((p2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (p2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[o2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              e2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                n2 = e2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function ld(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        p2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = p2;
          n2 = p2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = j2 * 3 | 0;
        z2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          j2 = p2;
          m2 = p2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              j2 = j2 + (f2 << 1) | 0;
              m2 = m2 + (f2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        w2 = 0 - f2 | 0;
        u2 = 1 - f2 | 0;
        v2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              o2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              y2 = 1;
              n2 = e2 + (l2 << 2) | 0;
              e2 = p2 + (l2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (x2) {
                    l2 = o2;
                    t2 = 1;
                    s2 = n2;
                    r2 = j2;
                    while (1) {
                      do {
                        if (((d[s2 + 2 >> 0] | 0) + (d[s2 + 1 >> 0] | 0) + (d[s2 + 3 >> 0] | 0) | 0) > (A2 | 0)) {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = r2;
                        } else {
                          a[l2 >> 0] = -1;
                          j2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          o2 = b[e2 + (u2 << 1) >> 1] | 0;
                          p2 = o2 << 16 >> 16;
                          j2 = b[e2 + (v2 << 1) >> 1] | 0;
                          q2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (o2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[e2 >> 1] = j2;
                              j2 = q2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (t2 | 0))
                                c[n2 >> 2] = t2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                              j2 = r2;
                              break;
                            }
                            j2 = b[e2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                              q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                              q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (t2 | 0)) {
                                j2 = r2;
                                break;
                              }
                              c[j2 >> 2] = t2;
                              j2 = r2;
                              break;
                            } else {
                              j2 = r2 + 1 | 0;
                              if ((r2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = j2;
                              c[k2 + 1179664 + (r2 << 2) >> 2] = j2 << 16 >> 16;
                              r2 = r2 * 7 | 0;
                              c[k2 + 1310736 + (r2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (r2 + 1 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 3 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 4 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            p2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (p2 | 0)) {
                              b[e2 >> 1] = p2;
                              if ((r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (j2 | 0))
                                    c[o2 >> 2] = p2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0)) {
                                    j2 = p2;
                                    break;
                                  } else
                                    o2 = o2 + 4 | 0;
                                }
                              } else
                                j2 = p2;
                            } else {
                              b[e2 >> 1] = j2;
                              if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (p2 | 0))
                                    c[o2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0))
                                    break;
                                  else
                                    o2 = o2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          n2 = b[e2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = o2;
                            j2 = p2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (t2 | 0))
                              c[n2 >> 2] = t2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                          p2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (p2 | 0)) {
                            b[e2 >> 1] = p2;
                            if ((r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (j2 | 0))
                                  c[o2 >> 2] = p2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0)) {
                                  j2 = p2;
                                  break;
                                } else
                                  o2 = o2 + 4 | 0;
                              }
                            } else
                              j2 = p2;
                          } else {
                            b[e2 >> 1] = j2;
                            if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (p2 | 0))
                                  c[o2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0))
                                  break;
                                else
                                  o2 = o2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                          q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + y2;
                          j2 = r2;
                        }
                      } while (0);
                      t2 = t2 + 1 | 0;
                      n2 = s2 + 4 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((t2 | 0) >= (z2 | 0))
                        break;
                      else {
                        s2 = n2;
                        r2 = j2;
                      }
                    }
                  } else
                    l2 = o2;
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (B2 | 0)) {
                    p2 = j2;
                    D2 = 52;
                    break a;
                  } else {
                    o2 = l2 + 2 | 0;
                    n2 = n2 + 8 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              p2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((p2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (p2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[o2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              e2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                n2 = e2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function md(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        o2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (A2 << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              m2 = m2 + (f2 << 1) | 0;
              n2 = n2 + (f2 << 1) | 0;
            }
          }
        }
        n2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        x2 = 0 - f2 | 0;
        v2 = 1 - f2 | 0;
        w2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              y2 = (A2 | 0) > 1;
              p2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              z2 = 1;
              e2 = e2 + l2 | 0;
              o2 = o2 + (l2 << 1) | 0;
              m2 = 0;
              b:
                while (1) {
                  if (y2) {
                    l2 = p2;
                    u2 = 1;
                    t2 = e2;
                    s2 = m2;
                    while (1) {
                      do {
                        if ((d[t2 >> 0] | 0 | 0) > (j2 | 0)) {
                          b[o2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          m2 = s2;
                        } else {
                          a[l2 >> 0] = -1;
                          m2 = b[o2 + (x2 << 1) >> 1] | 0;
                          if (m2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = m2;
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          p2 = b[o2 + (v2 << 1) >> 1] | 0;
                          q2 = p2 << 16 >> 16;
                          m2 = b[o2 + (w2 << 1) >> 1] | 0;
                          r2 = m2 << 16 >> 16;
                          e2 = m2 << 16 >> 16 > 0;
                          if (p2 << 16 >> 16 <= 0) {
                            if (e2) {
                              b[o2 >> 1] = m2;
                              m2 = r2 * 7 | 0;
                              e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                              e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                              e2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[e2 >> 2] | 0) < (u2 | 0))
                                c[e2 >> 2] = u2;
                              c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                              m2 = s2;
                              break;
                            }
                            m2 = b[o2 + -2 >> 1] | 0;
                            if (m2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = m2;
                              m2 = (m2 << 16 >> 16) * 7 | 0;
                              r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                              r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                              r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                              m2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) >= (u2 | 0)) {
                                m2 = s2;
                                break;
                              }
                              c[m2 >> 2] = u2;
                              m2 = s2;
                              break;
                            } else {
                              m2 = s2 + 1 | 0;
                              if ((s2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = m2;
                              c[k2 + 1179664 + (s2 << 2) >> 2] = m2 << 16 >> 16;
                              s2 = s2 * 7 | 0;
                              c[k2 + 1310736 + (s2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (s2 + 1 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 2 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 3 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 4 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 5 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 6 << 2) >> 2] = z2;
                              break;
                            }
                          }
                          if (e2) {
                            m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            q2 = c[k2 + 1179664 + (r2 + -1 << 2) >> 2] | 0;
                            if ((m2 | 0) > (q2 | 0)) {
                              b[o2 >> 1] = q2;
                              if ((s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (m2 | 0))
                                    c[p2 >> 2] = q2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0)) {
                                    m2 = q2;
                                    break;
                                  } else
                                    p2 = p2 + 4 | 0;
                                }
                              } else
                                m2 = q2;
                            } else {
                              b[o2 >> 1] = m2;
                              if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (q2 | 0))
                                    c[p2 >> 2] = m2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0))
                                    break;
                                  else
                                    p2 = p2 + 4 | 0;
                                }
                              }
                            }
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          e2 = b[o2 + -2 >> 1] | 0;
                          if (e2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = p2;
                            m2 = q2 * 7 | 0;
                            e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                            e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                            e2 = k2 + 1310736 + (m2 + -4 << 2) | 0;
                            if ((c[e2 >> 2] | 0) > (u2 | 0))
                              c[e2 >> 2] = u2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                          q2 = c[k2 + 1179664 + ((e2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((m2 | 0) > (q2 | 0)) {
                            b[o2 >> 1] = q2;
                            if ((s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (m2 | 0))
                                  c[p2 >> 2] = q2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0)) {
                                  m2 = q2;
                                  break;
                                } else
                                  p2 = p2 + 4 | 0;
                              }
                            } else
                              m2 = q2;
                          } else {
                            b[o2 >> 1] = m2;
                            if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (q2 | 0))
                                  c[p2 >> 2] = m2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0))
                                  break;
                                else
                                  p2 = p2 + 4 | 0;
                              }
                            }
                          }
                          m2 = (m2 << 16 >> 16) * 7 | 0;
                          r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                          r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                          m2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                          c[m2 >> 2] = (c[m2 >> 2] | 0) + z2;
                          m2 = s2;
                        }
                      } while (0);
                      u2 = u2 + 1 | 0;
                      e2 = t2 + 1 | 0;
                      o2 = o2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((u2 | 0) >= (A2 | 0))
                        break;
                      else {
                        t2 = e2;
                        s2 = m2;
                      }
                    }
                  } else
                    l2 = p2;
                  z2 = z2 + 1 | 0;
                  if ((z2 | 0) >= (B2 | 0)) {
                    q2 = m2;
                    D2 = 52;
                    break a;
                  } else {
                    p2 = l2 + 2 | 0;
                    e2 = e2 + 2 | 0;
                    o2 = o2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              q2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          o2 = k2 + 12 | 0;
          if ((q2 | 0) < 1)
            m2 = 1;
          else {
            e2 = 1;
            m2 = 1;
            while (1) {
              l2 = c[n2 >> 2] | 0;
              if ((l2 | 0) == (e2 | 0)) {
                l2 = m2;
                m2 = m2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[n2 >> 2] = l2;
              if ((e2 | 0) < (q2 | 0)) {
                e2 = e2 + 1 | 0;
                n2 = n2 + 4 | 0;
              } else
                break;
            }
          }
          p2 = k2 + 8 | 0;
          l2 = m2 + -1 | 0;
          c[p2 >> 2] = l2;
          if (l2) {
            ek(o2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((m2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[p2 >> 2] | 0));
            }
            if ((q2 | 0) > 0) {
              o2 = 0;
              do {
                n2 = (c[k2 + 1179664 + (o2 << 2) >> 2] | 0) + -1 | 0;
                e2 = o2 * 7 | 0;
                l2 = k2 + 12 + (n2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (e2 << 2) >> 2] | 0);
                l2 = n2 << 1;
                m2 = k2 + 655376 + (l2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +(c[k2 + 1310736 + (e2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (e2 + 2 << 2) >> 2] | 0);
                n2 = n2 << 2;
                l2 = k2 + 131084 + (n2 << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 1) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 2) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                m2 = k2 + 131084 + ((n2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (e2 + 6 << 2) >> 2] | 0;
                if ((c[m2 >> 2] | 0) < (l2 | 0))
                  c[m2 >> 2] = l2;
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) < (q2 | 0));
            }
            if ((c[p2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[p2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function nd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        o2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (A2 << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              m2 = m2 + (f2 << 1) | 0;
              n2 = n2 + (f2 << 1) | 0;
            }
          }
        }
        n2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        x2 = 0 - f2 | 0;
        v2 = 1 - f2 | 0;
        w2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              y2 = (A2 | 0) > 1;
              p2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              z2 = 1;
              e2 = e2 + (l2 << 1) | 0;
              o2 = o2 + (l2 << 1) | 0;
              m2 = 0;
              b:
                while (1) {
                  if (y2) {
                    l2 = p2;
                    u2 = 1;
                    t2 = e2;
                    s2 = m2;
                    while (1) {
                      do {
                        if ((d[t2 + 1 >> 0] | 0 | 0) > (j2 | 0)) {
                          b[o2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          m2 = s2;
                        } else {
                          a[l2 >> 0] = -1;
                          m2 = b[o2 + (x2 << 1) >> 1] | 0;
                          if (m2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = m2;
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          p2 = b[o2 + (v2 << 1) >> 1] | 0;
                          q2 = p2 << 16 >> 16;
                          m2 = b[o2 + (w2 << 1) >> 1] | 0;
                          r2 = m2 << 16 >> 16;
                          e2 = m2 << 16 >> 16 > 0;
                          if (p2 << 16 >> 16 <= 0) {
                            if (e2) {
                              b[o2 >> 1] = m2;
                              m2 = r2 * 7 | 0;
                              e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                              e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                              e2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[e2 >> 2] | 0) < (u2 | 0))
                                c[e2 >> 2] = u2;
                              c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                              m2 = s2;
                              break;
                            }
                            m2 = b[o2 + -2 >> 1] | 0;
                            if (m2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = m2;
                              m2 = (m2 << 16 >> 16) * 7 | 0;
                              r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                              r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                              r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                              m2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) >= (u2 | 0)) {
                                m2 = s2;
                                break;
                              }
                              c[m2 >> 2] = u2;
                              m2 = s2;
                              break;
                            } else {
                              m2 = s2 + 1 | 0;
                              if ((s2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = m2;
                              c[k2 + 1179664 + (s2 << 2) >> 2] = m2 << 16 >> 16;
                              s2 = s2 * 7 | 0;
                              c[k2 + 1310736 + (s2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (s2 + 1 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 2 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 3 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 4 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 5 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 6 << 2) >> 2] = z2;
                              break;
                            }
                          }
                          if (e2) {
                            m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            q2 = c[k2 + 1179664 + (r2 + -1 << 2) >> 2] | 0;
                            if ((m2 | 0) > (q2 | 0)) {
                              b[o2 >> 1] = q2;
                              if ((s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (m2 | 0))
                                    c[p2 >> 2] = q2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0)) {
                                    m2 = q2;
                                    break;
                                  } else
                                    p2 = p2 + 4 | 0;
                                }
                              } else
                                m2 = q2;
                            } else {
                              b[o2 >> 1] = m2;
                              if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (q2 | 0))
                                    c[p2 >> 2] = m2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0))
                                    break;
                                  else
                                    p2 = p2 + 4 | 0;
                                }
                              }
                            }
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          e2 = b[o2 + -2 >> 1] | 0;
                          if (e2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = p2;
                            m2 = q2 * 7 | 0;
                            e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                            e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                            e2 = k2 + 1310736 + (m2 + -4 << 2) | 0;
                            if ((c[e2 >> 2] | 0) > (u2 | 0))
                              c[e2 >> 2] = u2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                          q2 = c[k2 + 1179664 + ((e2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((m2 | 0) > (q2 | 0)) {
                            b[o2 >> 1] = q2;
                            if ((s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (m2 | 0))
                                  c[p2 >> 2] = q2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0)) {
                                  m2 = q2;
                                  break;
                                } else
                                  p2 = p2 + 4 | 0;
                              }
                            } else
                              m2 = q2;
                          } else {
                            b[o2 >> 1] = m2;
                            if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (q2 | 0))
                                  c[p2 >> 2] = m2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0))
                                  break;
                                else
                                  p2 = p2 + 4 | 0;
                              }
                            }
                          }
                          m2 = (m2 << 16 >> 16) * 7 | 0;
                          r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                          r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                          m2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                          c[m2 >> 2] = (c[m2 >> 2] | 0) + z2;
                          m2 = s2;
                        }
                      } while (0);
                      u2 = u2 + 1 | 0;
                      e2 = t2 + 2 | 0;
                      o2 = o2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((u2 | 0) >= (A2 | 0))
                        break;
                      else {
                        t2 = e2;
                        s2 = m2;
                      }
                    }
                  } else
                    l2 = p2;
                  z2 = z2 + 1 | 0;
                  if ((z2 | 0) >= (B2 | 0)) {
                    q2 = m2;
                    D2 = 52;
                    break a;
                  } else {
                    p2 = l2 + 2 | 0;
                    e2 = e2 + 4 | 0;
                    o2 = o2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              q2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          o2 = k2 + 12 | 0;
          if ((q2 | 0) < 1)
            m2 = 1;
          else {
            e2 = 1;
            m2 = 1;
            while (1) {
              l2 = c[n2 >> 2] | 0;
              if ((l2 | 0) == (e2 | 0)) {
                l2 = m2;
                m2 = m2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[n2 >> 2] = l2;
              if ((e2 | 0) < (q2 | 0)) {
                e2 = e2 + 1 | 0;
                n2 = n2 + 4 | 0;
              } else
                break;
            }
          }
          p2 = k2 + 8 | 0;
          l2 = m2 + -1 | 0;
          c[p2 >> 2] = l2;
          if (l2) {
            ek(o2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((m2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[p2 >> 2] | 0));
            }
            if ((q2 | 0) > 0) {
              o2 = 0;
              do {
                n2 = (c[k2 + 1179664 + (o2 << 2) >> 2] | 0) + -1 | 0;
                e2 = o2 * 7 | 0;
                l2 = k2 + 12 + (n2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (e2 << 2) >> 2] | 0);
                l2 = n2 << 1;
                m2 = k2 + 655376 + (l2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +(c[k2 + 1310736 + (e2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (e2 + 2 << 2) >> 2] | 0);
                n2 = n2 << 2;
                l2 = k2 + 131084 + (n2 << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 1) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 2) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                m2 = k2 + 131084 + ((n2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (e2 + 6 << 2) >> 2] | 0;
                if ((c[m2 >> 2] | 0) < (l2 | 0))
                  c[m2 >> 2] = l2;
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) < (q2 | 0));
            }
            if ((c[p2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[p2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function od(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        o2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (A2 << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              m2 = m2 + (f2 << 1) | 0;
              n2 = n2 + (f2 << 1) | 0;
            }
          }
        }
        n2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        x2 = 0 - f2 | 0;
        v2 = 1 - f2 | 0;
        w2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              y2 = (A2 | 0) > 1;
              p2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              z2 = 1;
              e2 = e2 + (l2 << 1) | 0;
              o2 = o2 + (l2 << 1) | 0;
              m2 = 0;
              b:
                while (1) {
                  if (y2) {
                    l2 = p2;
                    u2 = 1;
                    t2 = e2;
                    s2 = m2;
                    while (1) {
                      do {
                        if ((d[t2 >> 0] | 0 | 0) > (j2 | 0)) {
                          b[o2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          m2 = s2;
                        } else {
                          a[l2 >> 0] = -1;
                          m2 = b[o2 + (x2 << 1) >> 1] | 0;
                          if (m2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = m2;
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          p2 = b[o2 + (v2 << 1) >> 1] | 0;
                          q2 = p2 << 16 >> 16;
                          m2 = b[o2 + (w2 << 1) >> 1] | 0;
                          r2 = m2 << 16 >> 16;
                          e2 = m2 << 16 >> 16 > 0;
                          if (p2 << 16 >> 16 <= 0) {
                            if (e2) {
                              b[o2 >> 1] = m2;
                              m2 = r2 * 7 | 0;
                              e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                              e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                              e2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[e2 >> 2] | 0) < (u2 | 0))
                                c[e2 >> 2] = u2;
                              c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                              m2 = s2;
                              break;
                            }
                            m2 = b[o2 + -2 >> 1] | 0;
                            if (m2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = m2;
                              m2 = (m2 << 16 >> 16) * 7 | 0;
                              r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                              r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                              r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                              m2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) >= (u2 | 0)) {
                                m2 = s2;
                                break;
                              }
                              c[m2 >> 2] = u2;
                              m2 = s2;
                              break;
                            } else {
                              m2 = s2 + 1 | 0;
                              if ((s2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = m2;
                              c[k2 + 1179664 + (s2 << 2) >> 2] = m2 << 16 >> 16;
                              s2 = s2 * 7 | 0;
                              c[k2 + 1310736 + (s2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (s2 + 1 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 2 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 3 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 4 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 5 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 6 << 2) >> 2] = z2;
                              break;
                            }
                          }
                          if (e2) {
                            m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            q2 = c[k2 + 1179664 + (r2 + -1 << 2) >> 2] | 0;
                            if ((m2 | 0) > (q2 | 0)) {
                              b[o2 >> 1] = q2;
                              if ((s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (m2 | 0))
                                    c[p2 >> 2] = q2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0)) {
                                    m2 = q2;
                                    break;
                                  } else
                                    p2 = p2 + 4 | 0;
                                }
                              } else
                                m2 = q2;
                            } else {
                              b[o2 >> 1] = m2;
                              if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (q2 | 0))
                                    c[p2 >> 2] = m2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0))
                                    break;
                                  else
                                    p2 = p2 + 4 | 0;
                                }
                              }
                            }
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          e2 = b[o2 + -2 >> 1] | 0;
                          if (e2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = p2;
                            m2 = q2 * 7 | 0;
                            e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                            e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                            e2 = k2 + 1310736 + (m2 + -4 << 2) | 0;
                            if ((c[e2 >> 2] | 0) > (u2 | 0))
                              c[e2 >> 2] = u2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                          q2 = c[k2 + 1179664 + ((e2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((m2 | 0) > (q2 | 0)) {
                            b[o2 >> 1] = q2;
                            if ((s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (m2 | 0))
                                  c[p2 >> 2] = q2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0)) {
                                  m2 = q2;
                                  break;
                                } else
                                  p2 = p2 + 4 | 0;
                              }
                            } else
                              m2 = q2;
                          } else {
                            b[o2 >> 1] = m2;
                            if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (q2 | 0))
                                  c[p2 >> 2] = m2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0))
                                  break;
                                else
                                  p2 = p2 + 4 | 0;
                              }
                            }
                          }
                          m2 = (m2 << 16 >> 16) * 7 | 0;
                          r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                          r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                          m2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                          c[m2 >> 2] = (c[m2 >> 2] | 0) + z2;
                          m2 = s2;
                        }
                      } while (0);
                      u2 = u2 + 1 | 0;
                      e2 = t2 + 2 | 0;
                      o2 = o2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((u2 | 0) >= (A2 | 0))
                        break;
                      else {
                        t2 = e2;
                        s2 = m2;
                      }
                    }
                  } else
                    l2 = p2;
                  z2 = z2 + 1 | 0;
                  if ((z2 | 0) >= (B2 | 0)) {
                    q2 = m2;
                    D2 = 52;
                    break a;
                  } else {
                    p2 = l2 + 2 | 0;
                    e2 = e2 + 4 | 0;
                    o2 = o2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              q2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          o2 = k2 + 12 | 0;
          if ((q2 | 0) < 1)
            m2 = 1;
          else {
            e2 = 1;
            m2 = 1;
            while (1) {
              l2 = c[n2 >> 2] | 0;
              if ((l2 | 0) == (e2 | 0)) {
                l2 = m2;
                m2 = m2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[n2 >> 2] = l2;
              if ((e2 | 0) < (q2 | 0)) {
                e2 = e2 + 1 | 0;
                n2 = n2 + 4 | 0;
              } else
                break;
            }
          }
          p2 = k2 + 8 | 0;
          l2 = m2 + -1 | 0;
          c[p2 >> 2] = l2;
          if (l2) {
            ek(o2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((m2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[p2 >> 2] | 0));
            }
            if ((q2 | 0) > 0) {
              o2 = 0;
              do {
                n2 = (c[k2 + 1179664 + (o2 << 2) >> 2] | 0) + -1 | 0;
                e2 = o2 * 7 | 0;
                l2 = k2 + 12 + (n2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (e2 << 2) >> 2] | 0);
                l2 = n2 << 1;
                m2 = k2 + 655376 + (l2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +(c[k2 + 1310736 + (e2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (e2 + 2 << 2) >> 2] | 0);
                n2 = n2 << 2;
                l2 = k2 + 131084 + (n2 << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 1) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 2) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                m2 = k2 + 131084 + ((n2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (e2 + 6 << 2) >> 2] | 0;
                if ((c[m2 >> 2] | 0) < (l2 | 0))
                  c[m2 >> 2] = l2;
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) < (q2 | 0));
            }
            if ((c[p2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[p2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function pd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        o2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (A2 << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              m2 = m2 + (f2 << 1) | 0;
              n2 = n2 + (f2 << 1) | 0;
            }
          }
        }
        n2 = k2 + 1179664 | 0;
        m2 = f2 + 1 | 0;
        x2 = 0 - f2 | 0;
        v2 = 1 - f2 | 0;
        w2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              y2 = (A2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + m2 | 0;
              z2 = 1;
              e2 = e2 + m2 | 0;
              o2 = o2 + (m2 << 1) | 0;
              j2 = j2 + m2 | 0;
              m2 = 0;
              b:
                while (1) {
                  if (y2) {
                    u2 = 1;
                    t2 = e2;
                    s2 = m2;
                    while (1) {
                      do {
                        if ((d[t2 >> 0] | 0) > (d[j2 >> 0] | 0)) {
                          b[o2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          m2 = s2;
                        } else {
                          a[l2 >> 0] = -1;
                          m2 = b[o2 + (x2 << 1) >> 1] | 0;
                          if (m2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = m2;
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          p2 = b[o2 + (v2 << 1) >> 1] | 0;
                          q2 = p2 << 16 >> 16;
                          m2 = b[o2 + (w2 << 1) >> 1] | 0;
                          r2 = m2 << 16 >> 16;
                          e2 = m2 << 16 >> 16 > 0;
                          if (p2 << 16 >> 16 <= 0) {
                            if (e2) {
                              b[o2 >> 1] = m2;
                              m2 = r2 * 7 | 0;
                              e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                              e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                              e2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[e2 >> 2] | 0) < (u2 | 0))
                                c[e2 >> 2] = u2;
                              c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                              m2 = s2;
                              break;
                            }
                            m2 = b[o2 + -2 >> 1] | 0;
                            if (m2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = m2;
                              m2 = (m2 << 16 >> 16) * 7 | 0;
                              r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                              r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                              r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                              m2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) >= (u2 | 0)) {
                                m2 = s2;
                                break;
                              }
                              c[m2 >> 2] = u2;
                              m2 = s2;
                              break;
                            } else {
                              m2 = s2 + 1 | 0;
                              if ((s2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = m2;
                              c[k2 + 1179664 + (s2 << 2) >> 2] = m2 << 16 >> 16;
                              s2 = s2 * 7 | 0;
                              c[k2 + 1310736 + (s2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (s2 + 1 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 2 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 3 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 4 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 5 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 6 << 2) >> 2] = z2;
                              break;
                            }
                          }
                          if (e2) {
                            m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            q2 = c[k2 + 1179664 + (r2 + -1 << 2) >> 2] | 0;
                            if ((m2 | 0) > (q2 | 0)) {
                              b[o2 >> 1] = q2;
                              if ((s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (m2 | 0))
                                    c[p2 >> 2] = q2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0)) {
                                    m2 = q2;
                                    break;
                                  } else
                                    p2 = p2 + 4 | 0;
                                }
                              } else
                                m2 = q2;
                            } else {
                              b[o2 >> 1] = m2;
                              if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (q2 | 0))
                                    c[p2 >> 2] = m2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0))
                                    break;
                                  else
                                    p2 = p2 + 4 | 0;
                                }
                              }
                            }
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          e2 = b[o2 + -2 >> 1] | 0;
                          if (e2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = p2;
                            m2 = q2 * 7 | 0;
                            e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                            e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                            e2 = k2 + 1310736 + (m2 + -4 << 2) | 0;
                            if ((c[e2 >> 2] | 0) > (u2 | 0))
                              c[e2 >> 2] = u2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                          q2 = c[k2 + 1179664 + ((e2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((m2 | 0) > (q2 | 0)) {
                            b[o2 >> 1] = q2;
                            if ((s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (m2 | 0))
                                  c[p2 >> 2] = q2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0)) {
                                  m2 = q2;
                                  break;
                                } else
                                  p2 = p2 + 4 | 0;
                              }
                            } else
                              m2 = q2;
                          } else {
                            b[o2 >> 1] = m2;
                            if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (q2 | 0))
                                  c[p2 >> 2] = m2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0))
                                  break;
                                else
                                  p2 = p2 + 4 | 0;
                              }
                            }
                          }
                          m2 = (m2 << 16 >> 16) * 7 | 0;
                          r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                          r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                          m2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                          c[m2 >> 2] = (c[m2 >> 2] | 0) + z2;
                          m2 = s2;
                        }
                      } while (0);
                      u2 = u2 + 1 | 0;
                      e2 = t2 + 1 | 0;
                      j2 = j2 + 1 | 0;
                      o2 = o2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((u2 | 0) >= (A2 | 0))
                        break;
                      else {
                        t2 = e2;
                        s2 = m2;
                      }
                    }
                  }
                  z2 = z2 + 1 | 0;
                  if ((z2 | 0) >= (B2 | 0)) {
                    p2 = m2;
                    D2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    e2 = e2 + 2 | 0;
                    o2 = o2 + 4 | 0;
                    j2 = j2 + 2 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              p2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          o2 = k2 + 12 | 0;
          if ((p2 | 0) < 1)
            m2 = 1;
          else {
            e2 = 1;
            m2 = 1;
            while (1) {
              l2 = c[n2 >> 2] | 0;
              if ((l2 | 0) == (e2 | 0)) {
                l2 = m2;
                m2 = m2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[n2 >> 2] = l2;
              if ((e2 | 0) < (p2 | 0)) {
                e2 = e2 + 1 | 0;
                n2 = n2 + 4 | 0;
              } else
                break;
            }
          }
          j2 = k2 + 8 | 0;
          l2 = m2 + -1 | 0;
          c[j2 >> 2] = l2;
          if (l2) {
            ek(o2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((m2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[j2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              o2 = 0;
              do {
                n2 = (c[k2 + 1179664 + (o2 << 2) >> 2] | 0) + -1 | 0;
                e2 = o2 * 7 | 0;
                l2 = k2 + 12 + (n2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (e2 << 2) >> 2] | 0);
                l2 = n2 << 1;
                m2 = k2 + 655376 + (l2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +(c[k2 + 1310736 + (e2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (e2 + 2 << 2) >> 2] | 0);
                n2 = n2 << 2;
                l2 = k2 + 131084 + (n2 << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 1) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 2) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                m2 = k2 + 131084 + ((n2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (e2 + 6 << 2) >> 2] | 0;
                if ((c[m2 >> 2] | 0) < (l2 | 0))
                  c[m2 >> 2] = l2;
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) < (p2 | 0));
            }
            if ((c[j2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[j2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function qd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        y2 = j2 * 3 | 0;
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          j2 = o2;
          m2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              j2 = j2 + (D2 << 1) | 0;
              m2 = m2 + (D2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        j2 = D2 + 1 | 0;
        v2 = 0 - D2 | 0;
        t2 = 1 - D2 | 0;
        u2 = ~D2;
        s2 = (f2 * 3 | 0) + 12 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              w2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + j2 | 0;
              x2 = 1;
              n2 = e2 + ((f2 * 6 | 0) + 6) | 0;
              g2 = o2 + (j2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (w2) {
                    r2 = 1;
                    q2 = n2;
                    p2 = j2;
                    while (1) {
                      do {
                        if (((d[q2 + 1 >> 0] | 0) + (d[q2 >> 0] | 0) + (d[q2 + 2 >> 0] | 0) | 0) > (y2 | 0)) {
                          a[l2 >> 0] = -1;
                          j2 = b[g2 + (v2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[g2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          e2 = b[g2 + (t2 << 1) >> 1] | 0;
                          f2 = e2 << 16 >> 16;
                          j2 = b[g2 + (u2 << 1) >> 1] | 0;
                          o2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (e2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[g2 >> 1] = j2;
                              j2 = o2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (r2 | 0))
                                c[n2 >> 2] = r2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                              j2 = p2;
                              break;
                            }
                            j2 = b[g2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[g2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (r2 | 0)) {
                                j2 = p2;
                                break;
                              }
                              c[j2 >> 2] = r2;
                              j2 = p2;
                              break;
                            } else {
                              j2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[g2 >> 1] = j2;
                              c[k2 + 1179664 + (p2 << 2) >> 2] = j2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[k2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 2 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 5 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                            f2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (f2 | 0)) {
                              b[g2 >> 1] = f2;
                              if ((p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (j2 | 0))
                                    c[e2 >> 2] = f2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0)) {
                                    j2 = f2;
                                    break;
                                  } else
                                    e2 = e2 + 4 | 0;
                                }
                              } else
                                j2 = f2;
                            } else {
                              b[g2 >> 1] = j2;
                              if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (f2 | 0))
                                    c[e2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    e2 = e2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          n2 = b[g2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[g2 >> 1] = e2;
                            j2 = f2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (r2 | 0))
                              c[n2 >> 2] = r2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                          f2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (f2 | 0)) {
                            b[g2 >> 1] = f2;
                            if ((p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (j2 | 0))
                                  c[e2 >> 2] = f2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0)) {
                                  j2 = f2;
                                  break;
                                } else
                                  e2 = e2 + 4 | 0;
                              }
                            } else
                              j2 = f2;
                          } else {
                            b[g2 >> 1] = j2;
                            if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (f2 | 0))
                                  c[e2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  e2 = e2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + x2;
                          j2 = p2;
                        } else {
                          b[g2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      n2 = q2 + 6 | 0;
                      g2 = g2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((r2 | 0) >= (z2 | 0))
                        break;
                      else {
                        q2 = n2;
                        p2 = j2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (A2 | 0)) {
                    f2 = j2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    n2 = n2 + s2 | 0;
                    g2 = g2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              f2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          g2 = k2 + 12 | 0;
          if ((f2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (f2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[e2 >> 2] = l2;
          if (l2) {
            ek(g2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (g2 << 2) >> 2] | 0) + -1 | 0;
                n2 = g2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) < (f2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function rd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        y2 = j2 * 3 | 0;
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          j2 = o2;
          m2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              j2 = j2 + (D2 << 1) | 0;
              m2 = m2 + (D2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        j2 = D2 + 1 | 0;
        v2 = 0 - D2 | 0;
        t2 = 1 - D2 | 0;
        u2 = ~D2;
        s2 = (f2 << 1) + 8 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              w2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + j2 | 0;
              x2 = 1;
              n2 = e2 + ((f2 << 2) + 4) | 0;
              g2 = o2 + (j2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (w2) {
                    r2 = 1;
                    q2 = n2;
                    p2 = j2;
                    while (1) {
                      f2 = d[q2 >> 0] | 0;
                      o2 = d[q2 + 1 >> 0] | 0;
                      do {
                        if (((f2 & 248) + 10 + (f2 << 5 & 224) + (o2 >>> 3 & 28) + (o2 << 3 & 248) | 0) > (y2 | 0)) {
                          a[l2 >> 0] = -1;
                          j2 = b[g2 + (v2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[g2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          e2 = b[g2 + (t2 << 1) >> 1] | 0;
                          f2 = e2 << 16 >> 16;
                          j2 = b[g2 + (u2 << 1) >> 1] | 0;
                          o2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (e2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[g2 >> 1] = j2;
                              j2 = o2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (r2 | 0))
                                c[n2 >> 2] = r2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                              j2 = p2;
                              break;
                            }
                            j2 = b[g2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[g2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (r2 | 0)) {
                                j2 = p2;
                                break;
                              }
                              c[j2 >> 2] = r2;
                              j2 = p2;
                              break;
                            } else {
                              j2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[g2 >> 1] = j2;
                              c[k2 + 1179664 + (p2 << 2) >> 2] = j2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[k2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 2 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 5 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                            f2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (f2 | 0)) {
                              b[g2 >> 1] = f2;
                              if ((p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (j2 | 0))
                                    c[e2 >> 2] = f2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0)) {
                                    j2 = f2;
                                    break;
                                  } else
                                    e2 = e2 + 4 | 0;
                                }
                              } else
                                j2 = f2;
                            } else {
                              b[g2 >> 1] = j2;
                              if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (f2 | 0))
                                    c[e2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    e2 = e2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          n2 = b[g2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[g2 >> 1] = e2;
                            j2 = f2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (r2 | 0))
                              c[n2 >> 2] = r2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                          f2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (f2 | 0)) {
                            b[g2 >> 1] = f2;
                            if ((p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (j2 | 0))
                                  c[e2 >> 2] = f2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0)) {
                                  j2 = f2;
                                  break;
                                } else
                                  e2 = e2 + 4 | 0;
                              }
                            } else
                              j2 = f2;
                          } else {
                            b[g2 >> 1] = j2;
                            if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (f2 | 0))
                                  c[e2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  e2 = e2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + x2;
                          j2 = p2;
                        } else {
                          b[g2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      n2 = q2 + 4 | 0;
                      g2 = g2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((r2 | 0) >= (z2 | 0))
                        break;
                      else {
                        q2 = n2;
                        p2 = j2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (A2 | 0)) {
                    f2 = j2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    n2 = n2 + s2 | 0;
                    g2 = g2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              f2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          g2 = k2 + 12 | 0;
          if ((f2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (f2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[e2 >> 2] = l2;
          if (l2) {
            ek(g2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (g2 << 2) >> 2] | 0) + -1 | 0;
                n2 = g2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) < (f2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function sd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        y2 = j2 * 3 | 0;
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          j2 = o2;
          m2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              j2 = j2 + (D2 << 1) | 0;
              m2 = m2 + (D2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        j2 = D2 + 1 | 0;
        v2 = 0 - D2 | 0;
        t2 = 1 - D2 | 0;
        u2 = ~D2;
        s2 = (f2 << 2) + 16 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              w2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + j2 | 0;
              x2 = 1;
              n2 = e2 + ((f2 << 3) + 8) | 0;
              g2 = o2 + (j2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (w2) {
                    r2 = 1;
                    q2 = n2;
                    p2 = j2;
                    while (1) {
                      do {
                        if (((d[q2 + 1 >> 0] | 0) + (d[q2 >> 0] | 0) + (d[q2 + 2 >> 0] | 0) | 0) > (y2 | 0)) {
                          a[l2 >> 0] = -1;
                          j2 = b[g2 + (v2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[g2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          e2 = b[g2 + (t2 << 1) >> 1] | 0;
                          f2 = e2 << 16 >> 16;
                          j2 = b[g2 + (u2 << 1) >> 1] | 0;
                          o2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (e2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[g2 >> 1] = j2;
                              j2 = o2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (r2 | 0))
                                c[n2 >> 2] = r2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                              j2 = p2;
                              break;
                            }
                            j2 = b[g2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[g2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (r2 | 0)) {
                                j2 = p2;
                                break;
                              }
                              c[j2 >> 2] = r2;
                              j2 = p2;
                              break;
                            } else {
                              j2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[g2 >> 1] = j2;
                              c[k2 + 1179664 + (p2 << 2) >> 2] = j2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[k2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 2 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 5 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                            f2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (f2 | 0)) {
                              b[g2 >> 1] = f2;
                              if ((p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (j2 | 0))
                                    c[e2 >> 2] = f2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0)) {
                                    j2 = f2;
                                    break;
                                  } else
                                    e2 = e2 + 4 | 0;
                                }
                              } else
                                j2 = f2;
                            } else {
                              b[g2 >> 1] = j2;
                              if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (f2 | 0))
                                    c[e2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    e2 = e2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          n2 = b[g2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[g2 >> 1] = e2;
                            j2 = f2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (r2 | 0))
                              c[n2 >> 2] = r2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                          f2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (f2 | 0)) {
                            b[g2 >> 1] = f2;
                            if ((p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (j2 | 0))
                                  c[e2 >> 2] = f2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0)) {
                                  j2 = f2;
                                  break;
                                } else
                                  e2 = e2 + 4 | 0;
                              }
                            } else
                              j2 = f2;
                          } else {
                            b[g2 >> 1] = j2;
                            if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (f2 | 0))
                                  c[e2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  e2 = e2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + x2;
                          j2 = p2;
                        } else {
                          b[g2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      n2 = q2 + 8 | 0;
                      g2 = g2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((r2 | 0) >= (z2 | 0))
                        break;
                      else {
                        q2 = n2;
                        p2 = j2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (A2 | 0)) {
                    f2 = j2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    n2 = n2 + s2 | 0;
                    g2 = g2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              f2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          g2 = k2 + 12 | 0;
          if ((f2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (f2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[e2 >> 2] = l2;
          if (l2) {
            ek(g2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (g2 << 2) >> 2] | 0) + -1 | 0;
                n2 = g2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) < (f2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function td(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        y2 = j2 * 3 | 0;
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          j2 = o2;
          m2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              j2 = j2 + (D2 << 1) | 0;
              m2 = m2 + (D2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        j2 = D2 + 1 | 0;
        v2 = 0 - D2 | 0;
        t2 = 1 - D2 | 0;
        u2 = ~D2;
        s2 = (f2 << 1) + 8 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              w2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + j2 | 0;
              x2 = 1;
              n2 = e2 + ((f2 << 2) + 4) | 0;
              g2 = o2 + (j2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (w2) {
                    r2 = 1;
                    q2 = n2;
                    p2 = j2;
                    while (1) {
                      o2 = d[q2 >> 0] | 0;
                      do {
                        if (((o2 & 240) + 24 + (o2 << 4 & 240) + ((d[q2 + 1 >> 0] | 0) & 240) | 0) > (y2 | 0)) {
                          a[l2 >> 0] = -1;
                          j2 = b[g2 + (v2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[g2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          e2 = b[g2 + (t2 << 1) >> 1] | 0;
                          f2 = e2 << 16 >> 16;
                          j2 = b[g2 + (u2 << 1) >> 1] | 0;
                          o2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (e2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[g2 >> 1] = j2;
                              j2 = o2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (r2 | 0))
                                c[n2 >> 2] = r2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                              j2 = p2;
                              break;
                            }
                            j2 = b[g2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[g2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (r2 | 0)) {
                                j2 = p2;
                                break;
                              }
                              c[j2 >> 2] = r2;
                              j2 = p2;
                              break;
                            } else {
                              j2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[g2 >> 1] = j2;
                              c[k2 + 1179664 + (p2 << 2) >> 2] = j2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[k2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 2 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 5 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                            f2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (f2 | 0)) {
                              b[g2 >> 1] = f2;
                              if ((p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (j2 | 0))
                                    c[e2 >> 2] = f2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0)) {
                                    j2 = f2;
                                    break;
                                  } else
                                    e2 = e2 + 4 | 0;
                                }
                              } else
                                j2 = f2;
                            } else {
                              b[g2 >> 1] = j2;
                              if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (f2 | 0))
                                    c[e2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    e2 = e2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          n2 = b[g2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[g2 >> 1] = e2;
                            j2 = f2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (r2 | 0))
                              c[n2 >> 2] = r2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                          f2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (f2 | 0)) {
                            b[g2 >> 1] = f2;
                            if ((p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (j2 | 0))
                                  c[e2 >> 2] = f2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0)) {
                                  j2 = f2;
                                  break;
                                } else
                                  e2 = e2 + 4 | 0;
                              }
                            } else
                              j2 = f2;
                          } else {
                            b[g2 >> 1] = j2;
                            if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (f2 | 0))
                                  c[e2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  e2 = e2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + x2;
                          j2 = p2;
                        } else {
                          b[g2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      n2 = q2 + 4 | 0;
                      g2 = g2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((r2 | 0) >= (z2 | 0))
                        break;
                      else {
                        q2 = n2;
                        p2 = j2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (A2 | 0)) {
                    f2 = j2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    n2 = n2 + s2 | 0;
                    g2 = g2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              f2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          g2 = k2 + 12 | 0;
          if ((f2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (f2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[e2 >> 2] = l2;
          if (l2) {
            ek(g2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (g2 << 2) >> 2] | 0) + -1 | 0;
                n2 = g2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) < (f2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function ud(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        y2 = j2 * 3 | 0;
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          j2 = o2;
          m2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              j2 = j2 + (D2 << 1) | 0;
              m2 = m2 + (D2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        j2 = D2 + 1 | 0;
        v2 = 0 - D2 | 0;
        t2 = 1 - D2 | 0;
        u2 = ~D2;
        s2 = (f2 << 1) + 8 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              w2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + j2 | 0;
              x2 = 1;
              n2 = e2 + ((f2 << 2) + 4) | 0;
              g2 = o2 + (j2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (w2) {
                    r2 = 1;
                    q2 = n2;
                    p2 = j2;
                    while (1) {
                      f2 = d[q2 >> 0] | 0;
                      o2 = d[q2 + 1 >> 0] | 0;
                      do {
                        if (((f2 & 248) + 12 + (f2 << 5 & 224) + (o2 >>> 3 & 24) + (o2 << 2 & 248) | 0) > (y2 | 0)) {
                          a[l2 >> 0] = -1;
                          j2 = b[g2 + (v2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[g2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          e2 = b[g2 + (t2 << 1) >> 1] | 0;
                          f2 = e2 << 16 >> 16;
                          j2 = b[g2 + (u2 << 1) >> 1] | 0;
                          o2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (e2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[g2 >> 1] = j2;
                              j2 = o2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (r2 | 0))
                                c[n2 >> 2] = r2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                              j2 = p2;
                              break;
                            }
                            j2 = b[g2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[g2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (r2 | 0)) {
                                j2 = p2;
                                break;
                              }
                              c[j2 >> 2] = r2;
                              j2 = p2;
                              break;
                            } else {
                              j2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[g2 >> 1] = j2;
                              c[k2 + 1179664 + (p2 << 2) >> 2] = j2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[k2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 2 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 5 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                            f2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (f2 | 0)) {
                              b[g2 >> 1] = f2;
                              if ((p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (j2 | 0))
                                    c[e2 >> 2] = f2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0)) {
                                    j2 = f2;
                                    break;
                                  } else
                                    e2 = e2 + 4 | 0;
                                }
                              } else
                                j2 = f2;
                            } else {
                              b[g2 >> 1] = j2;
                              if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (f2 | 0))
                                    c[e2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    e2 = e2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          n2 = b[g2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[g2 >> 1] = e2;
                            j2 = f2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (r2 | 0))
                              c[n2 >> 2] = r2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                          f2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (f2 | 0)) {
                            b[g2 >> 1] = f2;
                            if ((p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (j2 | 0))
                                  c[e2 >> 2] = f2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0)) {
                                  j2 = f2;
                                  break;
                                } else
                                  e2 = e2 + 4 | 0;
                              }
                            } else
                              j2 = f2;
                          } else {
                            b[g2 >> 1] = j2;
                            if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (f2 | 0))
                                  c[e2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  e2 = e2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + x2;
                          j2 = p2;
                        } else {
                          b[g2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      n2 = q2 + 4 | 0;
                      g2 = g2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((r2 | 0) >= (z2 | 0))
                        break;
                      else {
                        q2 = n2;
                        p2 = j2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (A2 | 0)) {
                    f2 = j2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    n2 = n2 + s2 | 0;
                    g2 = g2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              f2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          g2 = k2 + 12 | 0;
          if ((f2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (f2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[e2 >> 2] = l2;
          if (l2) {
            ek(g2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (g2 << 2) >> 2] | 0) + -1 | 0;
                n2 = g2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) < (f2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function vd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        y2 = j2 * 3 | 0;
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          j2 = o2;
          m2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              j2 = j2 + (D2 << 1) | 0;
              m2 = m2 + (D2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        j2 = D2 + 1 | 0;
        v2 = 0 - D2 | 0;
        t2 = 1 - D2 | 0;
        u2 = ~D2;
        s2 = (f2 << 2) + 16 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              w2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + j2 | 0;
              x2 = 1;
              n2 = e2 + ((f2 << 3) + 8) | 0;
              g2 = o2 + (j2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (w2) {
                    r2 = 1;
                    q2 = n2;
                    p2 = j2;
                    while (1) {
                      do {
                        if (((d[q2 + 2 >> 0] | 0) + (d[q2 + 1 >> 0] | 0) + (d[q2 + 3 >> 0] | 0) | 0) > (y2 | 0)) {
                          a[l2 >> 0] = -1;
                          j2 = b[g2 + (v2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[g2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          e2 = b[g2 + (t2 << 1) >> 1] | 0;
                          f2 = e2 << 16 >> 16;
                          j2 = b[g2 + (u2 << 1) >> 1] | 0;
                          o2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (e2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[g2 >> 1] = j2;
                              j2 = o2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (r2 | 0))
                                c[n2 >> 2] = r2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                              j2 = p2;
                              break;
                            }
                            j2 = b[g2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[g2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (r2 | 0)) {
                                j2 = p2;
                                break;
                              }
                              c[j2 >> 2] = r2;
                              j2 = p2;
                              break;
                            } else {
                              j2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[g2 >> 1] = j2;
                              c[k2 + 1179664 + (p2 << 2) >> 2] = j2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[k2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 2 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 5 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                            f2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (f2 | 0)) {
                              b[g2 >> 1] = f2;
                              if ((p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (j2 | 0))
                                    c[e2 >> 2] = f2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0)) {
                                    j2 = f2;
                                    break;
                                  } else
                                    e2 = e2 + 4 | 0;
                                }
                              } else
                                j2 = f2;
                            } else {
                              b[g2 >> 1] = j2;
                              if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (f2 | 0))
                                    c[e2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    e2 = e2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          n2 = b[g2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[g2 >> 1] = e2;
                            j2 = f2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (r2 | 0))
                              c[n2 >> 2] = r2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                          f2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (f2 | 0)) {
                            b[g2 >> 1] = f2;
                            if ((p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (j2 | 0))
                                  c[e2 >> 2] = f2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0)) {
                                  j2 = f2;
                                  break;
                                } else
                                  e2 = e2 + 4 | 0;
                              }
                            } else
                              j2 = f2;
                          } else {
                            b[g2 >> 1] = j2;
                            if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (f2 | 0))
                                  c[e2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  e2 = e2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + x2;
                          j2 = p2;
                        } else {
                          b[g2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      n2 = q2 + 8 | 0;
                      g2 = g2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((r2 | 0) >= (z2 | 0))
                        break;
                      else {
                        q2 = n2;
                        p2 = j2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (A2 | 0)) {
                    f2 = j2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    n2 = n2 + s2 | 0;
                    g2 = g2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              f2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          g2 = k2 + 12 | 0;
          if ((f2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (f2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[e2 >> 2] = l2;
          if (l2) {
            ek(g2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (g2 << 2) >> 2] | 0) + -1 | 0;
                n2 = g2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) < (f2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function wd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              m2 = m2 + (D2 << 1) | 0;
              n2 = n2 + (D2 << 1) | 0;
            }
          }
        }
        n2 = k2 + 1179664 | 0;
        m2 = D2 + 1 | 0;
        w2 = 0 - D2 | 0;
        u2 = 1 - D2 | 0;
        v2 = ~D2;
        t2 = f2 + 4 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + m2 | 0;
              y2 = 1;
              g2 = e2 + ((f2 << 1) + 2) | 0;
              e2 = o2 + (m2 << 1) | 0;
              m2 = 0;
              b:
                while (1) {
                  if (x2) {
                    s2 = 1;
                    r2 = g2;
                    q2 = m2;
                    while (1) {
                      do {
                        if ((d[r2 >> 0] | 0 | 0) > (j2 | 0)) {
                          a[l2 >> 0] = -1;
                          m2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (m2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = m2;
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          f2 = b[e2 + (u2 << 1) >> 1] | 0;
                          o2 = f2 << 16 >> 16;
                          m2 = b[e2 + (v2 << 1) >> 1] | 0;
                          p2 = m2 << 16 >> 16;
                          g2 = m2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (g2) {
                              b[e2 >> 1] = m2;
                              m2 = p2 * 7 | 0;
                              g2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
                              g2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + s2;
                              g2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + y2;
                              g2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[g2 >> 2] | 0) < (s2 | 0))
                                c[g2 >> 2] = s2;
                              c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                              m2 = q2;
                              break;
                            }
                            m2 = b[e2 + -2 >> 1] | 0;
                            if (m2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = m2;
                              m2 = (m2 << 16 >> 16) * 7 | 0;
                              p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                              p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                              p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                              m2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) >= (s2 | 0)) {
                                m2 = q2;
                                break;
                              }
                              c[m2 >> 2] = s2;
                              m2 = q2;
                              break;
                            } else {
                              m2 = q2 + 1 | 0;
                              if ((q2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = m2;
                              c[k2 + 1179664 + (q2 << 2) >> 2] = m2 << 16 >> 16;
                              q2 = q2 * 7 | 0;
                              c[k2 + 1310736 + (q2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (q2 + 1 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (q2 + 3 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 4 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (q2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (g2) {
                            m2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            o2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            if ((m2 | 0) > (o2 | 0)) {
                              b[e2 >> 1] = o2;
                              if ((q2 | 0) > 0) {
                                g2 = 0;
                                f2 = n2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (m2 | 0))
                                    c[f2 >> 2] = o2;
                                  g2 = g2 + 1 | 0;
                                  if ((g2 | 0) >= (q2 | 0)) {
                                    m2 = o2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                m2 = o2;
                            } else {
                              b[e2 >> 1] = m2;
                              if ((m2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                                g2 = 0;
                                f2 = n2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (o2 | 0))
                                    c[f2 >> 2] = m2;
                                  g2 = g2 + 1 | 0;
                                  if ((g2 | 0) >= (q2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          g2 = b[e2 + -2 >> 1] | 0;
                          if (g2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = f2;
                            m2 = o2 * 7 | 0;
                            g2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
                            g2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + s2;
                            g2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + y2;
                            g2 = k2 + 1310736 + (m2 + -4 << 2) | 0;
                            if ((c[g2 >> 2] | 0) > (s2 | 0))
                              c[g2 >> 2] = s2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          m2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                          o2 = c[k2 + 1179664 + ((g2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((m2 | 0) > (o2 | 0)) {
                            b[e2 >> 1] = o2;
                            if ((q2 | 0) > 0) {
                              g2 = 0;
                              f2 = n2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (m2 | 0))
                                  c[f2 >> 2] = o2;
                                g2 = g2 + 1 | 0;
                                if ((g2 | 0) >= (q2 | 0)) {
                                  m2 = o2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              m2 = o2;
                          } else {
                            b[e2 >> 1] = m2;
                            if ((m2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                              g2 = 0;
                              f2 = n2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (o2 | 0))
                                  c[f2 >> 2] = m2;
                                g2 = g2 + 1 | 0;
                                if ((g2 | 0) >= (q2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          m2 = (m2 << 16 >> 16) * 7 | 0;
                          p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                          p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                          m2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                          c[m2 >> 2] = (c[m2 >> 2] | 0) + y2;
                          m2 = q2;
                        } else {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          m2 = q2;
                        }
                      } while (0);
                      s2 = s2 + 1 | 0;
                      g2 = r2 + 2 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((s2 | 0) >= (z2 | 0))
                        break;
                      else {
                        r2 = g2;
                        q2 = m2;
                      }
                    }
                  }
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (A2 | 0)) {
                    o2 = m2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    g2 = g2 + t2 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              o2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((o2 | 0) < 1)
            m2 = 1;
          else {
            g2 = 1;
            m2 = 1;
            while (1) {
              l2 = c[n2 >> 2] | 0;
              if ((l2 | 0) == (g2 | 0)) {
                l2 = m2;
                m2 = m2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[n2 >> 2] = l2;
              if ((g2 | 0) < (o2 | 0)) {
                g2 = g2 + 1 | 0;
                n2 = n2 + 4 | 0;
              } else
                break;
            }
          }
          f2 = k2 + 8 | 0;
          l2 = m2 + -1 | 0;
          c[f2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((m2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[f2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              e2 = 0;
              do {
                n2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                g2 = e2 * 7 | 0;
                l2 = k2 + 12 + (n2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (g2 << 2) >> 2] | 0);
                l2 = n2 << 1;
                m2 = k2 + 655376 + (l2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +(c[k2 + 1310736 + (g2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (g2 + 2 << 2) >> 2] | 0);
                n2 = n2 << 2;
                l2 = k2 + 131084 + (n2 << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 1) << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 2) << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                m2 = k2 + 131084 + ((n2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (g2 + 6 << 2) >> 2] | 0;
                if ((c[m2 >> 2] | 0) < (l2 | 0))
                  c[m2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (o2 | 0));
            }
            if ((c[f2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[f2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function xd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              m2 = m2 + (D2 << 1) | 0;
              n2 = n2 + (D2 << 1) | 0;
            }
          }
        }
        n2 = k2 + 1179664 | 0;
        m2 = D2 + 1 | 0;
        w2 = 0 - D2 | 0;
        u2 = 1 - D2 | 0;
        v2 = ~D2;
        t2 = (f2 << 1) + 8 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + m2 | 0;
              y2 = 1;
              g2 = e2 + ((f2 << 2) + 4) | 0;
              e2 = o2 + (m2 << 1) | 0;
              m2 = 0;
              b:
                while (1) {
                  if (x2) {
                    s2 = 1;
                    r2 = g2;
                    q2 = m2;
                    while (1) {
                      do {
                        if ((d[r2 + 1 >> 0] | 0 | 0) > (j2 | 0)) {
                          a[l2 >> 0] = -1;
                          m2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (m2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = m2;
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          f2 = b[e2 + (u2 << 1) >> 1] | 0;
                          o2 = f2 << 16 >> 16;
                          m2 = b[e2 + (v2 << 1) >> 1] | 0;
                          p2 = m2 << 16 >> 16;
                          g2 = m2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (g2) {
                              b[e2 >> 1] = m2;
                              m2 = p2 * 7 | 0;
                              g2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
                              g2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + s2;
                              g2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + y2;
                              g2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[g2 >> 2] | 0) < (s2 | 0))
                                c[g2 >> 2] = s2;
                              c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                              m2 = q2;
                              break;
                            }
                            m2 = b[e2 + -2 >> 1] | 0;
                            if (m2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = m2;
                              m2 = (m2 << 16 >> 16) * 7 | 0;
                              p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                              p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                              p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                              m2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) >= (s2 | 0)) {
                                m2 = q2;
                                break;
                              }
                              c[m2 >> 2] = s2;
                              m2 = q2;
                              break;
                            } else {
                              m2 = q2 + 1 | 0;
                              if ((q2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = m2;
                              c[k2 + 1179664 + (q2 << 2) >> 2] = m2 << 16 >> 16;
                              q2 = q2 * 7 | 0;
                              c[k2 + 1310736 + (q2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (q2 + 1 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (q2 + 3 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 4 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (q2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (g2) {
                            m2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            o2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            if ((m2 | 0) > (o2 | 0)) {
                              b[e2 >> 1] = o2;
                              if ((q2 | 0) > 0) {
                                g2 = 0;
                                f2 = n2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (m2 | 0))
                                    c[f2 >> 2] = o2;
                                  g2 = g2 + 1 | 0;
                                  if ((g2 | 0) >= (q2 | 0)) {
                                    m2 = o2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                m2 = o2;
                            } else {
                              b[e2 >> 1] = m2;
                              if ((m2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                                g2 = 0;
                                f2 = n2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (o2 | 0))
                                    c[f2 >> 2] = m2;
                                  g2 = g2 + 1 | 0;
                                  if ((g2 | 0) >= (q2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          g2 = b[e2 + -2 >> 1] | 0;
                          if (g2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = f2;
                            m2 = o2 * 7 | 0;
                            g2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
                            g2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + s2;
                            g2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + y2;
                            g2 = k2 + 1310736 + (m2 + -4 << 2) | 0;
                            if ((c[g2 >> 2] | 0) > (s2 | 0))
                              c[g2 >> 2] = s2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          m2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                          o2 = c[k2 + 1179664 + ((g2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((m2 | 0) > (o2 | 0)) {
                            b[e2 >> 1] = o2;
                            if ((q2 | 0) > 0) {
                              g2 = 0;
                              f2 = n2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (m2 | 0))
                                  c[f2 >> 2] = o2;
                                g2 = g2 + 1 | 0;
                                if ((g2 | 0) >= (q2 | 0)) {
                                  m2 = o2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              m2 = o2;
                          } else {
                            b[e2 >> 1] = m2;
                            if ((m2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                              g2 = 0;
                              f2 = n2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (o2 | 0))
                                  c[f2 >> 2] = m2;
                                g2 = g2 + 1 | 0;
                                if ((g2 | 0) >= (q2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          m2 = (m2 << 16 >> 16) * 7 | 0;
                          p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                          p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                          m2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                          c[m2 >> 2] = (c[m2 >> 2] | 0) + y2;
                          m2 = q2;
                        } else {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          m2 = q2;
                        }
                      } while (0);
                      s2 = s2 + 1 | 0;
                      g2 = r2 + 4 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((s2 | 0) >= (z2 | 0))
                        break;
                      else {
                        r2 = g2;
                        q2 = m2;
                      }
                    }
                  }
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (A2 | 0)) {
                    o2 = m2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    g2 = g2 + t2 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              o2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((o2 | 0) < 1)
            m2 = 1;
          else {
            g2 = 1;
            m2 = 1;
            while (1) {
              l2 = c[n2 >> 2] | 0;
              if ((l2 | 0) == (g2 | 0)) {
                l2 = m2;
                m2 = m2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[n2 >> 2] = l2;
              if ((g2 | 0) < (o2 | 0)) {
                g2 = g2 + 1 | 0;
                n2 = n2 + 4 | 0;
              } else
                break;
            }
          }
          f2 = k2 + 8 | 0;
          l2 = m2 + -1 | 0;
          c[f2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((m2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[f2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              e2 = 0;
              do {
                n2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                g2 = e2 * 7 | 0;
                l2 = k2 + 12 + (n2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (g2 << 2) >> 2] | 0);
                l2 = n2 << 1;
                m2 = k2 + 655376 + (l2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +(c[k2 + 1310736 + (g2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (g2 + 2 << 2) >> 2] | 0);
                n2 = n2 << 2;
                l2 = k2 + 131084 + (n2 << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 1) << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 2) << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                m2 = k2 + 131084 + ((n2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (g2 + 6 << 2) >> 2] | 0;
                if ((c[m2 >> 2] | 0) < (l2 | 0))
                  c[m2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (o2 | 0));
            }
            if ((c[f2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[f2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function yd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              m2 = m2 + (D2 << 1) | 0;
              n2 = n2 + (D2 << 1) | 0;
            }
          }
        }
        n2 = k2 + 1179664 | 0;
        m2 = D2 + 1 | 0;
        w2 = 0 - D2 | 0;
        u2 = 1 - D2 | 0;
        v2 = ~D2;
        t2 = (f2 << 1) + 8 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + m2 | 0;
              y2 = 1;
              g2 = e2 + ((f2 << 2) + 4) | 0;
              e2 = o2 + (m2 << 1) | 0;
              m2 = 0;
              b:
                while (1) {
                  if (x2) {
                    s2 = 1;
                    r2 = g2;
                    q2 = m2;
                    while (1) {
                      do {
                        if ((d[r2 >> 0] | 0 | 0) > (j2 | 0)) {
                          a[l2 >> 0] = -1;
                          m2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (m2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = m2;
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          f2 = b[e2 + (u2 << 1) >> 1] | 0;
                          o2 = f2 << 16 >> 16;
                          m2 = b[e2 + (v2 << 1) >> 1] | 0;
                          p2 = m2 << 16 >> 16;
                          g2 = m2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (g2) {
                              b[e2 >> 1] = m2;
                              m2 = p2 * 7 | 0;
                              g2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
                              g2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + s2;
                              g2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[g2 >> 2] = (c[g2 >> 2] | 0) + y2;
                              g2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[g2 >> 2] | 0) < (s2 | 0))
                                c[g2 >> 2] = s2;
                              c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                              m2 = q2;
                              break;
                            }
                            m2 = b[e2 + -2 >> 1] | 0;
                            if (m2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = m2;
                              m2 = (m2 << 16 >> 16) * 7 | 0;
                              p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                              p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                              p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                              m2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) >= (s2 | 0)) {
                                m2 = q2;
                                break;
                              }
                              c[m2 >> 2] = s2;
                              m2 = q2;
                              break;
                            } else {
                              m2 = q2 + 1 | 0;
                              if ((q2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = m2;
                              c[k2 + 1179664 + (q2 << 2) >> 2] = m2 << 16 >> 16;
                              q2 = q2 * 7 | 0;
                              c[k2 + 1310736 + (q2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (q2 + 1 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (q2 + 3 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 4 << 2) >> 2] = s2;
                              c[k2 + 1310736 + (q2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (q2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (g2) {
                            m2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            o2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            if ((m2 | 0) > (o2 | 0)) {
                              b[e2 >> 1] = o2;
                              if ((q2 | 0) > 0) {
                                g2 = 0;
                                f2 = n2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (m2 | 0))
                                    c[f2 >> 2] = o2;
                                  g2 = g2 + 1 | 0;
                                  if ((g2 | 0) >= (q2 | 0)) {
                                    m2 = o2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                m2 = o2;
                            } else {
                              b[e2 >> 1] = m2;
                              if ((m2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                                g2 = 0;
                                f2 = n2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (o2 | 0))
                                    c[f2 >> 2] = m2;
                                  g2 = g2 + 1 | 0;
                                  if ((g2 | 0) >= (q2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          g2 = b[e2 + -2 >> 1] | 0;
                          if (g2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = f2;
                            m2 = o2 * 7 | 0;
                            g2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
                            g2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + s2;
                            g2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[g2 >> 2] = (c[g2 >> 2] | 0) + y2;
                            g2 = k2 + 1310736 + (m2 + -4 << 2) | 0;
                            if ((c[g2 >> 2] | 0) > (s2 | 0))
                              c[g2 >> 2] = s2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = y2;
                            m2 = q2;
                            break;
                          }
                          m2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                          o2 = c[k2 + 1179664 + ((g2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((m2 | 0) > (o2 | 0)) {
                            b[e2 >> 1] = o2;
                            if ((q2 | 0) > 0) {
                              g2 = 0;
                              f2 = n2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (m2 | 0))
                                  c[f2 >> 2] = o2;
                                g2 = g2 + 1 | 0;
                                if ((g2 | 0) >= (q2 | 0)) {
                                  m2 = o2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              m2 = o2;
                          } else {
                            b[e2 >> 1] = m2;
                            if ((m2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                              g2 = 0;
                              f2 = n2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (o2 | 0))
                                  c[f2 >> 2] = m2;
                                g2 = g2 + 1 | 0;
                                if ((g2 | 0) >= (q2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          m2 = (m2 << 16 >> 16) * 7 | 0;
                          p2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                          p2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                          m2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                          c[m2 >> 2] = (c[m2 >> 2] | 0) + y2;
                          m2 = q2;
                        } else {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          m2 = q2;
                        }
                      } while (0);
                      s2 = s2 + 1 | 0;
                      g2 = r2 + 4 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((s2 | 0) >= (z2 | 0))
                        break;
                      else {
                        r2 = g2;
                        q2 = m2;
                      }
                    }
                  }
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (A2 | 0)) {
                    o2 = m2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    g2 = g2 + t2 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              o2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((o2 | 0) < 1)
            m2 = 1;
          else {
            g2 = 1;
            m2 = 1;
            while (1) {
              l2 = c[n2 >> 2] | 0;
              if ((l2 | 0) == (g2 | 0)) {
                l2 = m2;
                m2 = m2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[n2 >> 2] = l2;
              if ((g2 | 0) < (o2 | 0)) {
                g2 = g2 + 1 | 0;
                n2 = n2 + 4 | 0;
              } else
                break;
            }
          }
          f2 = k2 + 8 | 0;
          l2 = m2 + -1 | 0;
          c[f2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((m2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[f2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              e2 = 0;
              do {
                n2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                g2 = e2 * 7 | 0;
                l2 = k2 + 12 + (n2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (g2 << 2) >> 2] | 0);
                l2 = n2 << 1;
                m2 = k2 + 655376 + (l2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +(c[k2 + 1310736 + (g2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (g2 + 2 << 2) >> 2] | 0);
                n2 = n2 << 2;
                l2 = k2 + 131084 + (n2 << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 1) << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 2) << 2) | 0;
                m2 = c[k2 + 1310736 + (g2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                m2 = k2 + 131084 + ((n2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (g2 + 6 << 2) >> 2] | 0;
                if ((c[m2 >> 2] | 0) < (l2 | 0))
                  c[m2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (o2 | 0));
            }
            if ((c[f2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[f2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function ec(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        b2 = i2;
        i2 = i2 + a2 | 0;
        i2 = i2 + 15 & -16;
        return b2 | 0;
      }
      function fc() {
        return i2 | 0;
      }
      function gc(a2) {
        a2 = a2 | 0;
        i2 = a2;
      }
      function hc(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        i2 = a2;
        j = b2;
      }
      function ic(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if (!o) {
          o = a2;
          p = b2;
        }
      }
      function jc(b2) {
        b2 = b2 | 0;
        a[k >> 0] = a[b2 >> 0];
        a[k + 1 >> 0] = a[b2 + 1 >> 0];
        a[k + 2 >> 0] = a[b2 + 2 >> 0];
        a[k + 3 >> 0] = a[b2 + 3 >> 0];
      }
      function kc(b2) {
        b2 = b2 | 0;
        a[k >> 0] = a[b2 >> 0];
        a[k + 1 >> 0] = a[b2 + 1 >> 0];
        a[k + 2 >> 0] = a[b2 + 2 >> 0];
        a[k + 3 >> 0] = a[b2 + 3 >> 0];
        a[k + 4 >> 0] = a[b2 + 4 >> 0];
        a[k + 5 >> 0] = a[b2 + 5 >> 0];
        a[k + 6 >> 0] = a[b2 + 6 >> 0];
        a[k + 7 >> 0] = a[b2 + 7 >> 0];
      }
      function lc(a2) {
        a2 = a2 | 0;
        D = a2;
      }
      function mc() {
        return D | 0;
      }
      function nc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        w2 = g2 * 3 | 0;
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              g2 = g2 + (B2 << 1) | 0;
              l2 = l2 + (B2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        t2 = 0 - B2 | 0;
        r2 = 1 - B2 | 0;
        s2 = ~B2;
        q2 = (e2 * 3 | 0) + 12 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              u2 = (x2 | 0) > 1;
              v2 = 1;
              g2 = a2 + ((e2 * 6 | 0) + 6) | 0;
              m2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (u2) {
                    p2 = 1;
                    o2 = m2;
                    n2 = k2;
                    while (1) {
                      do {
                        if (((d[g2 + 1 >> 0] | 0) + (d[g2 >> 0] | 0) + (d[g2 + 2 >> 0] | 0) | 0) > (w2 | 0)) {
                          b[o2 >> 1] = 0;
                          k2 = n2;
                        } else {
                          k2 = b[o2 + (t2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          f2 = b[o2 + (r2 << 1) >> 1] | 0;
                          a2 = f2 << 16 >> 16;
                          k2 = b[o2 + (s2 << 1) >> 1] | 0;
                          e2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[o2 >> 1] = k2;
                              k2 = e2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (p2 | 0))
                                c[m2 >> 2] = p2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                              k2 = n2;
                              break;
                            }
                            k2 = b[o2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                              e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (p2 | 0)) {
                                k2 = n2;
                                break;
                              }
                              c[k2 >> 2] = p2;
                              k2 = n2;
                              break;
                            } else {
                              k2 = n2 + 1 | 0;
                              if ((n2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = k2;
                              c[j2 + 1179664 + (n2 << 2) >> 2] = k2 << 16 >> 16;
                              n2 = n2 * 7 | 0;
                              c[j2 + 1310736 + (n2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (n2 + 1 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 2 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 3 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 4 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 5 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 6 << 2) >> 2] = v2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                            a2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (a2 | 0)) {
                              b[o2 >> 1] = a2;
                              if ((n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (k2 | 0))
                                    c[f2 >> 2] = a2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0)) {
                                    k2 = a2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                k2 = a2;
                            } else {
                              b[o2 >> 1] = k2;
                              if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (a2 | 0))
                                    c[f2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          m2 = b[o2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = f2;
                            k2 = a2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (p2 | 0))
                              c[m2 >> 2] = p2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                          a2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (a2 | 0)) {
                            b[o2 >> 1] = a2;
                            if ((n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (k2 | 0))
                                  c[f2 >> 2] = a2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0)) {
                                  k2 = a2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              k2 = a2;
                          } else {
                            b[o2 >> 1] = k2;
                            if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (a2 | 0))
                                  c[f2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                          e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + v2;
                          k2 = n2;
                        }
                      } while (0);
                      p2 = p2 + 1 | 0;
                      g2 = g2 + 6 | 0;
                      m2 = o2 + 2 | 0;
                      if ((p2 | 0) >= (x2 | 0))
                        break;
                      else {
                        o2 = m2;
                        n2 = k2;
                      }
                    }
                  }
                  v2 = v2 + 1 | 0;
                  if ((v2 | 0) >= (y2 | 0)) {
                    e2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    g2 = g2 + q2 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              e2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          f2 = j2 + 12 | 0;
          if ((e2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (e2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          a2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[a2 >> 2] = k2;
          if (k2) {
            ek(f2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (f2 << 2) >> 2] | 0) + -1 | 0;
                m2 = f2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
            if ((c[a2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function oc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        w2 = g2 * 3 | 0;
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              g2 = g2 + (B2 << 1) | 0;
              l2 = l2 + (B2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        t2 = 0 - B2 | 0;
        r2 = 1 - B2 | 0;
        s2 = ~B2;
        q2 = (e2 << 1) + 8 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              u2 = (x2 | 0) > 1;
              v2 = 1;
              g2 = a2 + ((e2 << 2) + 4) | 0;
              m2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (u2) {
                    p2 = 1;
                    o2 = m2;
                    n2 = k2;
                    while (1) {
                      a2 = d[g2 >> 0] | 0;
                      e2 = d[g2 + 1 >> 0] | 0;
                      do {
                        if (((a2 & 248) + 10 + (a2 << 5 & 224) + (e2 >>> 3 & 28) + (e2 << 3 & 248) | 0) > (w2 | 0)) {
                          b[o2 >> 1] = 0;
                          k2 = n2;
                        } else {
                          k2 = b[o2 + (t2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          f2 = b[o2 + (r2 << 1) >> 1] | 0;
                          a2 = f2 << 16 >> 16;
                          k2 = b[o2 + (s2 << 1) >> 1] | 0;
                          e2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[o2 >> 1] = k2;
                              k2 = e2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (p2 | 0))
                                c[m2 >> 2] = p2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                              k2 = n2;
                              break;
                            }
                            k2 = b[o2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                              e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (p2 | 0)) {
                                k2 = n2;
                                break;
                              }
                              c[k2 >> 2] = p2;
                              k2 = n2;
                              break;
                            } else {
                              k2 = n2 + 1 | 0;
                              if ((n2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = k2;
                              c[j2 + 1179664 + (n2 << 2) >> 2] = k2 << 16 >> 16;
                              n2 = n2 * 7 | 0;
                              c[j2 + 1310736 + (n2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (n2 + 1 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 2 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 3 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 4 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 5 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 6 << 2) >> 2] = v2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                            a2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (a2 | 0)) {
                              b[o2 >> 1] = a2;
                              if ((n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (k2 | 0))
                                    c[f2 >> 2] = a2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0)) {
                                    k2 = a2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                k2 = a2;
                            } else {
                              b[o2 >> 1] = k2;
                              if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (a2 | 0))
                                    c[f2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          m2 = b[o2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = f2;
                            k2 = a2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (p2 | 0))
                              c[m2 >> 2] = p2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                          a2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (a2 | 0)) {
                            b[o2 >> 1] = a2;
                            if ((n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (k2 | 0))
                                  c[f2 >> 2] = a2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0)) {
                                  k2 = a2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              k2 = a2;
                          } else {
                            b[o2 >> 1] = k2;
                            if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (a2 | 0))
                                  c[f2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                          e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + v2;
                          k2 = n2;
                        }
                      } while (0);
                      p2 = p2 + 1 | 0;
                      g2 = g2 + 4 | 0;
                      m2 = o2 + 2 | 0;
                      if ((p2 | 0) >= (x2 | 0))
                        break;
                      else {
                        o2 = m2;
                        n2 = k2;
                      }
                    }
                  }
                  v2 = v2 + 1 | 0;
                  if ((v2 | 0) >= (y2 | 0)) {
                    e2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    g2 = g2 + q2 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              e2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          f2 = j2 + 12 | 0;
          if ((e2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (e2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          a2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[a2 >> 2] = k2;
          if (k2) {
            ek(f2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (f2 << 2) >> 2] | 0) + -1 | 0;
                m2 = f2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
            if ((c[a2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function pc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        w2 = g2 * 3 | 0;
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              g2 = g2 + (B2 << 1) | 0;
              l2 = l2 + (B2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        t2 = 0 - B2 | 0;
        r2 = 1 - B2 | 0;
        s2 = ~B2;
        q2 = (e2 << 2) + 16 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              u2 = (x2 | 0) > 1;
              v2 = 1;
              g2 = a2 + ((e2 << 3) + 8) | 0;
              m2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (u2) {
                    p2 = 1;
                    o2 = m2;
                    n2 = k2;
                    while (1) {
                      do {
                        if (((d[g2 + 1 >> 0] | 0) + (d[g2 >> 0] | 0) + (d[g2 + 2 >> 0] | 0) | 0) > (w2 | 0)) {
                          b[o2 >> 1] = 0;
                          k2 = n2;
                        } else {
                          k2 = b[o2 + (t2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          f2 = b[o2 + (r2 << 1) >> 1] | 0;
                          a2 = f2 << 16 >> 16;
                          k2 = b[o2 + (s2 << 1) >> 1] | 0;
                          e2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[o2 >> 1] = k2;
                              k2 = e2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (p2 | 0))
                                c[m2 >> 2] = p2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                              k2 = n2;
                              break;
                            }
                            k2 = b[o2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                              e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (p2 | 0)) {
                                k2 = n2;
                                break;
                              }
                              c[k2 >> 2] = p2;
                              k2 = n2;
                              break;
                            } else {
                              k2 = n2 + 1 | 0;
                              if ((n2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = k2;
                              c[j2 + 1179664 + (n2 << 2) >> 2] = k2 << 16 >> 16;
                              n2 = n2 * 7 | 0;
                              c[j2 + 1310736 + (n2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (n2 + 1 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 2 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 3 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 4 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 5 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 6 << 2) >> 2] = v2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                            a2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (a2 | 0)) {
                              b[o2 >> 1] = a2;
                              if ((n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (k2 | 0))
                                    c[f2 >> 2] = a2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0)) {
                                    k2 = a2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                k2 = a2;
                            } else {
                              b[o2 >> 1] = k2;
                              if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (a2 | 0))
                                    c[f2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          m2 = b[o2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = f2;
                            k2 = a2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (p2 | 0))
                              c[m2 >> 2] = p2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                          a2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (a2 | 0)) {
                            b[o2 >> 1] = a2;
                            if ((n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (k2 | 0))
                                  c[f2 >> 2] = a2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0)) {
                                  k2 = a2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              k2 = a2;
                          } else {
                            b[o2 >> 1] = k2;
                            if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (a2 | 0))
                                  c[f2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                          e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + v2;
                          k2 = n2;
                        }
                      } while (0);
                      p2 = p2 + 1 | 0;
                      g2 = g2 + 8 | 0;
                      m2 = o2 + 2 | 0;
                      if ((p2 | 0) >= (x2 | 0))
                        break;
                      else {
                        o2 = m2;
                        n2 = k2;
                      }
                    }
                  }
                  v2 = v2 + 1 | 0;
                  if ((v2 | 0) >= (y2 | 0)) {
                    e2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    g2 = g2 + q2 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              e2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          f2 = j2 + 12 | 0;
          if ((e2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (e2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          a2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[a2 >> 2] = k2;
          if (k2) {
            ek(f2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (f2 << 2) >> 2] | 0) + -1 | 0;
                m2 = f2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
            if ((c[a2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function qc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        w2 = g2 * 3 | 0;
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              g2 = g2 + (B2 << 1) | 0;
              l2 = l2 + (B2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        t2 = 0 - B2 | 0;
        r2 = 1 - B2 | 0;
        s2 = ~B2;
        q2 = (e2 << 1) + 8 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              u2 = (x2 | 0) > 1;
              v2 = 1;
              g2 = a2 + ((e2 << 2) + 4) | 0;
              m2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (u2) {
                    p2 = 1;
                    o2 = m2;
                    n2 = k2;
                    while (1) {
                      e2 = d[g2 >> 0] | 0;
                      do {
                        if (((e2 & 240) + 24 + (e2 << 4 & 240) + ((d[g2 + 1 >> 0] | 0) & 240) | 0) > (w2 | 0)) {
                          b[o2 >> 1] = 0;
                          k2 = n2;
                        } else {
                          k2 = b[o2 + (t2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          f2 = b[o2 + (r2 << 1) >> 1] | 0;
                          a2 = f2 << 16 >> 16;
                          k2 = b[o2 + (s2 << 1) >> 1] | 0;
                          e2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[o2 >> 1] = k2;
                              k2 = e2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (p2 | 0))
                                c[m2 >> 2] = p2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                              k2 = n2;
                              break;
                            }
                            k2 = b[o2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                              e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (p2 | 0)) {
                                k2 = n2;
                                break;
                              }
                              c[k2 >> 2] = p2;
                              k2 = n2;
                              break;
                            } else {
                              k2 = n2 + 1 | 0;
                              if ((n2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = k2;
                              c[j2 + 1179664 + (n2 << 2) >> 2] = k2 << 16 >> 16;
                              n2 = n2 * 7 | 0;
                              c[j2 + 1310736 + (n2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (n2 + 1 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 2 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 3 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 4 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 5 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 6 << 2) >> 2] = v2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                            a2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (a2 | 0)) {
                              b[o2 >> 1] = a2;
                              if ((n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (k2 | 0))
                                    c[f2 >> 2] = a2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0)) {
                                    k2 = a2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                k2 = a2;
                            } else {
                              b[o2 >> 1] = k2;
                              if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (a2 | 0))
                                    c[f2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          m2 = b[o2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = f2;
                            k2 = a2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (p2 | 0))
                              c[m2 >> 2] = p2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                          a2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (a2 | 0)) {
                            b[o2 >> 1] = a2;
                            if ((n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (k2 | 0))
                                  c[f2 >> 2] = a2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0)) {
                                  k2 = a2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              k2 = a2;
                          } else {
                            b[o2 >> 1] = k2;
                            if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (a2 | 0))
                                  c[f2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                          e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + v2;
                          k2 = n2;
                        }
                      } while (0);
                      p2 = p2 + 1 | 0;
                      g2 = g2 + 4 | 0;
                      m2 = o2 + 2 | 0;
                      if ((p2 | 0) >= (x2 | 0))
                        break;
                      else {
                        o2 = m2;
                        n2 = k2;
                      }
                    }
                  }
                  v2 = v2 + 1 | 0;
                  if ((v2 | 0) >= (y2 | 0)) {
                    e2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    g2 = g2 + q2 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              e2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          f2 = j2 + 12 | 0;
          if ((e2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (e2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          a2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[a2 >> 2] = k2;
          if (k2) {
            ek(f2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (f2 << 2) >> 2] | 0) + -1 | 0;
                m2 = f2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
            if ((c[a2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function rc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        w2 = g2 * 3 | 0;
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              g2 = g2 + (B2 << 1) | 0;
              l2 = l2 + (B2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        t2 = 0 - B2 | 0;
        r2 = 1 - B2 | 0;
        s2 = ~B2;
        q2 = (e2 << 1) + 8 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              u2 = (x2 | 0) > 1;
              v2 = 1;
              g2 = a2 + ((e2 << 2) + 4) | 0;
              m2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (u2) {
                    p2 = 1;
                    o2 = m2;
                    n2 = k2;
                    while (1) {
                      a2 = d[g2 >> 0] | 0;
                      e2 = d[g2 + 1 >> 0] | 0;
                      do {
                        if (((a2 & 248) + 12 + (a2 << 5 & 224) + (e2 >>> 3 & 24) + (e2 << 2 & 248) | 0) > (w2 | 0)) {
                          b[o2 >> 1] = 0;
                          k2 = n2;
                        } else {
                          k2 = b[o2 + (t2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          f2 = b[o2 + (r2 << 1) >> 1] | 0;
                          a2 = f2 << 16 >> 16;
                          k2 = b[o2 + (s2 << 1) >> 1] | 0;
                          e2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[o2 >> 1] = k2;
                              k2 = e2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (p2 | 0))
                                c[m2 >> 2] = p2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                              k2 = n2;
                              break;
                            }
                            k2 = b[o2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                              e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (p2 | 0)) {
                                k2 = n2;
                                break;
                              }
                              c[k2 >> 2] = p2;
                              k2 = n2;
                              break;
                            } else {
                              k2 = n2 + 1 | 0;
                              if ((n2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = k2;
                              c[j2 + 1179664 + (n2 << 2) >> 2] = k2 << 16 >> 16;
                              n2 = n2 * 7 | 0;
                              c[j2 + 1310736 + (n2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (n2 + 1 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 2 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 3 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 4 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 5 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 6 << 2) >> 2] = v2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                            a2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (a2 | 0)) {
                              b[o2 >> 1] = a2;
                              if ((n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (k2 | 0))
                                    c[f2 >> 2] = a2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0)) {
                                    k2 = a2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                k2 = a2;
                            } else {
                              b[o2 >> 1] = k2;
                              if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (a2 | 0))
                                    c[f2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          m2 = b[o2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = f2;
                            k2 = a2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (p2 | 0))
                              c[m2 >> 2] = p2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                          a2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (a2 | 0)) {
                            b[o2 >> 1] = a2;
                            if ((n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (k2 | 0))
                                  c[f2 >> 2] = a2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0)) {
                                  k2 = a2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              k2 = a2;
                          } else {
                            b[o2 >> 1] = k2;
                            if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (a2 | 0))
                                  c[f2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                          e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + v2;
                          k2 = n2;
                        }
                      } while (0);
                      p2 = p2 + 1 | 0;
                      g2 = g2 + 4 | 0;
                      m2 = o2 + 2 | 0;
                      if ((p2 | 0) >= (x2 | 0))
                        break;
                      else {
                        o2 = m2;
                        n2 = k2;
                      }
                    }
                  }
                  v2 = v2 + 1 | 0;
                  if ((v2 | 0) >= (y2 | 0)) {
                    e2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    g2 = g2 + q2 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              e2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          f2 = j2 + 12 | 0;
          if ((e2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (e2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          a2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[a2 >> 2] = k2;
          if (k2) {
            ek(f2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (f2 << 2) >> 2] | 0) + -1 | 0;
                m2 = f2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
            if ((c[a2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function sc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        w2 = g2 * 3 | 0;
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              g2 = g2 + (B2 << 1) | 0;
              l2 = l2 + (B2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        t2 = 0 - B2 | 0;
        r2 = 1 - B2 | 0;
        s2 = ~B2;
        q2 = (e2 << 2) + 16 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              u2 = (x2 | 0) > 1;
              v2 = 1;
              g2 = a2 + ((e2 << 3) + 8) | 0;
              m2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (u2) {
                    p2 = 1;
                    o2 = m2;
                    n2 = k2;
                    while (1) {
                      do {
                        if (((d[g2 + 2 >> 0] | 0) + (d[g2 + 1 >> 0] | 0) + (d[g2 + 3 >> 0] | 0) | 0) > (w2 | 0)) {
                          b[o2 >> 1] = 0;
                          k2 = n2;
                        } else {
                          k2 = b[o2 + (t2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          f2 = b[o2 + (r2 << 1) >> 1] | 0;
                          a2 = f2 << 16 >> 16;
                          k2 = b[o2 + (s2 << 1) >> 1] | 0;
                          e2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[o2 >> 1] = k2;
                              k2 = e2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (p2 | 0))
                                c[m2 >> 2] = p2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                              k2 = n2;
                              break;
                            }
                            k2 = b[o2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                              e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (p2 | 0)) {
                                k2 = n2;
                                break;
                              }
                              c[k2 >> 2] = p2;
                              k2 = n2;
                              break;
                            } else {
                              k2 = n2 + 1 | 0;
                              if ((n2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = k2;
                              c[j2 + 1179664 + (n2 << 2) >> 2] = k2 << 16 >> 16;
                              n2 = n2 * 7 | 0;
                              c[j2 + 1310736 + (n2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (n2 + 1 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 2 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 3 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 4 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 5 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 6 << 2) >> 2] = v2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                            a2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (a2 | 0)) {
                              b[o2 >> 1] = a2;
                              if ((n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (k2 | 0))
                                    c[f2 >> 2] = a2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0)) {
                                    k2 = a2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                k2 = a2;
                            } else {
                              b[o2 >> 1] = k2;
                              if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (a2 | 0))
                                    c[f2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          m2 = b[o2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = f2;
                            k2 = a2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (p2 | 0))
                              c[m2 >> 2] = p2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                          a2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (a2 | 0)) {
                            b[o2 >> 1] = a2;
                            if ((n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (k2 | 0))
                                  c[f2 >> 2] = a2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0)) {
                                  k2 = a2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              k2 = a2;
                          } else {
                            b[o2 >> 1] = k2;
                            if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (a2 | 0))
                                  c[f2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                          e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + v2;
                          k2 = n2;
                        }
                      } while (0);
                      p2 = p2 + 1 | 0;
                      g2 = g2 + 8 | 0;
                      m2 = o2 + 2 | 0;
                      if ((p2 | 0) >= (x2 | 0))
                        break;
                      else {
                        o2 = m2;
                        n2 = k2;
                      }
                    }
                  }
                  v2 = v2 + 1 | 0;
                  if ((v2 | 0) >= (y2 | 0)) {
                    e2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    g2 = g2 + q2 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              e2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          f2 = j2 + 12 | 0;
          if ((e2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (e2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          a2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[a2 >> 2] = k2;
          if (k2) {
            ek(f2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (f2 << 2) >> 2] | 0) + -1 | 0;
                m2 = f2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
            if ((c[a2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function tc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              l2 = l2 + (B2 << 1) | 0;
              m2 = m2 + (B2 << 1) | 0;
            }
          }
        }
        m2 = j2 + 1179664 | 0;
        u2 = 0 - B2 | 0;
        s2 = 1 - B2 | 0;
        t2 = ~B2;
        r2 = e2 + 4 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              l2 = a2 + ((e2 << 1) + 2) | 0;
              f2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    q2 = 1;
                    p2 = f2;
                    o2 = k2;
                    while (1) {
                      do {
                        if ((d[l2 >> 0] | 0 | 0) > (g2 | 0)) {
                          b[p2 >> 1] = 0;
                          k2 = o2;
                        } else {
                          k2 = b[p2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[p2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                            n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          a2 = b[p2 + (s2 << 1) >> 1] | 0;
                          e2 = a2 << 16 >> 16;
                          k2 = b[p2 + (t2 << 1) >> 1] | 0;
                          n2 = k2 << 16 >> 16;
                          f2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (f2) {
                              b[p2 >> 1] = k2;
                              k2 = n2 * 7 | 0;
                              f2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
                              f2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + q2;
                              f2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + w2;
                              f2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[f2 >> 2] | 0) < (q2 | 0))
                                c[f2 >> 2] = q2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = o2;
                              break;
                            }
                            k2 = b[p2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[p2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                              n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (q2 | 0)) {
                                k2 = o2;
                                break;
                              }
                              c[k2 >> 2] = q2;
                              k2 = o2;
                              break;
                            } else {
                              k2 = o2 + 1 | 0;
                              if ((o2 | 0) > 32767)
                                break b;
                              b[p2 >> 1] = k2;
                              c[j2 + 1179664 + (o2 << 2) >> 2] = k2 << 16 >> 16;
                              o2 = o2 * 7 | 0;
                              c[j2 + 1310736 + (o2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (o2 + 1 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (o2 + 3 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 4 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (o2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (f2) {
                            k2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            e2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (e2 | 0)) {
                              b[p2 >> 1] = e2;
                              if ((o2 | 0) > 0) {
                                f2 = 0;
                                a2 = m2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = e2;
                                  f2 = f2 + 1 | 0;
                                  if ((f2 | 0) >= (o2 | 0)) {
                                    k2 = e2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = e2;
                            } else {
                              b[p2 >> 1] = k2;
                              if ((k2 | 0) < (e2 | 0) & (o2 | 0) > 0) {
                                f2 = 0;
                                a2 = m2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (e2 | 0))
                                    c[a2 >> 2] = k2;
                                  f2 = f2 + 1 | 0;
                                  if ((f2 | 0) >= (o2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                            n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          f2 = b[p2 + -2 >> 1] | 0;
                          if (f2 << 16 >> 16 <= 0) {
                            b[p2 >> 1] = a2;
                            k2 = e2 * 7 | 0;
                            f2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
                            f2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + q2;
                            f2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + w2;
                            f2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[f2 >> 2] | 0) > (q2 | 0))
                              c[f2 >> 2] = q2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                          e2 = c[j2 + 1179664 + ((f2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (e2 | 0)) {
                            b[p2 >> 1] = e2;
                            if ((o2 | 0) > 0) {
                              f2 = 0;
                              a2 = m2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = e2;
                                f2 = f2 + 1 | 0;
                                if ((f2 | 0) >= (o2 | 0)) {
                                  k2 = e2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = e2;
                          } else {
                            b[p2 >> 1] = k2;
                            if ((k2 | 0) < (e2 | 0) & (o2 | 0) > 0) {
                              f2 = 0;
                              a2 = m2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (e2 | 0))
                                  c[a2 >> 2] = k2;
                                f2 = f2 + 1 | 0;
                                if ((f2 | 0) >= (o2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                          n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = o2;
                        }
                      } while (0);
                      q2 = q2 + 1 | 0;
                      l2 = l2 + 2 | 0;
                      f2 = p2 + 2 | 0;
                      if ((q2 | 0) >= (x2 | 0))
                        break;
                      else {
                        p2 = f2;
                        o2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (y2 | 0)) {
                    n2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    l2 = l2 + r2 | 0;
                    f2 = f2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              n2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((n2 | 0) < 1)
            l2 = 1;
          else {
            f2 = 1;
            l2 = 1;
            while (1) {
              k2 = c[m2 >> 2] | 0;
              if ((k2 | 0) == (f2 | 0)) {
                k2 = l2;
                l2 = l2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = k2;
              if ((f2 | 0) < (n2 | 0)) {
                f2 = f2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = j2 + 8 | 0;
          k2 = l2 + -1 | 0;
          c[e2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((l2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((n2 | 0) > 0) {
              a2 = 0;
              do {
                m2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                f2 = a2 * 7 | 0;
                k2 = j2 + 12 + (m2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (f2 << 2) >> 2] | 0);
                k2 = m2 << 1;
                l2 = j2 + 655376 + (k2 << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[j2 + 1310736 + (f2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (f2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                k2 = j2 + 131084 + (m2 << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 1) << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 2) << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                l2 = j2 + 131084 + ((m2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (f2 + 6 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (k2 | 0))
                  c[l2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (n2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[e2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function uc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              l2 = l2 + (B2 << 1) | 0;
              m2 = m2 + (B2 << 1) | 0;
            }
          }
        }
        m2 = j2 + 1179664 | 0;
        u2 = 0 - B2 | 0;
        s2 = 1 - B2 | 0;
        t2 = ~B2;
        r2 = (e2 << 1) + 8 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              l2 = a2 + ((e2 << 2) + 4) | 0;
              f2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    q2 = 1;
                    p2 = f2;
                    o2 = k2;
                    while (1) {
                      do {
                        if ((d[l2 + 1 >> 0] | 0 | 0) > (g2 | 0)) {
                          b[p2 >> 1] = 0;
                          k2 = o2;
                        } else {
                          k2 = b[p2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[p2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                            n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          a2 = b[p2 + (s2 << 1) >> 1] | 0;
                          e2 = a2 << 16 >> 16;
                          k2 = b[p2 + (t2 << 1) >> 1] | 0;
                          n2 = k2 << 16 >> 16;
                          f2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (f2) {
                              b[p2 >> 1] = k2;
                              k2 = n2 * 7 | 0;
                              f2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
                              f2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + q2;
                              f2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + w2;
                              f2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[f2 >> 2] | 0) < (q2 | 0))
                                c[f2 >> 2] = q2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = o2;
                              break;
                            }
                            k2 = b[p2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[p2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                              n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (q2 | 0)) {
                                k2 = o2;
                                break;
                              }
                              c[k2 >> 2] = q2;
                              k2 = o2;
                              break;
                            } else {
                              k2 = o2 + 1 | 0;
                              if ((o2 | 0) > 32767)
                                break b;
                              b[p2 >> 1] = k2;
                              c[j2 + 1179664 + (o2 << 2) >> 2] = k2 << 16 >> 16;
                              o2 = o2 * 7 | 0;
                              c[j2 + 1310736 + (o2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (o2 + 1 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (o2 + 3 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 4 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (o2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (f2) {
                            k2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            e2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (e2 | 0)) {
                              b[p2 >> 1] = e2;
                              if ((o2 | 0) > 0) {
                                f2 = 0;
                                a2 = m2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = e2;
                                  f2 = f2 + 1 | 0;
                                  if ((f2 | 0) >= (o2 | 0)) {
                                    k2 = e2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = e2;
                            } else {
                              b[p2 >> 1] = k2;
                              if ((k2 | 0) < (e2 | 0) & (o2 | 0) > 0) {
                                f2 = 0;
                                a2 = m2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (e2 | 0))
                                    c[a2 >> 2] = k2;
                                  f2 = f2 + 1 | 0;
                                  if ((f2 | 0) >= (o2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                            n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          f2 = b[p2 + -2 >> 1] | 0;
                          if (f2 << 16 >> 16 <= 0) {
                            b[p2 >> 1] = a2;
                            k2 = e2 * 7 | 0;
                            f2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
                            f2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + q2;
                            f2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + w2;
                            f2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[f2 >> 2] | 0) > (q2 | 0))
                              c[f2 >> 2] = q2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                          e2 = c[j2 + 1179664 + ((f2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (e2 | 0)) {
                            b[p2 >> 1] = e2;
                            if ((o2 | 0) > 0) {
                              f2 = 0;
                              a2 = m2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = e2;
                                f2 = f2 + 1 | 0;
                                if ((f2 | 0) >= (o2 | 0)) {
                                  k2 = e2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = e2;
                          } else {
                            b[p2 >> 1] = k2;
                            if ((k2 | 0) < (e2 | 0) & (o2 | 0) > 0) {
                              f2 = 0;
                              a2 = m2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (e2 | 0))
                                  c[a2 >> 2] = k2;
                                f2 = f2 + 1 | 0;
                                if ((f2 | 0) >= (o2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                          n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = o2;
                        }
                      } while (0);
                      q2 = q2 + 1 | 0;
                      l2 = l2 + 4 | 0;
                      f2 = p2 + 2 | 0;
                      if ((q2 | 0) >= (x2 | 0))
                        break;
                      else {
                        p2 = f2;
                        o2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (y2 | 0)) {
                    n2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    l2 = l2 + r2 | 0;
                    f2 = f2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              n2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((n2 | 0) < 1)
            l2 = 1;
          else {
            f2 = 1;
            l2 = 1;
            while (1) {
              k2 = c[m2 >> 2] | 0;
              if ((k2 | 0) == (f2 | 0)) {
                k2 = l2;
                l2 = l2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = k2;
              if ((f2 | 0) < (n2 | 0)) {
                f2 = f2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = j2 + 8 | 0;
          k2 = l2 + -1 | 0;
          c[e2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((l2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((n2 | 0) > 0) {
              a2 = 0;
              do {
                m2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                f2 = a2 * 7 | 0;
                k2 = j2 + 12 + (m2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (f2 << 2) >> 2] | 0);
                k2 = m2 << 1;
                l2 = j2 + 655376 + (k2 << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[j2 + 1310736 + (f2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (f2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                k2 = j2 + 131084 + (m2 << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 1) << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 2) << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                l2 = j2 + 131084 + ((m2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (f2 + 6 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (k2 | 0))
                  c[l2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (n2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[e2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function vc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              l2 = l2 + (B2 << 1) | 0;
              m2 = m2 + (B2 << 1) | 0;
            }
          }
        }
        m2 = j2 + 1179664 | 0;
        u2 = 0 - B2 | 0;
        s2 = 1 - B2 | 0;
        t2 = ~B2;
        r2 = (e2 << 1) + 8 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              l2 = a2 + ((e2 << 2) + 4) | 0;
              f2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    q2 = 1;
                    p2 = f2;
                    o2 = k2;
                    while (1) {
                      do {
                        if ((d[l2 >> 0] | 0 | 0) > (g2 | 0)) {
                          b[p2 >> 1] = 0;
                          k2 = o2;
                        } else {
                          k2 = b[p2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[p2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                            n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          a2 = b[p2 + (s2 << 1) >> 1] | 0;
                          e2 = a2 << 16 >> 16;
                          k2 = b[p2 + (t2 << 1) >> 1] | 0;
                          n2 = k2 << 16 >> 16;
                          f2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (f2) {
                              b[p2 >> 1] = k2;
                              k2 = n2 * 7 | 0;
                              f2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
                              f2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + q2;
                              f2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + w2;
                              f2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[f2 >> 2] | 0) < (q2 | 0))
                                c[f2 >> 2] = q2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = o2;
                              break;
                            }
                            k2 = b[p2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[p2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                              n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (q2 | 0)) {
                                k2 = o2;
                                break;
                              }
                              c[k2 >> 2] = q2;
                              k2 = o2;
                              break;
                            } else {
                              k2 = o2 + 1 | 0;
                              if ((o2 | 0) > 32767)
                                break b;
                              b[p2 >> 1] = k2;
                              c[j2 + 1179664 + (o2 << 2) >> 2] = k2 << 16 >> 16;
                              o2 = o2 * 7 | 0;
                              c[j2 + 1310736 + (o2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (o2 + 1 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (o2 + 3 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 4 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (o2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (f2) {
                            k2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            e2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (e2 | 0)) {
                              b[p2 >> 1] = e2;
                              if ((o2 | 0) > 0) {
                                f2 = 0;
                                a2 = m2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = e2;
                                  f2 = f2 + 1 | 0;
                                  if ((f2 | 0) >= (o2 | 0)) {
                                    k2 = e2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = e2;
                            } else {
                              b[p2 >> 1] = k2;
                              if ((k2 | 0) < (e2 | 0) & (o2 | 0) > 0) {
                                f2 = 0;
                                a2 = m2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (e2 | 0))
                                    c[a2 >> 2] = k2;
                                  f2 = f2 + 1 | 0;
                                  if ((f2 | 0) >= (o2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                            n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          f2 = b[p2 + -2 >> 1] | 0;
                          if (f2 << 16 >> 16 <= 0) {
                            b[p2 >> 1] = a2;
                            k2 = e2 * 7 | 0;
                            f2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
                            f2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + q2;
                            f2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + w2;
                            f2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[f2 >> 2] | 0) > (q2 | 0))
                              c[f2 >> 2] = q2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                          e2 = c[j2 + 1179664 + ((f2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (e2 | 0)) {
                            b[p2 >> 1] = e2;
                            if ((o2 | 0) > 0) {
                              f2 = 0;
                              a2 = m2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = e2;
                                f2 = f2 + 1 | 0;
                                if ((f2 | 0) >= (o2 | 0)) {
                                  k2 = e2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = e2;
                          } else {
                            b[p2 >> 1] = k2;
                            if ((k2 | 0) < (e2 | 0) & (o2 | 0) > 0) {
                              f2 = 0;
                              a2 = m2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (e2 | 0))
                                  c[a2 >> 2] = k2;
                                f2 = f2 + 1 | 0;
                                if ((f2 | 0) >= (o2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                          n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = o2;
                        }
                      } while (0);
                      q2 = q2 + 1 | 0;
                      l2 = l2 + 4 | 0;
                      f2 = p2 + 2 | 0;
                      if ((q2 | 0) >= (x2 | 0))
                        break;
                      else {
                        p2 = f2;
                        o2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (y2 | 0)) {
                    n2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    l2 = l2 + r2 | 0;
                    f2 = f2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              n2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((n2 | 0) < 1)
            l2 = 1;
          else {
            f2 = 1;
            l2 = 1;
            while (1) {
              k2 = c[m2 >> 2] | 0;
              if ((k2 | 0) == (f2 | 0)) {
                k2 = l2;
                l2 = l2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = k2;
              if ((f2 | 0) < (n2 | 0)) {
                f2 = f2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = j2 + 8 | 0;
          k2 = l2 + -1 | 0;
          c[e2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((l2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((n2 | 0) > 0) {
              a2 = 0;
              do {
                m2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                f2 = a2 * 7 | 0;
                k2 = j2 + 12 + (m2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (f2 << 2) >> 2] | 0);
                k2 = m2 << 1;
                l2 = j2 + 655376 + (k2 << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[j2 + 1310736 + (f2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (f2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                k2 = j2 + 131084 + (m2 << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 1) << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 2) << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                l2 = j2 + 131084 + ((m2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (f2 + 6 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (k2 | 0))
                  c[l2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (n2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[e2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function wc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = g2 * 3 | 0;
        x2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              g2 = g2 + (e2 << 1) | 0;
              l2 = l2 + (e2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        u2 = 0 - e2 | 0;
        s2 = 1 - e2 | 0;
        t2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              g2 = a2 + (k2 * 3 | 0) | 0;
              m2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    r2 = 1;
                    q2 = m2;
                    p2 = k2;
                    while (1) {
                      do {
                        if (((d[g2 + 1 >> 0] | 0) + (d[g2 >> 0] | 0) + (d[g2 + 2 >> 0] | 0) | 0) > (y2 | 0)) {
                          b[q2 >> 1] = 0;
                          k2 = p2;
                        } else {
                          k2 = b[q2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[q2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          a2 = b[q2 + (s2 << 1) >> 1] | 0;
                          n2 = a2 << 16 >> 16;
                          k2 = b[q2 + (t2 << 1) >> 1] | 0;
                          o2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[q2 >> 1] = k2;
                              k2 = o2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (r2 | 0))
                                c[m2 >> 2] = r2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = p2;
                              break;
                            }
                            k2 = b[q2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[q2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (r2 | 0)) {
                                k2 = p2;
                                break;
                              }
                              c[k2 >> 2] = r2;
                              k2 = p2;
                              break;
                            } else {
                              k2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[q2 >> 1] = k2;
                              c[j2 + 1179664 + (p2 << 2) >> 2] = k2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[j2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            n2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (n2 | 0)) {
                              b[q2 >> 1] = n2;
                              if ((p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = n2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0)) {
                                    k2 = n2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = n2;
                            } else {
                              b[q2 >> 1] = k2;
                              if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (n2 | 0))
                                    c[a2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          m2 = b[q2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[q2 >> 1] = a2;
                            k2 = n2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (r2 | 0))
                              c[m2 >> 2] = r2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                          n2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (n2 | 0)) {
                            b[q2 >> 1] = n2;
                            if ((p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = n2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0)) {
                                  k2 = n2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = n2;
                          } else {
                            b[q2 >> 1] = k2;
                            if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (n2 | 0))
                                  c[a2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      g2 = g2 + 3 | 0;
                      m2 = q2 + 2 | 0;
                      if ((r2 | 0) >= (x2 | 0))
                        break;
                      else {
                        q2 = m2;
                        p2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (z2 | 0)) {
                    o2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    g2 = g2 + 6 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              o2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((o2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (o2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          n2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[n2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              a2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                m2 = a2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (o2 | 0));
            }
            if ((c[n2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function xc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = g2 * 3 | 0;
        x2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              g2 = g2 + (e2 << 1) | 0;
              l2 = l2 + (e2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        u2 = 0 - e2 | 0;
        s2 = 1 - e2 | 0;
        t2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              g2 = a2 + (k2 << 1) | 0;
              m2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    r2 = 1;
                    q2 = m2;
                    p2 = k2;
                    while (1) {
                      n2 = d[g2 >> 0] | 0;
                      o2 = d[g2 + 1 >> 0] | 0;
                      do {
                        if (((n2 & 248) + 10 + (n2 << 5 & 224) + (o2 >>> 3 & 28) + (o2 << 3 & 248) | 0) > (y2 | 0)) {
                          b[q2 >> 1] = 0;
                          k2 = p2;
                        } else {
                          k2 = b[q2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[q2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          a2 = b[q2 + (s2 << 1) >> 1] | 0;
                          n2 = a2 << 16 >> 16;
                          k2 = b[q2 + (t2 << 1) >> 1] | 0;
                          o2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[q2 >> 1] = k2;
                              k2 = o2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (r2 | 0))
                                c[m2 >> 2] = r2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = p2;
                              break;
                            }
                            k2 = b[q2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[q2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (r2 | 0)) {
                                k2 = p2;
                                break;
                              }
                              c[k2 >> 2] = r2;
                              k2 = p2;
                              break;
                            } else {
                              k2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[q2 >> 1] = k2;
                              c[j2 + 1179664 + (p2 << 2) >> 2] = k2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[j2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            n2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (n2 | 0)) {
                              b[q2 >> 1] = n2;
                              if ((p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = n2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0)) {
                                    k2 = n2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = n2;
                            } else {
                              b[q2 >> 1] = k2;
                              if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (n2 | 0))
                                    c[a2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          m2 = b[q2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[q2 >> 1] = a2;
                            k2 = n2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (r2 | 0))
                              c[m2 >> 2] = r2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                          n2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (n2 | 0)) {
                            b[q2 >> 1] = n2;
                            if ((p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = n2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0)) {
                                  k2 = n2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = n2;
                          } else {
                            b[q2 >> 1] = k2;
                            if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (n2 | 0))
                                  c[a2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      g2 = g2 + 2 | 0;
                      m2 = q2 + 2 | 0;
                      if ((r2 | 0) >= (x2 | 0))
                        break;
                      else {
                        q2 = m2;
                        p2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (z2 | 0)) {
                    o2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    g2 = g2 + 4 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              o2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((o2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (o2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          n2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[n2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              a2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                m2 = a2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (o2 | 0));
            }
            if ((c[n2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function yc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = g2 * 3 | 0;
        x2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              g2 = g2 + (e2 << 1) | 0;
              l2 = l2 + (e2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        u2 = 0 - e2 | 0;
        s2 = 1 - e2 | 0;
        t2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              g2 = a2 + (k2 << 2) | 0;
              m2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    r2 = 1;
                    q2 = m2;
                    p2 = k2;
                    while (1) {
                      do {
                        if (((d[g2 + 1 >> 0] | 0) + (d[g2 >> 0] | 0) + (d[g2 + 2 >> 0] | 0) | 0) > (y2 | 0)) {
                          b[q2 >> 1] = 0;
                          k2 = p2;
                        } else {
                          k2 = b[q2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[q2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          a2 = b[q2 + (s2 << 1) >> 1] | 0;
                          n2 = a2 << 16 >> 16;
                          k2 = b[q2 + (t2 << 1) >> 1] | 0;
                          o2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[q2 >> 1] = k2;
                              k2 = o2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (r2 | 0))
                                c[m2 >> 2] = r2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = p2;
                              break;
                            }
                            k2 = b[q2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[q2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (r2 | 0)) {
                                k2 = p2;
                                break;
                              }
                              c[k2 >> 2] = r2;
                              k2 = p2;
                              break;
                            } else {
                              k2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[q2 >> 1] = k2;
                              c[j2 + 1179664 + (p2 << 2) >> 2] = k2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[j2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            n2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (n2 | 0)) {
                              b[q2 >> 1] = n2;
                              if ((p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = n2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0)) {
                                    k2 = n2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = n2;
                            } else {
                              b[q2 >> 1] = k2;
                              if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (n2 | 0))
                                    c[a2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          m2 = b[q2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[q2 >> 1] = a2;
                            k2 = n2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (r2 | 0))
                              c[m2 >> 2] = r2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                          n2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (n2 | 0)) {
                            b[q2 >> 1] = n2;
                            if ((p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = n2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0)) {
                                  k2 = n2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = n2;
                          } else {
                            b[q2 >> 1] = k2;
                            if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (n2 | 0))
                                  c[a2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      g2 = g2 + 4 | 0;
                      m2 = q2 + 2 | 0;
                      if ((r2 | 0) >= (x2 | 0))
                        break;
                      else {
                        q2 = m2;
                        p2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (z2 | 0)) {
                    o2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    g2 = g2 + 8 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              o2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((o2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (o2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          n2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[n2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              a2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                m2 = a2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (o2 | 0));
            }
            if ((c[n2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function zc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = g2 * 3 | 0;
        x2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              g2 = g2 + (e2 << 1) | 0;
              l2 = l2 + (e2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        u2 = 0 - e2 | 0;
        s2 = 1 - e2 | 0;
        t2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              g2 = a2 + (k2 << 1) | 0;
              m2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    r2 = 1;
                    q2 = m2;
                    p2 = k2;
                    while (1) {
                      o2 = d[g2 >> 0] | 0;
                      do {
                        if (((o2 & 240) + 24 + (o2 << 4 & 240) + ((d[g2 + 1 >> 0] | 0) & 240) | 0) > (y2 | 0)) {
                          b[q2 >> 1] = 0;
                          k2 = p2;
                        } else {
                          k2 = b[q2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[q2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          a2 = b[q2 + (s2 << 1) >> 1] | 0;
                          n2 = a2 << 16 >> 16;
                          k2 = b[q2 + (t2 << 1) >> 1] | 0;
                          o2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[q2 >> 1] = k2;
                              k2 = o2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (r2 | 0))
                                c[m2 >> 2] = r2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = p2;
                              break;
                            }
                            k2 = b[q2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[q2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (r2 | 0)) {
                                k2 = p2;
                                break;
                              }
                              c[k2 >> 2] = r2;
                              k2 = p2;
                              break;
                            } else {
                              k2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[q2 >> 1] = k2;
                              c[j2 + 1179664 + (p2 << 2) >> 2] = k2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[j2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            n2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (n2 | 0)) {
                              b[q2 >> 1] = n2;
                              if ((p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = n2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0)) {
                                    k2 = n2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = n2;
                            } else {
                              b[q2 >> 1] = k2;
                              if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (n2 | 0))
                                    c[a2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          m2 = b[q2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[q2 >> 1] = a2;
                            k2 = n2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (r2 | 0))
                              c[m2 >> 2] = r2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                          n2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (n2 | 0)) {
                            b[q2 >> 1] = n2;
                            if ((p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = n2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0)) {
                                  k2 = n2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = n2;
                          } else {
                            b[q2 >> 1] = k2;
                            if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (n2 | 0))
                                  c[a2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      g2 = g2 + 2 | 0;
                      m2 = q2 + 2 | 0;
                      if ((r2 | 0) >= (x2 | 0))
                        break;
                      else {
                        q2 = m2;
                        p2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (z2 | 0)) {
                    o2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    g2 = g2 + 4 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              o2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((o2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (o2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          n2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[n2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              a2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                m2 = a2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (o2 | 0));
            }
            if ((c[n2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Ac(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = g2 * 3 | 0;
        x2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              g2 = g2 + (e2 << 1) | 0;
              l2 = l2 + (e2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        u2 = 0 - e2 | 0;
        s2 = 1 - e2 | 0;
        t2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              g2 = a2 + (k2 << 1) | 0;
              m2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    r2 = 1;
                    q2 = m2;
                    p2 = k2;
                    while (1) {
                      n2 = d[g2 >> 0] | 0;
                      o2 = d[g2 + 1 >> 0] | 0;
                      do {
                        if (((n2 & 248) + 12 + (n2 << 5 & 224) + (o2 >>> 3 & 24) + (o2 << 2 & 248) | 0) > (y2 | 0)) {
                          b[q2 >> 1] = 0;
                          k2 = p2;
                        } else {
                          k2 = b[q2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[q2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          a2 = b[q2 + (s2 << 1) >> 1] | 0;
                          n2 = a2 << 16 >> 16;
                          k2 = b[q2 + (t2 << 1) >> 1] | 0;
                          o2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[q2 >> 1] = k2;
                              k2 = o2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (r2 | 0))
                                c[m2 >> 2] = r2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = p2;
                              break;
                            }
                            k2 = b[q2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[q2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (r2 | 0)) {
                                k2 = p2;
                                break;
                              }
                              c[k2 >> 2] = r2;
                              k2 = p2;
                              break;
                            } else {
                              k2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[q2 >> 1] = k2;
                              c[j2 + 1179664 + (p2 << 2) >> 2] = k2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[j2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            n2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (n2 | 0)) {
                              b[q2 >> 1] = n2;
                              if ((p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = n2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0)) {
                                    k2 = n2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = n2;
                            } else {
                              b[q2 >> 1] = k2;
                              if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (n2 | 0))
                                    c[a2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          m2 = b[q2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[q2 >> 1] = a2;
                            k2 = n2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (r2 | 0))
                              c[m2 >> 2] = r2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                          n2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (n2 | 0)) {
                            b[q2 >> 1] = n2;
                            if ((p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = n2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0)) {
                                  k2 = n2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = n2;
                          } else {
                            b[q2 >> 1] = k2;
                            if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (n2 | 0))
                                  c[a2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      g2 = g2 + 2 | 0;
                      m2 = q2 + 2 | 0;
                      if ((r2 | 0) >= (x2 | 0))
                        break;
                      else {
                        q2 = m2;
                        p2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (z2 | 0)) {
                    o2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    g2 = g2 + 4 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              o2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((o2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (o2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          n2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[n2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              a2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                m2 = a2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (o2 | 0));
            }
            if ((c[n2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Bc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = g2 * 3 | 0;
        x2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              g2 = g2 + (e2 << 1) | 0;
              l2 = l2 + (e2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        u2 = 0 - e2 | 0;
        s2 = 1 - e2 | 0;
        t2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              g2 = a2 + (k2 << 2) | 0;
              m2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    r2 = 1;
                    q2 = m2;
                    p2 = k2;
                    while (1) {
                      do {
                        if (((d[g2 + 2 >> 0] | 0) + (d[g2 + 1 >> 0] | 0) + (d[g2 + 3 >> 0] | 0) | 0) > (y2 | 0)) {
                          b[q2 >> 1] = 0;
                          k2 = p2;
                        } else {
                          k2 = b[q2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[q2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          a2 = b[q2 + (s2 << 1) >> 1] | 0;
                          n2 = a2 << 16 >> 16;
                          k2 = b[q2 + (t2 << 1) >> 1] | 0;
                          o2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[q2 >> 1] = k2;
                              k2 = o2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (r2 | 0))
                                c[m2 >> 2] = r2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = p2;
                              break;
                            }
                            k2 = b[q2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[q2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (r2 | 0)) {
                                k2 = p2;
                                break;
                              }
                              c[k2 >> 2] = r2;
                              k2 = p2;
                              break;
                            } else {
                              k2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[q2 >> 1] = k2;
                              c[j2 + 1179664 + (p2 << 2) >> 2] = k2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[j2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            n2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (n2 | 0)) {
                              b[q2 >> 1] = n2;
                              if ((p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = n2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0)) {
                                    k2 = n2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = n2;
                            } else {
                              b[q2 >> 1] = k2;
                              if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (n2 | 0))
                                    c[a2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          m2 = b[q2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[q2 >> 1] = a2;
                            k2 = n2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (r2 | 0))
                              c[m2 >> 2] = r2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                          n2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (n2 | 0)) {
                            b[q2 >> 1] = n2;
                            if ((p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = n2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0)) {
                                  k2 = n2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = n2;
                          } else {
                            b[q2 >> 1] = k2;
                            if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (n2 | 0))
                                  c[a2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      g2 = g2 + 4 | 0;
                      m2 = q2 + 2 | 0;
                      if ((r2 | 0) >= (x2 | 0))
                        break;
                      else {
                        q2 = m2;
                        p2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (z2 | 0)) {
                    o2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    g2 = g2 + 8 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              o2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((o2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (o2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          n2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[n2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              a2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                m2 = a2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (o2 | 0));
            }
            if ((c[n2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Cc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (y2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              l2 = l2 + (e2 << 1) | 0;
              m2 = m2 + (e2 << 1) | 0;
            }
          }
        }
        m2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        v2 = 0 - e2 | 0;
        t2 = 1 - e2 | 0;
        u2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              w2 = (y2 | 0) > 1;
              x2 = 1;
              l2 = a2 + k2 | 0;
              a2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (w2) {
                    s2 = 1;
                    r2 = a2;
                    q2 = k2;
                    while (1) {
                      do {
                        if ((d[l2 >> 0] | 0 | 0) > (g2 | 0)) {
                          b[r2 >> 1] = 0;
                          k2 = q2;
                        } else {
                          k2 = b[r2 + (v2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[r2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          n2 = b[r2 + (t2 << 1) >> 1] | 0;
                          o2 = n2 << 16 >> 16;
                          k2 = b[r2 + (u2 << 1) >> 1] | 0;
                          p2 = k2 << 16 >> 16;
                          a2 = k2 << 16 >> 16 > 0;
                          if (n2 << 16 >> 16 <= 0) {
                            if (a2) {
                              b[r2 >> 1] = k2;
                              k2 = p2 * 7 | 0;
                              a2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
                              a2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + s2;
                              a2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + x2;
                              a2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[a2 >> 2] | 0) < (s2 | 0))
                                c[a2 >> 2] = s2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                              k2 = q2;
                              break;
                            }
                            k2 = b[r2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[r2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                              p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                              p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (s2 | 0)) {
                                k2 = q2;
                                break;
                              }
                              c[k2 >> 2] = s2;
                              k2 = q2;
                              break;
                            } else {
                              k2 = q2 + 1 | 0;
                              if ((q2 | 0) > 32767)
                                break b;
                              b[r2 >> 1] = k2;
                              c[j2 + 1179664 + (q2 << 2) >> 2] = k2 << 16 >> 16;
                              q2 = q2 * 7 | 0;
                              c[j2 + 1310736 + (q2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (q2 + 1 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 2 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 3 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 4 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 5 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (a2) {
                            k2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            o2 = c[j2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (o2 | 0)) {
                              b[r2 >> 1] = o2;
                              if ((q2 | 0) > 0) {
                                a2 = 0;
                                n2 = m2;
                                while (1) {
                                  if ((c[n2 >> 2] | 0) == (k2 | 0))
                                    c[n2 >> 2] = o2;
                                  a2 = a2 + 1 | 0;
                                  if ((a2 | 0) >= (q2 | 0)) {
                                    k2 = o2;
                                    break;
                                  } else
                                    n2 = n2 + 4 | 0;
                                }
                              } else
                                k2 = o2;
                            } else {
                              b[r2 >> 1] = k2;
                              if ((k2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                                a2 = 0;
                                n2 = m2;
                                while (1) {
                                  if ((c[n2 >> 2] | 0) == (o2 | 0))
                                    c[n2 >> 2] = k2;
                                  a2 = a2 + 1 | 0;
                                  if ((a2 | 0) >= (q2 | 0))
                                    break;
                                  else
                                    n2 = n2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          k2 = b[r2 + -2 >> 1] | 0;
                          if (k2 << 16 >> 16 <= 0) {
                            b[r2 >> 1] = n2;
                            k2 = o2 * 7 | 0;
                            a2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
                            a2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + s2;
                            a2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + x2;
                            a2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[a2 >> 2] | 0) > (s2 | 0))
                              c[a2 >> 2] = s2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          o2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                          k2 = c[j2 + 1179664 + ((k2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((o2 | 0) > (k2 | 0)) {
                            b[r2 >> 1] = k2;
                            if ((q2 | 0) > 0) {
                              a2 = 0;
                              n2 = m2;
                              while (1) {
                                if ((c[n2 >> 2] | 0) == (o2 | 0))
                                  c[n2 >> 2] = k2;
                                a2 = a2 + 1 | 0;
                                if ((a2 | 0) >= (q2 | 0))
                                  break;
                                else
                                  n2 = n2 + 4 | 0;
                              }
                            }
                          } else {
                            b[r2 >> 1] = o2;
                            if ((o2 | 0) < (k2 | 0) & (q2 | 0) > 0) {
                              a2 = 0;
                              n2 = m2;
                              while (1) {
                                if ((c[n2 >> 2] | 0) == (k2 | 0))
                                  c[n2 >> 2] = o2;
                                a2 = a2 + 1 | 0;
                                if ((a2 | 0) >= (q2 | 0)) {
                                  k2 = o2;
                                  break;
                                } else
                                  n2 = n2 + 4 | 0;
                              }
                            } else
                              k2 = o2;
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                          p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + x2;
                          k2 = q2;
                        }
                      } while (0);
                      s2 = s2 + 1 | 0;
                      l2 = l2 + 1 | 0;
                      a2 = r2 + 2 | 0;
                      if ((s2 | 0) >= (y2 | 0))
                        break;
                      else {
                        r2 = a2;
                        q2 = k2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (z2 | 0)) {
                    p2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    a2 = a2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              p2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          n2 = j2 + 12 | 0;
          if ((p2 | 0) < 1)
            l2 = 1;
          else {
            a2 = 1;
            l2 = 1;
            while (1) {
              k2 = c[m2 >> 2] | 0;
              if ((k2 | 0) == (a2 | 0)) {
                k2 = l2;
                l2 = l2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = k2;
              if ((a2 | 0) < (p2 | 0)) {
                a2 = a2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = j2 + 8 | 0;
          k2 = l2 + -1 | 0;
          c[o2 >> 2] = k2;
          if (k2) {
            ek(n2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((l2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              n2 = 0;
              do {
                m2 = (c[j2 + 1179664 + (n2 << 2) >> 2] | 0) + -1 | 0;
                a2 = n2 * 7 | 0;
                k2 = j2 + 12 + (m2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (a2 << 2) >> 2] | 0);
                k2 = m2 << 1;
                l2 = j2 + 655376 + (k2 << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[j2 + 1310736 + (a2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (a2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                k2 = j2 + 131084 + (m2 << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 1) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 2) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                l2 = j2 + 131084 + ((m2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (a2 + 6 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (k2 | 0))
                  c[l2 >> 2] = k2;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[o2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Dc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (y2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              l2 = l2 + (e2 << 1) | 0;
              m2 = m2 + (e2 << 1) | 0;
            }
          }
        }
        m2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        v2 = 0 - e2 | 0;
        t2 = 1 - e2 | 0;
        u2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              w2 = (y2 | 0) > 1;
              x2 = 1;
              l2 = a2 + (k2 << 1) | 0;
              a2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (w2) {
                    s2 = 1;
                    r2 = a2;
                    q2 = k2;
                    while (1) {
                      do {
                        if ((d[l2 + 1 >> 0] | 0 | 0) > (g2 | 0)) {
                          b[r2 >> 1] = 0;
                          k2 = q2;
                        } else {
                          k2 = b[r2 + (v2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[r2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          n2 = b[r2 + (t2 << 1) >> 1] | 0;
                          o2 = n2 << 16 >> 16;
                          k2 = b[r2 + (u2 << 1) >> 1] | 0;
                          p2 = k2 << 16 >> 16;
                          a2 = k2 << 16 >> 16 > 0;
                          if (n2 << 16 >> 16 <= 0) {
                            if (a2) {
                              b[r2 >> 1] = k2;
                              k2 = p2 * 7 | 0;
                              a2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
                              a2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + s2;
                              a2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + x2;
                              a2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[a2 >> 2] | 0) < (s2 | 0))
                                c[a2 >> 2] = s2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                              k2 = q2;
                              break;
                            }
                            k2 = b[r2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[r2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                              p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                              p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (s2 | 0)) {
                                k2 = q2;
                                break;
                              }
                              c[k2 >> 2] = s2;
                              k2 = q2;
                              break;
                            } else {
                              k2 = q2 + 1 | 0;
                              if ((q2 | 0) > 32767)
                                break b;
                              b[r2 >> 1] = k2;
                              c[j2 + 1179664 + (q2 << 2) >> 2] = k2 << 16 >> 16;
                              q2 = q2 * 7 | 0;
                              c[j2 + 1310736 + (q2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (q2 + 1 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 2 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 3 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 4 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 5 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (a2) {
                            k2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            o2 = c[j2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (o2 | 0)) {
                              b[r2 >> 1] = o2;
                              if ((q2 | 0) > 0) {
                                a2 = 0;
                                n2 = m2;
                                while (1) {
                                  if ((c[n2 >> 2] | 0) == (k2 | 0))
                                    c[n2 >> 2] = o2;
                                  a2 = a2 + 1 | 0;
                                  if ((a2 | 0) >= (q2 | 0)) {
                                    k2 = o2;
                                    break;
                                  } else
                                    n2 = n2 + 4 | 0;
                                }
                              } else
                                k2 = o2;
                            } else {
                              b[r2 >> 1] = k2;
                              if ((k2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                                a2 = 0;
                                n2 = m2;
                                while (1) {
                                  if ((c[n2 >> 2] | 0) == (o2 | 0))
                                    c[n2 >> 2] = k2;
                                  a2 = a2 + 1 | 0;
                                  if ((a2 | 0) >= (q2 | 0))
                                    break;
                                  else
                                    n2 = n2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          a2 = b[r2 + -2 >> 1] | 0;
                          if (a2 << 16 >> 16 <= 0) {
                            b[r2 >> 1] = n2;
                            k2 = o2 * 7 | 0;
                            a2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
                            a2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + s2;
                            a2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + x2;
                            a2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[a2 >> 2] | 0) > (s2 | 0))
                              c[a2 >> 2] = s2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                          o2 = c[j2 + 1179664 + ((a2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (o2 | 0)) {
                            b[r2 >> 1] = o2;
                            if ((q2 | 0) > 0) {
                              a2 = 0;
                              n2 = m2;
                              while (1) {
                                if ((c[n2 >> 2] | 0) == (k2 | 0))
                                  c[n2 >> 2] = o2;
                                a2 = a2 + 1 | 0;
                                if ((a2 | 0) >= (q2 | 0)) {
                                  k2 = o2;
                                  break;
                                } else
                                  n2 = n2 + 4 | 0;
                              }
                            } else
                              k2 = o2;
                          } else {
                            b[r2 >> 1] = k2;
                            if ((k2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                              a2 = 0;
                              n2 = m2;
                              while (1) {
                                if ((c[n2 >> 2] | 0) == (o2 | 0))
                                  c[n2 >> 2] = k2;
                                a2 = a2 + 1 | 0;
                                if ((a2 | 0) >= (q2 | 0))
                                  break;
                                else
                                  n2 = n2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                          p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + x2;
                          k2 = q2;
                        }
                      } while (0);
                      s2 = s2 + 1 | 0;
                      l2 = l2 + 2 | 0;
                      a2 = r2 + 2 | 0;
                      if ((s2 | 0) >= (y2 | 0))
                        break;
                      else {
                        r2 = a2;
                        q2 = k2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (z2 | 0)) {
                    p2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 4 | 0;
                    a2 = a2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              p2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          n2 = j2 + 12 | 0;
          if ((p2 | 0) < 1)
            l2 = 1;
          else {
            a2 = 1;
            l2 = 1;
            while (1) {
              k2 = c[m2 >> 2] | 0;
              if ((k2 | 0) == (a2 | 0)) {
                k2 = l2;
                l2 = l2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = k2;
              if ((a2 | 0) < (p2 | 0)) {
                a2 = a2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = j2 + 8 | 0;
          k2 = l2 + -1 | 0;
          c[o2 >> 2] = k2;
          if (k2) {
            ek(n2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((l2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              n2 = 0;
              do {
                m2 = (c[j2 + 1179664 + (n2 << 2) >> 2] | 0) + -1 | 0;
                a2 = n2 * 7 | 0;
                k2 = j2 + 12 + (m2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (a2 << 2) >> 2] | 0);
                k2 = m2 << 1;
                l2 = j2 + 655376 + (k2 << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[j2 + 1310736 + (a2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (a2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                k2 = j2 + 131084 + (m2 << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 1) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 2) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                l2 = j2 + 131084 + ((m2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (a2 + 6 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (k2 | 0))
                  c[l2 >> 2] = k2;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[o2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Ec(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (y2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              l2 = l2 + (e2 << 1) | 0;
              m2 = m2 + (e2 << 1) | 0;
            }
          }
        }
        m2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        v2 = 0 - e2 | 0;
        t2 = 1 - e2 | 0;
        u2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              w2 = (y2 | 0) > 1;
              x2 = 1;
              l2 = a2 + (k2 << 1) | 0;
              a2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (w2) {
                    s2 = 1;
                    r2 = a2;
                    q2 = k2;
                    while (1) {
                      do {
                        if ((d[l2 >> 0] | 0 | 0) > (g2 | 0)) {
                          b[r2 >> 1] = 0;
                          k2 = q2;
                        } else {
                          k2 = b[r2 + (v2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[r2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          n2 = b[r2 + (t2 << 1) >> 1] | 0;
                          o2 = n2 << 16 >> 16;
                          k2 = b[r2 + (u2 << 1) >> 1] | 0;
                          p2 = k2 << 16 >> 16;
                          a2 = k2 << 16 >> 16 > 0;
                          if (n2 << 16 >> 16 <= 0) {
                            if (a2) {
                              b[r2 >> 1] = k2;
                              k2 = p2 * 7 | 0;
                              a2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
                              a2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + s2;
                              a2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + x2;
                              a2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[a2 >> 2] | 0) < (s2 | 0))
                                c[a2 >> 2] = s2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                              k2 = q2;
                              break;
                            }
                            k2 = b[r2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[r2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                              p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                              p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (s2 | 0)) {
                                k2 = q2;
                                break;
                              }
                              c[k2 >> 2] = s2;
                              k2 = q2;
                              break;
                            } else {
                              k2 = q2 + 1 | 0;
                              if ((q2 | 0) > 32767)
                                break b;
                              b[r2 >> 1] = k2;
                              c[j2 + 1179664 + (q2 << 2) >> 2] = k2 << 16 >> 16;
                              q2 = q2 * 7 | 0;
                              c[j2 + 1310736 + (q2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (q2 + 1 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 2 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 3 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 4 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 5 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (a2) {
                            k2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            o2 = c[j2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (o2 | 0)) {
                              b[r2 >> 1] = o2;
                              if ((q2 | 0) > 0) {
                                a2 = 0;
                                n2 = m2;
                                while (1) {
                                  if ((c[n2 >> 2] | 0) == (k2 | 0))
                                    c[n2 >> 2] = o2;
                                  a2 = a2 + 1 | 0;
                                  if ((a2 | 0) >= (q2 | 0)) {
                                    k2 = o2;
                                    break;
                                  } else
                                    n2 = n2 + 4 | 0;
                                }
                              } else
                                k2 = o2;
                            } else {
                              b[r2 >> 1] = k2;
                              if ((k2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                                a2 = 0;
                                n2 = m2;
                                while (1) {
                                  if ((c[n2 >> 2] | 0) == (o2 | 0))
                                    c[n2 >> 2] = k2;
                                  a2 = a2 + 1 | 0;
                                  if ((a2 | 0) >= (q2 | 0))
                                    break;
                                  else
                                    n2 = n2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          k2 = b[r2 + -2 >> 1] | 0;
                          if (k2 << 16 >> 16 <= 0) {
                            b[r2 >> 1] = n2;
                            k2 = o2 * 7 | 0;
                            a2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
                            a2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + s2;
                            a2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + x2;
                            a2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[a2 >> 2] | 0) > (s2 | 0))
                              c[a2 >> 2] = s2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          o2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                          k2 = c[j2 + 1179664 + ((k2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((o2 | 0) > (k2 | 0)) {
                            b[r2 >> 1] = k2;
                            if ((q2 | 0) > 0) {
                              a2 = 0;
                              n2 = m2;
                              while (1) {
                                if ((c[n2 >> 2] | 0) == (o2 | 0))
                                  c[n2 >> 2] = k2;
                                a2 = a2 + 1 | 0;
                                if ((a2 | 0) >= (q2 | 0))
                                  break;
                                else
                                  n2 = n2 + 4 | 0;
                              }
                            }
                          } else {
                            b[r2 >> 1] = o2;
                            if ((o2 | 0) < (k2 | 0) & (q2 | 0) > 0) {
                              a2 = 0;
                              n2 = m2;
                              while (1) {
                                if ((c[n2 >> 2] | 0) == (k2 | 0))
                                  c[n2 >> 2] = o2;
                                a2 = a2 + 1 | 0;
                                if ((a2 | 0) >= (q2 | 0)) {
                                  k2 = o2;
                                  break;
                                } else
                                  n2 = n2 + 4 | 0;
                              }
                            } else
                              k2 = o2;
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                          p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + x2;
                          k2 = q2;
                        }
                      } while (0);
                      s2 = s2 + 1 | 0;
                      l2 = l2 + 2 | 0;
                      a2 = r2 + 2 | 0;
                      if ((s2 | 0) >= (y2 | 0))
                        break;
                      else {
                        r2 = a2;
                        q2 = k2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (z2 | 0)) {
                    p2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 4 | 0;
                    a2 = a2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              p2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          n2 = j2 + 12 | 0;
          if ((p2 | 0) < 1)
            l2 = 1;
          else {
            a2 = 1;
            l2 = 1;
            while (1) {
              k2 = c[m2 >> 2] | 0;
              if ((k2 | 0) == (a2 | 0)) {
                k2 = l2;
                l2 = l2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = k2;
              if ((a2 | 0) < (p2 | 0)) {
                a2 = a2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = j2 + 8 | 0;
          k2 = l2 + -1 | 0;
          c[o2 >> 2] = k2;
          if (k2) {
            ek(n2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((l2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              n2 = 0;
              do {
                m2 = (c[j2 + 1179664 + (n2 << 2) >> 2] | 0) + -1 | 0;
                a2 = n2 * 7 | 0;
                k2 = j2 + 12 + (m2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (a2 << 2) >> 2] | 0);
                k2 = m2 << 1;
                l2 = j2 + 655376 + (k2 << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[j2 + 1310736 + (a2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (a2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                k2 = j2 + 131084 + (m2 << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 1) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 2) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                l2 = j2 + 131084 + ((m2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (a2 + 6 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (k2 | 0))
                  c[l2 >> 2] = k2;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[o2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Fc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (y2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              l2 = l2 + (e2 << 1) | 0;
              m2 = m2 + (e2 << 1) | 0;
            }
          }
        }
        m2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        v2 = 0 - e2 | 0;
        t2 = 1 - e2 | 0;
        u2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              w2 = (y2 | 0) > 1;
              x2 = 1;
              l2 = a2 + k2 | 0;
              a2 = n2 + (k2 << 1) | 0;
              n2 = g2 + k2 | 0;
              k2 = 0;
              b:
                while (1) {
                  if (w2) {
                    s2 = 1;
                    r2 = l2;
                    q2 = k2;
                    while (1) {
                      do {
                        if ((d[r2 >> 0] | 0) > (d[n2 >> 0] | 0)) {
                          b[a2 >> 1] = 0;
                          k2 = q2;
                        } else {
                          k2 = b[a2 + (v2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[a2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          g2 = b[a2 + (t2 << 1) >> 1] | 0;
                          o2 = g2 << 16 >> 16;
                          k2 = b[a2 + (u2 << 1) >> 1] | 0;
                          p2 = k2 << 16 >> 16;
                          l2 = k2 << 16 >> 16 > 0;
                          if (g2 << 16 >> 16 <= 0) {
                            if (l2) {
                              b[a2 >> 1] = k2;
                              k2 = p2 * 7 | 0;
                              l2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[l2 >> 2] = (c[l2 >> 2] | 0) + 1;
                              l2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[l2 >> 2] = (c[l2 >> 2] | 0) + s2;
                              l2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[l2 >> 2] = (c[l2 >> 2] | 0) + x2;
                              l2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[l2 >> 2] | 0) < (s2 | 0))
                                c[l2 >> 2] = s2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                              k2 = q2;
                              break;
                            }
                            k2 = b[a2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[a2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                              p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                              p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (s2 | 0)) {
                                k2 = q2;
                                break;
                              }
                              c[k2 >> 2] = s2;
                              k2 = q2;
                              break;
                            } else {
                              k2 = q2 + 1 | 0;
                              if ((q2 | 0) > 32767)
                                break b;
                              b[a2 >> 1] = k2;
                              c[j2 + 1179664 + (q2 << 2) >> 2] = k2 << 16 >> 16;
                              q2 = q2 * 7 | 0;
                              c[j2 + 1310736 + (q2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (q2 + 1 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 2 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 3 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 4 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 5 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (l2) {
                            k2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            o2 = c[j2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (o2 | 0)) {
                              b[a2 >> 1] = o2;
                              if ((q2 | 0) > 0) {
                                l2 = 0;
                                g2 = m2;
                                while (1) {
                                  if ((c[g2 >> 2] | 0) == (k2 | 0))
                                    c[g2 >> 2] = o2;
                                  l2 = l2 + 1 | 0;
                                  if ((l2 | 0) >= (q2 | 0)) {
                                    k2 = o2;
                                    break;
                                  } else
                                    g2 = g2 + 4 | 0;
                                }
                              } else
                                k2 = o2;
                            } else {
                              b[a2 >> 1] = k2;
                              if ((k2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                                l2 = 0;
                                g2 = m2;
                                while (1) {
                                  if ((c[g2 >> 2] | 0) == (o2 | 0))
                                    c[g2 >> 2] = k2;
                                  l2 = l2 + 1 | 0;
                                  if ((l2 | 0) >= (q2 | 0))
                                    break;
                                  else
                                    g2 = g2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          k2 = b[a2 + -2 >> 1] | 0;
                          if (k2 << 16 >> 16 <= 0) {
                            b[a2 >> 1] = g2;
                            k2 = o2 * 7 | 0;
                            l2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[l2 >> 2] = (c[l2 >> 2] | 0) + 1;
                            l2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[l2 >> 2] = (c[l2 >> 2] | 0) + s2;
                            l2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[l2 >> 2] = (c[l2 >> 2] | 0) + x2;
                            l2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[l2 >> 2] | 0) > (s2 | 0))
                              c[l2 >> 2] = s2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          o2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                          k2 = c[j2 + 1179664 + ((k2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((o2 | 0) > (k2 | 0)) {
                            b[a2 >> 1] = k2;
                            if ((q2 | 0) > 0) {
                              l2 = 0;
                              g2 = m2;
                              while (1) {
                                if ((c[g2 >> 2] | 0) == (o2 | 0))
                                  c[g2 >> 2] = k2;
                                l2 = l2 + 1 | 0;
                                if ((l2 | 0) >= (q2 | 0))
                                  break;
                                else
                                  g2 = g2 + 4 | 0;
                              }
                            }
                          } else {
                            b[a2 >> 1] = o2;
                            if ((o2 | 0) < (k2 | 0) & (q2 | 0) > 0) {
                              l2 = 0;
                              g2 = m2;
                              while (1) {
                                if ((c[g2 >> 2] | 0) == (k2 | 0))
                                  c[g2 >> 2] = o2;
                                l2 = l2 + 1 | 0;
                                if ((l2 | 0) >= (q2 | 0)) {
                                  k2 = o2;
                                  break;
                                } else
                                  g2 = g2 + 4 | 0;
                              }
                            } else
                              k2 = o2;
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                          p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + x2;
                          k2 = q2;
                        }
                      } while (0);
                      s2 = s2 + 1 | 0;
                      l2 = r2 + 1 | 0;
                      n2 = n2 + 1 | 0;
                      a2 = a2 + 2 | 0;
                      if ((s2 | 0) >= (y2 | 0))
                        break;
                      else {
                        r2 = l2;
                        q2 = k2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (z2 | 0)) {
                    o2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    a2 = a2 + 4 | 0;
                    n2 = n2 + 2 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              o2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          n2 = j2 + 12 | 0;
          if ((o2 | 0) < 1)
            l2 = 1;
          else {
            a2 = 1;
            l2 = 1;
            while (1) {
              k2 = c[m2 >> 2] | 0;
              if ((k2 | 0) == (a2 | 0)) {
                k2 = l2;
                l2 = l2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = k2;
              if ((a2 | 0) < (o2 | 0)) {
                a2 = a2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          g2 = j2 + 8 | 0;
          k2 = l2 + -1 | 0;
          c[g2 >> 2] = k2;
          if (k2) {
            ek(n2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((l2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[g2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              n2 = 0;
              do {
                m2 = (c[j2 + 1179664 + (n2 << 2) >> 2] | 0) + -1 | 0;
                a2 = n2 * 7 | 0;
                k2 = j2 + 12 + (m2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (a2 << 2) >> 2] | 0);
                k2 = m2 << 1;
                l2 = j2 + 655376 + (k2 << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[j2 + 1310736 + (a2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (a2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                k2 = j2 + 131084 + (m2 << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 1) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 2) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                l2 = j2 + 131084 + ((m2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (a2 + 6 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (k2 | 0))
                  c[l2 >> 2] = k2;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) < (o2 | 0));
            }
            if ((c[g2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[g2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Gc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        w2 = g2 * 3 | 0;
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              g2 = g2 + (B2 << 1) | 0;
              l2 = l2 + (B2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        t2 = 0 - B2 | 0;
        r2 = 1 - B2 | 0;
        s2 = ~B2;
        q2 = (e2 * 3 | 0) + 12 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              u2 = (x2 | 0) > 1;
              v2 = 1;
              g2 = a2 + ((e2 * 6 | 0) + 6) | 0;
              m2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (u2) {
                    p2 = 1;
                    o2 = m2;
                    n2 = k2;
                    while (1) {
                      do {
                        if (((d[g2 + 1 >> 0] | 0) + (d[g2 >> 0] | 0) + (d[g2 + 2 >> 0] | 0) | 0) > (w2 | 0)) {
                          k2 = b[o2 + (t2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          f2 = b[o2 + (r2 << 1) >> 1] | 0;
                          a2 = f2 << 16 >> 16;
                          k2 = b[o2 + (s2 << 1) >> 1] | 0;
                          e2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[o2 >> 1] = k2;
                              k2 = e2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (p2 | 0))
                                c[m2 >> 2] = p2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                              k2 = n2;
                              break;
                            }
                            k2 = b[o2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                              e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (p2 | 0)) {
                                k2 = n2;
                                break;
                              }
                              c[k2 >> 2] = p2;
                              k2 = n2;
                              break;
                            } else {
                              k2 = n2 + 1 | 0;
                              if ((n2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = k2;
                              c[j2 + 1179664 + (n2 << 2) >> 2] = k2 << 16 >> 16;
                              n2 = n2 * 7 | 0;
                              c[j2 + 1310736 + (n2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (n2 + 1 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 2 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 3 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 4 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 5 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 6 << 2) >> 2] = v2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                            a2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (a2 | 0)) {
                              b[o2 >> 1] = a2;
                              if ((n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (k2 | 0))
                                    c[f2 >> 2] = a2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0)) {
                                    k2 = a2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                k2 = a2;
                            } else {
                              b[o2 >> 1] = k2;
                              if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (a2 | 0))
                                    c[f2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          m2 = b[o2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = f2;
                            k2 = a2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (p2 | 0))
                              c[m2 >> 2] = p2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                          a2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (a2 | 0)) {
                            b[o2 >> 1] = a2;
                            if ((n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (k2 | 0))
                                  c[f2 >> 2] = a2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0)) {
                                  k2 = a2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              k2 = a2;
                          } else {
                            b[o2 >> 1] = k2;
                            if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (a2 | 0))
                                  c[f2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                          e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + v2;
                          k2 = n2;
                        } else {
                          b[o2 >> 1] = 0;
                          k2 = n2;
                        }
                      } while (0);
                      p2 = p2 + 1 | 0;
                      g2 = g2 + 6 | 0;
                      m2 = o2 + 2 | 0;
                      if ((p2 | 0) >= (x2 | 0))
                        break;
                      else {
                        o2 = m2;
                        n2 = k2;
                      }
                    }
                  }
                  v2 = v2 + 1 | 0;
                  if ((v2 | 0) >= (y2 | 0)) {
                    e2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    g2 = g2 + q2 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              e2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          f2 = j2 + 12 | 0;
          if ((e2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (e2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          a2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[a2 >> 2] = k2;
          if (k2) {
            ek(f2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (f2 << 2) >> 2] | 0) + -1 | 0;
                m2 = f2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
            if ((c[a2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function Hc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        w2 = g2 * 3 | 0;
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              g2 = g2 + (B2 << 1) | 0;
              l2 = l2 + (B2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        t2 = 0 - B2 | 0;
        r2 = 1 - B2 | 0;
        s2 = ~B2;
        q2 = (e2 << 1) + 8 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              u2 = (x2 | 0) > 1;
              v2 = 1;
              g2 = a2 + ((e2 << 2) + 4) | 0;
              m2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (u2) {
                    p2 = 1;
                    o2 = m2;
                    n2 = k2;
                    while (1) {
                      a2 = d[g2 >> 0] | 0;
                      e2 = d[g2 + 1 >> 0] | 0;
                      do {
                        if (((a2 & 248) + 10 + (a2 << 5 & 224) + (e2 >>> 3 & 28) + (e2 << 3 & 248) | 0) > (w2 | 0)) {
                          k2 = b[o2 + (t2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          f2 = b[o2 + (r2 << 1) >> 1] | 0;
                          a2 = f2 << 16 >> 16;
                          k2 = b[o2 + (s2 << 1) >> 1] | 0;
                          e2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[o2 >> 1] = k2;
                              k2 = e2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (p2 | 0))
                                c[m2 >> 2] = p2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                              k2 = n2;
                              break;
                            }
                            k2 = b[o2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                              e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (p2 | 0)) {
                                k2 = n2;
                                break;
                              }
                              c[k2 >> 2] = p2;
                              k2 = n2;
                              break;
                            } else {
                              k2 = n2 + 1 | 0;
                              if ((n2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = k2;
                              c[j2 + 1179664 + (n2 << 2) >> 2] = k2 << 16 >> 16;
                              n2 = n2 * 7 | 0;
                              c[j2 + 1310736 + (n2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (n2 + 1 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 2 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 3 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 4 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 5 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 6 << 2) >> 2] = v2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                            a2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (a2 | 0)) {
                              b[o2 >> 1] = a2;
                              if ((n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (k2 | 0))
                                    c[f2 >> 2] = a2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0)) {
                                    k2 = a2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                k2 = a2;
                            } else {
                              b[o2 >> 1] = k2;
                              if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (a2 | 0))
                                    c[f2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          m2 = b[o2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = f2;
                            k2 = a2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (p2 | 0))
                              c[m2 >> 2] = p2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                          a2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (a2 | 0)) {
                            b[o2 >> 1] = a2;
                            if ((n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (k2 | 0))
                                  c[f2 >> 2] = a2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0)) {
                                  k2 = a2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              k2 = a2;
                          } else {
                            b[o2 >> 1] = k2;
                            if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (a2 | 0))
                                  c[f2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                          e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + v2;
                          k2 = n2;
                        } else {
                          b[o2 >> 1] = 0;
                          k2 = n2;
                        }
                      } while (0);
                      p2 = p2 + 1 | 0;
                      g2 = g2 + 4 | 0;
                      m2 = o2 + 2 | 0;
                      if ((p2 | 0) >= (x2 | 0))
                        break;
                      else {
                        o2 = m2;
                        n2 = k2;
                      }
                    }
                  }
                  v2 = v2 + 1 | 0;
                  if ((v2 | 0) >= (y2 | 0)) {
                    e2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    g2 = g2 + q2 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              e2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          f2 = j2 + 12 | 0;
          if ((e2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (e2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          a2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[a2 >> 2] = k2;
          if (k2) {
            ek(f2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (f2 << 2) >> 2] | 0) + -1 | 0;
                m2 = f2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
            if ((c[a2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function Ic(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        w2 = g2 * 3 | 0;
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              g2 = g2 + (B2 << 1) | 0;
              l2 = l2 + (B2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        t2 = 0 - B2 | 0;
        r2 = 1 - B2 | 0;
        s2 = ~B2;
        q2 = (e2 << 2) + 16 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              u2 = (x2 | 0) > 1;
              v2 = 1;
              g2 = a2 + ((e2 << 3) + 8) | 0;
              m2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (u2) {
                    p2 = 1;
                    o2 = m2;
                    n2 = k2;
                    while (1) {
                      do {
                        if (((d[g2 + 1 >> 0] | 0) + (d[g2 >> 0] | 0) + (d[g2 + 2 >> 0] | 0) | 0) > (w2 | 0)) {
                          k2 = b[o2 + (t2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          f2 = b[o2 + (r2 << 1) >> 1] | 0;
                          a2 = f2 << 16 >> 16;
                          k2 = b[o2 + (s2 << 1) >> 1] | 0;
                          e2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[o2 >> 1] = k2;
                              k2 = e2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (p2 | 0))
                                c[m2 >> 2] = p2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                              k2 = n2;
                              break;
                            }
                            k2 = b[o2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                              e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (p2 | 0)) {
                                k2 = n2;
                                break;
                              }
                              c[k2 >> 2] = p2;
                              k2 = n2;
                              break;
                            } else {
                              k2 = n2 + 1 | 0;
                              if ((n2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = k2;
                              c[j2 + 1179664 + (n2 << 2) >> 2] = k2 << 16 >> 16;
                              n2 = n2 * 7 | 0;
                              c[j2 + 1310736 + (n2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (n2 + 1 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 2 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 3 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 4 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 5 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 6 << 2) >> 2] = v2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                            a2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (a2 | 0)) {
                              b[o2 >> 1] = a2;
                              if ((n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (k2 | 0))
                                    c[f2 >> 2] = a2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0)) {
                                    k2 = a2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                k2 = a2;
                            } else {
                              b[o2 >> 1] = k2;
                              if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (a2 | 0))
                                    c[f2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          m2 = b[o2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = f2;
                            k2 = a2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (p2 | 0))
                              c[m2 >> 2] = p2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                          a2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (a2 | 0)) {
                            b[o2 >> 1] = a2;
                            if ((n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (k2 | 0))
                                  c[f2 >> 2] = a2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0)) {
                                  k2 = a2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              k2 = a2;
                          } else {
                            b[o2 >> 1] = k2;
                            if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (a2 | 0))
                                  c[f2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                          e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + v2;
                          k2 = n2;
                        } else {
                          b[o2 >> 1] = 0;
                          k2 = n2;
                        }
                      } while (0);
                      p2 = p2 + 1 | 0;
                      g2 = g2 + 8 | 0;
                      m2 = o2 + 2 | 0;
                      if ((p2 | 0) >= (x2 | 0))
                        break;
                      else {
                        o2 = m2;
                        n2 = k2;
                      }
                    }
                  }
                  v2 = v2 + 1 | 0;
                  if ((v2 | 0) >= (y2 | 0)) {
                    e2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    g2 = g2 + q2 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              e2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          f2 = j2 + 12 | 0;
          if ((e2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (e2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          a2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[a2 >> 2] = k2;
          if (k2) {
            ek(f2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (f2 << 2) >> 2] | 0) + -1 | 0;
                m2 = f2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
            if ((c[a2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function Jc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        w2 = g2 * 3 | 0;
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              g2 = g2 + (B2 << 1) | 0;
              l2 = l2 + (B2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        t2 = 0 - B2 | 0;
        r2 = 1 - B2 | 0;
        s2 = ~B2;
        q2 = (e2 << 1) + 8 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              u2 = (x2 | 0) > 1;
              v2 = 1;
              g2 = a2 + ((e2 << 2) + 4) | 0;
              m2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (u2) {
                    p2 = 1;
                    o2 = m2;
                    n2 = k2;
                    while (1) {
                      e2 = d[g2 >> 0] | 0;
                      do {
                        if (((e2 & 240) + 24 + (e2 << 4 & 240) + ((d[g2 + 1 >> 0] | 0) & 240) | 0) > (w2 | 0)) {
                          k2 = b[o2 + (t2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          f2 = b[o2 + (r2 << 1) >> 1] | 0;
                          a2 = f2 << 16 >> 16;
                          k2 = b[o2 + (s2 << 1) >> 1] | 0;
                          e2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[o2 >> 1] = k2;
                              k2 = e2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (p2 | 0))
                                c[m2 >> 2] = p2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                              k2 = n2;
                              break;
                            }
                            k2 = b[o2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                              e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (p2 | 0)) {
                                k2 = n2;
                                break;
                              }
                              c[k2 >> 2] = p2;
                              k2 = n2;
                              break;
                            } else {
                              k2 = n2 + 1 | 0;
                              if ((n2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = k2;
                              c[j2 + 1179664 + (n2 << 2) >> 2] = k2 << 16 >> 16;
                              n2 = n2 * 7 | 0;
                              c[j2 + 1310736 + (n2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (n2 + 1 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 2 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 3 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 4 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 5 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 6 << 2) >> 2] = v2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                            a2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (a2 | 0)) {
                              b[o2 >> 1] = a2;
                              if ((n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (k2 | 0))
                                    c[f2 >> 2] = a2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0)) {
                                    k2 = a2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                k2 = a2;
                            } else {
                              b[o2 >> 1] = k2;
                              if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (a2 | 0))
                                    c[f2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          m2 = b[o2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = f2;
                            k2 = a2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (p2 | 0))
                              c[m2 >> 2] = p2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                          a2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (a2 | 0)) {
                            b[o2 >> 1] = a2;
                            if ((n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (k2 | 0))
                                  c[f2 >> 2] = a2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0)) {
                                  k2 = a2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              k2 = a2;
                          } else {
                            b[o2 >> 1] = k2;
                            if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (a2 | 0))
                                  c[f2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                          e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + v2;
                          k2 = n2;
                        } else {
                          b[o2 >> 1] = 0;
                          k2 = n2;
                        }
                      } while (0);
                      p2 = p2 + 1 | 0;
                      g2 = g2 + 4 | 0;
                      m2 = o2 + 2 | 0;
                      if ((p2 | 0) >= (x2 | 0))
                        break;
                      else {
                        o2 = m2;
                        n2 = k2;
                      }
                    }
                  }
                  v2 = v2 + 1 | 0;
                  if ((v2 | 0) >= (y2 | 0)) {
                    e2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    g2 = g2 + q2 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              e2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          f2 = j2 + 12 | 0;
          if ((e2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (e2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          a2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[a2 >> 2] = k2;
          if (k2) {
            ek(f2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (f2 << 2) >> 2] | 0) + -1 | 0;
                m2 = f2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
            if ((c[a2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function Kc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        w2 = g2 * 3 | 0;
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              g2 = g2 + (B2 << 1) | 0;
              l2 = l2 + (B2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        t2 = 0 - B2 | 0;
        r2 = 1 - B2 | 0;
        s2 = ~B2;
        q2 = (e2 << 1) + 8 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              u2 = (x2 | 0) > 1;
              v2 = 1;
              g2 = a2 + ((e2 << 2) + 4) | 0;
              m2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (u2) {
                    p2 = 1;
                    o2 = m2;
                    n2 = k2;
                    while (1) {
                      a2 = d[g2 >> 0] | 0;
                      e2 = d[g2 + 1 >> 0] | 0;
                      do {
                        if (((a2 & 248) + 12 + (a2 << 5 & 224) + (e2 >>> 3 & 24) + (e2 << 2 & 248) | 0) > (w2 | 0)) {
                          k2 = b[o2 + (t2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          f2 = b[o2 + (r2 << 1) >> 1] | 0;
                          a2 = f2 << 16 >> 16;
                          k2 = b[o2 + (s2 << 1) >> 1] | 0;
                          e2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[o2 >> 1] = k2;
                              k2 = e2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (p2 | 0))
                                c[m2 >> 2] = p2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                              k2 = n2;
                              break;
                            }
                            k2 = b[o2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                              e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (p2 | 0)) {
                                k2 = n2;
                                break;
                              }
                              c[k2 >> 2] = p2;
                              k2 = n2;
                              break;
                            } else {
                              k2 = n2 + 1 | 0;
                              if ((n2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = k2;
                              c[j2 + 1179664 + (n2 << 2) >> 2] = k2 << 16 >> 16;
                              n2 = n2 * 7 | 0;
                              c[j2 + 1310736 + (n2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (n2 + 1 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 2 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 3 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 4 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 5 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 6 << 2) >> 2] = v2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                            a2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (a2 | 0)) {
                              b[o2 >> 1] = a2;
                              if ((n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (k2 | 0))
                                    c[f2 >> 2] = a2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0)) {
                                    k2 = a2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                k2 = a2;
                            } else {
                              b[o2 >> 1] = k2;
                              if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (a2 | 0))
                                    c[f2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          m2 = b[o2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = f2;
                            k2 = a2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (p2 | 0))
                              c[m2 >> 2] = p2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                          a2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (a2 | 0)) {
                            b[o2 >> 1] = a2;
                            if ((n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (k2 | 0))
                                  c[f2 >> 2] = a2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0)) {
                                  k2 = a2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              k2 = a2;
                          } else {
                            b[o2 >> 1] = k2;
                            if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (a2 | 0))
                                  c[f2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                          e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + v2;
                          k2 = n2;
                        } else {
                          b[o2 >> 1] = 0;
                          k2 = n2;
                        }
                      } while (0);
                      p2 = p2 + 1 | 0;
                      g2 = g2 + 4 | 0;
                      m2 = o2 + 2 | 0;
                      if ((p2 | 0) >= (x2 | 0))
                        break;
                      else {
                        o2 = m2;
                        n2 = k2;
                      }
                    }
                  }
                  v2 = v2 + 1 | 0;
                  if ((v2 | 0) >= (y2 | 0)) {
                    e2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    g2 = g2 + q2 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              e2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          f2 = j2 + 12 | 0;
          if ((e2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (e2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          a2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[a2 >> 2] = k2;
          if (k2) {
            ek(f2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (f2 << 2) >> 2] | 0) + -1 | 0;
                m2 = f2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
            if ((c[a2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function Lc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        w2 = g2 * 3 | 0;
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              g2 = g2 + (B2 << 1) | 0;
              l2 = l2 + (B2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        t2 = 0 - B2 | 0;
        r2 = 1 - B2 | 0;
        s2 = ~B2;
        q2 = (e2 << 2) + 16 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              u2 = (x2 | 0) > 1;
              v2 = 1;
              g2 = a2 + ((e2 << 3) + 8) | 0;
              m2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (u2) {
                    p2 = 1;
                    o2 = m2;
                    n2 = k2;
                    while (1) {
                      do {
                        if (((d[g2 + 2 >> 0] | 0) + (d[g2 + 1 >> 0] | 0) + (d[g2 + 3 >> 0] | 0) | 0) > (w2 | 0)) {
                          k2 = b[o2 + (t2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          f2 = b[o2 + (r2 << 1) >> 1] | 0;
                          a2 = f2 << 16 >> 16;
                          k2 = b[o2 + (s2 << 1) >> 1] | 0;
                          e2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (f2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[o2 >> 1] = k2;
                              k2 = e2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (p2 | 0))
                                c[m2 >> 2] = p2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                              k2 = n2;
                              break;
                            }
                            k2 = b[o2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                              e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (p2 | 0)) {
                                k2 = n2;
                                break;
                              }
                              c[k2 >> 2] = p2;
                              k2 = n2;
                              break;
                            } else {
                              k2 = n2 + 1 | 0;
                              if ((n2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = k2;
                              c[j2 + 1179664 + (n2 << 2) >> 2] = k2 << 16 >> 16;
                              n2 = n2 * 7 | 0;
                              c[j2 + 1310736 + (n2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (n2 + 1 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 2 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 3 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 4 << 2) >> 2] = p2;
                              c[j2 + 1310736 + (n2 + 5 << 2) >> 2] = v2;
                              c[j2 + 1310736 + (n2 + 6 << 2) >> 2] = v2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                            a2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (a2 | 0)) {
                              b[o2 >> 1] = a2;
                              if ((n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (k2 | 0))
                                    c[f2 >> 2] = a2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0)) {
                                    k2 = a2;
                                    break;
                                  } else
                                    f2 = f2 + 4 | 0;
                                }
                              } else
                                k2 = a2;
                            } else {
                              b[o2 >> 1] = k2;
                              if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                                m2 = 0;
                                f2 = l2;
                                while (1) {
                                  if ((c[f2 >> 2] | 0) == (a2 | 0))
                                    c[f2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (n2 | 0))
                                    break;
                                  else
                                    f2 = f2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                            e2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + v2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          m2 = b[o2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = f2;
                            k2 = a2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + p2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + v2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (p2 | 0))
                              c[m2 >> 2] = p2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = v2;
                            k2 = n2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (a2 + -1 << 2) >> 2] | 0;
                          a2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (a2 | 0)) {
                            b[o2 >> 1] = a2;
                            if ((n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (k2 | 0))
                                  c[f2 >> 2] = a2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0)) {
                                  k2 = a2;
                                  break;
                                } else
                                  f2 = f2 + 4 | 0;
                              }
                            } else
                              k2 = a2;
                          } else {
                            b[o2 >> 1] = k2;
                            if ((k2 | 0) < (a2 | 0) & (n2 | 0) > 0) {
                              m2 = 0;
                              f2 = l2;
                              while (1) {
                                if ((c[f2 >> 2] | 0) == (a2 | 0))
                                  c[f2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (n2 | 0))
                                  break;
                                else
                                  f2 = f2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          e2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                          e2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[e2 >> 2] = (c[e2 >> 2] | 0) + p2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + v2;
                          k2 = n2;
                        } else {
                          b[o2 >> 1] = 0;
                          k2 = n2;
                        }
                      } while (0);
                      p2 = p2 + 1 | 0;
                      g2 = g2 + 8 | 0;
                      m2 = o2 + 2 | 0;
                      if ((p2 | 0) >= (x2 | 0))
                        break;
                      else {
                        o2 = m2;
                        n2 = k2;
                      }
                    }
                  }
                  v2 = v2 + 1 | 0;
                  if ((v2 | 0) >= (y2 | 0)) {
                    e2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    g2 = g2 + q2 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              e2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          f2 = j2 + 12 | 0;
          if ((e2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (e2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          a2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[a2 >> 2] = k2;
          if (k2) {
            ek(f2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (f2 << 2) >> 2] | 0) + -1 | 0;
                m2 = f2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
            if ((c[a2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[a2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function Mc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              l2 = l2 + (B2 << 1) | 0;
              m2 = m2 + (B2 << 1) | 0;
            }
          }
        }
        m2 = j2 + 1179664 | 0;
        u2 = 0 - B2 | 0;
        s2 = 1 - B2 | 0;
        t2 = ~B2;
        r2 = e2 + 4 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              l2 = a2 + ((e2 << 1) + 2) | 0;
              f2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    q2 = 1;
                    p2 = f2;
                    o2 = k2;
                    while (1) {
                      do {
                        if ((d[l2 >> 0] | 0 | 0) > (g2 | 0)) {
                          k2 = b[p2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[p2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                            n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          a2 = b[p2 + (s2 << 1) >> 1] | 0;
                          e2 = a2 << 16 >> 16;
                          k2 = b[p2 + (t2 << 1) >> 1] | 0;
                          n2 = k2 << 16 >> 16;
                          f2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (f2) {
                              b[p2 >> 1] = k2;
                              k2 = n2 * 7 | 0;
                              f2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
                              f2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + q2;
                              f2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + w2;
                              f2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[f2 >> 2] | 0) < (q2 | 0))
                                c[f2 >> 2] = q2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = o2;
                              break;
                            }
                            k2 = b[p2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[p2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                              n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (q2 | 0)) {
                                k2 = o2;
                                break;
                              }
                              c[k2 >> 2] = q2;
                              k2 = o2;
                              break;
                            } else {
                              k2 = o2 + 1 | 0;
                              if ((o2 | 0) > 32767)
                                break b;
                              b[p2 >> 1] = k2;
                              c[j2 + 1179664 + (o2 << 2) >> 2] = k2 << 16 >> 16;
                              o2 = o2 * 7 | 0;
                              c[j2 + 1310736 + (o2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (o2 + 1 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (o2 + 3 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 4 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (o2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (f2) {
                            k2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            e2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (e2 | 0)) {
                              b[p2 >> 1] = e2;
                              if ((o2 | 0) > 0) {
                                f2 = 0;
                                a2 = m2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = e2;
                                  f2 = f2 + 1 | 0;
                                  if ((f2 | 0) >= (o2 | 0)) {
                                    k2 = e2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = e2;
                            } else {
                              b[p2 >> 1] = k2;
                              if ((k2 | 0) < (e2 | 0) & (o2 | 0) > 0) {
                                f2 = 0;
                                a2 = m2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (e2 | 0))
                                    c[a2 >> 2] = k2;
                                  f2 = f2 + 1 | 0;
                                  if ((f2 | 0) >= (o2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                            n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          f2 = b[p2 + -2 >> 1] | 0;
                          if (f2 << 16 >> 16 <= 0) {
                            b[p2 >> 1] = a2;
                            k2 = e2 * 7 | 0;
                            f2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
                            f2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + q2;
                            f2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + w2;
                            f2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[f2 >> 2] | 0) > (q2 | 0))
                              c[f2 >> 2] = q2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                          e2 = c[j2 + 1179664 + ((f2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (e2 | 0)) {
                            b[p2 >> 1] = e2;
                            if ((o2 | 0) > 0) {
                              f2 = 0;
                              a2 = m2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = e2;
                                f2 = f2 + 1 | 0;
                                if ((f2 | 0) >= (o2 | 0)) {
                                  k2 = e2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = e2;
                          } else {
                            b[p2 >> 1] = k2;
                            if ((k2 | 0) < (e2 | 0) & (o2 | 0) > 0) {
                              f2 = 0;
                              a2 = m2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (e2 | 0))
                                  c[a2 >> 2] = k2;
                                f2 = f2 + 1 | 0;
                                if ((f2 | 0) >= (o2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                          n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = o2;
                        } else {
                          b[p2 >> 1] = 0;
                          k2 = o2;
                        }
                      } while (0);
                      q2 = q2 + 1 | 0;
                      l2 = l2 + 2 | 0;
                      f2 = p2 + 2 | 0;
                      if ((q2 | 0) >= (x2 | 0))
                        break;
                      else {
                        p2 = f2;
                        o2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (y2 | 0)) {
                    n2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    l2 = l2 + r2 | 0;
                    f2 = f2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              n2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((n2 | 0) < 1)
            l2 = 1;
          else {
            f2 = 1;
            l2 = 1;
            while (1) {
              k2 = c[m2 >> 2] | 0;
              if ((k2 | 0) == (f2 | 0)) {
                k2 = l2;
                l2 = l2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = k2;
              if ((f2 | 0) < (n2 | 0)) {
                f2 = f2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = j2 + 8 | 0;
          k2 = l2 + -1 | 0;
          c[e2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((l2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((n2 | 0) > 0) {
              a2 = 0;
              do {
                m2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                f2 = a2 * 7 | 0;
                k2 = j2 + 12 + (m2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (f2 << 2) >> 2] | 0);
                k2 = m2 << 1;
                l2 = j2 + 655376 + (k2 << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[j2 + 1310736 + (f2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (f2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                k2 = j2 + 131084 + (m2 << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 1) << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 2) << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                l2 = j2 + 131084 + ((m2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (f2 + 6 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (k2 | 0))
                  c[l2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (n2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[e2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function Nc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              l2 = l2 + (B2 << 1) | 0;
              m2 = m2 + (B2 << 1) | 0;
            }
          }
        }
        m2 = j2 + 1179664 | 0;
        u2 = 0 - B2 | 0;
        s2 = 1 - B2 | 0;
        t2 = ~B2;
        r2 = (e2 << 1) + 8 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              l2 = a2 + ((e2 << 2) + 4) | 0;
              f2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    q2 = 1;
                    p2 = f2;
                    o2 = k2;
                    while (1) {
                      do {
                        if ((d[l2 + 1 >> 0] | 0 | 0) > (g2 | 0)) {
                          k2 = b[p2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[p2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                            n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          a2 = b[p2 + (s2 << 1) >> 1] | 0;
                          e2 = a2 << 16 >> 16;
                          k2 = b[p2 + (t2 << 1) >> 1] | 0;
                          n2 = k2 << 16 >> 16;
                          f2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (f2) {
                              b[p2 >> 1] = k2;
                              k2 = n2 * 7 | 0;
                              f2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
                              f2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + q2;
                              f2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + w2;
                              f2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[f2 >> 2] | 0) < (q2 | 0))
                                c[f2 >> 2] = q2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = o2;
                              break;
                            }
                            k2 = b[p2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[p2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                              n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (q2 | 0)) {
                                k2 = o2;
                                break;
                              }
                              c[k2 >> 2] = q2;
                              k2 = o2;
                              break;
                            } else {
                              k2 = o2 + 1 | 0;
                              if ((o2 | 0) > 32767)
                                break b;
                              b[p2 >> 1] = k2;
                              c[j2 + 1179664 + (o2 << 2) >> 2] = k2 << 16 >> 16;
                              o2 = o2 * 7 | 0;
                              c[j2 + 1310736 + (o2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (o2 + 1 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (o2 + 3 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 4 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (o2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (f2) {
                            k2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            e2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (e2 | 0)) {
                              b[p2 >> 1] = e2;
                              if ((o2 | 0) > 0) {
                                f2 = 0;
                                a2 = m2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = e2;
                                  f2 = f2 + 1 | 0;
                                  if ((f2 | 0) >= (o2 | 0)) {
                                    k2 = e2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = e2;
                            } else {
                              b[p2 >> 1] = k2;
                              if ((k2 | 0) < (e2 | 0) & (o2 | 0) > 0) {
                                f2 = 0;
                                a2 = m2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (e2 | 0))
                                    c[a2 >> 2] = k2;
                                  f2 = f2 + 1 | 0;
                                  if ((f2 | 0) >= (o2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                            n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          f2 = b[p2 + -2 >> 1] | 0;
                          if (f2 << 16 >> 16 <= 0) {
                            b[p2 >> 1] = a2;
                            k2 = e2 * 7 | 0;
                            f2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
                            f2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + q2;
                            f2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + w2;
                            f2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[f2 >> 2] | 0) > (q2 | 0))
                              c[f2 >> 2] = q2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                          e2 = c[j2 + 1179664 + ((f2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (e2 | 0)) {
                            b[p2 >> 1] = e2;
                            if ((o2 | 0) > 0) {
                              f2 = 0;
                              a2 = m2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = e2;
                                f2 = f2 + 1 | 0;
                                if ((f2 | 0) >= (o2 | 0)) {
                                  k2 = e2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = e2;
                          } else {
                            b[p2 >> 1] = k2;
                            if ((k2 | 0) < (e2 | 0) & (o2 | 0) > 0) {
                              f2 = 0;
                              a2 = m2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (e2 | 0))
                                  c[a2 >> 2] = k2;
                                f2 = f2 + 1 | 0;
                                if ((f2 | 0) >= (o2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                          n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = o2;
                        } else {
                          b[p2 >> 1] = 0;
                          k2 = o2;
                        }
                      } while (0);
                      q2 = q2 + 1 | 0;
                      l2 = l2 + 4 | 0;
                      f2 = p2 + 2 | 0;
                      if ((q2 | 0) >= (x2 | 0))
                        break;
                      else {
                        p2 = f2;
                        o2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (y2 | 0)) {
                    n2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    l2 = l2 + r2 | 0;
                    f2 = f2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              n2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((n2 | 0) < 1)
            l2 = 1;
          else {
            f2 = 1;
            l2 = 1;
            while (1) {
              k2 = c[m2 >> 2] | 0;
              if ((k2 | 0) == (f2 | 0)) {
                k2 = l2;
                l2 = l2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = k2;
              if ((f2 | 0) < (n2 | 0)) {
                f2 = f2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = j2 + 8 | 0;
          k2 = l2 + -1 | 0;
          c[e2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((l2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((n2 | 0) > 0) {
              a2 = 0;
              do {
                m2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                f2 = a2 * 7 | 0;
                k2 = j2 + 12 + (m2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (f2 << 2) >> 2] | 0);
                k2 = m2 << 1;
                l2 = j2 + 655376 + (k2 << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[j2 + 1310736 + (f2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (f2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                k2 = j2 + 131084 + (m2 << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 1) << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 2) << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                l2 = j2 + 131084 + ((m2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (f2 + 6 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (k2 | 0))
                  c[l2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (n2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[e2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function Oc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        D2 = i2;
        i2 = i2 + 16 | 0;
        z2 = D2;
        B2 = (e2 | 0) / 2 | 0;
        C2 = (f2 | 0) / 2 | 0;
        n2 = c[j2 >> 2] | 0;
        y2 = C2 + -1 | 0;
        if ((e2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(y2, B2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (B2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        x2 = B2 + -1 | 0;
        if ((f2 | 0) > 1) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (C2 | 0))
              break;
            else {
              l2 = l2 + (B2 << 1) | 0;
              m2 = m2 + (B2 << 1) | 0;
            }
          }
        }
        m2 = j2 + 1179664 | 0;
        u2 = 0 - B2 | 0;
        s2 = 1 - B2 | 0;
        t2 = ~B2;
        r2 = (e2 << 1) + 8 | 0;
        a:
          do {
            if ((y2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              l2 = a2 + ((e2 << 2) + 4) | 0;
              f2 = n2 + (B2 + 1 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    q2 = 1;
                    p2 = f2;
                    o2 = k2;
                    while (1) {
                      do {
                        if ((d[l2 >> 0] | 0 | 0) > (g2 | 0)) {
                          k2 = b[p2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[p2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                            n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          a2 = b[p2 + (s2 << 1) >> 1] | 0;
                          e2 = a2 << 16 >> 16;
                          k2 = b[p2 + (t2 << 1) >> 1] | 0;
                          n2 = k2 << 16 >> 16;
                          f2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (f2) {
                              b[p2 >> 1] = k2;
                              k2 = n2 * 7 | 0;
                              f2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
                              f2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + q2;
                              f2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[f2 >> 2] = (c[f2 >> 2] | 0) + w2;
                              f2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[f2 >> 2] | 0) < (q2 | 0))
                                c[f2 >> 2] = q2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = o2;
                              break;
                            }
                            k2 = b[p2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[p2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                              n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (q2 | 0)) {
                                k2 = o2;
                                break;
                              }
                              c[k2 >> 2] = q2;
                              k2 = o2;
                              break;
                            } else {
                              k2 = o2 + 1 | 0;
                              if ((o2 | 0) > 32767)
                                break b;
                              b[p2 >> 1] = k2;
                              c[j2 + 1179664 + (o2 << 2) >> 2] = k2 << 16 >> 16;
                              o2 = o2 * 7 | 0;
                              c[j2 + 1310736 + (o2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (o2 + 1 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (o2 + 3 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 4 << 2) >> 2] = q2;
                              c[j2 + 1310736 + (o2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (o2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (f2) {
                            k2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                            e2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (e2 | 0)) {
                              b[p2 >> 1] = e2;
                              if ((o2 | 0) > 0) {
                                f2 = 0;
                                a2 = m2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = e2;
                                  f2 = f2 + 1 | 0;
                                  if ((f2 | 0) >= (o2 | 0)) {
                                    k2 = e2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = e2;
                            } else {
                              b[p2 >> 1] = k2;
                              if ((k2 | 0) < (e2 | 0) & (o2 | 0) > 0) {
                                f2 = 0;
                                a2 = m2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (e2 | 0))
                                    c[a2 >> 2] = k2;
                                  f2 = f2 + 1 | 0;
                                  if ((f2 | 0) >= (o2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                            n2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          f2 = b[p2 + -2 >> 1] | 0;
                          if (f2 << 16 >> 16 <= 0) {
                            b[p2 >> 1] = a2;
                            k2 = e2 * 7 | 0;
                            f2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
                            f2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + q2;
                            f2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[f2 >> 2] = (c[f2 >> 2] | 0) + w2;
                            f2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[f2 >> 2] | 0) > (q2 | 0))
                              c[f2 >> 2] = q2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = o2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (e2 + -1 << 2) >> 2] | 0;
                          e2 = c[j2 + 1179664 + ((f2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (e2 | 0)) {
                            b[p2 >> 1] = e2;
                            if ((o2 | 0) > 0) {
                              f2 = 0;
                              a2 = m2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = e2;
                                f2 = f2 + 1 | 0;
                                if ((f2 | 0) >= (o2 | 0)) {
                                  k2 = e2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = e2;
                          } else {
                            b[p2 >> 1] = k2;
                            if ((k2 | 0) < (e2 | 0) & (o2 | 0) > 0) {
                              f2 = 0;
                              a2 = m2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (e2 | 0))
                                  c[a2 >> 2] = k2;
                                f2 = f2 + 1 | 0;
                                if ((f2 | 0) >= (o2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          n2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                          n2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[n2 >> 2] = (c[n2 >> 2] | 0) + q2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = o2;
                        } else {
                          b[p2 >> 1] = 0;
                          k2 = o2;
                        }
                      } while (0);
                      q2 = q2 + 1 | 0;
                      l2 = l2 + 4 | 0;
                      f2 = p2 + 2 | 0;
                      if ((q2 | 0) >= (x2 | 0))
                        break;
                      else {
                        p2 = f2;
                        o2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (y2 | 0)) {
                    n2 = k2;
                    A2 = 52;
                    break a;
                  } else {
                    l2 = l2 + r2 | 0;
                    f2 = f2 + 4 | 0;
                  }
                }
              Me(3, 3904, z2);
              k2 = -1;
            } else {
              n2 = 0;
              A2 = 52;
            }
          } while (0);
        if ((A2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((n2 | 0) < 1)
            l2 = 1;
          else {
            f2 = 1;
            l2 = 1;
            while (1) {
              k2 = c[m2 >> 2] | 0;
              if ((k2 | 0) == (f2 | 0)) {
                k2 = l2;
                l2 = l2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = k2;
              if ((f2 | 0) < (n2 | 0)) {
                f2 = f2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = j2 + 8 | 0;
          k2 = l2 + -1 | 0;
          c[e2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((l2 | 0) > 1) {
              k2 = 0;
              do {
                A2 = k2 << 2;
                c[j2 + 131084 + (A2 << 2) >> 2] = B2;
                c[j2 + 131084 + ((A2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((A2 | 2) << 2) >> 2] = C2;
                c[j2 + 131084 + ((A2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((n2 | 0) > 0) {
              a2 = 0;
              do {
                m2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                f2 = a2 * 7 | 0;
                k2 = j2 + 12 + (m2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (f2 << 2) >> 2] | 0);
                k2 = m2 << 1;
                l2 = j2 + 655376 + (k2 << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[j2 + 1310736 + (f2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (f2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                k2 = j2 + 131084 + (m2 << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 1) << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 2) << 2) | 0;
                l2 = c[j2 + 1310736 + (f2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                l2 = j2 + 131084 + ((m2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (f2 + 6 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (k2 | 0))
                  c[l2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (n2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                B2 = j2 + 12 + (k2 << 2) | 0;
                C2 = k2 << 1;
                A2 = j2 + 655376 + (C2 << 3) | 0;
                h[A2 >> 3] = +h[A2 >> 3] / +(c[B2 >> 2] | 0);
                C2 = j2 + 655376 + ((C2 | 1) << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[B2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[e2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = D2;
        return k2 | 0;
      }
      function Pc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = g2 * 3 | 0;
        x2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              g2 = g2 + (e2 << 1) | 0;
              l2 = l2 + (e2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        u2 = 0 - e2 | 0;
        s2 = 1 - e2 | 0;
        t2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              g2 = a2 + (k2 * 3 | 0) | 0;
              m2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    r2 = 1;
                    q2 = m2;
                    p2 = k2;
                    while (1) {
                      do {
                        if (((d[g2 + 1 >> 0] | 0) + (d[g2 >> 0] | 0) + (d[g2 + 2 >> 0] | 0) | 0) > (y2 | 0)) {
                          k2 = b[q2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[q2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          a2 = b[q2 + (s2 << 1) >> 1] | 0;
                          n2 = a2 << 16 >> 16;
                          k2 = b[q2 + (t2 << 1) >> 1] | 0;
                          o2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[q2 >> 1] = k2;
                              k2 = o2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (r2 | 0))
                                c[m2 >> 2] = r2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = p2;
                              break;
                            }
                            k2 = b[q2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[q2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (r2 | 0)) {
                                k2 = p2;
                                break;
                              }
                              c[k2 >> 2] = r2;
                              k2 = p2;
                              break;
                            } else {
                              k2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[q2 >> 1] = k2;
                              c[j2 + 1179664 + (p2 << 2) >> 2] = k2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[j2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            n2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (n2 | 0)) {
                              b[q2 >> 1] = n2;
                              if ((p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = n2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0)) {
                                    k2 = n2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = n2;
                            } else {
                              b[q2 >> 1] = k2;
                              if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (n2 | 0))
                                    c[a2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          m2 = b[q2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[q2 >> 1] = a2;
                            k2 = n2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (r2 | 0))
                              c[m2 >> 2] = r2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                          n2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (n2 | 0)) {
                            b[q2 >> 1] = n2;
                            if ((p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = n2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0)) {
                                  k2 = n2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = n2;
                          } else {
                            b[q2 >> 1] = k2;
                            if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (n2 | 0))
                                  c[a2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = p2;
                        } else {
                          b[q2 >> 1] = 0;
                          k2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      g2 = g2 + 3 | 0;
                      m2 = q2 + 2 | 0;
                      if ((r2 | 0) >= (x2 | 0))
                        break;
                      else {
                        q2 = m2;
                        p2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (z2 | 0)) {
                    o2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    g2 = g2 + 6 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              o2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((o2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (o2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          n2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[n2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              a2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                m2 = a2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (o2 | 0));
            }
            if ((c[n2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Qc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = g2 * 3 | 0;
        x2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              g2 = g2 + (e2 << 1) | 0;
              l2 = l2 + (e2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        u2 = 0 - e2 | 0;
        s2 = 1 - e2 | 0;
        t2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              g2 = a2 + (k2 << 1) | 0;
              m2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    r2 = 1;
                    q2 = m2;
                    p2 = k2;
                    while (1) {
                      n2 = d[g2 >> 0] | 0;
                      o2 = d[g2 + 1 >> 0] | 0;
                      do {
                        if (((n2 & 248) + 10 + (n2 << 5 & 224) + (o2 >>> 3 & 28) + (o2 << 3 & 248) | 0) > (y2 | 0)) {
                          k2 = b[q2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[q2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          a2 = b[q2 + (s2 << 1) >> 1] | 0;
                          n2 = a2 << 16 >> 16;
                          k2 = b[q2 + (t2 << 1) >> 1] | 0;
                          o2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[q2 >> 1] = k2;
                              k2 = o2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (r2 | 0))
                                c[m2 >> 2] = r2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = p2;
                              break;
                            }
                            k2 = b[q2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[q2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (r2 | 0)) {
                                k2 = p2;
                                break;
                              }
                              c[k2 >> 2] = r2;
                              k2 = p2;
                              break;
                            } else {
                              k2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[q2 >> 1] = k2;
                              c[j2 + 1179664 + (p2 << 2) >> 2] = k2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[j2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            n2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (n2 | 0)) {
                              b[q2 >> 1] = n2;
                              if ((p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = n2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0)) {
                                    k2 = n2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = n2;
                            } else {
                              b[q2 >> 1] = k2;
                              if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (n2 | 0))
                                    c[a2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          m2 = b[q2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[q2 >> 1] = a2;
                            k2 = n2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (r2 | 0))
                              c[m2 >> 2] = r2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                          n2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (n2 | 0)) {
                            b[q2 >> 1] = n2;
                            if ((p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = n2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0)) {
                                  k2 = n2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = n2;
                          } else {
                            b[q2 >> 1] = k2;
                            if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (n2 | 0))
                                  c[a2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = p2;
                        } else {
                          b[q2 >> 1] = 0;
                          k2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      g2 = g2 + 2 | 0;
                      m2 = q2 + 2 | 0;
                      if ((r2 | 0) >= (x2 | 0))
                        break;
                      else {
                        q2 = m2;
                        p2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (z2 | 0)) {
                    o2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    g2 = g2 + 4 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              o2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((o2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (o2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          n2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[n2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              a2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                m2 = a2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (o2 | 0));
            }
            if ((c[n2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Rc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = g2 * 3 | 0;
        x2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              g2 = g2 + (e2 << 1) | 0;
              l2 = l2 + (e2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        u2 = 0 - e2 | 0;
        s2 = 1 - e2 | 0;
        t2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              g2 = a2 + (k2 << 2) | 0;
              m2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    r2 = 1;
                    q2 = m2;
                    p2 = k2;
                    while (1) {
                      do {
                        if (((d[g2 + 1 >> 0] | 0) + (d[g2 >> 0] | 0) + (d[g2 + 2 >> 0] | 0) | 0) > (y2 | 0)) {
                          k2 = b[q2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[q2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          a2 = b[q2 + (s2 << 1) >> 1] | 0;
                          n2 = a2 << 16 >> 16;
                          k2 = b[q2 + (t2 << 1) >> 1] | 0;
                          o2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[q2 >> 1] = k2;
                              k2 = o2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (r2 | 0))
                                c[m2 >> 2] = r2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = p2;
                              break;
                            }
                            k2 = b[q2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[q2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (r2 | 0)) {
                                k2 = p2;
                                break;
                              }
                              c[k2 >> 2] = r2;
                              k2 = p2;
                              break;
                            } else {
                              k2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[q2 >> 1] = k2;
                              c[j2 + 1179664 + (p2 << 2) >> 2] = k2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[j2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            n2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (n2 | 0)) {
                              b[q2 >> 1] = n2;
                              if ((p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = n2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0)) {
                                    k2 = n2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = n2;
                            } else {
                              b[q2 >> 1] = k2;
                              if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (n2 | 0))
                                    c[a2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          m2 = b[q2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[q2 >> 1] = a2;
                            k2 = n2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (r2 | 0))
                              c[m2 >> 2] = r2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                          n2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (n2 | 0)) {
                            b[q2 >> 1] = n2;
                            if ((p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = n2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0)) {
                                  k2 = n2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = n2;
                          } else {
                            b[q2 >> 1] = k2;
                            if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (n2 | 0))
                                  c[a2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = p2;
                        } else {
                          b[q2 >> 1] = 0;
                          k2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      g2 = g2 + 4 | 0;
                      m2 = q2 + 2 | 0;
                      if ((r2 | 0) >= (x2 | 0))
                        break;
                      else {
                        q2 = m2;
                        p2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (z2 | 0)) {
                    o2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    g2 = g2 + 8 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              o2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((o2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (o2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          n2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[n2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              a2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                m2 = a2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (o2 | 0));
            }
            if ((c[n2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Sc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = g2 * 3 | 0;
        x2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              g2 = g2 + (e2 << 1) | 0;
              l2 = l2 + (e2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        u2 = 0 - e2 | 0;
        s2 = 1 - e2 | 0;
        t2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              g2 = a2 + (k2 << 1) | 0;
              m2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    r2 = 1;
                    q2 = m2;
                    p2 = k2;
                    while (1) {
                      o2 = d[g2 >> 0] | 0;
                      do {
                        if (((o2 & 240) + 24 + (o2 << 4 & 240) + ((d[g2 + 1 >> 0] | 0) & 240) | 0) > (y2 | 0)) {
                          k2 = b[q2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[q2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          a2 = b[q2 + (s2 << 1) >> 1] | 0;
                          n2 = a2 << 16 >> 16;
                          k2 = b[q2 + (t2 << 1) >> 1] | 0;
                          o2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[q2 >> 1] = k2;
                              k2 = o2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (r2 | 0))
                                c[m2 >> 2] = r2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = p2;
                              break;
                            }
                            k2 = b[q2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[q2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (r2 | 0)) {
                                k2 = p2;
                                break;
                              }
                              c[k2 >> 2] = r2;
                              k2 = p2;
                              break;
                            } else {
                              k2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[q2 >> 1] = k2;
                              c[j2 + 1179664 + (p2 << 2) >> 2] = k2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[j2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            n2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (n2 | 0)) {
                              b[q2 >> 1] = n2;
                              if ((p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = n2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0)) {
                                    k2 = n2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = n2;
                            } else {
                              b[q2 >> 1] = k2;
                              if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (n2 | 0))
                                    c[a2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          m2 = b[q2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[q2 >> 1] = a2;
                            k2 = n2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (r2 | 0))
                              c[m2 >> 2] = r2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                          n2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (n2 | 0)) {
                            b[q2 >> 1] = n2;
                            if ((p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = n2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0)) {
                                  k2 = n2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = n2;
                          } else {
                            b[q2 >> 1] = k2;
                            if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (n2 | 0))
                                  c[a2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = p2;
                        } else {
                          b[q2 >> 1] = 0;
                          k2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      g2 = g2 + 2 | 0;
                      m2 = q2 + 2 | 0;
                      if ((r2 | 0) >= (x2 | 0))
                        break;
                      else {
                        q2 = m2;
                        p2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (z2 | 0)) {
                    o2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    g2 = g2 + 4 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              o2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((o2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (o2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          n2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[n2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              a2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                m2 = a2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (o2 | 0));
            }
            if ((c[n2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Tc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = g2 * 3 | 0;
        x2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              g2 = g2 + (e2 << 1) | 0;
              l2 = l2 + (e2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        u2 = 0 - e2 | 0;
        s2 = 1 - e2 | 0;
        t2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              g2 = a2 + (k2 << 1) | 0;
              m2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    r2 = 1;
                    q2 = m2;
                    p2 = k2;
                    while (1) {
                      n2 = d[g2 >> 0] | 0;
                      o2 = d[g2 + 1 >> 0] | 0;
                      do {
                        if (((n2 & 248) + 12 + (n2 << 5 & 224) + (o2 >>> 3 & 24) + (o2 << 2 & 248) | 0) > (y2 | 0)) {
                          k2 = b[q2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[q2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          a2 = b[q2 + (s2 << 1) >> 1] | 0;
                          n2 = a2 << 16 >> 16;
                          k2 = b[q2 + (t2 << 1) >> 1] | 0;
                          o2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[q2 >> 1] = k2;
                              k2 = o2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (r2 | 0))
                                c[m2 >> 2] = r2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = p2;
                              break;
                            }
                            k2 = b[q2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[q2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (r2 | 0)) {
                                k2 = p2;
                                break;
                              }
                              c[k2 >> 2] = r2;
                              k2 = p2;
                              break;
                            } else {
                              k2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[q2 >> 1] = k2;
                              c[j2 + 1179664 + (p2 << 2) >> 2] = k2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[j2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            n2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (n2 | 0)) {
                              b[q2 >> 1] = n2;
                              if ((p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = n2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0)) {
                                    k2 = n2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = n2;
                            } else {
                              b[q2 >> 1] = k2;
                              if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (n2 | 0))
                                    c[a2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          m2 = b[q2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[q2 >> 1] = a2;
                            k2 = n2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (r2 | 0))
                              c[m2 >> 2] = r2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                          n2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (n2 | 0)) {
                            b[q2 >> 1] = n2;
                            if ((p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = n2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0)) {
                                  k2 = n2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = n2;
                          } else {
                            b[q2 >> 1] = k2;
                            if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (n2 | 0))
                                  c[a2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = p2;
                        } else {
                          b[q2 >> 1] = 0;
                          k2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      g2 = g2 + 2 | 0;
                      m2 = q2 + 2 | 0;
                      if ((r2 | 0) >= (x2 | 0))
                        break;
                      else {
                        q2 = m2;
                        p2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (z2 | 0)) {
                    o2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    g2 = g2 + 4 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              o2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((o2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (o2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          n2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[n2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              a2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                m2 = a2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (o2 | 0));
            }
            if ((c[n2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Uc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = g2 * 3 | 0;
        x2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          g2 = n2;
          l2 = n2 + (x2 << 1) | 0;
          while (1) {
            b[l2 >> 1] = 0;
            b[g2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              g2 = g2 + (e2 << 1) | 0;
              l2 = l2 + (e2 << 1) | 0;
            }
          }
        }
        l2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        u2 = 0 - e2 | 0;
        s2 = 1 - e2 | 0;
        t2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              v2 = (x2 | 0) > 1;
              w2 = 1;
              g2 = a2 + (k2 << 2) | 0;
              m2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (v2) {
                    r2 = 1;
                    q2 = m2;
                    p2 = k2;
                    while (1) {
                      do {
                        if (((d[g2 + 2 >> 0] | 0) + (d[g2 + 1 >> 0] | 0) + (d[g2 + 3 >> 0] | 0) | 0) > (y2 | 0)) {
                          k2 = b[q2 + (u2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[q2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          a2 = b[q2 + (s2 << 1) >> 1] | 0;
                          n2 = a2 << 16 >> 16;
                          k2 = b[q2 + (t2 << 1) >> 1] | 0;
                          o2 = k2 << 16 >> 16;
                          m2 = k2 << 16 >> 16 > 0;
                          if (a2 << 16 >> 16 <= 0) {
                            if (m2) {
                              b[q2 >> 1] = k2;
                              k2 = o2 * 7 | 0;
                              m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                              m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                              m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                              m2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) < (r2 | 0))
                                c[m2 >> 2] = r2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                              k2 = p2;
                              break;
                            }
                            k2 = b[q2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[q2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (r2 | 0)) {
                                k2 = p2;
                                break;
                              }
                              c[k2 >> 2] = r2;
                              k2 = p2;
                              break;
                            } else {
                              k2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[q2 >> 1] = k2;
                              c[j2 + 1179664 + (p2 << 2) >> 2] = k2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[j2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 2 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[j2 + 1310736 + (p2 + 5 << 2) >> 2] = w2;
                              c[j2 + 1310736 + (p2 + 6 << 2) >> 2] = w2;
                              break;
                            }
                          }
                          if (m2) {
                            k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                            n2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (n2 | 0)) {
                              b[q2 >> 1] = n2;
                              if ((p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (k2 | 0))
                                    c[a2 >> 2] = n2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0)) {
                                    k2 = n2;
                                    break;
                                  } else
                                    a2 = a2 + 4 | 0;
                                }
                              } else
                                k2 = n2;
                            } else {
                              b[q2 >> 1] = k2;
                              if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                                m2 = 0;
                                a2 = l2;
                                while (1) {
                                  if ((c[a2 >> 2] | 0) == (n2 | 0))
                                    c[a2 >> 2] = k2;
                                  m2 = m2 + 1 | 0;
                                  if ((m2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    a2 = a2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + w2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          m2 = b[q2 + -2 >> 1] | 0;
                          if (m2 << 16 >> 16 <= 0) {
                            b[q2 >> 1] = a2;
                            k2 = n2 * 7 | 0;
                            m2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                            m2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + r2;
                            m2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[m2 >> 2] = (c[m2 >> 2] | 0) + w2;
                            m2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[m2 >> 2] | 0) > (r2 | 0))
                              c[m2 >> 2] = r2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = w2;
                            k2 = p2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (n2 + -1 << 2) >> 2] | 0;
                          n2 = c[j2 + 1179664 + ((m2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (n2 | 0)) {
                            b[q2 >> 1] = n2;
                            if ((p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (k2 | 0))
                                  c[a2 >> 2] = n2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0)) {
                                  k2 = n2;
                                  break;
                                } else
                                  a2 = a2 + 4 | 0;
                              }
                            } else
                              k2 = n2;
                          } else {
                            b[q2 >> 1] = k2;
                            if ((k2 | 0) < (n2 | 0) & (p2 | 0) > 0) {
                              m2 = 0;
                              a2 = l2;
                              while (1) {
                                if ((c[a2 >> 2] | 0) == (n2 | 0))
                                  c[a2 >> 2] = k2;
                                m2 = m2 + 1 | 0;
                                if ((m2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  a2 = a2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          o2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + w2;
                          k2 = p2;
                        } else {
                          b[q2 >> 1] = 0;
                          k2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      g2 = g2 + 4 | 0;
                      m2 = q2 + 2 | 0;
                      if ((r2 | 0) >= (x2 | 0))
                        break;
                      else {
                        q2 = m2;
                        p2 = k2;
                      }
                    }
                  }
                  w2 = w2 + 1 | 0;
                  if ((w2 | 0) >= (z2 | 0)) {
                    o2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    g2 = g2 + 8 | 0;
                    m2 = m2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              o2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          a2 = j2 + 12 | 0;
          if ((o2 | 0) < 1)
            g2 = 1;
          else {
            m2 = 1;
            g2 = 1;
            while (1) {
              k2 = c[l2 >> 2] | 0;
              if ((k2 | 0) == (m2 | 0)) {
                k2 = g2;
                g2 = g2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[l2 >> 2] = k2;
              if ((m2 | 0) < (o2 | 0)) {
                m2 = m2 + 1 | 0;
                l2 = l2 + 4 | 0;
              } else
                break;
            }
          }
          n2 = j2 + 8 | 0;
          k2 = g2 + -1 | 0;
          c[n2 >> 2] = k2;
          if (k2) {
            ek(a2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((g2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              a2 = 0;
              do {
                l2 = (c[j2 + 1179664 + (a2 << 2) >> 2] | 0) + -1 | 0;
                m2 = a2 * 7 | 0;
                k2 = j2 + 12 + (l2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (m2 << 2) >> 2] | 0);
                k2 = l2 << 1;
                g2 = j2 + 655376 + (k2 << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] + +(c[j2 + 1310736 + (m2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (m2 + 2 << 2) >> 2] | 0);
                l2 = l2 << 2;
                k2 = j2 + 131084 + (l2 << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 1) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (g2 | 0))
                  c[k2 >> 2] = g2;
                k2 = j2 + 131084 + ((l2 | 2) << 2) | 0;
                g2 = c[j2 + 1310736 + (m2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (g2 | 0))
                  c[k2 >> 2] = g2;
                g2 = j2 + 131084 + ((l2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (m2 + 6 << 2) >> 2] | 0;
                if ((c[g2 >> 2] | 0) < (k2 | 0))
                  c[g2 >> 2] = k2;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (o2 | 0));
            }
            if ((c[n2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[n2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Vc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (y2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              l2 = l2 + (e2 << 1) | 0;
              m2 = m2 + (e2 << 1) | 0;
            }
          }
        }
        m2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        v2 = 0 - e2 | 0;
        t2 = 1 - e2 | 0;
        u2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              w2 = (y2 | 0) > 1;
              x2 = 1;
              l2 = a2 + k2 | 0;
              a2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (w2) {
                    s2 = 1;
                    r2 = a2;
                    q2 = k2;
                    while (1) {
                      do {
                        if ((d[l2 >> 0] | 0 | 0) > (g2 | 0)) {
                          k2 = b[r2 + (v2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[r2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          n2 = b[r2 + (t2 << 1) >> 1] | 0;
                          o2 = n2 << 16 >> 16;
                          k2 = b[r2 + (u2 << 1) >> 1] | 0;
                          p2 = k2 << 16 >> 16;
                          a2 = k2 << 16 >> 16 > 0;
                          if (n2 << 16 >> 16 <= 0) {
                            if (a2) {
                              b[r2 >> 1] = k2;
                              k2 = p2 * 7 | 0;
                              a2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
                              a2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + s2;
                              a2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + x2;
                              a2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[a2 >> 2] | 0) < (s2 | 0))
                                c[a2 >> 2] = s2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                              k2 = q2;
                              break;
                            }
                            k2 = b[r2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[r2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                              p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                              p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (s2 | 0)) {
                                k2 = q2;
                                break;
                              }
                              c[k2 >> 2] = s2;
                              k2 = q2;
                              break;
                            } else {
                              k2 = q2 + 1 | 0;
                              if ((q2 | 0) > 32767)
                                break b;
                              b[r2 >> 1] = k2;
                              c[j2 + 1179664 + (q2 << 2) >> 2] = k2 << 16 >> 16;
                              q2 = q2 * 7 | 0;
                              c[j2 + 1310736 + (q2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (q2 + 1 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 2 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 3 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 4 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 5 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (a2) {
                            k2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            o2 = c[j2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (o2 | 0)) {
                              b[r2 >> 1] = o2;
                              if ((q2 | 0) > 0) {
                                a2 = 0;
                                n2 = m2;
                                while (1) {
                                  if ((c[n2 >> 2] | 0) == (k2 | 0))
                                    c[n2 >> 2] = o2;
                                  a2 = a2 + 1 | 0;
                                  if ((a2 | 0) >= (q2 | 0)) {
                                    k2 = o2;
                                    break;
                                  } else
                                    n2 = n2 + 4 | 0;
                                }
                              } else
                                k2 = o2;
                            } else {
                              b[r2 >> 1] = k2;
                              if ((k2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                                a2 = 0;
                                n2 = m2;
                                while (1) {
                                  if ((c[n2 >> 2] | 0) == (o2 | 0))
                                    c[n2 >> 2] = k2;
                                  a2 = a2 + 1 | 0;
                                  if ((a2 | 0) >= (q2 | 0))
                                    break;
                                  else
                                    n2 = n2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          k2 = b[r2 + -2 >> 1] | 0;
                          if (k2 << 16 >> 16 <= 0) {
                            b[r2 >> 1] = n2;
                            k2 = o2 * 7 | 0;
                            a2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
                            a2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + s2;
                            a2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + x2;
                            a2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[a2 >> 2] | 0) > (s2 | 0))
                              c[a2 >> 2] = s2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          o2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                          k2 = c[j2 + 1179664 + ((k2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((o2 | 0) > (k2 | 0)) {
                            b[r2 >> 1] = k2;
                            if ((q2 | 0) > 0) {
                              a2 = 0;
                              n2 = m2;
                              while (1) {
                                if ((c[n2 >> 2] | 0) == (o2 | 0))
                                  c[n2 >> 2] = k2;
                                a2 = a2 + 1 | 0;
                                if ((a2 | 0) >= (q2 | 0))
                                  break;
                                else
                                  n2 = n2 + 4 | 0;
                              }
                            }
                          } else {
                            b[r2 >> 1] = o2;
                            if ((o2 | 0) < (k2 | 0) & (q2 | 0) > 0) {
                              a2 = 0;
                              n2 = m2;
                              while (1) {
                                if ((c[n2 >> 2] | 0) == (k2 | 0))
                                  c[n2 >> 2] = o2;
                                a2 = a2 + 1 | 0;
                                if ((a2 | 0) >= (q2 | 0)) {
                                  k2 = o2;
                                  break;
                                } else
                                  n2 = n2 + 4 | 0;
                              }
                            } else
                              k2 = o2;
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                          p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + x2;
                          k2 = q2;
                        } else {
                          b[r2 >> 1] = 0;
                          k2 = q2;
                        }
                      } while (0);
                      s2 = s2 + 1 | 0;
                      l2 = l2 + 1 | 0;
                      a2 = r2 + 2 | 0;
                      if ((s2 | 0) >= (y2 | 0))
                        break;
                      else {
                        r2 = a2;
                        q2 = k2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (z2 | 0)) {
                    p2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    a2 = a2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              p2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          n2 = j2 + 12 | 0;
          if ((p2 | 0) < 1)
            l2 = 1;
          else {
            a2 = 1;
            l2 = 1;
            while (1) {
              k2 = c[m2 >> 2] | 0;
              if ((k2 | 0) == (a2 | 0)) {
                k2 = l2;
                l2 = l2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = k2;
              if ((a2 | 0) < (p2 | 0)) {
                a2 = a2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = j2 + 8 | 0;
          k2 = l2 + -1 | 0;
          c[o2 >> 2] = k2;
          if (k2) {
            ek(n2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((l2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              n2 = 0;
              do {
                m2 = (c[j2 + 1179664 + (n2 << 2) >> 2] | 0) + -1 | 0;
                a2 = n2 * 7 | 0;
                k2 = j2 + 12 + (m2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (a2 << 2) >> 2] | 0);
                k2 = m2 << 1;
                l2 = j2 + 655376 + (k2 << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[j2 + 1310736 + (a2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (a2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                k2 = j2 + 131084 + (m2 << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 1) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 2) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                l2 = j2 + 131084 + ((m2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (a2 + 6 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (k2 | 0))
                  c[l2 >> 2] = k2;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[o2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Wc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (y2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              l2 = l2 + (e2 << 1) | 0;
              m2 = m2 + (e2 << 1) | 0;
            }
          }
        }
        m2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        v2 = 0 - e2 | 0;
        t2 = 1 - e2 | 0;
        u2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              w2 = (y2 | 0) > 1;
              x2 = 1;
              l2 = a2 + (k2 << 1) | 0;
              a2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (w2) {
                    s2 = 1;
                    r2 = a2;
                    q2 = k2;
                    while (1) {
                      do {
                        if ((d[l2 + 1 >> 0] | 0 | 0) > (g2 | 0)) {
                          k2 = b[r2 + (v2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[r2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          n2 = b[r2 + (t2 << 1) >> 1] | 0;
                          o2 = n2 << 16 >> 16;
                          k2 = b[r2 + (u2 << 1) >> 1] | 0;
                          p2 = k2 << 16 >> 16;
                          a2 = k2 << 16 >> 16 > 0;
                          if (n2 << 16 >> 16 <= 0) {
                            if (a2) {
                              b[r2 >> 1] = k2;
                              k2 = p2 * 7 | 0;
                              a2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
                              a2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + s2;
                              a2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + x2;
                              a2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[a2 >> 2] | 0) < (s2 | 0))
                                c[a2 >> 2] = s2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                              k2 = q2;
                              break;
                            }
                            k2 = b[r2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[r2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                              p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                              p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (s2 | 0)) {
                                k2 = q2;
                                break;
                              }
                              c[k2 >> 2] = s2;
                              k2 = q2;
                              break;
                            } else {
                              k2 = q2 + 1 | 0;
                              if ((q2 | 0) > 32767)
                                break b;
                              b[r2 >> 1] = k2;
                              c[j2 + 1179664 + (q2 << 2) >> 2] = k2 << 16 >> 16;
                              q2 = q2 * 7 | 0;
                              c[j2 + 1310736 + (q2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (q2 + 1 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 2 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 3 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 4 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 5 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (a2) {
                            k2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            o2 = c[j2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (o2 | 0)) {
                              b[r2 >> 1] = o2;
                              if ((q2 | 0) > 0) {
                                a2 = 0;
                                n2 = m2;
                                while (1) {
                                  if ((c[n2 >> 2] | 0) == (k2 | 0))
                                    c[n2 >> 2] = o2;
                                  a2 = a2 + 1 | 0;
                                  if ((a2 | 0) >= (q2 | 0)) {
                                    k2 = o2;
                                    break;
                                  } else
                                    n2 = n2 + 4 | 0;
                                }
                              } else
                                k2 = o2;
                            } else {
                              b[r2 >> 1] = k2;
                              if ((k2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                                a2 = 0;
                                n2 = m2;
                                while (1) {
                                  if ((c[n2 >> 2] | 0) == (o2 | 0))
                                    c[n2 >> 2] = k2;
                                  a2 = a2 + 1 | 0;
                                  if ((a2 | 0) >= (q2 | 0))
                                    break;
                                  else
                                    n2 = n2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          a2 = b[r2 + -2 >> 1] | 0;
                          if (a2 << 16 >> 16 <= 0) {
                            b[r2 >> 1] = n2;
                            k2 = o2 * 7 | 0;
                            a2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
                            a2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + s2;
                            a2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + x2;
                            a2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[a2 >> 2] | 0) > (s2 | 0))
                              c[a2 >> 2] = s2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          k2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                          o2 = c[j2 + 1179664 + ((a2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((k2 | 0) > (o2 | 0)) {
                            b[r2 >> 1] = o2;
                            if ((q2 | 0) > 0) {
                              a2 = 0;
                              n2 = m2;
                              while (1) {
                                if ((c[n2 >> 2] | 0) == (k2 | 0))
                                  c[n2 >> 2] = o2;
                                a2 = a2 + 1 | 0;
                                if ((a2 | 0) >= (q2 | 0)) {
                                  k2 = o2;
                                  break;
                                } else
                                  n2 = n2 + 4 | 0;
                              }
                            } else
                              k2 = o2;
                          } else {
                            b[r2 >> 1] = k2;
                            if ((k2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                              a2 = 0;
                              n2 = m2;
                              while (1) {
                                if ((c[n2 >> 2] | 0) == (o2 | 0))
                                  c[n2 >> 2] = k2;
                                a2 = a2 + 1 | 0;
                                if ((a2 | 0) >= (q2 | 0))
                                  break;
                                else
                                  n2 = n2 + 4 | 0;
                              }
                            }
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                          p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + x2;
                          k2 = q2;
                        } else {
                          b[r2 >> 1] = 0;
                          k2 = q2;
                        }
                      } while (0);
                      s2 = s2 + 1 | 0;
                      l2 = l2 + 2 | 0;
                      a2 = r2 + 2 | 0;
                      if ((s2 | 0) >= (y2 | 0))
                        break;
                      else {
                        r2 = a2;
                        q2 = k2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (z2 | 0)) {
                    p2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 4 | 0;
                    a2 = a2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              p2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          n2 = j2 + 12 | 0;
          if ((p2 | 0) < 1)
            l2 = 1;
          else {
            a2 = 1;
            l2 = 1;
            while (1) {
              k2 = c[m2 >> 2] | 0;
              if ((k2 | 0) == (a2 | 0)) {
                k2 = l2;
                l2 = l2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = k2;
              if ((a2 | 0) < (p2 | 0)) {
                a2 = a2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = j2 + 8 | 0;
          k2 = l2 + -1 | 0;
          c[o2 >> 2] = k2;
          if (k2) {
            ek(n2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((l2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              n2 = 0;
              do {
                m2 = (c[j2 + 1179664 + (n2 << 2) >> 2] | 0) + -1 | 0;
                a2 = n2 * 7 | 0;
                k2 = j2 + 12 + (m2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (a2 << 2) >> 2] | 0);
                k2 = m2 << 1;
                l2 = j2 + 655376 + (k2 << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[j2 + 1310736 + (a2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (a2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                k2 = j2 + 131084 + (m2 << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 1) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 2) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                l2 = j2 + 131084 + ((m2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (a2 + 6 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (k2 | 0))
                  c[l2 >> 2] = k2;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[o2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Xc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (y2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              l2 = l2 + (e2 << 1) | 0;
              m2 = m2 + (e2 << 1) | 0;
            }
          }
        }
        m2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        v2 = 0 - e2 | 0;
        t2 = 1 - e2 | 0;
        u2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              w2 = (y2 | 0) > 1;
              x2 = 1;
              l2 = a2 + (k2 << 1) | 0;
              a2 = n2 + (k2 << 1) | 0;
              k2 = 0;
              b:
                while (1) {
                  if (w2) {
                    s2 = 1;
                    r2 = a2;
                    q2 = k2;
                    while (1) {
                      do {
                        if ((d[l2 >> 0] | 0 | 0) > (g2 | 0)) {
                          k2 = b[r2 + (v2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[r2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          n2 = b[r2 + (t2 << 1) >> 1] | 0;
                          o2 = n2 << 16 >> 16;
                          k2 = b[r2 + (u2 << 1) >> 1] | 0;
                          p2 = k2 << 16 >> 16;
                          a2 = k2 << 16 >> 16 > 0;
                          if (n2 << 16 >> 16 <= 0) {
                            if (a2) {
                              b[r2 >> 1] = k2;
                              k2 = p2 * 7 | 0;
                              a2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
                              a2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + s2;
                              a2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[a2 >> 2] = (c[a2 >> 2] | 0) + x2;
                              a2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[a2 >> 2] | 0) < (s2 | 0))
                                c[a2 >> 2] = s2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                              k2 = q2;
                              break;
                            }
                            k2 = b[r2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[r2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                              p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                              p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (s2 | 0)) {
                                k2 = q2;
                                break;
                              }
                              c[k2 >> 2] = s2;
                              k2 = q2;
                              break;
                            } else {
                              k2 = q2 + 1 | 0;
                              if ((q2 | 0) > 32767)
                                break b;
                              b[r2 >> 1] = k2;
                              c[j2 + 1179664 + (q2 << 2) >> 2] = k2 << 16 >> 16;
                              q2 = q2 * 7 | 0;
                              c[j2 + 1310736 + (q2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (q2 + 1 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 2 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 3 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 4 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 5 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (a2) {
                            k2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            o2 = c[j2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (o2 | 0)) {
                              b[r2 >> 1] = o2;
                              if ((q2 | 0) > 0) {
                                a2 = 0;
                                n2 = m2;
                                while (1) {
                                  if ((c[n2 >> 2] | 0) == (k2 | 0))
                                    c[n2 >> 2] = o2;
                                  a2 = a2 + 1 | 0;
                                  if ((a2 | 0) >= (q2 | 0)) {
                                    k2 = o2;
                                    break;
                                  } else
                                    n2 = n2 + 4 | 0;
                                }
                              } else
                                k2 = o2;
                            } else {
                              b[r2 >> 1] = k2;
                              if ((k2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                                a2 = 0;
                                n2 = m2;
                                while (1) {
                                  if ((c[n2 >> 2] | 0) == (o2 | 0))
                                    c[n2 >> 2] = k2;
                                  a2 = a2 + 1 | 0;
                                  if ((a2 | 0) >= (q2 | 0))
                                    break;
                                  else
                                    n2 = n2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          k2 = b[r2 + -2 >> 1] | 0;
                          if (k2 << 16 >> 16 <= 0) {
                            b[r2 >> 1] = n2;
                            k2 = o2 * 7 | 0;
                            a2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
                            a2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + s2;
                            a2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[a2 >> 2] = (c[a2 >> 2] | 0) + x2;
                            a2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[a2 >> 2] | 0) > (s2 | 0))
                              c[a2 >> 2] = s2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          o2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                          k2 = c[j2 + 1179664 + ((k2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((o2 | 0) > (k2 | 0)) {
                            b[r2 >> 1] = k2;
                            if ((q2 | 0) > 0) {
                              a2 = 0;
                              n2 = m2;
                              while (1) {
                                if ((c[n2 >> 2] | 0) == (o2 | 0))
                                  c[n2 >> 2] = k2;
                                a2 = a2 + 1 | 0;
                                if ((a2 | 0) >= (q2 | 0))
                                  break;
                                else
                                  n2 = n2 + 4 | 0;
                              }
                            }
                          } else {
                            b[r2 >> 1] = o2;
                            if ((o2 | 0) < (k2 | 0) & (q2 | 0) > 0) {
                              a2 = 0;
                              n2 = m2;
                              while (1) {
                                if ((c[n2 >> 2] | 0) == (k2 | 0))
                                  c[n2 >> 2] = o2;
                                a2 = a2 + 1 | 0;
                                if ((a2 | 0) >= (q2 | 0)) {
                                  k2 = o2;
                                  break;
                                } else
                                  n2 = n2 + 4 | 0;
                              }
                            } else
                              k2 = o2;
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                          p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + x2;
                          k2 = q2;
                        } else {
                          b[r2 >> 1] = 0;
                          k2 = q2;
                        }
                      } while (0);
                      s2 = s2 + 1 | 0;
                      l2 = l2 + 2 | 0;
                      a2 = r2 + 2 | 0;
                      if ((s2 | 0) >= (y2 | 0))
                        break;
                      else {
                        r2 = a2;
                        q2 = k2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (z2 | 0)) {
                    p2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 4 | 0;
                    a2 = a2 + 4 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              p2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          n2 = j2 + 12 | 0;
          if ((p2 | 0) < 1)
            l2 = 1;
          else {
            a2 = 1;
            l2 = 1;
            while (1) {
              k2 = c[m2 >> 2] | 0;
              if ((k2 | 0) == (a2 | 0)) {
                k2 = l2;
                l2 = l2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = k2;
              if ((a2 | 0) < (p2 | 0)) {
                a2 = a2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = j2 + 8 | 0;
          k2 = l2 + -1 | 0;
          c[o2 >> 2] = k2;
          if (k2) {
            ek(n2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((l2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              n2 = 0;
              do {
                m2 = (c[j2 + 1179664 + (n2 << 2) >> 2] | 0) + -1 | 0;
                a2 = n2 * 7 | 0;
                k2 = j2 + 12 + (m2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (a2 << 2) >> 2] | 0);
                k2 = m2 << 1;
                l2 = j2 + 655376 + (k2 << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[j2 + 1310736 + (a2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (a2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                k2 = j2 + 131084 + (m2 << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 1) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 2) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                l2 = j2 + 131084 + ((m2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (a2 + 6 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (k2 | 0))
                  c[l2 >> 2] = k2;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[o2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Yc(a2, e2, f2, g2, j2) {
        a2 = a2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        A2 = C2;
        n2 = c[j2 >> 2] | 0;
        z2 = f2 + -1 | 0;
        if ((e2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (($(z2, e2) | 0) << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (e2 | 0))
              break;
            else {
              l2 = l2 + 2 | 0;
              m2 = m2 + 2 | 0;
            }
          }
        }
        y2 = e2 + -1 | 0;
        if ((f2 | 0) > 0) {
          k2 = 0;
          l2 = n2;
          m2 = n2 + (y2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[l2 >> 1] = 0;
            k2 = k2 + 1 | 0;
            if ((k2 | 0) >= (f2 | 0))
              break;
            else {
              l2 = l2 + (e2 << 1) | 0;
              m2 = m2 + (e2 << 1) | 0;
            }
          }
        }
        m2 = j2 + 1179664 | 0;
        k2 = e2 + 1 | 0;
        v2 = 0 - e2 | 0;
        t2 = 1 - e2 | 0;
        u2 = ~e2;
        a:
          do {
            if ((z2 | 0) > 1) {
              w2 = (y2 | 0) > 1;
              x2 = 1;
              l2 = a2 + k2 | 0;
              a2 = n2 + (k2 << 1) | 0;
              n2 = g2 + k2 | 0;
              k2 = 0;
              b:
                while (1) {
                  if (w2) {
                    s2 = 1;
                    r2 = l2;
                    q2 = k2;
                    while (1) {
                      do {
                        if ((d[r2 >> 0] | 0) > (d[n2 >> 0] | 0)) {
                          k2 = b[a2 + (v2 << 1) >> 1] | 0;
                          if (k2 << 16 >> 16 > 0) {
                            b[a2 >> 1] = k2;
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          g2 = b[a2 + (t2 << 1) >> 1] | 0;
                          o2 = g2 << 16 >> 16;
                          k2 = b[a2 + (u2 << 1) >> 1] | 0;
                          p2 = k2 << 16 >> 16;
                          l2 = k2 << 16 >> 16 > 0;
                          if (g2 << 16 >> 16 <= 0) {
                            if (l2) {
                              b[a2 >> 1] = k2;
                              k2 = p2 * 7 | 0;
                              l2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[l2 >> 2] = (c[l2 >> 2] | 0) + 1;
                              l2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[l2 >> 2] = (c[l2 >> 2] | 0) + s2;
                              l2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[l2 >> 2] = (c[l2 >> 2] | 0) + x2;
                              l2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[l2 >> 2] | 0) < (s2 | 0))
                                c[l2 >> 2] = s2;
                              c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                              k2 = q2;
                              break;
                            }
                            k2 = b[a2 + -2 >> 1] | 0;
                            if (k2 << 16 >> 16 > 0) {
                              b[a2 >> 1] = k2;
                              k2 = (k2 << 16 >> 16) * 7 | 0;
                              p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                              p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                              p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                              c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                              k2 = j2 + 1310736 + (k2 + -3 << 2) | 0;
                              if ((c[k2 >> 2] | 0) >= (s2 | 0)) {
                                k2 = q2;
                                break;
                              }
                              c[k2 >> 2] = s2;
                              k2 = q2;
                              break;
                            } else {
                              k2 = q2 + 1 | 0;
                              if ((q2 | 0) > 32767)
                                break b;
                              b[a2 >> 1] = k2;
                              c[j2 + 1179664 + (q2 << 2) >> 2] = k2 << 16 >> 16;
                              q2 = q2 * 7 | 0;
                              c[j2 + 1310736 + (q2 << 2) >> 2] = 1;
                              c[j2 + 1310736 + (q2 + 1 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 2 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 3 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 4 << 2) >> 2] = s2;
                              c[j2 + 1310736 + (q2 + 5 << 2) >> 2] = x2;
                              c[j2 + 1310736 + (q2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (l2) {
                            k2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            o2 = c[j2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            if ((k2 | 0) > (o2 | 0)) {
                              b[a2 >> 1] = o2;
                              if ((q2 | 0) > 0) {
                                l2 = 0;
                                g2 = m2;
                                while (1) {
                                  if ((c[g2 >> 2] | 0) == (k2 | 0))
                                    c[g2 >> 2] = o2;
                                  l2 = l2 + 1 | 0;
                                  if ((l2 | 0) >= (q2 | 0)) {
                                    k2 = o2;
                                    break;
                                  } else
                                    g2 = g2 + 4 | 0;
                                }
                              } else
                                k2 = o2;
                            } else {
                              b[a2 >> 1] = k2;
                              if ((k2 | 0) < (o2 | 0) & (q2 | 0) > 0) {
                                l2 = 0;
                                g2 = m2;
                                while (1) {
                                  if ((c[g2 >> 2] | 0) == (o2 | 0))
                                    c[g2 >> 2] = k2;
                                  l2 = l2 + 1 | 0;
                                  if ((l2 | 0) >= (q2 | 0))
                                    break;
                                  else
                                    g2 = g2 + 4 | 0;
                                }
                              }
                            }
                            k2 = (k2 << 16 >> 16) * 7 | 0;
                            p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                            p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                            p2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[p2 >> 2] = (c[p2 >> 2] | 0) + x2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          k2 = b[a2 + -2 >> 1] | 0;
                          if (k2 << 16 >> 16 <= 0) {
                            b[a2 >> 1] = g2;
                            k2 = o2 * 7 | 0;
                            l2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                            c[l2 >> 2] = (c[l2 >> 2] | 0) + 1;
                            l2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                            c[l2 >> 2] = (c[l2 >> 2] | 0) + s2;
                            l2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                            c[l2 >> 2] = (c[l2 >> 2] | 0) + x2;
                            l2 = j2 + 1310736 + (k2 + -4 << 2) | 0;
                            if ((c[l2 >> 2] | 0) > (s2 | 0))
                              c[l2 >> 2] = s2;
                            c[j2 + 1310736 + (k2 + -1 << 2) >> 2] = x2;
                            k2 = q2;
                            break;
                          }
                          o2 = c[j2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                          k2 = c[j2 + 1179664 + ((k2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((o2 | 0) > (k2 | 0)) {
                            b[a2 >> 1] = k2;
                            if ((q2 | 0) > 0) {
                              l2 = 0;
                              g2 = m2;
                              while (1) {
                                if ((c[g2 >> 2] | 0) == (o2 | 0))
                                  c[g2 >> 2] = k2;
                                l2 = l2 + 1 | 0;
                                if ((l2 | 0) >= (q2 | 0))
                                  break;
                                else
                                  g2 = g2 + 4 | 0;
                              }
                            }
                          } else {
                            b[a2 >> 1] = o2;
                            if ((o2 | 0) < (k2 | 0) & (q2 | 0) > 0) {
                              l2 = 0;
                              g2 = m2;
                              while (1) {
                                if ((c[g2 >> 2] | 0) == (k2 | 0))
                                  c[g2 >> 2] = o2;
                                l2 = l2 + 1 | 0;
                                if ((l2 | 0) >= (q2 | 0)) {
                                  k2 = o2;
                                  break;
                                } else
                                  g2 = g2 + 4 | 0;
                              }
                            } else
                              k2 = o2;
                          }
                          k2 = (k2 << 16 >> 16) * 7 | 0;
                          p2 = j2 + 1310736 + (k2 + -7 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
                          p2 = j2 + 1310736 + (k2 + -6 << 2) | 0;
                          c[p2 >> 2] = (c[p2 >> 2] | 0) + s2;
                          k2 = j2 + 1310736 + (k2 + -5 << 2) | 0;
                          c[k2 >> 2] = (c[k2 >> 2] | 0) + x2;
                          k2 = q2;
                        } else {
                          b[a2 >> 1] = 0;
                          k2 = q2;
                        }
                      } while (0);
                      s2 = s2 + 1 | 0;
                      l2 = r2 + 1 | 0;
                      n2 = n2 + 1 | 0;
                      a2 = a2 + 2 | 0;
                      if ((s2 | 0) >= (y2 | 0))
                        break;
                      else {
                        r2 = l2;
                        q2 = k2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (z2 | 0)) {
                    o2 = k2;
                    B2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    a2 = a2 + 4 | 0;
                    n2 = n2 + 2 | 0;
                  }
                }
              Me(3, 3904, A2);
              k2 = -1;
            } else {
              o2 = 0;
              B2 = 52;
            }
          } while (0);
        if ((B2 | 0) == 52) {
          n2 = j2 + 12 | 0;
          if ((o2 | 0) < 1)
            l2 = 1;
          else {
            a2 = 1;
            l2 = 1;
            while (1) {
              k2 = c[m2 >> 2] | 0;
              if ((k2 | 0) == (a2 | 0)) {
                k2 = l2;
                l2 = l2 + 1 | 0;
              } else
                k2 = c[j2 + 1179664 + (k2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = k2;
              if ((a2 | 0) < (o2 | 0)) {
                a2 = a2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          g2 = j2 + 8 | 0;
          k2 = l2 + -1 | 0;
          c[g2 >> 2] = k2;
          if (k2) {
            ek(n2 | 0, 0, k2 << 2 | 0) | 0;
            ek(j2 + 655376 | 0, 0, k2 << 4 | 0) | 0;
            if ((l2 | 0) > 1) {
              k2 = 0;
              do {
                B2 = k2 << 2;
                c[j2 + 131084 + (B2 << 2) >> 2] = e2;
                c[j2 + 131084 + ((B2 | 1) << 2) >> 2] = 0;
                c[j2 + 131084 + ((B2 | 2) << 2) >> 2] = f2;
                c[j2 + 131084 + ((B2 | 3) << 2) >> 2] = 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[g2 >> 2] | 0));
            }
            if ((o2 | 0) > 0) {
              n2 = 0;
              do {
                m2 = (c[j2 + 1179664 + (n2 << 2) >> 2] | 0) + -1 | 0;
                a2 = n2 * 7 | 0;
                k2 = j2 + 12 + (m2 << 2) | 0;
                c[k2 >> 2] = (c[k2 >> 2] | 0) + (c[j2 + 1310736 + (a2 << 2) >> 2] | 0);
                k2 = m2 << 1;
                l2 = j2 + 655376 + (k2 << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[j2 + 1310736 + (a2 + 1 << 2) >> 2] | 0);
                k2 = j2 + 655376 + ((k2 | 1) << 3) | 0;
                h[k2 >> 3] = +h[k2 >> 3] + +(c[j2 + 1310736 + (a2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                k2 = j2 + 131084 + (m2 << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 3 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 1) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 4 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) < (l2 | 0))
                  c[k2 >> 2] = l2;
                k2 = j2 + 131084 + ((m2 | 2) << 2) | 0;
                l2 = c[j2 + 1310736 + (a2 + 5 << 2) >> 2] | 0;
                if ((c[k2 >> 2] | 0) > (l2 | 0))
                  c[k2 >> 2] = l2;
                l2 = j2 + 131084 + ((m2 | 3) << 2) | 0;
                k2 = c[j2 + 1310736 + (a2 + 6 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (k2 | 0))
                  c[l2 >> 2] = k2;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) < (o2 | 0));
            }
            if ((c[g2 >> 2] | 0) > 0) {
              k2 = 0;
              do {
                e2 = j2 + 12 + (k2 << 2) | 0;
                f2 = k2 << 1;
                B2 = j2 + 655376 + (f2 << 3) | 0;
                h[B2 >> 3] = +h[B2 >> 3] / +(c[e2 >> 2] | 0);
                f2 = j2 + 655376 + ((f2 | 1) << 3) | 0;
                h[f2 >> 3] = +h[f2 >> 3] / +(c[e2 >> 2] | 0);
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (c[g2 >> 2] | 0));
              k2 = 0;
            } else
              k2 = 0;
          } else
            k2 = 0;
        }
        i2 = C2;
        return k2 | 0;
      }
      function Zc(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        y2 = j2 * 3 | 0;
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          j2 = o2;
          m2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              j2 = j2 + (D2 << 1) | 0;
              m2 = m2 + (D2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        j2 = D2 + 1 | 0;
        v2 = 0 - D2 | 0;
        t2 = 1 - D2 | 0;
        u2 = ~D2;
        s2 = (f2 * 3 | 0) + 12 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              w2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + j2 | 0;
              x2 = 1;
              n2 = e2 + ((f2 * 6 | 0) + 6) | 0;
              g2 = o2 + (j2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (w2) {
                    r2 = 1;
                    q2 = n2;
                    p2 = j2;
                    while (1) {
                      do {
                        if (((d[q2 + 1 >> 0] | 0) + (d[q2 >> 0] | 0) + (d[q2 + 2 >> 0] | 0) | 0) > (y2 | 0)) {
                          b[g2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = p2;
                        } else {
                          a[l2 >> 0] = -1;
                          j2 = b[g2 + (v2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[g2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          e2 = b[g2 + (t2 << 1) >> 1] | 0;
                          f2 = e2 << 16 >> 16;
                          j2 = b[g2 + (u2 << 1) >> 1] | 0;
                          o2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (e2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[g2 >> 1] = j2;
                              j2 = o2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (r2 | 0))
                                c[n2 >> 2] = r2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                              j2 = p2;
                              break;
                            }
                            j2 = b[g2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[g2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (r2 | 0)) {
                                j2 = p2;
                                break;
                              }
                              c[j2 >> 2] = r2;
                              j2 = p2;
                              break;
                            } else {
                              j2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[g2 >> 1] = j2;
                              c[k2 + 1179664 + (p2 << 2) >> 2] = j2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[k2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 2 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 5 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                            f2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (f2 | 0)) {
                              b[g2 >> 1] = f2;
                              if ((p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (j2 | 0))
                                    c[e2 >> 2] = f2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0)) {
                                    j2 = f2;
                                    break;
                                  } else
                                    e2 = e2 + 4 | 0;
                                }
                              } else
                                j2 = f2;
                            } else {
                              b[g2 >> 1] = j2;
                              if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (f2 | 0))
                                    c[e2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    e2 = e2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          n2 = b[g2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[g2 >> 1] = e2;
                            j2 = f2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (r2 | 0))
                              c[n2 >> 2] = r2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                          f2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (f2 | 0)) {
                            b[g2 >> 1] = f2;
                            if ((p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (j2 | 0))
                                  c[e2 >> 2] = f2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0)) {
                                  j2 = f2;
                                  break;
                                } else
                                  e2 = e2 + 4 | 0;
                              }
                            } else
                              j2 = f2;
                          } else {
                            b[g2 >> 1] = j2;
                            if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (f2 | 0))
                                  c[e2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  e2 = e2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + x2;
                          j2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      n2 = q2 + 6 | 0;
                      g2 = g2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((r2 | 0) >= (z2 | 0))
                        break;
                      else {
                        q2 = n2;
                        p2 = j2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (A2 | 0)) {
                    f2 = j2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    n2 = n2 + s2 | 0;
                    g2 = g2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              f2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          g2 = k2 + 12 | 0;
          if ((f2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (f2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[e2 >> 2] = l2;
          if (l2) {
            ek(g2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (g2 << 2) >> 2] | 0) + -1 | 0;
                n2 = g2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) < (f2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function _c(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        y2 = j2 * 3 | 0;
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          j2 = o2;
          m2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              j2 = j2 + (D2 << 1) | 0;
              m2 = m2 + (D2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        j2 = D2 + 1 | 0;
        v2 = 0 - D2 | 0;
        t2 = 1 - D2 | 0;
        u2 = ~D2;
        s2 = (f2 << 1) + 8 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              w2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + j2 | 0;
              x2 = 1;
              n2 = e2 + ((f2 << 2) + 4) | 0;
              g2 = o2 + (j2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (w2) {
                    r2 = 1;
                    q2 = n2;
                    p2 = j2;
                    while (1) {
                      f2 = d[q2 >> 0] | 0;
                      o2 = d[q2 + 1 >> 0] | 0;
                      do {
                        if (((f2 & 248) + 10 + (f2 << 5 & 224) + (o2 >>> 3 & 28) + (o2 << 3 & 248) | 0) > (y2 | 0)) {
                          b[g2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = p2;
                        } else {
                          a[l2 >> 0] = -1;
                          j2 = b[g2 + (v2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[g2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          e2 = b[g2 + (t2 << 1) >> 1] | 0;
                          f2 = e2 << 16 >> 16;
                          j2 = b[g2 + (u2 << 1) >> 1] | 0;
                          o2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (e2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[g2 >> 1] = j2;
                              j2 = o2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (r2 | 0))
                                c[n2 >> 2] = r2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                              j2 = p2;
                              break;
                            }
                            j2 = b[g2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[g2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (r2 | 0)) {
                                j2 = p2;
                                break;
                              }
                              c[j2 >> 2] = r2;
                              j2 = p2;
                              break;
                            } else {
                              j2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[g2 >> 1] = j2;
                              c[k2 + 1179664 + (p2 << 2) >> 2] = j2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[k2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 2 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 5 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                            f2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (f2 | 0)) {
                              b[g2 >> 1] = f2;
                              if ((p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (j2 | 0))
                                    c[e2 >> 2] = f2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0)) {
                                    j2 = f2;
                                    break;
                                  } else
                                    e2 = e2 + 4 | 0;
                                }
                              } else
                                j2 = f2;
                            } else {
                              b[g2 >> 1] = j2;
                              if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (f2 | 0))
                                    c[e2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    e2 = e2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          n2 = b[g2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[g2 >> 1] = e2;
                            j2 = f2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (r2 | 0))
                              c[n2 >> 2] = r2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                          f2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (f2 | 0)) {
                            b[g2 >> 1] = f2;
                            if ((p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (j2 | 0))
                                  c[e2 >> 2] = f2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0)) {
                                  j2 = f2;
                                  break;
                                } else
                                  e2 = e2 + 4 | 0;
                              }
                            } else
                              j2 = f2;
                          } else {
                            b[g2 >> 1] = j2;
                            if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (f2 | 0))
                                  c[e2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  e2 = e2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + x2;
                          j2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      n2 = q2 + 4 | 0;
                      g2 = g2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((r2 | 0) >= (z2 | 0))
                        break;
                      else {
                        q2 = n2;
                        p2 = j2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (A2 | 0)) {
                    f2 = j2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    n2 = n2 + s2 | 0;
                    g2 = g2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              f2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          g2 = k2 + 12 | 0;
          if ((f2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (f2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[e2 >> 2] = l2;
          if (l2) {
            ek(g2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (g2 << 2) >> 2] | 0) + -1 | 0;
                n2 = g2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) < (f2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function $c(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        y2 = j2 * 3 | 0;
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          j2 = o2;
          m2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              j2 = j2 + (D2 << 1) | 0;
              m2 = m2 + (D2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        j2 = D2 + 1 | 0;
        v2 = 0 - D2 | 0;
        t2 = 1 - D2 | 0;
        u2 = ~D2;
        s2 = (f2 << 2) + 16 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              w2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + j2 | 0;
              x2 = 1;
              n2 = e2 + ((f2 << 3) + 8) | 0;
              g2 = o2 + (j2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (w2) {
                    r2 = 1;
                    q2 = n2;
                    p2 = j2;
                    while (1) {
                      do {
                        if (((d[q2 + 1 >> 0] | 0) + (d[q2 >> 0] | 0) + (d[q2 + 2 >> 0] | 0) | 0) > (y2 | 0)) {
                          b[g2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = p2;
                        } else {
                          a[l2 >> 0] = -1;
                          j2 = b[g2 + (v2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[g2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          e2 = b[g2 + (t2 << 1) >> 1] | 0;
                          f2 = e2 << 16 >> 16;
                          j2 = b[g2 + (u2 << 1) >> 1] | 0;
                          o2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (e2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[g2 >> 1] = j2;
                              j2 = o2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (r2 | 0))
                                c[n2 >> 2] = r2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                              j2 = p2;
                              break;
                            }
                            j2 = b[g2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[g2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (r2 | 0)) {
                                j2 = p2;
                                break;
                              }
                              c[j2 >> 2] = r2;
                              j2 = p2;
                              break;
                            } else {
                              j2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[g2 >> 1] = j2;
                              c[k2 + 1179664 + (p2 << 2) >> 2] = j2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[k2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 2 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 5 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                            f2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (f2 | 0)) {
                              b[g2 >> 1] = f2;
                              if ((p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (j2 | 0))
                                    c[e2 >> 2] = f2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0)) {
                                    j2 = f2;
                                    break;
                                  } else
                                    e2 = e2 + 4 | 0;
                                }
                              } else
                                j2 = f2;
                            } else {
                              b[g2 >> 1] = j2;
                              if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (f2 | 0))
                                    c[e2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    e2 = e2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          n2 = b[g2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[g2 >> 1] = e2;
                            j2 = f2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (r2 | 0))
                              c[n2 >> 2] = r2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                          f2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (f2 | 0)) {
                            b[g2 >> 1] = f2;
                            if ((p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (j2 | 0))
                                  c[e2 >> 2] = f2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0)) {
                                  j2 = f2;
                                  break;
                                } else
                                  e2 = e2 + 4 | 0;
                              }
                            } else
                              j2 = f2;
                          } else {
                            b[g2 >> 1] = j2;
                            if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (f2 | 0))
                                  c[e2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  e2 = e2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + x2;
                          j2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      n2 = q2 + 8 | 0;
                      g2 = g2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((r2 | 0) >= (z2 | 0))
                        break;
                      else {
                        q2 = n2;
                        p2 = j2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (A2 | 0)) {
                    f2 = j2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    n2 = n2 + s2 | 0;
                    g2 = g2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              f2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          g2 = k2 + 12 | 0;
          if ((f2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (f2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[e2 >> 2] = l2;
          if (l2) {
            ek(g2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (g2 << 2) >> 2] | 0) + -1 | 0;
                n2 = g2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) < (f2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function ad(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        y2 = j2 * 3 | 0;
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          j2 = o2;
          m2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              j2 = j2 + (D2 << 1) | 0;
              m2 = m2 + (D2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        j2 = D2 + 1 | 0;
        v2 = 0 - D2 | 0;
        t2 = 1 - D2 | 0;
        u2 = ~D2;
        s2 = (f2 << 1) + 8 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              w2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + j2 | 0;
              x2 = 1;
              n2 = e2 + ((f2 << 2) + 4) | 0;
              g2 = o2 + (j2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (w2) {
                    r2 = 1;
                    q2 = n2;
                    p2 = j2;
                    while (1) {
                      o2 = d[q2 >> 0] | 0;
                      do {
                        if (((o2 & 240) + 24 + (o2 << 4 & 240) + ((d[q2 + 1 >> 0] | 0) & 240) | 0) > (y2 | 0)) {
                          b[g2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = p2;
                        } else {
                          a[l2 >> 0] = -1;
                          j2 = b[g2 + (v2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[g2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          e2 = b[g2 + (t2 << 1) >> 1] | 0;
                          f2 = e2 << 16 >> 16;
                          j2 = b[g2 + (u2 << 1) >> 1] | 0;
                          o2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (e2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[g2 >> 1] = j2;
                              j2 = o2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (r2 | 0))
                                c[n2 >> 2] = r2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                              j2 = p2;
                              break;
                            }
                            j2 = b[g2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[g2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (r2 | 0)) {
                                j2 = p2;
                                break;
                              }
                              c[j2 >> 2] = r2;
                              j2 = p2;
                              break;
                            } else {
                              j2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[g2 >> 1] = j2;
                              c[k2 + 1179664 + (p2 << 2) >> 2] = j2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[k2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 2 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 5 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                            f2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (f2 | 0)) {
                              b[g2 >> 1] = f2;
                              if ((p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (j2 | 0))
                                    c[e2 >> 2] = f2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0)) {
                                    j2 = f2;
                                    break;
                                  } else
                                    e2 = e2 + 4 | 0;
                                }
                              } else
                                j2 = f2;
                            } else {
                              b[g2 >> 1] = j2;
                              if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (f2 | 0))
                                    c[e2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    e2 = e2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          n2 = b[g2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[g2 >> 1] = e2;
                            j2 = f2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (r2 | 0))
                              c[n2 >> 2] = r2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                          f2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (f2 | 0)) {
                            b[g2 >> 1] = f2;
                            if ((p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (j2 | 0))
                                  c[e2 >> 2] = f2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0)) {
                                  j2 = f2;
                                  break;
                                } else
                                  e2 = e2 + 4 | 0;
                              }
                            } else
                              j2 = f2;
                          } else {
                            b[g2 >> 1] = j2;
                            if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (f2 | 0))
                                  c[e2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  e2 = e2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + x2;
                          j2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      n2 = q2 + 4 | 0;
                      g2 = g2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((r2 | 0) >= (z2 | 0))
                        break;
                      else {
                        q2 = n2;
                        p2 = j2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (A2 | 0)) {
                    f2 = j2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    n2 = n2 + s2 | 0;
                    g2 = g2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              f2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          g2 = k2 + 12 | 0;
          if ((f2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (f2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[e2 >> 2] = l2;
          if (l2) {
            ek(g2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (g2 << 2) >> 2] | 0) + -1 | 0;
                n2 = g2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) < (f2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function bd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        y2 = j2 * 3 | 0;
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          j2 = o2;
          m2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              j2 = j2 + (D2 << 1) | 0;
              m2 = m2 + (D2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        j2 = D2 + 1 | 0;
        v2 = 0 - D2 | 0;
        t2 = 1 - D2 | 0;
        u2 = ~D2;
        s2 = (f2 << 1) + 8 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              w2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + j2 | 0;
              x2 = 1;
              n2 = e2 + ((f2 << 2) + 4) | 0;
              g2 = o2 + (j2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (w2) {
                    r2 = 1;
                    q2 = n2;
                    p2 = j2;
                    while (1) {
                      f2 = d[q2 >> 0] | 0;
                      o2 = d[q2 + 1 >> 0] | 0;
                      do {
                        if (((f2 & 248) + 12 + (f2 << 5 & 224) + (o2 >>> 3 & 24) + (o2 << 2 & 248) | 0) > (y2 | 0)) {
                          b[g2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = p2;
                        } else {
                          a[l2 >> 0] = -1;
                          j2 = b[g2 + (v2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[g2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          e2 = b[g2 + (t2 << 1) >> 1] | 0;
                          f2 = e2 << 16 >> 16;
                          j2 = b[g2 + (u2 << 1) >> 1] | 0;
                          o2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (e2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[g2 >> 1] = j2;
                              j2 = o2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (r2 | 0))
                                c[n2 >> 2] = r2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                              j2 = p2;
                              break;
                            }
                            j2 = b[g2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[g2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (r2 | 0)) {
                                j2 = p2;
                                break;
                              }
                              c[j2 >> 2] = r2;
                              j2 = p2;
                              break;
                            } else {
                              j2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[g2 >> 1] = j2;
                              c[k2 + 1179664 + (p2 << 2) >> 2] = j2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[k2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 2 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 5 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                            f2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (f2 | 0)) {
                              b[g2 >> 1] = f2;
                              if ((p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (j2 | 0))
                                    c[e2 >> 2] = f2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0)) {
                                    j2 = f2;
                                    break;
                                  } else
                                    e2 = e2 + 4 | 0;
                                }
                              } else
                                j2 = f2;
                            } else {
                              b[g2 >> 1] = j2;
                              if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (f2 | 0))
                                    c[e2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    e2 = e2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          n2 = b[g2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[g2 >> 1] = e2;
                            j2 = f2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (r2 | 0))
                              c[n2 >> 2] = r2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                          f2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (f2 | 0)) {
                            b[g2 >> 1] = f2;
                            if ((p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (j2 | 0))
                                  c[e2 >> 2] = f2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0)) {
                                  j2 = f2;
                                  break;
                                } else
                                  e2 = e2 + 4 | 0;
                              }
                            } else
                              j2 = f2;
                          } else {
                            b[g2 >> 1] = j2;
                            if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (f2 | 0))
                                  c[e2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  e2 = e2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + x2;
                          j2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      n2 = q2 + 4 | 0;
                      g2 = g2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((r2 | 0) >= (z2 | 0))
                        break;
                      else {
                        q2 = n2;
                        p2 = j2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (A2 | 0)) {
                    f2 = j2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    n2 = n2 + s2 | 0;
                    g2 = g2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              f2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          g2 = k2 + 12 | 0;
          if ((f2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (f2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[e2 >> 2] = l2;
          if (l2) {
            ek(g2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (g2 << 2) >> 2] | 0) + -1 | 0;
                n2 = g2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) < (f2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function cd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        B2 = F2;
        D2 = (f2 | 0) / 2 | 0;
        E2 = (g2 | 0) / 2 | 0;
        o2 = c[k2 >> 2] | 0;
        A2 = E2 + -1 | 0;
        if ((f2 | 0) > 1) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(A2, D2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (D2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        y2 = j2 * 3 | 0;
        z2 = D2 + -1 | 0;
        if ((g2 | 0) > 1) {
          l2 = 0;
          j2 = o2;
          m2 = o2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (E2 | 0))
              break;
            else {
              j2 = j2 + (D2 << 1) | 0;
              m2 = m2 + (D2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        j2 = D2 + 1 | 0;
        v2 = 0 - D2 | 0;
        t2 = 1 - D2 | 0;
        u2 = ~D2;
        s2 = (f2 << 2) + 16 | 0;
        a:
          do {
            if ((A2 | 0) > 1) {
              w2 = (z2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + j2 | 0;
              x2 = 1;
              n2 = e2 + ((f2 << 3) + 8) | 0;
              g2 = o2 + (j2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (w2) {
                    r2 = 1;
                    q2 = n2;
                    p2 = j2;
                    while (1) {
                      do {
                        if (((d[q2 + 2 >> 0] | 0) + (d[q2 + 1 >> 0] | 0) + (d[q2 + 3 >> 0] | 0) | 0) > (y2 | 0)) {
                          b[g2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = p2;
                        } else {
                          a[l2 >> 0] = -1;
                          j2 = b[g2 + (v2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[g2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          e2 = b[g2 + (t2 << 1) >> 1] | 0;
                          f2 = e2 << 16 >> 16;
                          j2 = b[g2 + (u2 << 1) >> 1] | 0;
                          o2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (e2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[g2 >> 1] = j2;
                              j2 = o2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (r2 | 0))
                                c[n2 >> 2] = r2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                              j2 = p2;
                              break;
                            }
                            j2 = b[g2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[g2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                              o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                              o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (r2 | 0)) {
                                j2 = p2;
                                break;
                              }
                              c[j2 >> 2] = r2;
                              j2 = p2;
                              break;
                            } else {
                              j2 = p2 + 1 | 0;
                              if ((p2 | 0) > 32767)
                                break b;
                              b[g2 >> 1] = j2;
                              c[k2 + 1179664 + (p2 << 2) >> 2] = j2 << 16 >> 16;
                              p2 = p2 * 7 | 0;
                              c[k2 + 1310736 + (p2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (p2 + 1 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 2 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 3 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 4 << 2) >> 2] = r2;
                              c[k2 + 1310736 + (p2 + 5 << 2) >> 2] = x2;
                              c[k2 + 1310736 + (p2 + 6 << 2) >> 2] = x2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                            f2 = c[k2 + 1179664 + (o2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (f2 | 0)) {
                              b[g2 >> 1] = f2;
                              if ((p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (j2 | 0))
                                    c[e2 >> 2] = f2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0)) {
                                    j2 = f2;
                                    break;
                                  } else
                                    e2 = e2 + 4 | 0;
                                }
                              } else
                                j2 = f2;
                            } else {
                              b[g2 >> 1] = j2;
                              if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                                n2 = 0;
                                e2 = m2;
                                while (1) {
                                  if ((c[e2 >> 2] | 0) == (f2 | 0))
                                    c[e2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (p2 | 0))
                                    break;
                                  else
                                    e2 = e2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                            o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                            o2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[o2 >> 2] = (c[o2 >> 2] | 0) + x2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          n2 = b[g2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[g2 >> 1] = e2;
                            j2 = f2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + r2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + x2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (r2 | 0))
                              c[n2 >> 2] = r2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = x2;
                            j2 = p2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (f2 + -1 << 2) >> 2] | 0;
                          f2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (f2 | 0)) {
                            b[g2 >> 1] = f2;
                            if ((p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (j2 | 0))
                                  c[e2 >> 2] = f2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0)) {
                                  j2 = f2;
                                  break;
                                } else
                                  e2 = e2 + 4 | 0;
                              }
                            } else
                              j2 = f2;
                          } else {
                            b[g2 >> 1] = j2;
                            if ((j2 | 0) < (f2 | 0) & (p2 | 0) > 0) {
                              n2 = 0;
                              e2 = m2;
                              while (1) {
                                if ((c[e2 >> 2] | 0) == (f2 | 0))
                                  c[e2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (p2 | 0))
                                  break;
                                else
                                  e2 = e2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          o2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + 1;
                          o2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[o2 >> 2] = (c[o2 >> 2] | 0) + r2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + x2;
                          j2 = p2;
                        }
                      } while (0);
                      r2 = r2 + 1 | 0;
                      n2 = q2 + 8 | 0;
                      g2 = g2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((r2 | 0) >= (z2 | 0))
                        break;
                      else {
                        q2 = n2;
                        p2 = j2;
                      }
                    }
                  }
                  x2 = x2 + 1 | 0;
                  if ((x2 | 0) >= (A2 | 0)) {
                    f2 = j2;
                    C2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    n2 = n2 + s2 | 0;
                    g2 = g2 + 4 | 0;
                  }
                }
              Me(3, 3904, B2);
              l2 = -1;
            } else {
              f2 = 0;
              C2 = 52;
            }
          } while (0);
        if ((C2 | 0) == 52) {
          g2 = k2 + 12 | 0;
          if ((f2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (f2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          e2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[e2 >> 2] = l2;
          if (l2) {
            ek(g2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                C2 = l2 << 2;
                c[k2 + 131084 + (C2 << 2) >> 2] = D2;
                c[k2 + 131084 + ((C2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((C2 | 2) << 2) >> 2] = E2;
                c[k2 + 131084 + ((C2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (g2 << 2) >> 2] | 0) + -1 | 0;
                n2 = g2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) < (f2 | 0));
            }
            if ((c[e2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                D2 = k2 + 12 + (l2 << 2) | 0;
                E2 = l2 << 1;
                C2 = k2 + 655376 + (E2 << 3) | 0;
                h[C2 >> 3] = +h[C2 >> 3] / +(c[D2 >> 2] | 0);
                E2 = k2 + 655376 + ((E2 | 1) << 3) | 0;
                h[E2 >> 3] = +h[E2 >> 3] / +(c[D2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[e2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = F2;
        return l2 | 0;
      }
      function sh(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0;
        if ((b2 | 0) != 1) {
          if (b2 + -1 & b2)
            b2 = _j(b2) | 0;
        } else
          b2 = 2;
        f2 = c[a2 + 4 >> 2] | 0;
        if (b2 >>> 0 <= f2 >>> 0) {
          if (b2 >>> 0 < f2 >>> 0) {
            if (f2 >>> 0 > 2)
              e2 = (f2 + -1 & f2 | 0) == 0;
            else
              e2 = 0;
            d2 = ~~+_(+(+((c[a2 + 12 >> 2] | 0) >>> 0) / +g[a2 + 16 >> 2])) >>> 0;
            if (e2)
              d2 = 1 << 32 - (ba(d2 + -1 | 0) | 0);
            else
              d2 = _j(d2) | 0;
            b2 = b2 >>> 0 < d2 >>> 0 ? d2 : b2;
            if (b2 >>> 0 < f2 >>> 0)
              th(a2, b2);
          }
        } else
          th(a2, b2);
        return;
      }
      function th(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
        e2 = a2 + 4 | 0;
        a:
          do {
            if (b2) {
              m2 = Kh(b2 << 2) | 0;
              d2 = c[a2 >> 2] | 0;
              c[a2 >> 2] = m2;
              if (d2)
                Lh(d2);
              c[e2 >> 2] = b2;
              if (b2) {
                d2 = 0;
                do {
                  c[(c[a2 >> 2] | 0) + (d2 << 2) >> 2] = 0;
                  d2 = d2 + 1 | 0;
                } while ((d2 | 0) != (b2 | 0));
              }
              e2 = a2 + 8 | 0;
              f2 = c[e2 >> 2] | 0;
              if (f2) {
                d2 = c[f2 + 4 >> 2] | 0;
                l2 = b2 + -1 | 0;
                m2 = (l2 & b2 | 0) == 0;
                if (m2)
                  h2 = d2 & l2;
                else
                  h2 = (d2 >>> 0) % (b2 >>> 0) | 0;
                c[(c[a2 >> 2] | 0) + (h2 << 2) >> 2] = e2;
                d2 = c[f2 >> 2] | 0;
                if (d2) {
                  g2 = f2;
                  e2 = f2;
                  while (1) {
                    k2 = e2;
                    b:
                      while (1) {
                        while (1) {
                          e2 = c[d2 + 4 >> 2] | 0;
                          if (m2)
                            j2 = e2 & l2;
                          else
                            j2 = (e2 >>> 0) % (b2 >>> 0) | 0;
                          if ((j2 | 0) == (h2 | 0)) {
                            e2 = d2;
                            break;
                          }
                          e2 = (c[a2 >> 2] | 0) + (j2 << 2) | 0;
                          if (!(c[e2 >> 2] | 0)) {
                            h2 = j2;
                            f2 = d2;
                            break b;
                          }
                          i3 = d2 + 8 | 0;
                          e2 = d2;
                          while (1) {
                            f2 = c[e2 >> 2] | 0;
                            if (!f2)
                              break;
                            if ((c[i3 >> 2] | 0) == (c[f2 + 8 >> 2] | 0))
                              e2 = f2;
                            else
                              break;
                          }
                          c[g2 >> 2] = f2;
                          c[e2 >> 2] = c[c[(c[a2 >> 2] | 0) + (j2 << 2) >> 2] >> 2];
                          c[c[(c[a2 >> 2] | 0) + (j2 << 2) >> 2] >> 2] = d2;
                          d2 = c[k2 >> 2] | 0;
                          if (!d2)
                            break a;
                        }
                        d2 = c[e2 >> 2] | 0;
                        if (!d2)
                          break a;
                        else {
                          g2 = e2;
                          k2 = e2;
                        }
                      }
                    c[e2 >> 2] = g2;
                    d2 = c[f2 >> 2] | 0;
                    if (!d2)
                      break;
                    else {
                      g2 = f2;
                      e2 = f2;
                    }
                  }
                }
              }
            } else {
              d2 = c[a2 >> 2] | 0;
              c[a2 >> 2] = 0;
              if (d2)
                Lh(d2);
              c[e2 >> 2] = 0;
            }
          } while (0);
        return;
      }
      function uh(b2, d2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0;
        g2 = i2;
        i2 = i2 + 32 | 0;
        h2 = g2 + 16 | 0;
        f2 = g2 + 4 | 0;
        j2 = g2;
        d2 = c[d2 >> 2] | 0;
        e2 = c[d2 >> 2] | 0;
        c[j2 >> 2] = d2;
        c[h2 >> 2] = c[j2 >> 2];
        vh(f2, b2, h2);
        d2 = c[f2 >> 2] | 0;
        c[f2 >> 2] = 0;
        if (d2) {
          if (a[f2 + 8 >> 0] | 0)
            Fg(d2 + 264 | 0);
          Lh(d2);
        }
        i2 = g2;
        return e2 | 0;
      }
      function vh(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
        o2 = c[e2 >> 2] | 0;
        l2 = c[d2 + 4 >> 2] | 0;
        e2 = c[o2 + 4 >> 2] | 0;
        m2 = l2 + -1 | 0;
        n2 = (m2 & l2 | 0) == 0;
        if (n2)
          k2 = m2 & e2;
        else
          k2 = (e2 >>> 0) % (l2 >>> 0) | 0;
        g2 = (c[d2 >> 2] | 0) + (k2 << 2) | 0;
        f2 = c[g2 >> 2] | 0;
        while (1) {
          e2 = c[f2 >> 2] | 0;
          if ((e2 | 0) == (o2 | 0)) {
            j2 = f2;
            break;
          } else
            f2 = e2;
        }
        i3 = d2 + 8 | 0;
        if ((j2 | 0) != (i3 | 0)) {
          e2 = c[j2 + 4 >> 2] | 0;
          if (n2)
            e2 = e2 & m2;
          else
            e2 = (e2 >>> 0) % (l2 >>> 0) | 0;
          if ((e2 | 0) == (k2 | 0))
            g2 = o2;
          else
            h2 = 12;
        } else
          h2 = 12;
        do {
          if ((h2 | 0) == 12) {
            e2 = c[o2 >> 2] | 0;
            if (e2) {
              e2 = c[e2 + 4 >> 2] | 0;
              if (n2)
                e2 = e2 & m2;
              else
                e2 = (e2 >>> 0) % (l2 >>> 0) | 0;
              if ((e2 | 0) == (k2 | 0)) {
                g2 = o2;
                break;
              }
            }
            c[g2 >> 2] = 0;
            g2 = o2;
          }
        } while (0);
        f2 = c[g2 >> 2] | 0;
        e2 = f2;
        if (f2) {
          f2 = c[f2 + 4 >> 2] | 0;
          if (n2)
            f2 = f2 & m2;
          else
            f2 = (f2 >>> 0) % (l2 >>> 0) | 0;
          if ((f2 | 0) != (k2 | 0)) {
            c[(c[d2 >> 2] | 0) + (f2 << 2) >> 2] = j2;
            e2 = c[o2 >> 2] | 0;
          }
        }
        c[j2 >> 2] = e2;
        c[g2 >> 2] = 0;
        d2 = d2 + 12 | 0;
        c[d2 >> 2] = (c[d2 >> 2] | 0) + -1;
        c[b2 >> 2] = o2;
        c[b2 + 4 >> 2] = i3;
        a[b2 + 8 >> 0] = 1;
        return;
      }
      function wh(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0;
        e2 = Kh(408) | 0;
        c[e2 + 8 >> 2] = c[d2 >> 2];
        ek(e2 + 16 | 0, 0, 392) | 0;
        h[e2 + 248 >> 3] = 1e-4;
        h[e2 + 256 >> 3] = 1e3;
        d2 = e2 + 264 | 0;
        c[d2 >> 2] = 0;
        c[d2 + 4 >> 2] = 0;
        c[d2 + 8 >> 2] = 0;
        c[d2 + 12 >> 2] = 0;
        c[a2 >> 2] = e2;
        a2 = a2 + 4 | 0;
        c[a2 >> 2] = b2 + 8;
        c[a2 + 4 >> 2] = 257;
        return;
      }
      function xh(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
        m2 = c[e2 + 8 >> 2] | 0;
        s2 = e2 + 4 | 0;
        c[s2 >> 2] = m2;
        r2 = d2 + 4 | 0;
        l2 = c[r2 >> 2] | 0;
        q2 = (l2 | 0) == 0;
        a:
          do {
            if (!q2) {
              n2 = l2 + -1 | 0;
              o2 = (n2 & l2 | 0) == 0;
              if (o2)
                h2 = n2 & m2;
              else
                h2 = (m2 >>> 0) % (l2 >>> 0) | 0;
              f2 = c[(c[d2 >> 2] | 0) + (h2 << 2) >> 2] | 0;
              if (!f2)
                p2 = 12;
              else
                while (1) {
                  i3 = c[f2 >> 2] | 0;
                  if (!i3) {
                    p2 = 12;
                    break a;
                  }
                  f2 = c[i3 + 4 >> 2] | 0;
                  if (o2)
                    f2 = f2 & n2;
                  else
                    f2 = (f2 >>> 0) % (l2 >>> 0) | 0;
                  if ((f2 | 0) != (h2 | 0)) {
                    p2 = 12;
                    break a;
                  }
                  if ((c[i3 + 8 >> 2] | 0) == (m2 | 0)) {
                    f2 = 0;
                    e2 = i3;
                    break;
                  } else
                    f2 = i3;
                }
            } else {
              h2 = 0;
              p2 = 12;
            }
          } while (0);
        if ((p2 | 0) == 12) {
          m2 = d2 + 12 | 0;
          j2 = +(((c[m2 >> 2] | 0) + 1 | 0) >>> 0);
          k2 = +g[d2 + 16 >> 2];
          do {
            if (q2 | j2 > +(l2 >>> 0) * k2) {
              if (l2 >>> 0 > 2)
                f2 = (l2 + -1 & l2 | 0) == 0;
              else
                f2 = 0;
              i3 = (f2 & 1 | l2 << 1) ^ 1;
              f2 = ~~+_(+(j2 / k2)) >>> 0;
              yh(d2, i3 >>> 0 < f2 >>> 0 ? f2 : i3);
              i3 = c[r2 >> 2] | 0;
              f2 = c[s2 >> 2] | 0;
              h2 = i3 + -1 | 0;
              if (!(h2 & i3)) {
                l2 = i3;
                h2 = h2 & f2;
                break;
              } else {
                l2 = i3;
                h2 = (f2 >>> 0) % (i3 >>> 0) | 0;
                break;
              }
            }
          } while (0);
          f2 = c[(c[d2 >> 2] | 0) + (h2 << 2) >> 2] | 0;
          if (!f2) {
            f2 = d2 + 8 | 0;
            c[e2 >> 2] = c[f2 >> 2];
            c[f2 >> 2] = e2;
            c[(c[d2 >> 2] | 0) + (h2 << 2) >> 2] = f2;
            f2 = c[e2 >> 2] | 0;
            if (f2) {
              f2 = c[f2 + 4 >> 2] | 0;
              h2 = l2 + -1 | 0;
              if (!(h2 & l2))
                f2 = f2 & h2;
              else
                f2 = (f2 >>> 0) % (l2 >>> 0) | 0;
              c[(c[d2 >> 2] | 0) + (f2 << 2) >> 2] = e2;
            }
          } else {
            c[e2 >> 2] = c[f2 >> 2];
            c[f2 >> 2] = e2;
          }
          c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
          f2 = 1;
        }
        c[b2 >> 2] = e2;
        a[b2 + 4 >> 0] = f2;
        return;
      }
      function yh(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0;
        if ((b2 | 0) != 1) {
          if (b2 + -1 & b2)
            b2 = _j(b2) | 0;
        } else
          b2 = 2;
        f2 = c[a2 + 4 >> 2] | 0;
        if (b2 >>> 0 <= f2 >>> 0) {
          if (b2 >>> 0 < f2 >>> 0) {
            if (f2 >>> 0 > 2)
              e2 = (f2 + -1 & f2 | 0) == 0;
            else
              e2 = 0;
            d2 = ~~+_(+(+((c[a2 + 12 >> 2] | 0) >>> 0) / +g[a2 + 16 >> 2])) >>> 0;
            if (e2)
              d2 = 1 << 32 - (ba(d2 + -1 | 0) | 0);
            else
              d2 = _j(d2) | 0;
            b2 = b2 >>> 0 < d2 >>> 0 ? d2 : b2;
            if (b2 >>> 0 < f2 >>> 0)
              zh(a2, b2);
          }
        } else
          zh(a2, b2);
        return;
      }
      function zh(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
        e2 = a2 + 4 | 0;
        a:
          do {
            if (b2) {
              m2 = Kh(b2 << 2) | 0;
              d2 = c[a2 >> 2] | 0;
              c[a2 >> 2] = m2;
              if (d2)
                Lh(d2);
              c[e2 >> 2] = b2;
              if (b2) {
                d2 = 0;
                do {
                  c[(c[a2 >> 2] | 0) + (d2 << 2) >> 2] = 0;
                  d2 = d2 + 1 | 0;
                } while ((d2 | 0) != (b2 | 0));
              }
              e2 = a2 + 8 | 0;
              f2 = c[e2 >> 2] | 0;
              if (f2) {
                d2 = c[f2 + 4 >> 2] | 0;
                l2 = b2 + -1 | 0;
                m2 = (l2 & b2 | 0) == 0;
                if (m2)
                  h2 = d2 & l2;
                else
                  h2 = (d2 >>> 0) % (b2 >>> 0) | 0;
                c[(c[a2 >> 2] | 0) + (h2 << 2) >> 2] = e2;
                d2 = c[f2 >> 2] | 0;
                if (d2) {
                  g2 = f2;
                  e2 = f2;
                  while (1) {
                    k2 = e2;
                    b:
                      while (1) {
                        while (1) {
                          e2 = c[d2 + 4 >> 2] | 0;
                          if (m2)
                            j2 = e2 & l2;
                          else
                            j2 = (e2 >>> 0) % (b2 >>> 0) | 0;
                          if ((j2 | 0) == (h2 | 0)) {
                            e2 = d2;
                            break;
                          }
                          e2 = (c[a2 >> 2] | 0) + (j2 << 2) | 0;
                          if (!(c[e2 >> 2] | 0)) {
                            h2 = j2;
                            f2 = d2;
                            break b;
                          }
                          i3 = d2 + 8 | 0;
                          e2 = d2;
                          while (1) {
                            f2 = c[e2 >> 2] | 0;
                            if (!f2)
                              break;
                            if ((c[i3 >> 2] | 0) == (c[f2 + 8 >> 2] | 0))
                              e2 = f2;
                            else
                              break;
                          }
                          c[g2 >> 2] = f2;
                          c[e2 >> 2] = c[c[(c[a2 >> 2] | 0) + (j2 << 2) >> 2] >> 2];
                          c[c[(c[a2 >> 2] | 0) + (j2 << 2) >> 2] >> 2] = d2;
                          d2 = c[k2 >> 2] | 0;
                          if (!d2)
                            break a;
                        }
                        d2 = c[e2 >> 2] | 0;
                        if (!d2)
                          break a;
                        else {
                          g2 = e2;
                          k2 = e2;
                        }
                      }
                    c[e2 >> 2] = g2;
                    d2 = c[f2 >> 2] | 0;
                    if (!d2)
                      break;
                    else {
                      g2 = f2;
                      e2 = f2;
                    }
                  }
                }
              }
            } else {
              d2 = c[a2 >> 2] | 0;
              c[a2 >> 2] = 0;
              if (d2)
                Lh(d2);
              c[e2 >> 2] = 0;
            }
          } while (0);
        return;
      }
      function Ah(a2) {
        a2 = a2 | 0;
        return Aj(c[a2 + 4 >> 2] | 0) | 0;
      }
      function Bh(a2) {
        a2 = a2 | 0;
        Ka(624, 10917);
        Ya(632, 10922, 1, 1, 0);
        Ga(640, 10927, 1, -128, 127);
        Ga(656, 10932, 1, -128, 127);
        Ga(648, 10944, 1, 0, 255);
        Ga(664, 10958, 2, -32768, 32767);
        Ga(672, 10964, 2, 0, 65535);
        Ga(680, 10979, 4, -2147483648, 2147483647);
        Ga(688, 10983, 4, 0, -1);
        Ga(696, 10996, 4, -2147483648, 2147483647);
        Ga(704, 11001, 4, 0, -1);
        kb(712, 11015, 4);
        kb(720, 11021, 8);
        sb(360, 11028);
        sb(392, 11040);
        bb(416, 4, 11073);
        db(440, 11086);
        Aa(448, 0, 11102);
        Dh(11132);
        Eh(11169);
        Fh(11208);
        Gh(11239);
        Hh(11279);
        Ih(11308);
        Aa(456, 4, 11346);
        Aa(464, 5, 11376);
        Dh(11415);
        Eh(11447);
        Fh(11480);
        Gh(11513);
        Hh(11547);
        Ih(11580);
        Aa(472, 6, 11614);
        Aa(480, 7, 11645);
        Aa(488, 7, 11677);
        return;
      }
      function Ch() {
        Bh(0);
        return;
      }
      function Dh(a2) {
        a2 = a2 | 0;
        Aa(536, 0, a2 | 0);
        return;
      }
      function Eh(a2) {
        a2 = a2 | 0;
        Aa(528, 1, a2 | 0);
        return;
      }
      function Fh(a2) {
        a2 = a2 | 0;
        Aa(520, 2, a2 | 0);
        return;
      }
      function Gh(a2) {
        a2 = a2 | 0;
        Aa(512, 3, a2 | 0);
        return;
      }
      function Hh(a2) {
        a2 = a2 | 0;
        Aa(504, 4, a2 | 0);
        return;
      }
      function Ih(a2) {
        a2 = a2 | 0;
        Aa(496, 5, a2 | 0);
        return;
      }
      function Jh(a2) {
        a2 = a2 | 0;
        Ia(12478, 12501, 303, 12589);
      }
      function Kh(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        b2 = (a2 | 0) == 0 ? 1 : a2;
        a2 = Uj(b2) | 0;
        a:
          do {
            if (!a2) {
              while (1) {
                a2 = Ph() | 0;
                if (!a2)
                  break;
                _b[a2 & 0]();
                a2 = Uj(b2) | 0;
                if (a2)
                  break a;
              }
              b2 = Wa(4) | 0;
              c[b2 >> 2] = 2224;
              wb(b2 | 0, 544, 1);
            }
          } while (0);
        return a2 | 0;
      }
      function Lh(a2) {
        a2 = a2 | 0;
        Vj(a2);
        return;
      }
      function Mh(a2) {
        a2 = a2 | 0;
        return;
      }
      function Nh(a2) {
        a2 = a2 | 0;
        Lh(a2);
        return;
      }
      function Oh(a2) {
        a2 = a2 | 0;
        return 12610;
      }
      function Ph() {
        var a2 = 0;
        a2 = c[559] | 0;
        c[559] = a2 + 0;
        return a2 | 0;
      }
      function Qh(a2) {
        a2 = a2 | 0;
        return;
      }
      function Rh(a2) {
        a2 = a2 | 0;
        return;
      }
      function Sh(a2) {
        a2 = a2 | 0;
        return;
      }
      function Th(a2) {
        a2 = a2 | 0;
        return;
      }
      function Uh(a2) {
        a2 = a2 | 0;
        return;
      }
      function Vh(a2) {
        a2 = a2 | 0;
        Lh(a2);
        return;
      }
      function Wh(a2) {
        a2 = a2 | 0;
        Lh(a2);
        return;
      }
      function Xh(a2) {
        a2 = a2 | 0;
        Lh(a2);
        return;
      }
      function Yh(a2) {
        a2 = a2 | 0;
        Lh(a2);
        return;
      }
      function Zh(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        return (a2 | 0) == (b2 | 0) | 0;
      }
      function _h(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
        h2 = i2;
        i2 = i2 + 64 | 0;
        g2 = h2;
        if ((a2 | 0) != (b2 | 0))
          if ((b2 | 0) != 0 ? (f2 = ei(b2, 576, 592, 0) | 0, (f2 | 0) != 0) : 0) {
            b2 = g2;
            e2 = b2 + 56 | 0;
            do {
              c[b2 >> 2] = 0;
              b2 = b2 + 4 | 0;
            } while ((b2 | 0) < (e2 | 0));
            c[g2 >> 2] = f2;
            c[g2 + 8 >> 2] = a2;
            c[g2 + 12 >> 2] = -1;
            c[g2 + 48 >> 2] = 1;
            dc[c[(c[f2 >> 2] | 0) + 28 >> 2] & 3](f2, g2, c[d2 >> 2] | 0, 1);
            if ((c[g2 + 24 >> 2] | 0) == 1) {
              c[d2 >> 2] = c[g2 + 16 >> 2];
              b2 = 1;
            } else
              b2 = 0;
          } else
            b2 = 0;
        else
          b2 = 1;
        i2 = h2;
        return b2 | 0;
      }
      function $h(b2, d2, e2, f2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0;
        b2 = d2 + 16 | 0;
        g2 = c[b2 >> 2] | 0;
        do {
          if (g2) {
            if ((g2 | 0) != (e2 | 0)) {
              f2 = d2 + 36 | 0;
              c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
              c[d2 + 24 >> 2] = 2;
              a[d2 + 54 >> 0] = 1;
              break;
            }
            b2 = d2 + 24 | 0;
            if ((c[b2 >> 2] | 0) == 2)
              c[b2 >> 2] = f2;
          } else {
            c[b2 >> 2] = e2;
            c[d2 + 24 >> 2] = f2;
            c[d2 + 36 >> 2] = 1;
          }
        } while (0);
        return;
      }
      function ai(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        if ((a2 | 0) == (c[b2 + 8 >> 2] | 0))
          $h(0, b2, d2, e2);
        return;
      }
      function bi(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        if ((a2 | 0) == (c[b2 + 8 >> 2] | 0))
          $h(0, b2, d2, e2);
        else {
          a2 = c[a2 + 8 >> 2] | 0;
          dc[c[(c[a2 >> 2] | 0) + 28 >> 2] & 3](a2, b2, d2, e2);
        }
        return;
      }
      function ci(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0;
        g2 = c[a2 + 4 >> 2] | 0;
        f2 = g2 >> 8;
        if (g2 & 1)
          f2 = c[(c[d2 >> 2] | 0) + f2 >> 2] | 0;
        a2 = c[a2 >> 2] | 0;
        dc[c[(c[a2 >> 2] | 0) + 28 >> 2] & 3](a2, b2, d2 + f2 | 0, (g2 & 2 | 0) != 0 ? e2 : 2);
        return;
      }
      function di(b2, d2, e2, f2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, h2 = 0;
        a:
          do {
            if ((b2 | 0) != (c[d2 + 8 >> 2] | 0)) {
              h2 = c[b2 + 12 >> 2] | 0;
              g2 = b2 + 16 + (h2 << 3) | 0;
              ci(b2 + 16 | 0, d2, e2, f2);
              if ((h2 | 0) > 1) {
                h2 = d2 + 54 | 0;
                b2 = b2 + 24 | 0;
                do {
                  ci(b2, d2, e2, f2);
                  if (a[h2 >> 0] | 0)
                    break a;
                  b2 = b2 + 8 | 0;
                } while (b2 >>> 0 < g2 >>> 0);
              }
            } else
              $h(0, d2, e2, f2);
          } while (0);
        return;
      }
      function ei(d2, e2, f2, g2) {
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
        r2 = i2;
        i2 = i2 + 64 | 0;
        q2 = r2;
        p2 = c[d2 >> 2] | 0;
        o2 = d2 + (c[p2 + -8 >> 2] | 0) | 0;
        p2 = c[p2 + -4 >> 2] | 0;
        c[q2 >> 2] = f2;
        c[q2 + 4 >> 2] = d2;
        c[q2 + 8 >> 2] = e2;
        c[q2 + 12 >> 2] = g2;
        g2 = q2 + 16 | 0;
        d2 = q2 + 20 | 0;
        e2 = q2 + 24 | 0;
        h2 = q2 + 28 | 0;
        j2 = q2 + 32 | 0;
        k2 = q2 + 40 | 0;
        l2 = (p2 | 0) == (f2 | 0);
        m2 = g2;
        n2 = m2 + 36 | 0;
        do {
          c[m2 >> 2] = 0;
          m2 = m2 + 4 | 0;
        } while ((m2 | 0) < (n2 | 0));
        b[g2 + 36 >> 1] = 0;
        a[g2 + 38 >> 0] = 0;
        a:
          do {
            if (l2) {
              c[q2 + 48 >> 2] = 1;
              bc[c[(c[f2 >> 2] | 0) + 20 >> 2] & 3](f2, q2, o2, o2, 1, 0);
              g2 = (c[e2 >> 2] | 0) == 1 ? o2 : 0;
            } else {
              Rb[c[(c[p2 >> 2] | 0) + 24 >> 2] & 3](p2, q2, o2, 1, 0);
              switch (c[q2 + 36 >> 2] | 0) {
                case 0: {
                  g2 = (c[k2 >> 2] | 0) == 1 & (c[h2 >> 2] | 0) == 1 & (c[j2 >> 2] | 0) == 1 ? c[d2 >> 2] | 0 : 0;
                  break a;
                }
                case 1:
                  break;
                default: {
                  g2 = 0;
                  break a;
                }
              }
              if ((c[e2 >> 2] | 0) != 1 ? !((c[k2 >> 2] | 0) == 0 & (c[h2 >> 2] | 0) == 1 & (c[j2 >> 2] | 0) == 1) : 0) {
                g2 = 0;
                break;
              }
              g2 = c[g2 >> 2] | 0;
            }
          } while (0);
        i2 = r2;
        return g2 | 0;
      }
      function fi(b2, d2, e2, f2, g2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        a[d2 + 53 >> 0] = 1;
        do {
          if ((c[d2 + 4 >> 2] | 0) == (f2 | 0)) {
            a[d2 + 52 >> 0] = 1;
            f2 = d2 + 16 | 0;
            b2 = c[f2 >> 2] | 0;
            if (!b2) {
              c[f2 >> 2] = e2;
              c[d2 + 24 >> 2] = g2;
              c[d2 + 36 >> 2] = 1;
              if (!((g2 | 0) == 1 ? (c[d2 + 48 >> 2] | 0) == 1 : 0))
                break;
              a[d2 + 54 >> 0] = 1;
              break;
            }
            if ((b2 | 0) != (e2 | 0)) {
              g2 = d2 + 36 | 0;
              c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
              a[d2 + 54 >> 0] = 1;
              break;
            }
            b2 = d2 + 24 | 0;
            f2 = c[b2 >> 2] | 0;
            if ((f2 | 0) == 2) {
              c[b2 >> 2] = g2;
              f2 = g2;
            }
            if ((f2 | 0) == 1 ? (c[d2 + 48 >> 2] | 0) == 1 : 0)
              a[d2 + 54 >> 0] = 1;
          }
        } while (0);
        return;
      }
      function gi(b2, d2, e2, f2, g2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        var h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
        a:
          do {
            if ((b2 | 0) == (c[d2 + 8 >> 2] | 0)) {
              if ((c[d2 + 4 >> 2] | 0) == (e2 | 0) ? (h2 = d2 + 28 | 0, (c[h2 >> 2] | 0) != 1) : 0)
                c[h2 >> 2] = f2;
            } else {
              if ((b2 | 0) != (c[d2 >> 2] | 0)) {
                q2 = c[b2 + 12 >> 2] | 0;
                j2 = b2 + 16 + (q2 << 3) | 0;
                ii(b2 + 16 | 0, d2, e2, f2, g2);
                h2 = b2 + 24 | 0;
                if ((q2 | 0) <= 1)
                  break;
                i3 = c[b2 + 8 >> 2] | 0;
                if ((i3 & 2 | 0) == 0 ? (k2 = d2 + 36 | 0, (c[k2 >> 2] | 0) != 1) : 0) {
                  if (!(i3 & 1)) {
                    i3 = d2 + 54 | 0;
                    while (1) {
                      if (a[i3 >> 0] | 0)
                        break a;
                      if ((c[k2 >> 2] | 0) == 1)
                        break a;
                      ii(h2, d2, e2, f2, g2);
                      h2 = h2 + 8 | 0;
                      if (h2 >>> 0 >= j2 >>> 0)
                        break a;
                    }
                  }
                  i3 = d2 + 24 | 0;
                  b2 = d2 + 54 | 0;
                  while (1) {
                    if (a[b2 >> 0] | 0)
                      break a;
                    if ((c[k2 >> 2] | 0) == 1 ? (c[i3 >> 2] | 0) == 1 : 0)
                      break a;
                    ii(h2, d2, e2, f2, g2);
                    h2 = h2 + 8 | 0;
                    if (h2 >>> 0 >= j2 >>> 0)
                      break a;
                  }
                }
                i3 = d2 + 54 | 0;
                while (1) {
                  if (a[i3 >> 0] | 0)
                    break a;
                  ii(h2, d2, e2, f2, g2);
                  h2 = h2 + 8 | 0;
                  if (h2 >>> 0 >= j2 >>> 0)
                    break a;
                }
              }
              if ((c[d2 + 16 >> 2] | 0) != (e2 | 0) ? (p2 = d2 + 20 | 0, (c[p2 >> 2] | 0) != (e2 | 0)) : 0) {
                c[d2 + 32 >> 2] = f2;
                m2 = d2 + 44 | 0;
                if ((c[m2 >> 2] | 0) == 4)
                  break;
                i3 = c[b2 + 12 >> 2] | 0;
                j2 = b2 + 16 + (i3 << 3) | 0;
                k2 = d2 + 52 | 0;
                f2 = d2 + 53 | 0;
                n2 = d2 + 54 | 0;
                l2 = b2 + 8 | 0;
                o2 = d2 + 24 | 0;
                b:
                  do {
                    if ((i3 | 0) > 0) {
                      i3 = 0;
                      h2 = 0;
                      b2 = b2 + 16 | 0;
                      while (1) {
                        a[k2 >> 0] = 0;
                        a[f2 >> 0] = 0;
                        hi(b2, d2, e2, e2, 1, g2);
                        if (a[n2 >> 0] | 0) {
                          q2 = 20;
                          break b;
                        }
                        do {
                          if (a[f2 >> 0] | 0) {
                            if (!(a[k2 >> 0] | 0))
                              if (!(c[l2 >> 2] & 1)) {
                                h2 = 1;
                                q2 = 20;
                                break b;
                              } else {
                                h2 = 1;
                                break;
                              }
                            if ((c[o2 >> 2] | 0) == 1)
                              break b;
                            if (!(c[l2 >> 2] & 2))
                              break b;
                            else {
                              i3 = 1;
                              h2 = 1;
                            }
                          }
                        } while (0);
                        b2 = b2 + 8 | 0;
                        if (b2 >>> 0 >= j2 >>> 0) {
                          q2 = 20;
                          break;
                        }
                      }
                    } else {
                      i3 = 0;
                      h2 = 0;
                      q2 = 20;
                    }
                  } while (0);
                do {
                  if ((q2 | 0) == 20) {
                    if ((!i3 ? (c[p2 >> 2] = e2, e2 = d2 + 40 | 0, c[e2 >> 2] = (c[e2 >> 2] | 0) + 1, (c[d2 + 36 >> 2] | 0) == 1) : 0) ? (c[o2 >> 2] | 0) == 2 : 0) {
                      a[n2 >> 0] = 1;
                      if (h2)
                        break;
                    } else
                      q2 = 24;
                    if ((q2 | 0) == 24 ? h2 : 0)
                      break;
                    c[m2 >> 2] = 4;
                    break a;
                  }
                } while (0);
                c[m2 >> 2] = 3;
                break;
              }
              if ((f2 | 0) == 1)
                c[d2 + 32 >> 2] = 1;
            }
          } while (0);
        return;
      }
      function hi(a2, b2, d2, e2, f2, g2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        var h2 = 0, i3 = 0;
        i3 = c[a2 + 4 >> 2] | 0;
        h2 = i3 >> 8;
        if (i3 & 1)
          h2 = c[(c[e2 >> 2] | 0) + h2 >> 2] | 0;
        a2 = c[a2 >> 2] | 0;
        bc[c[(c[a2 >> 2] | 0) + 20 >> 2] & 3](a2, b2, d2, e2 + h2 | 0, (i3 & 2 | 0) != 0 ? f2 : 2, g2);
        return;
      }
      function ii(a2, b2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, h2 = 0;
        h2 = c[a2 + 4 >> 2] | 0;
        g2 = h2 >> 8;
        if (h2 & 1)
          g2 = c[(c[d2 >> 2] | 0) + g2 >> 2] | 0;
        a2 = c[a2 >> 2] | 0;
        Rb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 3](a2, b2, d2 + g2 | 0, (h2 & 2 | 0) != 0 ? e2 : 2, f2);
        return;
      }
      function ji(b2, d2, e2, f2, g2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        var h2 = 0, i3 = 0, j2 = 0, k2 = 0;
        a:
          do {
            if ((b2 | 0) == (c[d2 + 8 >> 2] | 0)) {
              if ((c[d2 + 4 >> 2] | 0) == (e2 | 0) ? (h2 = d2 + 28 | 0, (c[h2 >> 2] | 0) != 1) : 0)
                c[h2 >> 2] = f2;
            } else {
              if ((b2 | 0) != (c[d2 >> 2] | 0)) {
                j2 = c[b2 + 8 >> 2] | 0;
                Rb[c[(c[j2 >> 2] | 0) + 24 >> 2] & 3](j2, d2, e2, f2, g2);
                break;
              }
              if ((c[d2 + 16 >> 2] | 0) != (e2 | 0) ? (i3 = d2 + 20 | 0, (c[i3 >> 2] | 0) != (e2 | 0)) : 0) {
                c[d2 + 32 >> 2] = f2;
                f2 = d2 + 44 | 0;
                if ((c[f2 >> 2] | 0) == 4)
                  break;
                h2 = d2 + 52 | 0;
                a[h2 >> 0] = 0;
                k2 = d2 + 53 | 0;
                a[k2 >> 0] = 0;
                b2 = c[b2 + 8 >> 2] | 0;
                bc[c[(c[b2 >> 2] | 0) + 20 >> 2] & 3](b2, d2, e2, e2, 1, g2);
                if (a[k2 >> 0] | 0) {
                  if (!(a[h2 >> 0] | 0)) {
                    h2 = 1;
                    j2 = 13;
                  }
                } else {
                  h2 = 0;
                  j2 = 13;
                }
                do {
                  if ((j2 | 0) == 13) {
                    c[i3 >> 2] = e2;
                    k2 = d2 + 40 | 0;
                    c[k2 >> 2] = (c[k2 >> 2] | 0) + 1;
                    if ((c[d2 + 36 >> 2] | 0) == 1 ? (c[d2 + 24 >> 2] | 0) == 2 : 0) {
                      a[d2 + 54 >> 0] = 1;
                      if (h2)
                        break;
                    } else
                      j2 = 16;
                    if ((j2 | 0) == 16 ? h2 : 0)
                      break;
                    c[f2 >> 2] = 4;
                    break a;
                  }
                } while (0);
                c[f2 >> 2] = 3;
                break;
              }
              if ((f2 | 0) == 1)
                c[d2 + 32 >> 2] = 1;
            }
          } while (0);
        return;
      }
      function ki(b2, d2, e2, f2, g2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        var h2 = 0, i3 = 0;
        do {
          if ((b2 | 0) == (c[d2 + 8 >> 2] | 0)) {
            if ((c[d2 + 4 >> 2] | 0) == (e2 | 0) ? (i3 = d2 + 28 | 0, (c[i3 >> 2] | 0) != 1) : 0)
              c[i3 >> 2] = f2;
          } else if ((b2 | 0) == (c[d2 >> 2] | 0)) {
            if ((c[d2 + 16 >> 2] | 0) != (e2 | 0) ? (h2 = d2 + 20 | 0, (c[h2 >> 2] | 0) != (e2 | 0)) : 0) {
              c[d2 + 32 >> 2] = f2;
              c[h2 >> 2] = e2;
              g2 = d2 + 40 | 0;
              c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
              if ((c[d2 + 36 >> 2] | 0) == 1 ? (c[d2 + 24 >> 2] | 0) == 2 : 0)
                a[d2 + 54 >> 0] = 1;
              c[d2 + 44 >> 2] = 4;
              break;
            }
            if ((f2 | 0) == 1)
              c[d2 + 32 >> 2] = 1;
          }
        } while (0);
        return;
      }
      function li(b2, d2, e2, f2, g2, h2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        h2 = h2 | 0;
        var i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
        if ((b2 | 0) == (c[d2 + 8 >> 2] | 0))
          fi(0, d2, e2, f2, g2);
        else {
          m2 = d2 + 52 | 0;
          n2 = a[m2 >> 0] | 0;
          o2 = d2 + 53 | 0;
          p2 = a[o2 >> 0] | 0;
          l2 = c[b2 + 12 >> 2] | 0;
          i3 = b2 + 16 + (l2 << 3) | 0;
          a[m2 >> 0] = 0;
          a[o2 >> 0] = 0;
          hi(b2 + 16 | 0, d2, e2, f2, g2, h2);
          a:
            do {
              if ((l2 | 0) > 1) {
                j2 = d2 + 24 | 0;
                k2 = b2 + 8 | 0;
                l2 = d2 + 54 | 0;
                b2 = b2 + 24 | 0;
                do {
                  if (a[l2 >> 0] | 0)
                    break a;
                  if (!(a[m2 >> 0] | 0)) {
                    if ((a[o2 >> 0] | 0) != 0 ? (c[k2 >> 2] & 1 | 0) == 0 : 0)
                      break a;
                  } else {
                    if ((c[j2 >> 2] | 0) == 1)
                      break a;
                    if (!(c[k2 >> 2] & 2))
                      break a;
                  }
                  a[m2 >> 0] = 0;
                  a[o2 >> 0] = 0;
                  hi(b2, d2, e2, f2, g2, h2);
                  b2 = b2 + 8 | 0;
                } while (b2 >>> 0 < i3 >>> 0);
              }
            } while (0);
          a[m2 >> 0] = n2;
          a[o2 >> 0] = p2;
        }
        return;
      }
      function mi(a2, b2, d2, e2, f2, g2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        if ((a2 | 0) == (c[b2 + 8 >> 2] | 0))
          fi(0, b2, d2, e2, f2);
        else {
          a2 = c[a2 + 8 >> 2] | 0;
          bc[c[(c[a2 >> 2] | 0) + 20 >> 2] & 3](a2, b2, d2, e2, f2, g2);
        }
        return;
      }
      function ni(a2, b2, d2, e2, f2, g2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        if ((a2 | 0) == (c[b2 + 8 >> 2] | 0))
          fi(0, b2, d2, e2, f2);
        return;
      }
      function oi(a2) {
        a2 = a2 | 0;
        Ia(12625, 12654, 1164, 12589);
      }
      function pi(a2) {
        a2 = a2 | 0;
        return ((a2 | 0) == 32 | (a2 + -9 | 0) >>> 0 < 5) & 1 | 0;
      }
      function qi() {
        var a2 = 0;
        if (!(c[597] | 0))
          a2 = 2644;
        else
          a2 = c[(gb() | 0) + 60 >> 2] | 0;
        return a2 | 0;
      }
      function ri(b2) {
        b2 = b2 | 0;
        var c2 = 0, e2 = 0;
        c2 = 0;
        while (1) {
          if ((d[12742 + c2 >> 0] | 0) == (b2 | 0)) {
            e2 = 2;
            break;
          }
          c2 = c2 + 1 | 0;
          if ((c2 | 0) == 87) {
            c2 = 87;
            b2 = 12830;
            e2 = 5;
            break;
          }
        }
        if ((e2 | 0) == 2)
          if (!c2)
            b2 = 12830;
          else {
            b2 = 12830;
            e2 = 5;
          }
        if ((e2 | 0) == 5)
          while (1) {
            e2 = b2;
            while (1) {
              b2 = e2 + 1 | 0;
              if (!(a[e2 >> 0] | 0))
                break;
              else
                e2 = b2;
            }
            c2 = c2 + -1 | 0;
            if (!c2)
              break;
            else
              e2 = 5;
          }
        return b2 | 0;
      }
      function si(b2, e2, f2) {
        b2 = b2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0;
        L2 = i2;
        i2 = i2 + 512 | 0;
        H2 = L2;
        switch (e2 | 0) {
          case 0: {
            K2 = 24;
            J2 = -149;
            A2 = 4;
            break;
          }
          case 1: {
            K2 = 53;
            J2 = -1074;
            A2 = 4;
            break;
          }
          case 2: {
            K2 = 53;
            J2 = -1074;
            A2 = 4;
            break;
          }
          default:
            g2 = 0;
        }
        a:
          do {
            if ((A2 | 0) == 4) {
              E2 = b2 + 4 | 0;
              C2 = b2 + 100 | 0;
              do {
                e2 = c[E2 >> 2] | 0;
                if (e2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                  c[E2 >> 2] = e2 + 1;
                  e2 = d[e2 >> 0] | 0;
                } else
                  e2 = vi(b2) | 0;
              } while ((pi(e2) | 0) != 0);
              b:
                do {
                  switch (e2 | 0) {
                    case 43:
                    case 45: {
                      h2 = 1 - (((e2 | 0) == 45 & 1) << 1) | 0;
                      e2 = c[E2 >> 2] | 0;
                      if (e2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                        c[E2 >> 2] = e2 + 1;
                        e2 = d[e2 >> 0] | 0;
                        I2 = h2;
                        break b;
                      } else {
                        e2 = vi(b2) | 0;
                        I2 = h2;
                        break b;
                      }
                    }
                    default:
                      I2 = 1;
                  }
                } while (0);
              h2 = e2;
              e2 = 0;
              do {
                if ((h2 | 32 | 0) != (a[14634 + e2 >> 0] | 0))
                  break;
                do {
                  if (e2 >>> 0 < 7) {
                    h2 = c[E2 >> 2] | 0;
                    if (h2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                      c[E2 >> 2] = h2 + 1;
                      h2 = d[h2 >> 0] | 0;
                      break;
                    } else {
                      h2 = vi(b2) | 0;
                      break;
                    }
                  }
                } while (0);
                e2 = e2 + 1 | 0;
              } while (e2 >>> 0 < 8);
              c:
                do {
                  switch (e2 | 0) {
                    case 8:
                      break;
                    case 3: {
                      A2 = 23;
                      break;
                    }
                    default: {
                      k2 = (f2 | 0) != 0;
                      if (k2 & e2 >>> 0 > 3)
                        if ((e2 | 0) == 8)
                          break c;
                        else {
                          A2 = 23;
                          break c;
                        }
                      d:
                        do {
                          if (!e2) {
                            e2 = 0;
                            do {
                              if ((h2 | 32 | 0) != (a[16477 + e2 >> 0] | 0))
                                break d;
                              do {
                                if (e2 >>> 0 < 2) {
                                  h2 = c[E2 >> 2] | 0;
                                  if (h2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                                    c[E2 >> 2] = h2 + 1;
                                    h2 = d[h2 >> 0] | 0;
                                    break;
                                  } else {
                                    h2 = vi(b2) | 0;
                                    break;
                                  }
                                }
                              } while (0);
                              e2 = e2 + 1 | 0;
                            } while (e2 >>> 0 < 3);
                          }
                        } while (0);
                      switch (e2 | 0) {
                        case 3: {
                          e2 = c[E2 >> 2] | 0;
                          if (e2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                            c[E2 >> 2] = e2 + 1;
                            e2 = d[e2 >> 0] | 0;
                          } else
                            e2 = vi(b2) | 0;
                          if ((e2 | 0) == 40)
                            e2 = 1;
                          else {
                            if (!(c[C2 >> 2] | 0)) {
                              g2 = s;
                              break a;
                            }
                            c[E2 >> 2] = (c[E2 >> 2] | 0) + -1;
                            g2 = s;
                            break a;
                          }
                          while (1) {
                            h2 = c[E2 >> 2] | 0;
                            if (h2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                              c[E2 >> 2] = h2 + 1;
                              h2 = d[h2 >> 0] | 0;
                            } else
                              h2 = vi(b2) | 0;
                            if (!((h2 + -48 | 0) >>> 0 < 10 | (h2 + -65 | 0) >>> 0 < 26) ? !((h2 | 0) == 95 | (h2 + -97 | 0) >>> 0 < 26) : 0)
                              break;
                            e2 = e2 + 1 | 0;
                          }
                          if ((h2 | 0) == 41) {
                            g2 = s;
                            break a;
                          }
                          h2 = (c[C2 >> 2] | 0) == 0;
                          if (!h2)
                            c[E2 >> 2] = (c[E2 >> 2] | 0) + -1;
                          if (!k2) {
                            c[(qi() | 0) >> 2] = 22;
                            ui(b2, 0);
                            g2 = 0;
                            break a;
                          }
                          if (!e2) {
                            g2 = s;
                            break a;
                          }
                          while (1) {
                            e2 = e2 + -1 | 0;
                            if (!h2)
                              c[E2 >> 2] = (c[E2 >> 2] | 0) + -1;
                            if (!e2) {
                              g2 = s;
                              break a;
                            }
                          }
                        }
                        case 0: {
                          do {
                            if ((h2 | 0) == 48) {
                              e2 = c[E2 >> 2] | 0;
                              if (e2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                                c[E2 >> 2] = e2 + 1;
                                e2 = d[e2 >> 0] | 0;
                              } else
                                e2 = vi(b2) | 0;
                              if ((e2 | 32 | 0) != 120) {
                                if (!(c[C2 >> 2] | 0)) {
                                  e2 = 48;
                                  break;
                                }
                                c[E2 >> 2] = (c[E2 >> 2] | 0) + -1;
                                e2 = 48;
                                break;
                              }
                              e2 = c[E2 >> 2] | 0;
                              if (e2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                                c[E2 >> 2] = e2 + 1;
                                e2 = d[e2 >> 0] | 0;
                                k2 = 0;
                              } else {
                                e2 = vi(b2) | 0;
                                k2 = 0;
                              }
                              e:
                                while (1) {
                                  switch (e2 | 0) {
                                    case 46: {
                                      A2 = 74;
                                      break e;
                                    }
                                    case 48:
                                      break;
                                    default: {
                                      y2 = 0;
                                      l2 = 0;
                                      x2 = 0;
                                      h2 = 0;
                                      n2 = k2;
                                      o2 = 0;
                                      w2 = 0;
                                      m2 = 1;
                                      k2 = 0;
                                      g2 = 0;
                                      break e;
                                    }
                                  }
                                  e2 = c[E2 >> 2] | 0;
                                  if (e2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                                    c[E2 >> 2] = e2 + 1;
                                    e2 = d[e2 >> 0] | 0;
                                    k2 = 1;
                                    continue;
                                  } else {
                                    e2 = vi(b2) | 0;
                                    k2 = 1;
                                    continue;
                                  }
                                }
                              if ((A2 | 0) == 74) {
                                e2 = c[E2 >> 2] | 0;
                                if (e2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                                  c[E2 >> 2] = e2 + 1;
                                  e2 = d[e2 >> 0] | 0;
                                } else
                                  e2 = vi(b2) | 0;
                                if ((e2 | 0) == 48) {
                                  k2 = 0;
                                  h2 = 0;
                                  do {
                                    e2 = c[E2 >> 2] | 0;
                                    if (e2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                                      c[E2 >> 2] = e2 + 1;
                                      e2 = d[e2 >> 0] | 0;
                                    } else
                                      e2 = vi(b2) | 0;
                                    k2 = gk(k2 | 0, h2 | 0, -1, -1) | 0;
                                    h2 = D;
                                  } while ((e2 | 0) == 48);
                                  y2 = 0;
                                  l2 = 0;
                                  x2 = k2;
                                  n2 = 1;
                                  o2 = 1;
                                  w2 = 0;
                                  m2 = 1;
                                  k2 = 0;
                                  g2 = 0;
                                } else {
                                  y2 = 0;
                                  l2 = 0;
                                  x2 = 0;
                                  h2 = 0;
                                  n2 = k2;
                                  o2 = 1;
                                  w2 = 0;
                                  m2 = 1;
                                  k2 = 0;
                                  g2 = 0;
                                }
                              }
                              while (1) {
                                u2 = e2 + -48 | 0;
                                p2 = e2 | 32;
                                if (u2 >>> 0 >= 10) {
                                  v2 = (e2 | 0) == 46;
                                  if (!(v2 | (p2 + -97 | 0) >>> 0 < 6)) {
                                    p2 = x2;
                                    u2 = y2;
                                    break;
                                  }
                                  if (v2)
                                    if (!o2) {
                                      v2 = l2;
                                      h2 = y2;
                                      u2 = y2;
                                      o2 = 1;
                                      p2 = w2;
                                      j2 = m2;
                                    } else {
                                      p2 = x2;
                                      u2 = y2;
                                      e2 = 46;
                                      break;
                                    }
                                  else
                                    A2 = 86;
                                } else
                                  A2 = 86;
                                if ((A2 | 0) == 86) {
                                  A2 = 0;
                                  e2 = (e2 | 0) > 57 ? p2 + -87 | 0 : u2;
                                  do {
                                    if (!((y2 | 0) < 0 | (y2 | 0) == 0 & l2 >>> 0 < 8)) {
                                      if ((y2 | 0) < 0 | (y2 | 0) == 0 & l2 >>> 0 < 14) {
                                        r2 = m2 * 0.0625;
                                        p2 = w2;
                                        j2 = r2;
                                        g2 = g2 + r2 * +(e2 | 0);
                                        break;
                                      }
                                      if ((w2 | 0) != 0 | (e2 | 0) == 0) {
                                        p2 = w2;
                                        j2 = m2;
                                      } else {
                                        p2 = 1;
                                        j2 = m2;
                                        g2 = g2 + m2 * 0.5;
                                      }
                                    } else {
                                      p2 = w2;
                                      j2 = m2;
                                      k2 = e2 + (k2 << 4) | 0;
                                    }
                                  } while (0);
                                  l2 = gk(l2 | 0, y2 | 0, 1, 0) | 0;
                                  v2 = x2;
                                  u2 = D;
                                  n2 = 1;
                                }
                                e2 = c[E2 >> 2] | 0;
                                if (e2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                                  c[E2 >> 2] = e2 + 1;
                                  y2 = u2;
                                  x2 = v2;
                                  e2 = d[e2 >> 0] | 0;
                                  w2 = p2;
                                  m2 = j2;
                                  continue;
                                } else {
                                  y2 = u2;
                                  x2 = v2;
                                  e2 = vi(b2) | 0;
                                  w2 = p2;
                                  m2 = j2;
                                  continue;
                                }
                              }
                              if (!n2) {
                                e2 = (c[C2 >> 2] | 0) == 0;
                                if (!e2)
                                  c[E2 >> 2] = (c[E2 >> 2] | 0) + -1;
                                if (f2) {
                                  if (!e2 ? (z2 = c[E2 >> 2] | 0, c[E2 >> 2] = z2 + -1, (o2 | 0) != 0) : 0)
                                    c[E2 >> 2] = z2 + -2;
                                } else
                                  ui(b2, 0);
                                g2 = +(I2 | 0) * 0;
                                break a;
                              }
                              n2 = (o2 | 0) == 0;
                              o2 = n2 ? l2 : p2;
                              n2 = n2 ? u2 : h2;
                              if ((u2 | 0) < 0 | (u2 | 0) == 0 & l2 >>> 0 < 8) {
                                h2 = u2;
                                do {
                                  k2 = k2 << 4;
                                  l2 = gk(l2 | 0, h2 | 0, 1, 0) | 0;
                                  h2 = D;
                                } while ((h2 | 0) < 0 | (h2 | 0) == 0 & l2 >>> 0 < 8);
                              }
                              if ((e2 | 32 | 0) == 112) {
                                h2 = Hj(b2, f2) | 0;
                                e2 = D;
                                if ((h2 | 0) == 0 & (e2 | 0) == -2147483648) {
                                  if (!f2) {
                                    ui(b2, 0);
                                    g2 = 0;
                                    break a;
                                  }
                                  if (!(c[C2 >> 2] | 0)) {
                                    h2 = 0;
                                    e2 = 0;
                                  } else {
                                    c[E2 >> 2] = (c[E2 >> 2] | 0) + -1;
                                    h2 = 0;
                                    e2 = 0;
                                  }
                                }
                              } else if (!(c[C2 >> 2] | 0)) {
                                h2 = 0;
                                e2 = 0;
                              } else {
                                c[E2 >> 2] = (c[E2 >> 2] | 0) + -1;
                                h2 = 0;
                                e2 = 0;
                              }
                              H2 = fk(o2 | 0, n2 | 0, 2) | 0;
                              H2 = gk(H2 | 0, D | 0, -32, -1) | 0;
                              e2 = gk(H2 | 0, D | 0, h2 | 0, e2 | 0) | 0;
                              h2 = D;
                              if (!k2) {
                                g2 = +(I2 | 0) * 0;
                                break a;
                              }
                              if ((h2 | 0) > 0 | (h2 | 0) == 0 & e2 >>> 0 > (0 - J2 | 0) >>> 0) {
                                c[(qi() | 0) >> 2] = 34;
                                g2 = +(I2 | 0) * 17976931348623157e292 * 17976931348623157e292;
                                break a;
                              }
                              H2 = J2 + -106 | 0;
                              G2 = ((H2 | 0) < 0) << 31 >> 31;
                              if ((h2 | 0) < (G2 | 0) | (h2 | 0) == (G2 | 0) & e2 >>> 0 < H2 >>> 0) {
                                c[(qi() | 0) >> 2] = 34;
                                g2 = +(I2 | 0) * 22250738585072014e-324 * 22250738585072014e-324;
                                break a;
                              }
                              if ((k2 | 0) > -1) {
                                do {
                                  G2 = !(g2 >= 0.5);
                                  H2 = G2 & 1 | k2 << 1;
                                  k2 = H2 ^ 1;
                                  g2 = g2 + (G2 ? g2 : g2 + -1);
                                  e2 = gk(e2 | 0, h2 | 0, -1, -1) | 0;
                                  h2 = D;
                                } while ((H2 | 0) > -1);
                                l2 = e2;
                                m2 = g2;
                              } else {
                                l2 = e2;
                                m2 = g2;
                              }
                              e2 = dk(32, 0, J2 | 0, ((J2 | 0) < 0) << 31 >> 31 | 0) | 0;
                              e2 = gk(l2 | 0, h2 | 0, e2 | 0, D | 0) | 0;
                              J2 = D;
                              if (0 > (J2 | 0) | 0 == (J2 | 0) & K2 >>> 0 > e2 >>> 0)
                                if ((e2 | 0) < 0) {
                                  e2 = 0;
                                  A2 = 127;
                                } else
                                  A2 = 125;
                              else {
                                e2 = K2;
                                A2 = 125;
                              }
                              if ((A2 | 0) == 125)
                                if ((e2 | 0) < 53)
                                  A2 = 127;
                                else {
                                  h2 = e2;
                                  j2 = +(I2 | 0);
                                  g2 = 0;
                                }
                              if ((A2 | 0) == 127) {
                                g2 = +(I2 | 0);
                                h2 = e2;
                                j2 = g2;
                                g2 = +yi(+Di(1, 84 - e2 | 0), g2);
                              }
                              K2 = (k2 & 1 | 0) == 0 & (m2 != 0 & (h2 | 0) < 32);
                              g2 = j2 * (K2 ? 0 : m2) + (g2 + j2 * +(((K2 & 1) + k2 | 0) >>> 0)) - g2;
                              if (!(g2 != 0))
                                c[(qi() | 0) >> 2] = 34;
                              g2 = +Ei(g2, l2);
                              break a;
                            } else
                              e2 = h2;
                          } while (0);
                          F2 = J2 + K2 | 0;
                          G2 = 0 - F2 | 0;
                          k2 = 0;
                          f:
                            while (1) {
                              switch (e2 | 0) {
                                case 46: {
                                  A2 = 138;
                                  break f;
                                }
                                case 48:
                                  break;
                                default: {
                                  h2 = 0;
                                  p2 = 0;
                                  o2 = 0;
                                  break f;
                                }
                              }
                              e2 = c[E2 >> 2] | 0;
                              if (e2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                                c[E2 >> 2] = e2 + 1;
                                e2 = d[e2 >> 0] | 0;
                                k2 = 1;
                                continue;
                              } else {
                                e2 = vi(b2) | 0;
                                k2 = 1;
                                continue;
                              }
                            }
                          if ((A2 | 0) == 138) {
                            e2 = c[E2 >> 2] | 0;
                            if (e2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                              c[E2 >> 2] = e2 + 1;
                              e2 = d[e2 >> 0] | 0;
                            } else
                              e2 = vi(b2) | 0;
                            if ((e2 | 0) == 48) {
                              h2 = 0;
                              e2 = 0;
                              while (1) {
                                h2 = gk(h2 | 0, e2 | 0, -1, -1) | 0;
                                k2 = D;
                                e2 = c[E2 >> 2] | 0;
                                if (e2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                                  c[E2 >> 2] = e2 + 1;
                                  e2 = d[e2 >> 0] | 0;
                                } else
                                  e2 = vi(b2) | 0;
                                if ((e2 | 0) == 48)
                                  e2 = k2;
                                else {
                                  p2 = k2;
                                  k2 = 1;
                                  o2 = 1;
                                  break;
                                }
                              }
                            } else {
                              h2 = 0;
                              p2 = 0;
                              o2 = 1;
                            }
                          }
                          c[H2 >> 2] = 0;
                          n2 = e2 + -48 | 0;
                          l2 = (e2 | 0) == 46;
                          g:
                            do {
                              if (l2 | n2 >>> 0 < 10) {
                                B2 = H2 + 496 | 0;
                                y2 = 0;
                                v2 = 0;
                                w2 = l2;
                                A2 = p2;
                                u2 = k2;
                                z2 = o2;
                                k2 = 0;
                                l2 = 0;
                                o2 = 0;
                                h:
                                  while (1) {
                                    do {
                                      if (w2)
                                        if (!z2) {
                                          h2 = y2;
                                          p2 = v2;
                                          z2 = 1;
                                        } else {
                                          p2 = A2;
                                          e2 = y2;
                                          n2 = v2;
                                          break h;
                                        }
                                      else {
                                        w2 = gk(y2 | 0, v2 | 0, 1, 0) | 0;
                                        v2 = D;
                                        x2 = (e2 | 0) != 48;
                                        if ((l2 | 0) >= 125) {
                                          if (!x2) {
                                            p2 = A2;
                                            y2 = w2;
                                            break;
                                          }
                                          c[B2 >> 2] = c[B2 >> 2] | 1;
                                          p2 = A2;
                                          y2 = w2;
                                          break;
                                        }
                                        p2 = H2 + (l2 << 2) | 0;
                                        if (k2)
                                          n2 = e2 + -48 + ((c[p2 >> 2] | 0) * 10 | 0) | 0;
                                        c[p2 >> 2] = n2;
                                        k2 = k2 + 1 | 0;
                                        n2 = (k2 | 0) == 9;
                                        p2 = A2;
                                        y2 = w2;
                                        u2 = 1;
                                        k2 = n2 ? 0 : k2;
                                        l2 = (n2 & 1) + l2 | 0;
                                        o2 = x2 ? w2 : o2;
                                      }
                                    } while (0);
                                    e2 = c[E2 >> 2] | 0;
                                    if (e2 >>> 0 < (c[C2 >> 2] | 0) >>> 0) {
                                      c[E2 >> 2] = e2 + 1;
                                      e2 = d[e2 >> 0] | 0;
                                    } else
                                      e2 = vi(b2) | 0;
                                    n2 = e2 + -48 | 0;
                                    w2 = (e2 | 0) == 46;
                                    if (!(w2 | n2 >>> 0 < 10)) {
                                      n2 = z2;
                                      A2 = 161;
                                      break g;
                                    } else
                                      A2 = p2;
                                  }
                                u2 = (u2 | 0) != 0;
                                A2 = 169;
                              } else {
                                y2 = 0;
                                v2 = 0;
                                u2 = k2;
                                n2 = o2;
                                k2 = 0;
                                l2 = 0;
                                o2 = 0;
                                A2 = 161;
                              }
                            } while (0);
                          do {
                            if ((A2 | 0) == 161) {
                              B2 = (n2 | 0) == 0;
                              h2 = B2 ? y2 : h2;
                              p2 = B2 ? v2 : p2;
                              u2 = (u2 | 0) != 0;
                              if (!((e2 | 32 | 0) == 101 & u2))
                                if ((e2 | 0) > -1) {
                                  e2 = y2;
                                  n2 = v2;
                                  A2 = 169;
                                  break;
                                } else {
                                  e2 = y2;
                                  n2 = v2;
                                  A2 = 171;
                                  break;
                                }
                              n2 = Hj(b2, f2) | 0;
                              e2 = D;
                              if ((n2 | 0) == 0 & (e2 | 0) == -2147483648) {
                                if (!f2) {
                                  ui(b2, 0);
                                  g2 = 0;
                                  break;
                                }
                                if (!(c[C2 >> 2] | 0)) {
                                  n2 = 0;
                                  e2 = 0;
                                } else {
                                  c[E2 >> 2] = (c[E2 >> 2] | 0) + -1;
                                  n2 = 0;
                                  e2 = 0;
                                }
                              }
                              h2 = gk(n2 | 0, e2 | 0, h2 | 0, p2 | 0) | 0;
                              u2 = y2;
                              p2 = D;
                              n2 = v2;
                              A2 = 173;
                            }
                          } while (0);
                          if ((A2 | 0) == 169)
                            if (c[C2 >> 2] | 0) {
                              c[E2 >> 2] = (c[E2 >> 2] | 0) + -1;
                              if (u2) {
                                u2 = e2;
                                A2 = 173;
                              } else
                                A2 = 172;
                            } else
                              A2 = 171;
                          if ((A2 | 0) == 171)
                            if (u2) {
                              u2 = e2;
                              A2 = 173;
                            } else
                              A2 = 172;
                          do {
                            if ((A2 | 0) == 172) {
                              c[(qi() | 0) >> 2] = 22;
                              ui(b2, 0);
                              g2 = 0;
                            } else if ((A2 | 0) == 173) {
                              e2 = c[H2 >> 2] | 0;
                              if (!e2) {
                                g2 = +(I2 | 0) * 0;
                                break;
                              }
                              if (((n2 | 0) < 0 | (n2 | 0) == 0 & u2 >>> 0 < 10) & ((h2 | 0) == (u2 | 0) & (p2 | 0) == (n2 | 0)) ? K2 >>> 0 > 30 | (e2 >>> K2 | 0) == 0 : 0) {
                                g2 = +(I2 | 0) * +(e2 >>> 0);
                                break;
                              }
                              b2 = (J2 | 0) / -2 | 0;
                              E2 = ((b2 | 0) < 0) << 31 >> 31;
                              if ((p2 | 0) > (E2 | 0) | (p2 | 0) == (E2 | 0) & h2 >>> 0 > b2 >>> 0) {
                                c[(qi() | 0) >> 2] = 34;
                                g2 = +(I2 | 0) * 17976931348623157e292 * 17976931348623157e292;
                                break;
                              }
                              b2 = J2 + -106 | 0;
                              E2 = ((b2 | 0) < 0) << 31 >> 31;
                              if ((p2 | 0) < (E2 | 0) | (p2 | 0) == (E2 | 0) & h2 >>> 0 < b2 >>> 0) {
                                c[(qi() | 0) >> 2] = 34;
                                g2 = +(I2 | 0) * 22250738585072014e-324 * 22250738585072014e-324;
                                break;
                              }
                              if (k2) {
                                if ((k2 | 0) < 9) {
                                  n2 = H2 + (l2 << 2) | 0;
                                  e2 = c[n2 >> 2] | 0;
                                  do {
                                    e2 = e2 * 10 | 0;
                                    k2 = k2 + 1 | 0;
                                  } while ((k2 | 0) != 9);
                                  c[n2 >> 2] = e2;
                                }
                                l2 = l2 + 1 | 0;
                              }
                              if ((o2 | 0) < 9 ? (o2 | 0) <= (h2 | 0) & (h2 | 0) < 18 : 0) {
                                if ((h2 | 0) == 9) {
                                  g2 = +(I2 | 0) * +((c[H2 >> 2] | 0) >>> 0);
                                  break;
                                }
                                if ((h2 | 0) < 9) {
                                  g2 = +(I2 | 0) * +((c[H2 >> 2] | 0) >>> 0) / +(c[2648 + (8 - h2 << 2) >> 2] | 0);
                                  break;
                                }
                                b2 = K2 + 27 + ($(h2, -3) | 0) | 0;
                                e2 = c[H2 >> 2] | 0;
                                if ((b2 | 0) > 30 | (e2 >>> b2 | 0) == 0) {
                                  g2 = +(I2 | 0) * +(e2 >>> 0) * +(c[2648 + (h2 + -10 << 2) >> 2] | 0);
                                  break;
                                }
                              }
                              e2 = (h2 | 0) % 9 | 0;
                              if (!e2) {
                                k2 = 0;
                                e2 = 0;
                              } else {
                                u2 = (h2 | 0) > -1 ? e2 : e2 + 9 | 0;
                                n2 = c[2648 + (8 - u2 << 2) >> 2] | 0;
                                if (l2) {
                                  o2 = 1e9 / (n2 | 0) | 0;
                                  k2 = 0;
                                  e2 = 0;
                                  p2 = 0;
                                  do {
                                    C2 = H2 + (p2 << 2) | 0;
                                    E2 = c[C2 >> 2] | 0;
                                    b2 = ((E2 >>> 0) / (n2 >>> 0) | 0) + e2 | 0;
                                    c[C2 >> 2] = b2;
                                    e2 = $((E2 >>> 0) % (n2 >>> 0) | 0, o2) | 0;
                                    b2 = (p2 | 0) == (k2 | 0) & (b2 | 0) == 0;
                                    p2 = p2 + 1 | 0;
                                    h2 = b2 ? h2 + -9 | 0 : h2;
                                    k2 = b2 ? p2 & 127 : k2;
                                  } while ((p2 | 0) != (l2 | 0));
                                  if (e2) {
                                    c[H2 + (l2 << 2) >> 2] = e2;
                                    l2 = l2 + 1 | 0;
                                  }
                                } else {
                                  k2 = 0;
                                  l2 = 0;
                                }
                                e2 = 0;
                                h2 = 9 - u2 + h2 | 0;
                              }
                              i:
                                while (1) {
                                  v2 = (h2 | 0) < 18;
                                  w2 = (h2 | 0) == 18;
                                  x2 = H2 + (k2 << 2) | 0;
                                  do {
                                    if (!v2) {
                                      if (!w2)
                                        break i;
                                      if ((c[x2 >> 2] | 0) >>> 0 >= 9007199) {
                                        h2 = 18;
                                        break i;
                                      }
                                    }
                                    n2 = 0;
                                    o2 = l2 + 127 | 0;
                                    while (1) {
                                      u2 = o2 & 127;
                                      p2 = H2 + (u2 << 2) | 0;
                                      o2 = fk(c[p2 >> 2] | 0, 0, 29) | 0;
                                      o2 = gk(o2 | 0, D | 0, n2 | 0, 0) | 0;
                                      n2 = D;
                                      if (n2 >>> 0 > 0 | (n2 | 0) == 0 & o2 >>> 0 > 1e9) {
                                        b2 = pk(o2 | 0, n2 | 0, 1e9, 0) | 0;
                                        o2 = qk(o2 | 0, n2 | 0, 1e9, 0) | 0;
                                        n2 = b2;
                                      } else
                                        n2 = 0;
                                      c[p2 >> 2] = o2;
                                      b2 = (u2 | 0) == (k2 | 0);
                                      l2 = (u2 | 0) != (l2 + 127 & 127 | 0) | b2 ? l2 : (o2 | 0) == 0 ? u2 : l2;
                                      if (b2)
                                        break;
                                      else
                                        o2 = u2 + -1 | 0;
                                    }
                                    e2 = e2 + -29 | 0;
                                  } while ((n2 | 0) == 0);
                                  k2 = k2 + 127 & 127;
                                  if ((k2 | 0) == (l2 | 0)) {
                                    b2 = l2 + 127 & 127;
                                    l2 = H2 + ((l2 + 126 & 127) << 2) | 0;
                                    c[l2 >> 2] = c[l2 >> 2] | c[H2 + (b2 << 2) >> 2];
                                    l2 = b2;
                                  }
                                  c[H2 + (k2 << 2) >> 2] = n2;
                                  h2 = h2 + 9 | 0;
                                }
                              j:
                                while (1) {
                                  y2 = l2 + 1 & 127;
                                  x2 = H2 + ((l2 + 127 & 127) << 2) | 0;
                                  while (1) {
                                    v2 = (h2 | 0) == 18;
                                    w2 = (h2 | 0) > 27 ? 9 : 1;
                                    u2 = v2 ^ 1;
                                    while (1) {
                                      o2 = k2 & 127;
                                      p2 = (o2 | 0) == (l2 | 0);
                                      do {
                                        if (!p2) {
                                          n2 = c[H2 + (o2 << 2) >> 2] | 0;
                                          if (n2 >>> 0 < 9007199) {
                                            A2 = 219;
                                            break;
                                          }
                                          if (n2 >>> 0 > 9007199)
                                            break;
                                          n2 = k2 + 1 & 127;
                                          if ((n2 | 0) == (l2 | 0)) {
                                            A2 = 219;
                                            break;
                                          }
                                          n2 = c[H2 + (n2 << 2) >> 2] | 0;
                                          if (n2 >>> 0 < 254740991) {
                                            A2 = 219;
                                            break;
                                          }
                                          if (!(n2 >>> 0 > 254740991 | u2)) {
                                            h2 = o2;
                                            break j;
                                          }
                                        } else
                                          A2 = 219;
                                      } while (0);
                                      if ((A2 | 0) == 219 ? (A2 = 0, v2) : 0) {
                                        A2 = 220;
                                        break j;
                                      }
                                      e2 = e2 + w2 | 0;
                                      if ((k2 | 0) == (l2 | 0))
                                        k2 = l2;
                                      else
                                        break;
                                    }
                                    u2 = (1 << w2) + -1 | 0;
                                    v2 = 1e9 >>> w2;
                                    o2 = k2;
                                    n2 = 0;
                                    p2 = k2;
                                    while (1) {
                                      E2 = H2 + (p2 << 2) | 0;
                                      b2 = c[E2 >> 2] | 0;
                                      k2 = (b2 >>> w2) + n2 | 0;
                                      c[E2 >> 2] = k2;
                                      n2 = $(b2 & u2, v2) | 0;
                                      k2 = (p2 | 0) == (o2 | 0) & (k2 | 0) == 0;
                                      p2 = p2 + 1 & 127;
                                      h2 = k2 ? h2 + -9 | 0 : h2;
                                      k2 = k2 ? p2 : o2;
                                      if ((p2 | 0) == (l2 | 0))
                                        break;
                                      else
                                        o2 = k2;
                                    }
                                    if (!n2)
                                      continue;
                                    if ((y2 | 0) != (k2 | 0))
                                      break;
                                    c[x2 >> 2] = c[x2 >> 2] | 1;
                                  }
                                  c[H2 + (l2 << 2) >> 2] = n2;
                                  l2 = y2;
                                }
                              if ((A2 | 0) == 220)
                                if (p2) {
                                  c[H2 + (y2 + -1 << 2) >> 2] = 0;
                                  h2 = l2;
                                  l2 = y2;
                                } else
                                  h2 = o2;
                              g2 = +((c[H2 + (h2 << 2) >> 2] | 0) >>> 0);
                              h2 = k2 + 1 & 127;
                              if ((h2 | 0) == (l2 | 0)) {
                                l2 = k2 + 2 & 127;
                                c[H2 + (l2 + -1 << 2) >> 2] = 0;
                              }
                              r2 = +(I2 | 0);
                              j2 = r2 * (g2 * 1e9 + +((c[H2 + (h2 << 2) >> 2] | 0) >>> 0));
                              v2 = e2 + 53 | 0;
                              p2 = v2 - J2 | 0;
                              u2 = (p2 | 0) < (K2 | 0);
                              h2 = u2 & 1;
                              o2 = u2 ? (p2 | 0) < 0 ? 0 : p2 : K2;
                              if ((o2 | 0) < 53) {
                                M2 = +yi(+Di(1, 105 - o2 | 0), j2);
                                m2 = +Ai(j2, +Di(1, 53 - o2 | 0));
                                q2 = M2;
                                g2 = m2;
                                m2 = M2 + (j2 - m2);
                              } else {
                                q2 = 0;
                                g2 = 0;
                                m2 = j2;
                              }
                              n2 = k2 + 2 & 127;
                              do {
                                if ((n2 | 0) == (l2 | 0))
                                  j2 = g2;
                                else {
                                  n2 = c[H2 + (n2 << 2) >> 2] | 0;
                                  do {
                                    if (n2 >>> 0 >= 5e8) {
                                      if (n2 >>> 0 > 5e8) {
                                        g2 = r2 * 0.75 + g2;
                                        break;
                                      }
                                      if ((k2 + 3 & 127 | 0) == (l2 | 0)) {
                                        g2 = r2 * 0.5 + g2;
                                        break;
                                      } else {
                                        g2 = r2 * 0.75 + g2;
                                        break;
                                      }
                                    } else {
                                      if ((n2 | 0) == 0 ? (k2 + 3 & 127 | 0) == (l2 | 0) : 0)
                                        break;
                                      g2 = r2 * 0.25 + g2;
                                    }
                                  } while (0);
                                  if ((53 - o2 | 0) <= 1) {
                                    j2 = g2;
                                    break;
                                  }
                                  if (+Ai(g2, 1) != 0) {
                                    j2 = g2;
                                    break;
                                  }
                                  j2 = g2 + 1;
                                }
                              } while (0);
                              g2 = m2 + j2 - q2;
                              do {
                                if ((v2 & 2147483647 | 0) > (-2 - F2 | 0)) {
                                  if (+O(+g2) >= 9007199254740992) {
                                    h2 = u2 & (o2 | 0) == (p2 | 0) ? 0 : h2;
                                    e2 = e2 + 1 | 0;
                                    g2 = g2 * 0.5;
                                  }
                                  if ((e2 + 50 | 0) <= (G2 | 0) ? !(j2 != 0 & (h2 | 0) != 0) : 0)
                                    break;
                                  c[(qi() | 0) >> 2] = 34;
                                }
                              } while (0);
                              g2 = +Ei(g2, e2);
                            }
                          } while (0);
                          break a;
                        }
                        default: {
                          if (c[C2 >> 2] | 0)
                            c[E2 >> 2] = (c[E2 >> 2] | 0) + -1;
                          c[(qi() | 0) >> 2] = 22;
                          ui(b2, 0);
                          g2 = 0;
                          break a;
                        }
                      }
                    }
                  }
                } while (0);
              if ((A2 | 0) == 23) {
                h2 = (c[C2 >> 2] | 0) == 0;
                if (!h2)
                  c[E2 >> 2] = (c[E2 >> 2] | 0) + -1;
                if ((f2 | 0) != 0 & e2 >>> 0 > 3)
                  do {
                    if (!h2)
                      c[E2 >> 2] = (c[E2 >> 2] | 0) + -1;
                    e2 = e2 + -1 | 0;
                  } while (e2 >>> 0 > 3);
              }
              g2 = +(I2 | 0) * t;
            }
          } while (0);
        i2 = L2;
        return +g2;
      }
      function ti(b2, e2, f2, g2, h2) {
        b2 = b2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        h2 = h2 | 0;
        var i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
        a:
          do {
            if (e2 >>> 0 > 36) {
              c[(qi() | 0) >> 2] = 22;
              h2 = 0;
              g2 = 0;
            } else {
              r2 = b2 + 4 | 0;
              q2 = b2 + 100 | 0;
              do {
                i3 = c[r2 >> 2] | 0;
                if (i3 >>> 0 < (c[q2 >> 2] | 0) >>> 0) {
                  c[r2 >> 2] = i3 + 1;
                  i3 = d[i3 >> 0] | 0;
                } else
                  i3 = vi(b2) | 0;
              } while ((pi(i3) | 0) != 0);
              b:
                do {
                  switch (i3 | 0) {
                    case 43:
                    case 45: {
                      j2 = ((i3 | 0) == 45) << 31 >> 31;
                      i3 = c[r2 >> 2] | 0;
                      if (i3 >>> 0 < (c[q2 >> 2] | 0) >>> 0) {
                        c[r2 >> 2] = i3 + 1;
                        i3 = d[i3 >> 0] | 0;
                        p2 = j2;
                        break b;
                      } else {
                        i3 = vi(b2) | 0;
                        p2 = j2;
                        break b;
                      }
                    }
                    default:
                      p2 = 0;
                  }
                } while (0);
              j2 = (e2 | 0) == 0;
              do {
                if ((e2 & -17 | 0) == 0 & (i3 | 0) == 48) {
                  i3 = c[r2 >> 2] | 0;
                  if (i3 >>> 0 < (c[q2 >> 2] | 0) >>> 0) {
                    c[r2 >> 2] = i3 + 1;
                    i3 = d[i3 >> 0] | 0;
                  } else
                    i3 = vi(b2) | 0;
                  if ((i3 | 32 | 0) != 120)
                    if (j2) {
                      e2 = 8;
                      n2 = 46;
                      break;
                    } else {
                      n2 = 32;
                      break;
                    }
                  e2 = c[r2 >> 2] | 0;
                  if (e2 >>> 0 < (c[q2 >> 2] | 0) >>> 0) {
                    c[r2 >> 2] = e2 + 1;
                    i3 = d[e2 >> 0] | 0;
                  } else
                    i3 = vi(b2) | 0;
                  if ((d[14643 + (i3 + 1) >> 0] | 0) > 15) {
                    g2 = (c[q2 >> 2] | 0) == 0;
                    if (!g2)
                      c[r2 >> 2] = (c[r2 >> 2] | 0) + -1;
                    if (!f2) {
                      ui(b2, 0);
                      h2 = 0;
                      g2 = 0;
                      break a;
                    }
                    if (g2) {
                      h2 = 0;
                      g2 = 0;
                      break a;
                    }
                    c[r2 >> 2] = (c[r2 >> 2] | 0) + -1;
                    h2 = 0;
                    g2 = 0;
                    break a;
                  } else {
                    e2 = 16;
                    n2 = 46;
                  }
                } else {
                  e2 = j2 ? 10 : e2;
                  if ((d[14643 + (i3 + 1) >> 0] | 0) >>> 0 < e2 >>> 0)
                    n2 = 32;
                  else {
                    if (c[q2 >> 2] | 0)
                      c[r2 >> 2] = (c[r2 >> 2] | 0) + -1;
                    ui(b2, 0);
                    c[(qi() | 0) >> 2] = 22;
                    h2 = 0;
                    g2 = 0;
                    break a;
                  }
                }
              } while (0);
              if ((n2 | 0) == 32)
                if ((e2 | 0) == 10) {
                  e2 = i3 + -48 | 0;
                  if (e2 >>> 0 < 10) {
                    i3 = 0;
                    while (1) {
                      j2 = (i3 * 10 | 0) + e2 | 0;
                      e2 = c[r2 >> 2] | 0;
                      if (e2 >>> 0 < (c[q2 >> 2] | 0) >>> 0) {
                        c[r2 >> 2] = e2 + 1;
                        i3 = d[e2 >> 0] | 0;
                      } else
                        i3 = vi(b2) | 0;
                      e2 = i3 + -48 | 0;
                      if (!(e2 >>> 0 < 10 & j2 >>> 0 < 429496729)) {
                        e2 = j2;
                        break;
                      } else
                        i3 = j2;
                    }
                    j2 = 0;
                  } else {
                    e2 = 0;
                    j2 = 0;
                  }
                  f2 = i3 + -48 | 0;
                  if (f2 >>> 0 < 10) {
                    while (1) {
                      k2 = ok(e2 | 0, j2 | 0, 10, 0) | 0;
                      l2 = D;
                      m2 = ((f2 | 0) < 0) << 31 >> 31;
                      o2 = ~m2;
                      if (l2 >>> 0 > o2 >>> 0 | (l2 | 0) == (o2 | 0) & k2 >>> 0 > ~f2 >>> 0) {
                        k2 = e2;
                        break;
                      }
                      e2 = gk(k2 | 0, l2 | 0, f2 | 0, m2 | 0) | 0;
                      j2 = D;
                      i3 = c[r2 >> 2] | 0;
                      if (i3 >>> 0 < (c[q2 >> 2] | 0) >>> 0) {
                        c[r2 >> 2] = i3 + 1;
                        i3 = d[i3 >> 0] | 0;
                      } else
                        i3 = vi(b2) | 0;
                      f2 = i3 + -48 | 0;
                      if (!(f2 >>> 0 < 10 & (j2 >>> 0 < 429496729 | (j2 | 0) == 429496729 & e2 >>> 0 < 2576980378))) {
                        k2 = e2;
                        break;
                      }
                    }
                    if (f2 >>> 0 > 9) {
                      i3 = k2;
                      e2 = p2;
                    } else {
                      e2 = 10;
                      n2 = 72;
                    }
                  } else {
                    i3 = e2;
                    e2 = p2;
                  }
                } else
                  n2 = 46;
              c:
                do {
                  if ((n2 | 0) == 46) {
                    if (!(e2 + -1 & e2)) {
                      n2 = a[14900 + ((e2 * 23 | 0) >>> 5 & 7) >> 0] | 0;
                      j2 = a[14643 + (i3 + 1) >> 0] | 0;
                      f2 = j2 & 255;
                      if (f2 >>> 0 < e2 >>> 0) {
                        i3 = 0;
                        while (1) {
                          k2 = f2 | i3 << n2;
                          i3 = c[r2 >> 2] | 0;
                          if (i3 >>> 0 < (c[q2 >> 2] | 0) >>> 0) {
                            c[r2 >> 2] = i3 + 1;
                            i3 = d[i3 >> 0] | 0;
                          } else
                            i3 = vi(b2) | 0;
                          j2 = a[14643 + (i3 + 1) >> 0] | 0;
                          f2 = j2 & 255;
                          if (!(k2 >>> 0 < 134217728 & f2 >>> 0 < e2 >>> 0))
                            break;
                          else
                            i3 = k2;
                        }
                        f2 = 0;
                      } else {
                        f2 = 0;
                        k2 = 0;
                      }
                      l2 = hk(-1, -1, n2 | 0) | 0;
                      m2 = D;
                      if ((j2 & 255) >>> 0 >= e2 >>> 0 | (f2 >>> 0 > m2 >>> 0 | (f2 | 0) == (m2 | 0) & k2 >>> 0 > l2 >>> 0)) {
                        j2 = f2;
                        n2 = 72;
                        break;
                      } else
                        i3 = f2;
                      while (1) {
                        k2 = fk(k2 | 0, i3 | 0, n2 | 0) | 0;
                        f2 = D;
                        k2 = j2 & 255 | k2;
                        i3 = c[r2 >> 2] | 0;
                        if (i3 >>> 0 < (c[q2 >> 2] | 0) >>> 0) {
                          c[r2 >> 2] = i3 + 1;
                          i3 = d[i3 >> 0] | 0;
                        } else
                          i3 = vi(b2) | 0;
                        j2 = a[14643 + (i3 + 1) >> 0] | 0;
                        if ((j2 & 255) >>> 0 >= e2 >>> 0 | (f2 >>> 0 > m2 >>> 0 | (f2 | 0) == (m2 | 0) & k2 >>> 0 > l2 >>> 0)) {
                          j2 = f2;
                          n2 = 72;
                          break c;
                        } else
                          i3 = f2;
                      }
                    }
                    j2 = a[14643 + (i3 + 1) >> 0] | 0;
                    f2 = j2 & 255;
                    if (f2 >>> 0 < e2 >>> 0) {
                      i3 = 0;
                      while (1) {
                        k2 = f2 + ($(i3, e2) | 0) | 0;
                        i3 = c[r2 >> 2] | 0;
                        if (i3 >>> 0 < (c[q2 >> 2] | 0) >>> 0) {
                          c[r2 >> 2] = i3 + 1;
                          i3 = d[i3 >> 0] | 0;
                        } else
                          i3 = vi(b2) | 0;
                        j2 = a[14643 + (i3 + 1) >> 0] | 0;
                        f2 = j2 & 255;
                        if (!(k2 >>> 0 < 119304647 & f2 >>> 0 < e2 >>> 0))
                          break;
                        else
                          i3 = k2;
                      }
                      f2 = 0;
                    } else {
                      k2 = 0;
                      f2 = 0;
                    }
                    if ((j2 & 255) >>> 0 < e2 >>> 0) {
                      n2 = pk(-1, -1, e2 | 0, 0) | 0;
                      o2 = D;
                      m2 = f2;
                      while (1) {
                        if (m2 >>> 0 > o2 >>> 0 | (m2 | 0) == (o2 | 0) & k2 >>> 0 > n2 >>> 0) {
                          j2 = m2;
                          n2 = 72;
                          break c;
                        }
                        f2 = ok(k2 | 0, m2 | 0, e2 | 0, 0) | 0;
                        l2 = D;
                        j2 = j2 & 255;
                        if (l2 >>> 0 > 4294967295 | (l2 | 0) == -1 & f2 >>> 0 > ~j2 >>> 0) {
                          j2 = m2;
                          n2 = 72;
                          break c;
                        }
                        k2 = gk(j2 | 0, 0, f2 | 0, l2 | 0) | 0;
                        f2 = D;
                        i3 = c[r2 >> 2] | 0;
                        if (i3 >>> 0 < (c[q2 >> 2] | 0) >>> 0) {
                          c[r2 >> 2] = i3 + 1;
                          i3 = d[i3 >> 0] | 0;
                        } else
                          i3 = vi(b2) | 0;
                        j2 = a[14643 + (i3 + 1) >> 0] | 0;
                        if ((j2 & 255) >>> 0 >= e2 >>> 0) {
                          j2 = f2;
                          n2 = 72;
                          break;
                        } else
                          m2 = f2;
                      }
                    } else {
                      j2 = f2;
                      n2 = 72;
                    }
                  }
                } while (0);
              if ((n2 | 0) == 72)
                if ((d[14643 + (i3 + 1) >> 0] | 0) >>> 0 < e2 >>> 0) {
                  do {
                    i3 = c[r2 >> 2] | 0;
                    if (i3 >>> 0 < (c[q2 >> 2] | 0) >>> 0) {
                      c[r2 >> 2] = i3 + 1;
                      i3 = d[i3 >> 0] | 0;
                    } else
                      i3 = vi(b2) | 0;
                  } while ((d[14643 + (i3 + 1) >> 0] | 0) >>> 0 < e2 >>> 0);
                  c[(qi() | 0) >> 2] = 34;
                  j2 = h2;
                  i3 = g2;
                  e2 = (g2 & 1 | 0) == 0 & true ? p2 : 0;
                } else {
                  i3 = k2;
                  e2 = p2;
                }
              if (c[q2 >> 2] | 0)
                c[r2 >> 2] = (c[r2 >> 2] | 0) + -1;
              if (!(j2 >>> 0 < h2 >>> 0 | (j2 | 0) == (h2 | 0) & i3 >>> 0 < g2 >>> 0)) {
                if (!((g2 & 1 | 0) != 0 | false | (e2 | 0) != 0)) {
                  c[(qi() | 0) >> 2] = 34;
                  g2 = gk(g2 | 0, h2 | 0, -1, -1) | 0;
                  h2 = D;
                  break;
                }
                if (j2 >>> 0 > h2 >>> 0 | (j2 | 0) == (h2 | 0) & i3 >>> 0 > g2 >>> 0) {
                  c[(qi() | 0) >> 2] = 34;
                  break;
                }
              }
              g2 = ((e2 | 0) < 0) << 31 >> 31;
              g2 = dk(i3 ^ e2 | 0, j2 ^ g2 | 0, e2 | 0, g2 | 0) | 0;
              h2 = D;
            }
          } while (0);
        D = h2;
        return g2 | 0;
      }
      function ui(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0;
        c[a2 + 104 >> 2] = b2;
        d2 = c[a2 + 4 >> 2] | 0;
        e2 = c[a2 + 8 >> 2] | 0;
        f2 = e2 - d2 | 0;
        c[a2 + 108 >> 2] = f2;
        if ((b2 | 0) != 0 & (f2 | 0) > (b2 | 0))
          c[a2 + 100 >> 2] = d2 + b2;
        else
          c[a2 + 100 >> 2] = e2;
        return;
      }
      function vi(b2) {
        b2 = b2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
        f2 = b2 + 104 | 0;
        i3 = c[f2 >> 2] | 0;
        if ((i3 | 0) != 0 ? (c[b2 + 108 >> 2] | 0) >= (i3 | 0) : 0)
          j2 = 4;
        else {
          e2 = Vi(b2) | 0;
          if ((e2 | 0) >= 0) {
            h2 = c[f2 >> 2] | 0;
            f2 = b2 + 8 | 0;
            if (h2) {
              g2 = c[f2 >> 2] | 0;
              i3 = c[b2 + 4 >> 2] | 0;
              f2 = g2;
              h2 = h2 - (c[b2 + 108 >> 2] | 0) + -1 | 0;
              if ((f2 - i3 | 0) > (h2 | 0))
                c[b2 + 100 >> 2] = i3 + h2;
              else
                j2 = 9;
            } else {
              g2 = c[f2 >> 2] | 0;
              f2 = g2;
              j2 = 9;
            }
            if ((j2 | 0) == 9)
              c[b2 + 100 >> 2] = f2;
            f2 = c[b2 + 4 >> 2] | 0;
            if (g2) {
              b2 = b2 + 108 | 0;
              c[b2 >> 2] = g2 + 1 - f2 + (c[b2 >> 2] | 0);
            }
            f2 = f2 + -1 | 0;
            if ((d[f2 >> 0] | 0 | 0) != (e2 | 0))
              a[f2 >> 0] = e2;
          } else
            j2 = 4;
        }
        if ((j2 | 0) == 4) {
          c[b2 + 100 >> 2] = 0;
          e2 = -1;
        }
        return e2 | 0;
      }
      function wi(a2) {
        a2 = a2 | 0;
        if (a2 >>> 0 > 4294963200) {
          c[(qi() | 0) >> 2] = 0 - a2;
          a2 = -1;
        }
        return a2 | 0;
      }
      function xi(a2, b2) {
        a2 = +a2;
        b2 = +b2;
        var d2 = 0, e2 = 0;
        h[k >> 3] = a2;
        e2 = c[k >> 2] | 0;
        d2 = c[k + 4 >> 2] | 0;
        h[k >> 3] = b2;
        d2 = c[k + 4 >> 2] & -2147483648 | d2 & 2147483647;
        c[k >> 2] = e2;
        c[k + 4 >> 2] = d2;
        return + +h[k >> 3];
      }
      function yi(a2, b2) {
        a2 = +a2;
        b2 = +b2;
        return + +xi(a2, b2);
      }
      function zi(a2, b2) {
        a2 = +a2;
        b2 = +b2;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, i3 = 0, j2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
        h[k >> 3] = a2;
        d2 = c[k >> 2] | 0;
        m2 = c[k + 4 >> 2] | 0;
        h[k >> 3] = b2;
        n2 = c[k >> 2] | 0;
        o2 = c[k + 4 >> 2] | 0;
        e2 = hk(d2 | 0, m2 | 0, 52) | 0;
        e2 = e2 & 2047;
        j2 = hk(n2 | 0, o2 | 0, 52) | 0;
        j2 = j2 & 2047;
        p2 = m2 & -2147483648;
        i3 = fk(n2 | 0, o2 | 0, 1) | 0;
        l2 = D;
        a:
          do {
            if (!((i3 | 0) == 0 & (l2 | 0) == 0) ? (g2 = o2 & 2147483647, !(g2 >>> 0 > 2146435072 | (g2 | 0) == 2146435072 & n2 >>> 0 > 0 | (e2 | 0) == 2047)) : 0) {
              f2 = fk(d2 | 0, m2 | 0, 1) | 0;
              g2 = D;
              if (!(g2 >>> 0 > l2 >>> 0 | (g2 | 0) == (l2 | 0) & f2 >>> 0 > i3 >>> 0))
                return +((f2 | 0) == (i3 | 0) & (g2 | 0) == (l2 | 0) ? a2 * 0 : a2);
              if (!e2) {
                e2 = fk(d2 | 0, m2 | 0, 12) | 0;
                f2 = D;
                if ((f2 | 0) > -1 | (f2 | 0) == -1 & e2 >>> 0 > 4294967295) {
                  g2 = e2;
                  e2 = 0;
                  do {
                    e2 = e2 + -1 | 0;
                    g2 = fk(g2 | 0, f2 | 0, 1) | 0;
                    f2 = D;
                  } while ((f2 | 0) > -1 | (f2 | 0) == -1 & g2 >>> 0 > 4294967295);
                } else
                  e2 = 0;
                d2 = fk(d2 | 0, m2 | 0, 1 - e2 | 0) | 0;
                f2 = D;
              } else
                f2 = m2 & 1048575 | 1048576;
              if (!j2) {
                g2 = fk(n2 | 0, o2 | 0, 12) | 0;
                i3 = D;
                if ((i3 | 0) > -1 | (i3 | 0) == -1 & g2 >>> 0 > 4294967295) {
                  j2 = 0;
                  do {
                    j2 = j2 + -1 | 0;
                    g2 = fk(g2 | 0, i3 | 0, 1) | 0;
                    i3 = D;
                  } while ((i3 | 0) > -1 | (i3 | 0) == -1 & g2 >>> 0 > 4294967295);
                } else
                  j2 = 0;
                n2 = fk(n2 | 0, o2 | 0, 1 - j2 | 0) | 0;
                m2 = D;
              } else
                m2 = o2 & 1048575 | 1048576;
              l2 = dk(d2 | 0, f2 | 0, n2 | 0, m2 | 0) | 0;
              i3 = D;
              g2 = (i3 | 0) > -1 | (i3 | 0) == -1 & l2 >>> 0 > 4294967295;
              b:
                do {
                  if ((e2 | 0) > (j2 | 0)) {
                    while (1) {
                      if (g2)
                        if ((d2 | 0) == (n2 | 0) & (f2 | 0) == (m2 | 0))
                          break;
                        else {
                          d2 = l2;
                          f2 = i3;
                        }
                      d2 = fk(d2 | 0, f2 | 0, 1) | 0;
                      f2 = D;
                      e2 = e2 + -1 | 0;
                      l2 = dk(d2 | 0, f2 | 0, n2 | 0, m2 | 0) | 0;
                      i3 = D;
                      g2 = (i3 | 0) > -1 | (i3 | 0) == -1 & l2 >>> 0 > 4294967295;
                      if ((e2 | 0) <= (j2 | 0))
                        break b;
                    }
                    b2 = a2 * 0;
                    break a;
                  }
                } while (0);
              if (g2)
                if ((d2 | 0) == (n2 | 0) & (f2 | 0) == (m2 | 0)) {
                  b2 = a2 * 0;
                  break;
                } else {
                  f2 = i3;
                  d2 = l2;
                }
              if (f2 >>> 0 < 1048576 | (f2 | 0) == 1048576 & d2 >>> 0 < 0)
                do {
                  d2 = fk(d2 | 0, f2 | 0, 1) | 0;
                  f2 = D;
                  e2 = e2 + -1 | 0;
                } while (f2 >>> 0 < 1048576 | (f2 | 0) == 1048576 & d2 >>> 0 < 0);
              if ((e2 | 0) > 0) {
                o2 = gk(d2 | 0, f2 | 0, 0, -1048576) | 0;
                d2 = D;
                e2 = fk(e2 | 0, 0, 52) | 0;
                d2 = d2 | D;
                e2 = o2 | e2;
              } else {
                e2 = hk(d2 | 0, f2 | 0, 1 - e2 | 0) | 0;
                d2 = D;
              }
              c[k >> 2] = e2;
              c[k + 4 >> 2] = d2 | p2;
              b2 = +h[k >> 3];
            } else
              q2 = 3;
          } while (0);
        if ((q2 | 0) == 3) {
          b2 = a2 * b2;
          b2 = b2 / b2;
        }
        return +b2;
      }
      function Ai(a2, b2) {
        a2 = +a2;
        b2 = +b2;
        return + +zi(a2, b2);
      }
      function Bi(a2, b2) {
        a2 = +a2;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0;
        h[k >> 3] = a2;
        d2 = c[k >> 2] | 0;
        e2 = c[k + 4 >> 2] | 0;
        f2 = hk(d2 | 0, e2 | 0, 52) | 0;
        f2 = f2 & 2047;
        switch (f2 | 0) {
          case 0: {
            if (a2 != 0) {
              a2 = +Bi(a2 * 18446744073709552e3, b2);
              d2 = (c[b2 >> 2] | 0) + -64 | 0;
            } else
              d2 = 0;
            c[b2 >> 2] = d2;
            break;
          }
          case 2047:
            break;
          default: {
            c[b2 >> 2] = f2 + -1022;
            c[k >> 2] = d2;
            c[k + 4 >> 2] = e2 & -2146435073 | 1071644672;
            a2 = +h[k >> 3];
          }
        }
        return +a2;
      }
      function Ci(a2, b2) {
        a2 = +a2;
        b2 = b2 | 0;
        return + +Bi(a2, b2);
      }
      function Di(a2, b2) {
        a2 = +a2;
        b2 = b2 | 0;
        var d2 = 0;
        if ((b2 | 0) > 1023) {
          a2 = a2 * 898846567431158e293;
          d2 = b2 + -1023 | 0;
          if ((d2 | 0) > 1023) {
            d2 = b2 + -2046 | 0;
            d2 = (d2 | 0) > 1023 ? 1023 : d2;
            a2 = a2 * 898846567431158e293;
          }
        } else if ((b2 | 0) < -1022) {
          a2 = a2 * 22250738585072014e-324;
          d2 = b2 + 1022 | 0;
          if ((d2 | 0) < -1022) {
            d2 = b2 + 2044 | 0;
            d2 = (d2 | 0) < -1022 ? -1022 : d2;
            a2 = a2 * 22250738585072014e-324;
          }
        } else
          d2 = b2;
        d2 = fk(d2 + 1023 | 0, 0, 52) | 0;
        b2 = D;
        c[k >> 2] = d2;
        c[k + 4 >> 2] = b2;
        return +(a2 * +h[k >> 3]);
      }
      function Ei(a2, b2) {
        a2 = +a2;
        b2 = b2 | 0;
        return + +Di(a2, b2);
      }
      function Fi(b2, d2, e2, f2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
        l2 = i2;
        i2 = i2 + 16 | 0;
        g2 = l2;
        j2 = (f2 | 0) == 0 ? 2680 : f2;
        f2 = c[j2 >> 2] | 0;
        a:
          do {
            if (!d2)
              if (!f2)
                f2 = 0;
              else
                k2 = 15;
            else {
              h2 = (b2 | 0) == 0 ? g2 : b2;
              if (!e2)
                f2 = -2;
              else {
                if (!f2) {
                  f2 = a[d2 >> 0] | 0;
                  g2 = f2 & 255;
                  if (f2 << 24 >> 24 > -1) {
                    c[h2 >> 2] = g2;
                    f2 = f2 << 24 >> 24 != 0 & 1;
                    break;
                  }
                  f2 = g2 + -194 | 0;
                  if (f2 >>> 0 > 50) {
                    k2 = 15;
                    break;
                  }
                  f2 = c[2432 + (f2 << 2) >> 2] | 0;
                  g2 = e2 + -1 | 0;
                  if (g2) {
                    d2 = d2 + 1 | 0;
                    k2 = 9;
                  }
                } else {
                  g2 = e2;
                  k2 = 9;
                }
                b:
                  do {
                    if ((k2 | 0) == 9) {
                      b2 = a[d2 >> 0] | 0;
                      m2 = (b2 & 255) >>> 3;
                      if ((m2 + -16 | m2 + (f2 >> 26)) >>> 0 > 7) {
                        k2 = 15;
                        break a;
                      }
                      while (1) {
                        d2 = d2 + 1 | 0;
                        f2 = (b2 & 255) + -128 | f2 << 6;
                        g2 = g2 + -1 | 0;
                        if ((f2 | 0) >= 0)
                          break;
                        if (!g2)
                          break b;
                        b2 = a[d2 >> 0] | 0;
                        if ((b2 & -64) << 24 >> 24 != -128) {
                          k2 = 15;
                          break a;
                        }
                      }
                      c[j2 >> 2] = 0;
                      c[h2 >> 2] = f2;
                      f2 = e2 - g2 | 0;
                      break a;
                    }
                  } while (0);
                c[j2 >> 2] = f2;
                f2 = -2;
              }
            }
          } while (0);
        if ((k2 | 0) == 15) {
          c[j2 >> 2] = 0;
          c[(qi() | 0) >> 2] = 84;
          f2 = -1;
        }
        i2 = l2;
        return f2 | 0;
      }
      function Gi(a2) {
        a2 = a2 | 0;
        if (!a2)
          a2 = 1;
        else
          a2 = (c[a2 >> 2] | 0) == 0;
        return a2 & 1 | 0;
      }
      function Hi(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        do {
          if (b2) {
            if (d2 >>> 0 < 128) {
              a[b2 >> 0] = d2;
              b2 = 1;
              break;
            }
            if (d2 >>> 0 < 2048) {
              a[b2 >> 0] = d2 >>> 6 | 192;
              a[b2 + 1 >> 0] = d2 & 63 | 128;
              b2 = 2;
              break;
            }
            if (d2 >>> 0 < 55296 | (d2 & -8192 | 0) == 57344) {
              a[b2 >> 0] = d2 >>> 12 | 224;
              a[b2 + 1 >> 0] = d2 >>> 6 & 63 | 128;
              a[b2 + 2 >> 0] = d2 & 63 | 128;
              b2 = 3;
              break;
            }
            if ((d2 + -65536 | 0) >>> 0 < 1048576) {
              a[b2 >> 0] = d2 >>> 18 | 240;
              a[b2 + 1 >> 0] = d2 >>> 12 & 63 | 128;
              a[b2 + 2 >> 0] = d2 >>> 6 & 63 | 128;
              a[b2 + 3 >> 0] = d2 & 63 | 128;
              b2 = 4;
              break;
            } else {
              c[(qi() | 0) >> 2] = 84;
              b2 = -1;
              break;
            }
          } else
            b2 = 1;
        } while (0);
        return b2 | 0;
      }
      function Ii(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if (!a2)
          a2 = 0;
        else
          a2 = Hi(a2, b2, 0) | 0;
        return a2 | 0;
      }
      function Ji(b2, d2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
        o2 = i2;
        i2 = i2 + 112 | 0;
        n2 = o2 + 40 | 0;
        l2 = o2 + 24 | 0;
        k2 = o2 + 16 | 0;
        g2 = o2;
        m2 = o2 + 52 | 0;
        f2 = a[d2 >> 0] | 0;
        if (sj(14909, f2 << 24 >> 24, 4) | 0) {
          e2 = Uj(1144) | 0;
          if (!e2)
            e2 = 0;
          else {
            h2 = e2;
            j2 = h2 + 112 | 0;
            do {
              c[h2 >> 2] = 0;
              h2 = h2 + 4 | 0;
            } while ((h2 | 0) < (j2 | 0));
            if (!(wj(d2, 43) | 0))
              c[e2 >> 2] = f2 << 24 >> 24 == 114 ? 8 : 4;
            if (wj(d2, 101) | 0) {
              c[g2 >> 2] = b2;
              c[g2 + 4 >> 2] = 2;
              c[g2 + 8 >> 2] = 1;
              va(221, g2 | 0) | 0;
              f2 = a[d2 >> 0] | 0;
            }
            if (f2 << 24 >> 24 == 97) {
              c[k2 >> 2] = b2;
              c[k2 + 4 >> 2] = 3;
              f2 = va(221, k2 | 0) | 0;
              if (!(f2 & 1024)) {
                c[l2 >> 2] = b2;
                c[l2 + 4 >> 2] = 4;
                c[l2 + 8 >> 2] = f2 | 1024;
                va(221, l2 | 0) | 0;
              }
              d2 = c[e2 >> 2] | 128;
              c[e2 >> 2] = d2;
            } else
              d2 = c[e2 >> 2] | 0;
            c[e2 + 60 >> 2] = b2;
            c[e2 + 44 >> 2] = e2 + 120;
            c[e2 + 48 >> 2] = 1024;
            f2 = e2 + 75 | 0;
            a[f2 >> 0] = -1;
            if ((d2 & 8 | 0) == 0 ? (c[n2 >> 2] = b2, c[n2 + 4 >> 2] = 21505, c[n2 + 8 >> 2] = m2, (mb(54, n2 | 0) | 0) == 0) : 0)
              a[f2 >> 0] = 10;
            c[e2 + 32 >> 2] = 14;
            c[e2 + 36 >> 2] = 4;
            c[e2 + 40 >> 2] = 5;
            c[e2 + 12 >> 2] = 2;
            if (!(c[598] | 0))
              c[e2 + 76 >> 2] = -1;
            yb(2416);
            f2 = c[603] | 0;
            c[e2 + 56 >> 2] = f2;
            if (f2)
              c[f2 + 52 >> 2] = e2;
            c[603] = e2;
            nb(2416);
          }
        } else {
          c[(qi() | 0) >> 2] = 22;
          e2 = 0;
        }
        i2 = o2;
        return e2 | 0;
      }
      function Ki(b2) {
        b2 = b2 | 0;
        var c2 = 0, d2 = 0, e2 = 0;
        d2 = (wj(b2, 43) | 0) == 0;
        c2 = a[b2 >> 0] | 0;
        d2 = d2 ? c2 << 24 >> 24 != 114 & 1 : 2;
        e2 = (wj(b2, 120) | 0) == 0;
        d2 = e2 ? d2 : d2 | 128;
        b2 = (wj(b2, 101) | 0) == 0;
        b2 = b2 ? d2 : d2 | 524288;
        b2 = c2 << 24 >> 24 == 114 ? b2 : b2 | 64;
        b2 = c2 << 24 >> 24 == 119 ? b2 | 512 : b2;
        return (c2 << 24 >> 24 == 97 ? b2 | 1024 : b2) | 0;
      }
      function Li(a2) {
        a2 = a2 | 0;
        return 0;
      }
      function Mi(a2) {
        a2 = a2 | 0;
        return;
      }
      function Ni(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0;
        b2 = i2;
        i2 = i2 + 16 | 0;
        d2 = b2;
        c[d2 >> 2] = c[a2 + 60 >> 2];
        a2 = wi(zb(6, d2 | 0) | 0) | 0;
        i2 = b2;
        return a2 | 0;
      }
      function Oi(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
        m2 = i2;
        i2 = i2 + 48 | 0;
        h2 = m2 + 16 | 0;
        g2 = m2;
        f2 = m2 + 32 | 0;
        c[f2 >> 2] = d2;
        j2 = f2 + 4 | 0;
        l2 = b2 + 48 | 0;
        n2 = c[l2 >> 2] | 0;
        c[j2 >> 2] = e2 - ((n2 | 0) != 0 & 1);
        k2 = b2 + 44 | 0;
        c[f2 + 8 >> 2] = c[k2 >> 2];
        c[f2 + 12 >> 2] = n2;
        if (!(c[597] | 0)) {
          c[h2 >> 2] = c[b2 + 60 >> 2];
          c[h2 + 4 >> 2] = f2;
          c[h2 + 8 >> 2] = 2;
          f2 = wi(Nb(145, h2 | 0) | 0) | 0;
        } else {
          Fa(13, b2 | 0);
          c[g2 >> 2] = c[b2 + 60 >> 2];
          c[g2 + 4 >> 2] = f2;
          c[g2 + 8 >> 2] = 2;
          f2 = wi(Nb(145, g2 | 0) | 0) | 0;
          pb(0);
        }
        if ((f2 | 0) >= 1) {
          j2 = c[j2 >> 2] | 0;
          if (f2 >>> 0 > j2 >>> 0) {
            h2 = c[k2 >> 2] | 0;
            g2 = b2 + 4 | 0;
            c[g2 >> 2] = h2;
            c[b2 + 8 >> 2] = h2 + (f2 - j2);
            if (!(c[l2 >> 2] | 0))
              f2 = e2;
            else {
              c[g2 >> 2] = h2 + 1;
              a[d2 + (e2 + -1) >> 0] = a[h2 >> 0] | 0;
              f2 = e2;
            }
          }
        } else {
          c[b2 >> 2] = c[b2 >> 2] | f2 & 48 ^ 16;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 4 >> 2] = 0;
        }
        i2 = m2;
        return f2 | 0;
      }
      function Pi(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0;
        f2 = i2;
        i2 = i2 + 32 | 0;
        g2 = f2;
        e2 = f2 + 20 | 0;
        c[g2 >> 2] = c[a2 + 60 >> 2];
        c[g2 + 4 >> 2] = 0;
        c[g2 + 8 >> 2] = b2;
        c[g2 + 12 >> 2] = e2;
        c[g2 + 16 >> 2] = d2;
        if ((wi(Ib(140, g2 | 0) | 0) | 0) < 0) {
          c[e2 >> 2] = -1;
          a2 = -1;
        } else
          a2 = c[e2 >> 2] | 0;
        i2 = f2;
        return a2 | 0;
      }
      function Qi(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
        q2 = i2;
        i2 = i2 + 48 | 0;
        n2 = q2 + 16 | 0;
        m2 = q2;
        e2 = q2 + 32 | 0;
        o2 = a2 + 28 | 0;
        f2 = c[o2 >> 2] | 0;
        c[e2 >> 2] = f2;
        p2 = a2 + 20 | 0;
        f2 = (c[p2 >> 2] | 0) - f2 | 0;
        c[e2 + 4 >> 2] = f2;
        c[e2 + 8 >> 2] = b2;
        c[e2 + 12 >> 2] = d2;
        k2 = a2 + 60 | 0;
        l2 = a2 + 44 | 0;
        b2 = 2;
        f2 = f2 + d2 | 0;
        while (1) {
          if (!(c[597] | 0)) {
            c[n2 >> 2] = c[k2 >> 2];
            c[n2 + 4 >> 2] = e2;
            c[n2 + 8 >> 2] = b2;
            h2 = wi(Ob(146, n2 | 0) | 0) | 0;
          } else {
            Fa(14, a2 | 0);
            c[m2 >> 2] = c[k2 >> 2];
            c[m2 + 4 >> 2] = e2;
            c[m2 + 8 >> 2] = b2;
            h2 = wi(Ob(146, m2 | 0) | 0) | 0;
            pb(0);
          }
          if ((f2 | 0) == (h2 | 0)) {
            f2 = 6;
            break;
          }
          if ((h2 | 0) < 0) {
            f2 = 8;
            break;
          }
          f2 = f2 - h2 | 0;
          g2 = c[e2 + 4 >> 2] | 0;
          if (h2 >>> 0 <= g2 >>> 0)
            if ((b2 | 0) == 2) {
              c[o2 >> 2] = (c[o2 >> 2] | 0) + h2;
              j2 = g2;
              b2 = 2;
            } else
              j2 = g2;
          else {
            j2 = c[l2 >> 2] | 0;
            c[o2 >> 2] = j2;
            c[p2 >> 2] = j2;
            j2 = c[e2 + 12 >> 2] | 0;
            h2 = h2 - g2 | 0;
            e2 = e2 + 8 | 0;
            b2 = b2 + -1 | 0;
          }
          c[e2 >> 2] = (c[e2 >> 2] | 0) + h2;
          c[e2 + 4 >> 2] = j2 - h2;
        }
        if ((f2 | 0) == 6) {
          n2 = c[l2 >> 2] | 0;
          c[a2 + 16 >> 2] = n2 + (c[a2 + 48 >> 2] | 0);
          a2 = n2;
          c[o2 >> 2] = a2;
          c[p2 >> 2] = a2;
        } else if ((f2 | 0) == 8) {
          c[a2 + 16 >> 2] = 0;
          c[o2 >> 2] = 0;
          c[p2 >> 2] = 0;
          c[a2 >> 2] = c[a2 >> 2] | 32;
          if ((b2 | 0) == 2)
            d2 = 0;
          else
            d2 = d2 - (c[e2 + 4 >> 2] | 0) | 0;
        }
        i2 = q2;
        return d2 | 0;
      }
      function Ri(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0;
        g2 = i2;
        i2 = i2 + 80 | 0;
        f2 = g2;
        c[b2 + 36 >> 2] = 4;
        if ((c[b2 >> 2] & 64 | 0) == 0 ? (c[f2 >> 2] = c[b2 + 60 >> 2], c[f2 + 4 >> 2] = 21505, c[f2 + 8 >> 2] = g2 + 12, (mb(54, f2 | 0) | 0) != 0) : 0)
          a[b2 + 75 >> 0] = -1;
        f2 = Qi(b2, d2, e2) | 0;
        i2 = g2;
        return f2 | 0;
      }
      function Si(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
        e2 = a2 + 84 | 0;
        g2 = c[e2 >> 2] | 0;
        h2 = d2 + 256 | 0;
        f2 = sj(g2, 0, h2) | 0;
        f2 = (f2 | 0) == 0 ? h2 : f2 - g2 | 0;
        d2 = f2 >>> 0 < d2 >>> 0 ? f2 : d2;
        ik(b2 | 0, g2 | 0, d2 | 0) | 0;
        c[a2 + 4 >> 2] = g2 + d2;
        b2 = g2 + f2 | 0;
        c[a2 + 8 >> 2] = b2;
        c[e2 >> 2] = b2;
        return d2 | 0;
      }
      function Ti(b2) {
        b2 = b2 | 0;
        var d2 = 0, e2 = 0;
        d2 = b2 + 74 | 0;
        e2 = a[d2 >> 0] | 0;
        a[d2 >> 0] = e2 + 255 | e2;
        d2 = b2 + 20 | 0;
        e2 = b2 + 44 | 0;
        if ((c[d2 >> 2] | 0) >>> 0 > (c[e2 >> 2] | 0) >>> 0)
          Qb[c[b2 + 36 >> 2] & 15](b2, 0, 0) | 0;
        c[b2 + 16 >> 2] = 0;
        c[b2 + 28 >> 2] = 0;
        c[d2 >> 2] = 0;
        d2 = c[b2 >> 2] | 0;
        if (d2 & 20)
          if (!(d2 & 4))
            d2 = -1;
          else {
            c[b2 >> 2] = d2 | 32;
            d2 = -1;
          }
        else {
          d2 = c[e2 >> 2] | 0;
          c[b2 + 8 >> 2] = d2;
          c[b2 + 4 >> 2] = d2;
          d2 = 0;
        }
        return d2 | 0;
      }
      function Ui(b2) {
        b2 = b2 | 0;
        var d2 = 0, e2 = 0;
        d2 = b2 + 74 | 0;
        e2 = a[d2 >> 0] | 0;
        a[d2 >> 0] = e2 + 255 | e2;
        d2 = c[b2 >> 2] | 0;
        if (!(d2 & 8)) {
          c[b2 + 8 >> 2] = 0;
          c[b2 + 4 >> 2] = 0;
          d2 = c[b2 + 44 >> 2] | 0;
          c[b2 + 28 >> 2] = d2;
          c[b2 + 20 >> 2] = d2;
          c[b2 + 16 >> 2] = d2 + (c[b2 + 48 >> 2] | 0);
          d2 = 0;
        } else {
          c[b2 >> 2] = d2 | 32;
          d2 = -1;
        }
        return d2 | 0;
      }
      function Vi(a2) {
        a2 = a2 | 0;
        var b2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        b2 = e2;
        if ((c[a2 + 8 >> 2] | 0) == 0 ? (Ti(a2) | 0) != 0 : 0)
          b2 = -1;
        else if ((Qb[c[a2 + 32 >> 2] & 15](a2, b2, 1) | 0) == 1)
          b2 = d[b2 >> 0] | 0;
        else
          b2 = -1;
        i2 = e2;
        return b2 | 0;
      }
      function Wi(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0;
        e2 = (c[a2 >> 2] & 1 | 0) != 0;
        if (!e2) {
          yb(2416);
          d2 = c[a2 + 52 >> 2] | 0;
          b2 = a2 + 56 | 0;
          if (d2)
            c[d2 + 56 >> 2] = c[b2 >> 2];
          b2 = c[b2 >> 2] | 0;
          if (b2)
            c[b2 + 52 >> 2] = d2;
          if ((c[603] | 0) == (a2 | 0))
            c[603] = b2;
          nb(2416);
        }
        b2 = Yi(a2) | 0;
        b2 = Yb[c[a2 + 12 >> 2] & 31](a2) | 0 | b2;
        d2 = c[a2 + 92 >> 2] | 0;
        if (d2)
          Vj(d2);
        if (!e2)
          Vj(a2);
        return b2 | 0;
      }
      function Xi(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        if ((c[a2 + 76 >> 2] | 0) > -1) {
          b2 = (Li(a2) | 0) == 0;
          a2 = (c[a2 >> 2] | 0) >>> 5 & 1;
        } else
          a2 = (c[a2 >> 2] | 0) >>> 5 & 1;
        return a2 | 0;
      }
      function Yi(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0;
        do {
          if (a2) {
            if ((c[a2 + 76 >> 2] | 0) <= -1) {
              b2 = Kj(a2) | 0;
              break;
            }
            d2 = (Li(a2) | 0) == 0;
            b2 = Kj(a2) | 0;
            if (!d2)
              Mi(a2);
          } else {
            if (!(c[660] | 0))
              b2 = 0;
            else
              b2 = Yi(c[660] | 0) | 0;
            yb(2416);
            a2 = c[603] | 0;
            if (a2)
              do {
                if ((c[a2 + 76 >> 2] | 0) > -1)
                  d2 = Li(a2) | 0;
                else
                  d2 = 0;
                if ((c[a2 + 20 >> 2] | 0) >>> 0 > (c[a2 + 28 >> 2] | 0) >>> 0)
                  b2 = Kj(a2) | 0 | b2;
                if (d2)
                  Mi(a2);
                a2 = c[a2 + 56 >> 2] | 0;
              } while ((a2 | 0) != 0);
            nb(2416);
          }
        } while (0);
        return b2 | 0;
      }
      function Zi(b2, e2, f2) {
        b2 = b2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
        if ((c[f2 + 76 >> 2] | 0) > -1)
          o2 = Li(f2) | 0;
        else
          o2 = 0;
        g2 = e2 + -1 | 0;
        if ((e2 | 0) < 2) {
          p2 = f2 + 74 | 0;
          n2 = a[p2 >> 0] | 0;
          a[p2 >> 0] = n2 + 255 | n2;
          if (o2)
            Mi(f2);
          if (!g2)
            a[b2 >> 0] = 0;
          else
            b2 = 0;
        } else {
          a:
            do {
              if (g2) {
                m2 = f2 + 4 | 0;
                n2 = f2 + 8 | 0;
                h2 = b2;
                while (1) {
                  i3 = c[m2 >> 2] | 0;
                  q2 = i3;
                  k2 = (c[n2 >> 2] | 0) - q2 | 0;
                  j2 = sj(i3, 10, k2) | 0;
                  r2 = (j2 | 0) == 0;
                  j2 = r2 ? k2 : 1 - q2 + j2 | 0;
                  q2 = j2 >>> 0 < g2 >>> 0;
                  j2 = q2 ? j2 : g2;
                  ik(h2 | 0, i3 | 0, j2 | 0) | 0;
                  i3 = c[m2 >> 2] | 0;
                  k2 = i3 + j2 | 0;
                  c[m2 >> 2] = k2;
                  e2 = h2 + j2 | 0;
                  l2 = g2 - j2 | 0;
                  if (!(r2 & q2)) {
                    p2 = 18;
                    break a;
                  }
                  if (k2 >>> 0 < (c[n2 >> 2] | 0) >>> 0) {
                    j2 = j2 + 1 | 0;
                    c[m2 >> 2] = i3 + j2;
                    i3 = d[k2 >> 0] | 0;
                  } else {
                    g2 = Vi(f2) | 0;
                    if ((g2 | 0) < 0)
                      break;
                    j2 = j2 + 1 | 0;
                    i3 = g2;
                  }
                  g2 = l2 + -1 | 0;
                  h2 = h2 + j2 | 0;
                  a[e2 >> 0] = i3;
                  if (!((g2 | 0) != 0 & (i3 & 255 | 0) != 10)) {
                    e2 = h2;
                    p2 = 18;
                    break a;
                  }
                }
                if ((e2 | 0) != (b2 | 0) ? (c[f2 >> 2] & 16 | 0) != 0 : 0)
                  p2 = 18;
                else
                  b2 = 0;
              } else {
                e2 = b2;
                p2 = 18;
              }
            } while (0);
          if ((p2 | 0) == 18)
            if (!b2)
              b2 = 0;
            else
              a[e2 >> 0] = 0;
          if (o2)
            Mi(f2);
        }
        return b2 | 0;
      }
      function _i(b2, d2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
        g2 = i2;
        i2 = i2 + 32 | 0;
        f2 = g2 + 16 | 0;
        e2 = g2;
        if (sj(14909, a[d2 >> 0] | 0, 4) | 0) {
          h2 = Ki(d2) | 0 | 32768;
          c[e2 >> 2] = b2;
          c[e2 + 4 >> 2] = h2;
          c[e2 + 8 >> 2] = 438;
          e2 = wi(Ab(5, e2 | 0) | 0) | 0;
          if ((e2 | 0) >= 0) {
            b2 = Ji(e2, d2) | 0;
            if (!b2) {
              c[f2 >> 2] = e2;
              zb(6, f2 | 0) | 0;
              b2 = 0;
            }
          } else
            b2 = 0;
        } else {
          c[(qi() | 0) >> 2] = 22;
          b2 = 0;
        }
        i2 = g2;
        return b2 | 0;
      }
      function $i(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        return (ij(a2, Bj(a2) | 0, 1, b2) | 0) + -1 | 0;
      }
      function aj(b2, d2, e2, f2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0;
        j2 = $(e2, d2) | 0;
        if ((c[f2 + 76 >> 2] | 0) > -1)
          k2 = Li(f2) | 0;
        else
          k2 = 0;
        g2 = f2 + 74 | 0;
        h2 = a[g2 >> 0] | 0;
        a[g2 >> 0] = h2 + 255 | h2;
        g2 = f2 + 4 | 0;
        h2 = c[g2 >> 2] | 0;
        i3 = (c[f2 + 8 >> 2] | 0) - h2 | 0;
        if ((i3 | 0) > 0) {
          i3 = i3 >>> 0 < j2 >>> 0 ? i3 : j2;
          ik(b2 | 0, h2 | 0, i3 | 0) | 0;
          c[g2 >> 2] = h2 + i3;
          b2 = b2 + i3 | 0;
          g2 = j2 - i3 | 0;
        } else
          g2 = j2;
        a:
          do {
            if (!g2)
              l2 = 13;
            else {
              i3 = f2 + 32 | 0;
              h2 = g2;
              while (1) {
                if (Ti(f2) | 0) {
                  e2 = h2;
                  break;
                }
                g2 = Qb[c[i3 >> 2] & 15](f2, b2, h2) | 0;
                if ((g2 + 1 | 0) >>> 0 < 2) {
                  e2 = h2;
                  break;
                }
                if ((h2 | 0) == (g2 | 0)) {
                  l2 = 13;
                  break a;
                } else {
                  b2 = b2 + g2 | 0;
                  h2 = h2 - g2 | 0;
                }
              }
              if (k2)
                Mi(f2);
              e2 = ((j2 - e2 | 0) >>> 0) / (d2 >>> 0) | 0;
            }
          } while (0);
        if ((l2 | 0) == 13) {
          if (k2)
            Mi(f2);
        }
        return e2 | 0;
      }
      function bj(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0;
        if ((d2 | 0) == 1)
          b2 = b2 - (c[a2 + 8 >> 2] | 0) + (c[a2 + 4 >> 2] | 0) | 0;
        f2 = a2 + 20 | 0;
        e2 = a2 + 28 | 0;
        if ((c[f2 >> 2] | 0) >>> 0 > (c[e2 >> 2] | 0) >>> 0 ? (Qb[c[a2 + 36 >> 2] & 15](a2, 0, 0) | 0, (c[f2 >> 2] | 0) == 0) : 0)
          b2 = -1;
        else {
          c[a2 + 16 >> 2] = 0;
          c[e2 >> 2] = 0;
          c[f2 >> 2] = 0;
          if ((Qb[c[a2 + 40 >> 2] & 15](a2, b2, d2) | 0) < 0)
            b2 = -1;
          else {
            c[a2 + 8 >> 2] = 0;
            c[a2 + 4 >> 2] = 0;
            c[a2 >> 2] = c[a2 >> 2] & -17;
            b2 = 0;
          }
        }
        return b2 | 0;
      }
      function cj(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0;
        if ((c[a2 + 76 >> 2] | 0) > -1) {
          e2 = (Li(a2) | 0) == 0;
          b2 = bj(a2, b2, d2) | 0;
          if (!e2)
            Mi(a2);
        } else
          b2 = bj(a2, b2, d2) | 0;
        return b2 | 0;
      }
      function dj(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        return cj(a2, b2, c2) | 0;
      }
      function ej(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        if (!(c[a2 >> 2] & 128))
          b2 = 1;
        else
          b2 = (c[a2 + 20 >> 2] | 0) >>> 0 > (c[a2 + 28 >> 2] | 0) >>> 0 ? 2 : 1;
        b2 = Qb[c[a2 + 40 >> 2] & 15](a2, 0, b2) | 0;
        if ((b2 | 0) >= 0)
          b2 = b2 - (c[a2 + 8 >> 2] | 0) + (c[a2 + 4 >> 2] | 0) + (c[a2 + 20 >> 2] | 0) - (c[a2 + 28 >> 2] | 0) | 0;
        return b2 | 0;
      }
      function fj(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        if ((c[a2 + 76 >> 2] | 0) > -1) {
          b2 = (Li(a2) | 0) == 0;
          a2 = ej(a2) | 0;
        } else
          a2 = ej(a2) | 0;
        return a2 | 0;
      }
      function gj(a2) {
        a2 = a2 | 0;
        return fj(a2) | 0;
      }
      function hj(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
        f2 = e2 + 16 | 0;
        g2 = c[f2 >> 2] | 0;
        if (!g2)
          if (!(Ui(e2) | 0)) {
            g2 = c[f2 >> 2] | 0;
            h2 = 4;
          } else
            f2 = 0;
        else
          h2 = 4;
        a:
          do {
            if ((h2 | 0) == 4) {
              i3 = e2 + 20 | 0;
              h2 = c[i3 >> 2] | 0;
              if ((g2 - h2 | 0) >>> 0 < d2 >>> 0) {
                f2 = Qb[c[e2 + 36 >> 2] & 15](e2, b2, d2) | 0;
                break;
              }
              b:
                do {
                  if ((a[e2 + 75 >> 0] | 0) > -1) {
                    f2 = d2;
                    while (1) {
                      if (!f2) {
                        g2 = h2;
                        f2 = 0;
                        break b;
                      }
                      g2 = f2 + -1 | 0;
                      if ((a[b2 + g2 >> 0] | 0) == 10)
                        break;
                      else
                        f2 = g2;
                    }
                    if ((Qb[c[e2 + 36 >> 2] & 15](e2, b2, f2) | 0) >>> 0 < f2 >>> 0)
                      break a;
                    d2 = d2 - f2 | 0;
                    b2 = b2 + f2 | 0;
                    g2 = c[i3 >> 2] | 0;
                  } else {
                    g2 = h2;
                    f2 = 0;
                  }
                } while (0);
              ik(g2 | 0, b2 | 0, d2 | 0) | 0;
              c[i3 >> 2] = (c[i3 >> 2] | 0) + d2;
              f2 = f2 + d2 | 0;
            }
          } while (0);
        return f2 | 0;
      }
      function ij(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0;
        f2 = $(d2, b2) | 0;
        if ((c[e2 + 76 >> 2] | 0) > -1) {
          g2 = (Li(e2) | 0) == 0;
          a2 = hj(a2, f2, e2) | 0;
          if (!g2)
            Mi(e2);
        } else
          a2 = hj(a2, f2, e2) | 0;
        if ((a2 | 0) != (f2 | 0))
          d2 = (a2 >>> 0) / (b2 >>> 0) | 0;
        return d2 | 0;
      }
      function jj(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        if ((c[a2 + 76 >> 2] | 0) > -1) {
          b2 = (Li(a2) | 0) == 0;
          bj(a2, 0, 0) | 0;
          c[a2 >> 2] = c[a2 >> 2] & -33;
          if (!b2)
            Mi(a2);
        } else {
          bj(a2, 0, 0) | 0;
          c[a2 >> 2] = c[a2 >> 2] & -33;
        }
        return;
      }
      function kj(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        f2 = e2;
        c[f2 >> 2] = d2;
        d2 = pj(a2, b2, f2) | 0;
        i2 = e2;
        return d2 | 0;
      }
      function lj(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0;
        j2 = i2;
        i2 = i2 + 16 | 0;
        e2 = j2;
        f2 = Uj(240) | 0;
        do {
          if (f2) {
            c[e2 >> 2] = c[d2 >> 2];
            e2 = oj(f2, 240, b2, e2) | 0;
            if (e2 >>> 0 < 240) {
              b2 = Xj(f2, e2 + 1 | 0) | 0;
              c[a2 >> 2] = (b2 | 0) != 0 ? b2 : f2;
              break;
            }
            Vj(f2);
            if ((e2 | 0) >= 0 ? (h2 = e2 + 1 | 0, g2 = Uj(h2) | 0, c[a2 >> 2] = g2, (g2 | 0) != 0) : 0)
              e2 = oj(g2, h2, b2, d2) | 0;
            else
              e2 = -1;
          } else
            e2 = -1;
        } while (0);
        i2 = j2;
        return e2 | 0;
      }
      function mj(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
        s2 = i2;
        i2 = i2 + 224 | 0;
        o2 = s2 + 80 | 0;
        r2 = s2 + 96 | 0;
        q2 = s2;
        p2 = s2 + 136 | 0;
        f2 = r2;
        g2 = f2 + 40 | 0;
        do {
          c[f2 >> 2] = 0;
          f2 = f2 + 4 | 0;
        } while ((f2 | 0) < (g2 | 0));
        c[o2 >> 2] = c[e2 >> 2];
        if ((Lj(0, d2, o2, q2, r2) | 0) < 0)
          e2 = -1;
        else {
          if ((c[b2 + 76 >> 2] | 0) > -1)
            m2 = Li(b2) | 0;
          else
            m2 = 0;
          e2 = c[b2 >> 2] | 0;
          n2 = e2 & 32;
          if ((a[b2 + 74 >> 0] | 0) < 1)
            c[b2 >> 2] = e2 & -33;
          e2 = b2 + 48 | 0;
          if (!(c[e2 >> 2] | 0)) {
            g2 = b2 + 44 | 0;
            h2 = c[g2 >> 2] | 0;
            c[g2 >> 2] = p2;
            j2 = b2 + 28 | 0;
            c[j2 >> 2] = p2;
            k2 = b2 + 20 | 0;
            c[k2 >> 2] = p2;
            c[e2 >> 2] = 80;
            l2 = b2 + 16 | 0;
            c[l2 >> 2] = p2 + 80;
            f2 = Lj(b2, d2, o2, q2, r2) | 0;
            if (h2) {
              Qb[c[b2 + 36 >> 2] & 15](b2, 0, 0) | 0;
              f2 = (c[k2 >> 2] | 0) == 0 ? -1 : f2;
              c[g2 >> 2] = h2;
              c[e2 >> 2] = 0;
              c[l2 >> 2] = 0;
              c[j2 >> 2] = 0;
              c[k2 >> 2] = 0;
            }
          } else
            f2 = Lj(b2, d2, o2, q2, r2) | 0;
          e2 = c[b2 >> 2] | 0;
          c[b2 >> 2] = e2 | n2;
          if (m2)
            Mi(b2);
          e2 = (e2 & 32 | 0) == 0 ? f2 : -1;
        }
        i2 = s2;
        return e2 | 0;
      }
      function nj(e2, f2, j2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0;
        P2 = i2;
        i2 = i2 + 304 | 0;
        H2 = P2 + 16 | 0;
        J2 = P2 + 8 | 0;
        I2 = P2 + 33 | 0;
        K2 = P2;
        y2 = P2 + 32 | 0;
        if ((c[e2 + 76 >> 2] | 0) > -1)
          O2 = Li(e2) | 0;
        else
          O2 = 0;
        k2 = a[f2 >> 0] | 0;
        a:
          do {
            if (k2 << 24 >> 24) {
              L2 = e2 + 4 | 0;
              M2 = e2 + 100 | 0;
              G2 = e2 + 108 | 0;
              z2 = e2 + 8 | 0;
              A2 = I2 + 10 | 0;
              B2 = I2 + 33 | 0;
              C2 = J2 + 4 | 0;
              E2 = I2 + 46 | 0;
              F2 = I2 + 94 | 0;
              m2 = k2;
              k2 = 0;
              n2 = f2;
              s2 = 0;
              l2 = 0;
              f2 = 0;
              b:
                while (1) {
                  c:
                    do {
                      if (!(pi(m2 & 255) | 0)) {
                        m2 = (a[n2 >> 0] | 0) == 37;
                        d:
                          do {
                            if (m2) {
                              q2 = n2 + 1 | 0;
                              o2 = a[q2 >> 0] | 0;
                              e:
                                do {
                                  switch (o2 << 24 >> 24) {
                                    case 37:
                                      break d;
                                    case 42: {
                                      x2 = 0;
                                      o2 = n2 + 2 | 0;
                                      break;
                                    }
                                    default: {
                                      o2 = (o2 & 255) + -48 | 0;
                                      if (o2 >>> 0 < 10 ? (a[n2 + 2 >> 0] | 0) == 36 : 0) {
                                        c[H2 >> 2] = c[j2 >> 2];
                                        while (1) {
                                          x2 = (c[H2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                                          m2 = c[x2 >> 2] | 0;
                                          c[H2 >> 2] = x2 + 4;
                                          if (o2 >>> 0 > 1)
                                            o2 = o2 + -1 | 0;
                                          else
                                            break;
                                        }
                                        x2 = m2;
                                        o2 = n2 + 3 | 0;
                                        break e;
                                      }
                                      o2 = (c[j2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                                      x2 = c[o2 >> 2] | 0;
                                      c[j2 >> 2] = o2 + 4;
                                      o2 = q2;
                                    }
                                  }
                                } while (0);
                              m2 = a[o2 >> 0] | 0;
                              n2 = m2 & 255;
                              if ((n2 + -48 | 0) >>> 0 < 10) {
                                m2 = 0;
                                while (1) {
                                  q2 = (m2 * 10 | 0) + -48 + n2 | 0;
                                  o2 = o2 + 1 | 0;
                                  m2 = a[o2 >> 0] | 0;
                                  n2 = m2 & 255;
                                  if ((n2 + -48 | 0) >>> 0 >= 10)
                                    break;
                                  else
                                    m2 = q2;
                                }
                              } else
                                q2 = 0;
                              if (m2 << 24 >> 24 == 109) {
                                o2 = o2 + 1 | 0;
                                r2 = a[o2 >> 0] | 0;
                                m2 = (x2 | 0) != 0 & 1;
                                l2 = 0;
                                f2 = 0;
                              } else {
                                r2 = m2;
                                m2 = 0;
                              }
                              n2 = o2 + 1 | 0;
                              switch (r2 & 255 | 0) {
                                case 104: {
                                  w2 = (a[n2 >> 0] | 0) == 104;
                                  n2 = w2 ? o2 + 2 | 0 : n2;
                                  o2 = w2 ? -2 : -1;
                                  break;
                                }
                                case 108: {
                                  w2 = (a[n2 >> 0] | 0) == 108;
                                  n2 = w2 ? o2 + 2 | 0 : n2;
                                  o2 = w2 ? 3 : 1;
                                  break;
                                }
                                case 106: {
                                  o2 = 3;
                                  break;
                                }
                                case 116:
                                case 122: {
                                  o2 = 1;
                                  break;
                                }
                                case 76: {
                                  o2 = 2;
                                  break;
                                }
                                case 110:
                                case 112:
                                case 67:
                                case 83:
                                case 91:
                                case 99:
                                case 115:
                                case 88:
                                case 71:
                                case 70:
                                case 69:
                                case 65:
                                case 103:
                                case 102:
                                case 101:
                                case 97:
                                case 120:
                                case 117:
                                case 111:
                                case 105:
                                case 100: {
                                  n2 = o2;
                                  o2 = 0;
                                  break;
                                }
                                default: {
                                  N2 = 152;
                                  break b;
                                }
                              }
                              r2 = d[n2 >> 0] | 0;
                              t2 = (r2 & 47 | 0) == 3;
                              r2 = t2 ? r2 | 32 : r2;
                              t2 = t2 ? 1 : o2;
                              switch (r2 | 0) {
                                case 99: {
                                  w2 = s2;
                                  v2 = (q2 | 0) < 1 ? 1 : q2;
                                  break;
                                }
                                case 91: {
                                  w2 = s2;
                                  v2 = q2;
                                  break;
                                }
                                case 110: {
                                  if (!x2) {
                                    o2 = s2;
                                    break c;
                                  }
                                  switch (t2 | 0) {
                                    case -2: {
                                      a[x2 >> 0] = s2;
                                      o2 = s2;
                                      break c;
                                    }
                                    case -1: {
                                      b[x2 >> 1] = s2;
                                      o2 = s2;
                                      break c;
                                    }
                                    case 0: {
                                      c[x2 >> 2] = s2;
                                      o2 = s2;
                                      break c;
                                    }
                                    case 1: {
                                      c[x2 >> 2] = s2;
                                      o2 = s2;
                                      break c;
                                    }
                                    case 3: {
                                      o2 = x2;
                                      c[o2 >> 2] = s2;
                                      c[o2 + 4 >> 2] = ((s2 | 0) < 0) << 31 >> 31;
                                      o2 = s2;
                                      break c;
                                    }
                                    default: {
                                      o2 = s2;
                                      break c;
                                    }
                                  }
                                }
                                default: {
                                  ui(e2, 0);
                                  do {
                                    o2 = c[L2 >> 2] | 0;
                                    if (o2 >>> 0 < (c[M2 >> 2] | 0) >>> 0) {
                                      c[L2 >> 2] = o2 + 1;
                                      o2 = d[o2 >> 0] | 0;
                                    } else
                                      o2 = vi(e2) | 0;
                                  } while ((pi(o2) | 0) != 0);
                                  o2 = c[L2 >> 2] | 0;
                                  if (c[M2 >> 2] | 0) {
                                    o2 = o2 + -1 | 0;
                                    c[L2 >> 2] = o2;
                                  }
                                  w2 = (c[G2 >> 2] | 0) + s2 + o2 - (c[z2 >> 2] | 0) | 0;
                                  v2 = q2;
                                }
                              }
                              ui(e2, v2);
                              o2 = c[L2 >> 2] | 0;
                              q2 = c[M2 >> 2] | 0;
                              if (o2 >>> 0 < q2 >>> 0)
                                c[L2 >> 2] = o2 + 1;
                              else {
                                if ((vi(e2) | 0) < 0) {
                                  N2 = 152;
                                  break b;
                                }
                                q2 = c[M2 >> 2] | 0;
                              }
                              if (q2)
                                c[L2 >> 2] = (c[L2 >> 2] | 0) + -1;
                              f:
                                do {
                                  switch (r2 | 0) {
                                    case 91:
                                    case 99:
                                    case 115: {
                                      u2 = (r2 | 0) == 99;
                                      g:
                                        do {
                                          if ((r2 & 239 | 0) == 99) {
                                            ek(I2 | 0, -1, 257) | 0;
                                            a[I2 >> 0] = 0;
                                            if ((r2 | 0) == 115) {
                                              a[B2 >> 0] = 0;
                                              a[A2 >> 0] = 0;
                                              a[A2 + 1 >> 0] = 0;
                                              a[A2 + 2 >> 0] = 0;
                                              a[A2 + 3 >> 0] = 0;
                                              a[A2 + 4 >> 0] = 0;
                                            }
                                          } else {
                                            Q2 = n2 + 1 | 0;
                                            s2 = (a[Q2 >> 0] | 0) == 94;
                                            o2 = s2 & 1;
                                            r2 = s2 ? Q2 : n2;
                                            n2 = s2 ? n2 + 2 | 0 : Q2;
                                            ek(I2 | 0, s2 & 1 | 0, 257) | 0;
                                            a[I2 >> 0] = 0;
                                            switch (a[n2 >> 0] | 0) {
                                              case 45: {
                                                s2 = (o2 ^ 1) & 255;
                                                a[E2 >> 0] = s2;
                                                n2 = r2 + 2 | 0;
                                                break;
                                              }
                                              case 93: {
                                                s2 = (o2 ^ 1) & 255;
                                                a[F2 >> 0] = s2;
                                                n2 = r2 + 2 | 0;
                                                break;
                                              }
                                              default:
                                                s2 = (o2 ^ 1) & 255;
                                            }
                                            while (1) {
                                              o2 = a[n2 >> 0] | 0;
                                              h:
                                                do {
                                                  switch (o2 << 24 >> 24) {
                                                    case 0: {
                                                      N2 = 152;
                                                      break b;
                                                    }
                                                    case 93:
                                                      break g;
                                                    case 45: {
                                                      r2 = n2 + 1 | 0;
                                                      o2 = a[r2 >> 0] | 0;
                                                      switch (o2 << 24 >> 24) {
                                                        case 93:
                                                        case 0: {
                                                          o2 = 45;
                                                          break h;
                                                        }
                                                        default: {
                                                        }
                                                      }
                                                      n2 = a[n2 + -1 >> 0] | 0;
                                                      if ((n2 & 255) < (o2 & 255)) {
                                                        n2 = n2 & 255;
                                                        do {
                                                          n2 = n2 + 1 | 0;
                                                          a[I2 + n2 >> 0] = s2;
                                                          o2 = a[r2 >> 0] | 0;
                                                        } while ((n2 | 0) < (o2 & 255 | 0));
                                                        n2 = r2;
                                                      } else
                                                        n2 = r2;
                                                      break;
                                                    }
                                                    default: {
                                                    }
                                                  }
                                                } while (0);
                                              a[I2 + ((o2 & 255) + 1) >> 0] = s2;
                                              n2 = n2 + 1 | 0;
                                            }
                                          }
                                        } while (0);
                                      r2 = u2 ? v2 + 1 | 0 : 31;
                                      s2 = (t2 | 0) == 1;
                                      t2 = (m2 | 0) != 0;
                                      i:
                                        do {
                                          if (s2) {
                                            if (t2) {
                                              f2 = Uj(r2 << 2) | 0;
                                              if (!f2) {
                                                l2 = 0;
                                                N2 = 152;
                                                break b;
                                              }
                                            } else
                                              f2 = x2;
                                            c[J2 >> 2] = 0;
                                            c[C2 >> 2] = 0;
                                            l2 = 0;
                                            j:
                                              while (1) {
                                                q2 = (f2 | 0) == 0;
                                                do {
                                                  k:
                                                    while (1) {
                                                      o2 = c[L2 >> 2] | 0;
                                                      if (o2 >>> 0 < (c[M2 >> 2] | 0) >>> 0) {
                                                        c[L2 >> 2] = o2 + 1;
                                                        o2 = d[o2 >> 0] | 0;
                                                      } else
                                                        o2 = vi(e2) | 0;
                                                      if (!(a[I2 + (o2 + 1) >> 0] | 0))
                                                        break j;
                                                      a[y2 >> 0] = o2;
                                                      switch (Fi(K2, y2, 1, J2) | 0) {
                                                        case -1: {
                                                          l2 = 0;
                                                          N2 = 152;
                                                          break b;
                                                        }
                                                        case -2:
                                                          break;
                                                        default:
                                                          break k;
                                                      }
                                                    }
                                                  if (!q2) {
                                                    c[f2 + (l2 << 2) >> 2] = c[K2 >> 2];
                                                    l2 = l2 + 1 | 0;
                                                  }
                                                } while (!(t2 & (l2 | 0) == (r2 | 0)));
                                                l2 = r2 << 1 | 1;
                                                o2 = Xj(f2, l2 << 2) | 0;
                                                if (!o2) {
                                                  l2 = 0;
                                                  N2 = 152;
                                                  break b;
                                                }
                                                Q2 = r2;
                                                r2 = l2;
                                                f2 = o2;
                                                l2 = Q2;
                                              }
                                            if (!(Gi(J2) | 0)) {
                                              l2 = 0;
                                              N2 = 152;
                                              break b;
                                            } else {
                                              q2 = l2;
                                              l2 = 0;
                                            }
                                          } else {
                                            if (t2) {
                                              l2 = Uj(r2) | 0;
                                              if (!l2) {
                                                l2 = 0;
                                                f2 = 0;
                                                N2 = 152;
                                                break b;
                                              } else
                                                o2 = 0;
                                              while (1) {
                                                do {
                                                  f2 = c[L2 >> 2] | 0;
                                                  if (f2 >>> 0 < (c[M2 >> 2] | 0) >>> 0) {
                                                    c[L2 >> 2] = f2 + 1;
                                                    f2 = d[f2 >> 0] | 0;
                                                  } else
                                                    f2 = vi(e2) | 0;
                                                  if (!(a[I2 + (f2 + 1) >> 0] | 0)) {
                                                    q2 = o2;
                                                    f2 = 0;
                                                    break i;
                                                  }
                                                  a[l2 + o2 >> 0] = f2;
                                                  o2 = o2 + 1 | 0;
                                                } while ((o2 | 0) != (r2 | 0));
                                                f2 = r2 << 1 | 1;
                                                o2 = Xj(l2, f2) | 0;
                                                if (!o2) {
                                                  f2 = 0;
                                                  N2 = 152;
                                                  break b;
                                                } else {
                                                  Q2 = r2;
                                                  r2 = f2;
                                                  l2 = o2;
                                                  o2 = Q2;
                                                }
                                              }
                                            }
                                            if (!x2) {
                                              l2 = q2;
                                              while (1) {
                                                f2 = c[L2 >> 2] | 0;
                                                if (f2 >>> 0 < l2 >>> 0) {
                                                  c[L2 >> 2] = f2 + 1;
                                                  f2 = d[f2 >> 0] | 0;
                                                } else
                                                  f2 = vi(e2) | 0;
                                                if (!(a[I2 + (f2 + 1) >> 0] | 0)) {
                                                  q2 = 0;
                                                  l2 = 0;
                                                  f2 = 0;
                                                  break i;
                                                }
                                                l2 = c[M2 >> 2] | 0;
                                              }
                                            } else {
                                              l2 = 0;
                                              while (1) {
                                                f2 = c[L2 >> 2] | 0;
                                                if (f2 >>> 0 < q2 >>> 0) {
                                                  c[L2 >> 2] = f2 + 1;
                                                  f2 = d[f2 >> 0] | 0;
                                                } else
                                                  f2 = vi(e2) | 0;
                                                if (!(a[I2 + (f2 + 1) >> 0] | 0)) {
                                                  q2 = l2;
                                                  l2 = x2;
                                                  f2 = 0;
                                                  break i;
                                                }
                                                a[x2 + l2 >> 0] = f2;
                                                q2 = c[M2 >> 2] | 0;
                                                l2 = l2 + 1 | 0;
                                              }
                                            }
                                          }
                                        } while (0);
                                      o2 = c[L2 >> 2] | 0;
                                      if (c[M2 >> 2] | 0) {
                                        o2 = o2 + -1 | 0;
                                        c[L2 >> 2] = o2;
                                      }
                                      o2 = o2 - (c[z2 >> 2] | 0) + (c[G2 >> 2] | 0) | 0;
                                      if (!o2)
                                        break b;
                                      if (!((o2 | 0) == (v2 | 0) | u2 ^ 1))
                                        break b;
                                      do {
                                        if (t2)
                                          if (s2) {
                                            c[x2 >> 2] = f2;
                                            break;
                                          } else {
                                            c[x2 >> 2] = l2;
                                            break;
                                          }
                                      } while (0);
                                      if (!u2) {
                                        if (f2)
                                          c[f2 + (q2 << 2) >> 2] = 0;
                                        if (!l2) {
                                          l2 = 0;
                                          break f;
                                        }
                                        a[l2 + q2 >> 0] = 0;
                                      }
                                      break;
                                    }
                                    case 120:
                                    case 88:
                                    case 112: {
                                      o2 = 16;
                                      N2 = 134;
                                      break;
                                    }
                                    case 111: {
                                      o2 = 8;
                                      N2 = 134;
                                      break;
                                    }
                                    case 117:
                                    case 100: {
                                      o2 = 10;
                                      N2 = 134;
                                      break;
                                    }
                                    case 105: {
                                      o2 = 0;
                                      N2 = 134;
                                      break;
                                    }
                                    case 71:
                                    case 103:
                                    case 70:
                                    case 102:
                                    case 69:
                                    case 101:
                                    case 65:
                                    case 97: {
                                      p2 = +si(e2, t2, 0);
                                      if ((c[G2 >> 2] | 0) == ((c[z2 >> 2] | 0) - (c[L2 >> 2] | 0) | 0))
                                        break b;
                                      if (x2)
                                        switch (t2 | 0) {
                                          case 0: {
                                            g[x2 >> 2] = p2;
                                            break f;
                                          }
                                          case 1: {
                                            h[x2 >> 3] = p2;
                                            break f;
                                          }
                                          case 2: {
                                            h[x2 >> 3] = p2;
                                            break f;
                                          }
                                          default:
                                            break f;
                                        }
                                      break;
                                    }
                                    default: {
                                    }
                                  }
                                } while (0);
                              l:
                                do {
                                  if ((N2 | 0) == 134) {
                                    N2 = 0;
                                    o2 = ti(e2, o2, 0, -1, -1) | 0;
                                    if ((c[G2 >> 2] | 0) == ((c[z2 >> 2] | 0) - (c[L2 >> 2] | 0) | 0))
                                      break b;
                                    if ((x2 | 0) != 0 & (r2 | 0) == 112) {
                                      c[x2 >> 2] = o2;
                                      break;
                                    }
                                    if (x2)
                                      switch (t2 | 0) {
                                        case -2: {
                                          a[x2 >> 0] = o2;
                                          break l;
                                        }
                                        case -1: {
                                          b[x2 >> 1] = o2;
                                          break l;
                                        }
                                        case 0: {
                                          c[x2 >> 2] = o2;
                                          break l;
                                        }
                                        case 1: {
                                          c[x2 >> 2] = o2;
                                          break l;
                                        }
                                        case 3: {
                                          Q2 = x2;
                                          c[Q2 >> 2] = o2;
                                          c[Q2 + 4 >> 2] = D;
                                          break l;
                                        }
                                        default:
                                          break l;
                                      }
                                  }
                                } while (0);
                              k2 = ((x2 | 0) != 0 & 1) + k2 | 0;
                              o2 = (c[G2 >> 2] | 0) + w2 + (c[L2 >> 2] | 0) - (c[z2 >> 2] | 0) | 0;
                              break c;
                            }
                          } while (0);
                        n2 = n2 + (m2 & 1) | 0;
                        ui(e2, 0);
                        m2 = c[L2 >> 2] | 0;
                        if (m2 >>> 0 < (c[M2 >> 2] | 0) >>> 0) {
                          c[L2 >> 2] = m2 + 1;
                          m2 = d[m2 >> 0] | 0;
                        } else
                          m2 = vi(e2) | 0;
                        if ((m2 | 0) != (d[n2 >> 0] | 0)) {
                          N2 = 21;
                          break b;
                        }
                        o2 = s2 + 1 | 0;
                      } else {
                        while (1) {
                          m2 = n2 + 1 | 0;
                          if (!(pi(d[m2 >> 0] | 0) | 0))
                            break;
                          else
                            n2 = m2;
                        }
                        ui(e2, 0);
                        do {
                          m2 = c[L2 >> 2] | 0;
                          if (m2 >>> 0 < (c[M2 >> 2] | 0) >>> 0) {
                            c[L2 >> 2] = m2 + 1;
                            m2 = d[m2 >> 0] | 0;
                          } else
                            m2 = vi(e2) | 0;
                        } while ((pi(m2) | 0) != 0);
                        m2 = c[L2 >> 2] | 0;
                        if (c[M2 >> 2] | 0) {
                          m2 = m2 + -1 | 0;
                          c[L2 >> 2] = m2;
                        }
                        o2 = (c[G2 >> 2] | 0) + s2 + m2 - (c[z2 >> 2] | 0) | 0;
                      }
                    } while (0);
                  n2 = n2 + 1 | 0;
                  m2 = a[n2 >> 0] | 0;
                  if (!(m2 << 24 >> 24))
                    break a;
                  else
                    s2 = o2;
                }
              if ((N2 | 0) == 21) {
                if (c[M2 >> 2] | 0)
                  c[L2 >> 2] = (c[L2 >> 2] | 0) + -1;
                if ((k2 | 0) != 0 | (m2 | 0) > -1)
                  break;
                else {
                  k2 = 0;
                  N2 = 153;
                }
              } else if ((N2 | 0) == 152) {
                if (!k2) {
                  k2 = m2;
                  N2 = 153;
                }
              }
              if ((N2 | 0) == 153) {
                m2 = k2;
                k2 = -1;
              }
              if (m2) {
                Vj(l2);
                Vj(f2);
              }
            } else
              k2 = 0;
          } while (0);
        if (O2)
          Mi(e2);
        i2 = P2;
        return k2 | 0;
      }
      function oj(b2, d2, e2, f2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
        n2 = i2;
        i2 = i2 + 128 | 0;
        g2 = n2 + 112 | 0;
        m2 = n2;
        h2 = m2;
        j2 = 2684;
        k2 = h2 + 112 | 0;
        do {
          c[h2 >> 2] = c[j2 >> 2];
          h2 = h2 + 4 | 0;
          j2 = j2 + 4 | 0;
        } while ((h2 | 0) < (k2 | 0));
        if ((d2 + -1 | 0) >>> 0 > 2147483646)
          if (!d2) {
            d2 = 1;
            l2 = 4;
          } else {
            c[(qi() | 0) >> 2] = 75;
            d2 = -1;
          }
        else {
          g2 = b2;
          l2 = 4;
        }
        if ((l2 | 0) == 4) {
          l2 = -2 - g2 | 0;
          l2 = d2 >>> 0 > l2 >>> 0 ? l2 : d2;
          c[m2 + 48 >> 2] = l2;
          b2 = m2 + 20 | 0;
          c[b2 >> 2] = g2;
          c[m2 + 44 >> 2] = g2;
          d2 = g2 + l2 | 0;
          g2 = m2 + 16 | 0;
          c[g2 >> 2] = d2;
          c[m2 + 28 >> 2] = d2;
          d2 = mj(m2, e2, f2) | 0;
          if (l2) {
            e2 = c[b2 >> 2] | 0;
            a[e2 + (((e2 | 0) == (c[g2 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
          }
        }
        i2 = n2;
        return d2 | 0;
      }
      function pj(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
        g2 = i2;
        i2 = i2 + 112 | 0;
        e2 = g2;
        f2 = e2;
        h2 = f2 + 112 | 0;
        do {
          c[f2 >> 2] = 0;
          f2 = f2 + 4 | 0;
        } while ((f2 | 0) < (h2 | 0));
        c[e2 + 32 >> 2] = 15;
        c[e2 + 44 >> 2] = a2;
        c[e2 + 76 >> 2] = -1;
        c[e2 + 84 >> 2] = a2;
        h2 = nj(e2, b2, d2) | 0;
        i2 = g2;
        return h2 | 0;
      }
      function qj(b2) {
        b2 = b2 | 0;
        var c2 = 0, d2 = 0, e2 = 0, f2 = 0;
        while (1) {
          c2 = b2 + 1 | 0;
          if (!(pi(a[b2 >> 0] | 0) | 0))
            break;
          else
            b2 = c2;
        }
        d2 = a[b2 >> 0] | 0;
        switch (d2 << 24 >> 24 | 0) {
          case 45: {
            e2 = 1;
            f2 = 5;
            break;
          }
          case 43: {
            e2 = 0;
            f2 = 5;
            break;
          }
          default:
            e2 = 0;
        }
        if ((f2 | 0) == 5) {
          b2 = c2;
          d2 = a[c2 >> 0] | 0;
        }
        c2 = (d2 << 24 >> 24) + -48 | 0;
        if (c2 >>> 0 < 10) {
          d2 = b2;
          b2 = 0;
          do {
            d2 = d2 + 1 | 0;
            b2 = (b2 * 10 | 0) - c2 | 0;
            c2 = (a[d2 >> 0] | 0) + -48 | 0;
          } while (c2 >>> 0 < 10);
        } else
          b2 = 0;
        return ((e2 | 0) != 0 ? b2 : 0 - b2 | 0) | 0;
      }
      function rj(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
        r2 = i2;
        i2 = i2 + 208 | 0;
        o2 = r2 + 8 | 0;
        p2 = r2;
        f2 = $(d2, b2) | 0;
        n2 = p2;
        c[n2 >> 2] = 1;
        c[n2 + 4 >> 2] = 0;
        if (f2) {
          j2 = f2 - d2 | 0;
          c[o2 + 4 >> 2] = d2;
          c[o2 >> 2] = d2;
          g2 = d2;
          b2 = d2;
          h2 = 2;
          while (1) {
            b2 = b2 + d2 + g2 | 0;
            c[o2 + (h2 << 2) >> 2] = b2;
            if (b2 >>> 0 < f2 >>> 0) {
              n2 = g2;
              g2 = b2;
              h2 = h2 + 1 | 0;
              b2 = n2;
            } else
              break;
          }
          n2 = 0 - d2 | 0;
          k2 = a2 + j2 | 0;
          m2 = p2 + 4 | 0;
          if ((j2 | 0) > 0) {
            j2 = k2;
            f2 = 1;
            h2 = 1;
            while (1) {
              do {
                if ((f2 & 3 | 0) == 3) {
                  Nj(a2, d2, e2, h2, o2);
                  l2 = c[m2 >> 2] | 0;
                  b2 = l2 << 30 | (c[p2 >> 2] | 0) >>> 2;
                  c[p2 >> 2] = b2;
                  c[m2 >> 2] = l2 >>> 2;
                  h2 = h2 + 2 | 0;
                } else {
                  b2 = h2 + -1 | 0;
                  if ((c[o2 + (b2 << 2) >> 2] | 0) >>> 0 < (j2 - a2 | 0) >>> 0)
                    Nj(a2, d2, e2, h2, o2);
                  else
                    Oj(a2, d2, e2, p2, h2, 0, o2);
                  if ((h2 | 0) == 1) {
                    b2 = c[p2 >> 2] | 0;
                    c[m2 >> 2] = b2 >>> 31 | c[m2 >> 2] << 1;
                    b2 = b2 << 1;
                    c[p2 >> 2] = b2;
                    h2 = 0;
                    break;
                  }
                  if (b2 >>> 0 > 31) {
                    f2 = c[p2 >> 2] | 0;
                    c[m2 >> 2] = f2;
                    c[p2 >> 2] = 0;
                    b2 = h2 + -33 | 0;
                    g2 = 0;
                  } else {
                    f2 = c[m2 >> 2] | 0;
                    g2 = c[p2 >> 2] | 0;
                  }
                  c[m2 >> 2] = g2 >>> (32 - b2 | 0) | f2 << b2;
                  b2 = g2 << b2;
                  c[p2 >> 2] = b2;
                  h2 = 1;
                }
              } while (0);
              f2 = b2 | 1;
              c[p2 >> 2] = f2;
              b2 = a2 + d2 | 0;
              if (b2 >>> 0 >= k2 >>> 0) {
                f2 = b2;
                break;
              } else
                a2 = b2;
            }
          } else {
            f2 = a2;
            h2 = 1;
          }
          Oj(f2, d2, e2, p2, h2, 0, o2);
          l2 = p2 + 4 | 0;
          b2 = c[p2 >> 2] | 0;
          if (!((h2 | 0) == 1 & (b2 | 0) == 1 & (c[l2 >> 2] | 0) == 0)) {
            g2 = f2;
            while (1) {
              if ((h2 | 0) < 2) {
                f2 = b2 + -1 | 0;
                do {
                  if (f2) {
                    if (!(f2 & 1)) {
                      j2 = f2;
                      f2 = 0;
                      do {
                        f2 = f2 + 1 | 0;
                        j2 = j2 >>> 1;
                      } while ((j2 & 1 | 0) == 0);
                      if (!f2)
                        q2 = 24;
                    } else
                      q2 = 24;
                    if ((q2 | 0) == 24) {
                      q2 = 0;
                      k2 = c[m2 >> 2] | 0;
                      if (!k2) {
                        f2 = 64;
                        q2 = 30;
                        break;
                      }
                      if (!(k2 & 1)) {
                        j2 = k2;
                        f2 = 0;
                      } else {
                        a2 = 0;
                        j2 = k2;
                        f2 = 0;
                        break;
                      }
                      while (1) {
                        a2 = f2 + 1 | 0;
                        j2 = j2 >>> 1;
                        if (j2 & 1) {
                          j2 = a2;
                          break;
                        } else
                          f2 = a2;
                      }
                      if (!j2) {
                        a2 = 0;
                        j2 = k2;
                        f2 = 0;
                        break;
                      } else
                        f2 = f2 + 33 | 0;
                    }
                    if (f2 >>> 0 > 31)
                      q2 = 30;
                    else {
                      a2 = f2;
                      j2 = c[m2 >> 2] | 0;
                    }
                  } else {
                    f2 = 32;
                    q2 = 30;
                  }
                } while (0);
                if ((q2 | 0) == 30) {
                  q2 = 0;
                  b2 = c[m2 >> 2] | 0;
                  c[p2 >> 2] = b2;
                  c[m2 >> 2] = 0;
                  a2 = f2 + -32 | 0;
                  j2 = 0;
                }
                c[p2 >> 2] = j2 << 32 - a2 | b2 >>> a2;
                c[m2 >> 2] = j2 >>> a2;
                g2 = g2 + n2 | 0;
                f2 = f2 + h2 | 0;
              } else {
                a2 = b2 >>> 30;
                k2 = a2 | c[m2 >> 2] << 2;
                f2 = h2 + -2 | 0;
                c[p2 >> 2] = (b2 << 1 & 2147483646 | a2 << 31) ^ 3;
                c[m2 >> 2] = k2 >>> 1;
                Oj(g2 + (0 - ((c[o2 + (f2 << 2) >> 2] | 0) + d2)) | 0, d2, e2, p2, h2 + -1 | 0, 1, o2);
                k2 = c[p2 >> 2] | 0;
                c[m2 >> 2] = k2 >>> 31 | c[m2 >> 2] << 1;
                c[p2 >> 2] = k2 << 1 | 1;
                g2 = g2 + n2 | 0;
                Oj(g2, d2, e2, p2, f2, 1, o2);
              }
              b2 = c[p2 >> 2] | 0;
              if ((f2 | 0) == 1 & (b2 | 0) == 1 & (c[l2 >> 2] | 0) == 0)
                break;
              else
                h2 = f2;
            }
          }
        }
        i2 = r2;
        return;
      }
      function sj(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
        h2 = d2 & 255;
        f2 = (e2 | 0) != 0;
        a:
          do {
            if (f2 & (b2 & 3 | 0) != 0) {
              g2 = d2 & 255;
              while (1) {
                if ((a[b2 >> 0] | 0) == g2 << 24 >> 24) {
                  i3 = 6;
                  break a;
                }
                b2 = b2 + 1 | 0;
                e2 = e2 + -1 | 0;
                f2 = (e2 | 0) != 0;
                if (!(f2 & (b2 & 3 | 0) != 0)) {
                  i3 = 5;
                  break;
                }
              }
            } else
              i3 = 5;
          } while (0);
        if ((i3 | 0) == 5)
          if (f2)
            i3 = 6;
          else
            e2 = 0;
        b:
          do {
            if ((i3 | 0) == 6) {
              g2 = d2 & 255;
              if ((a[b2 >> 0] | 0) != g2 << 24 >> 24) {
                f2 = $(h2, 16843009) | 0;
                c:
                  do {
                    if (e2 >>> 0 > 3)
                      while (1) {
                        h2 = c[b2 >> 2] ^ f2;
                        if ((h2 & -2139062144 ^ -2139062144) & h2 + -16843009)
                          break;
                        b2 = b2 + 4 | 0;
                        e2 = e2 + -4 | 0;
                        if (e2 >>> 0 <= 3) {
                          i3 = 11;
                          break c;
                        }
                      }
                    else
                      i3 = 11;
                  } while (0);
                if ((i3 | 0) == 11) {
                  if (!e2) {
                    e2 = 0;
                    break;
                  }
                }
                while (1) {
                  if ((a[b2 >> 0] | 0) == g2 << 24 >> 24)
                    break b;
                  b2 = b2 + 1 | 0;
                  e2 = e2 + -1 | 0;
                  if (!e2) {
                    e2 = 0;
                    break;
                  }
                }
              }
            }
          } while (0);
        return ((e2 | 0) != 0 ? b2 : 0) | 0;
      }
      function tj(b2, c2, d2) {
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        var e2 = 0;
        e2 = c2 & 255;
        do {
          if (!d2) {
            c2 = 0;
            break;
          }
          d2 = d2 + -1 | 0;
          c2 = b2 + d2 | 0;
        } while ((a[c2 >> 0] | 0) != e2 << 24 >> 24);
        return c2 | 0;
      }
      function uj(b2, d2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0;
        e2 = d2;
        a:
          do {
            if (!((e2 ^ b2) & 3)) {
              if (e2 & 3)
                do {
                  e2 = a[d2 >> 0] | 0;
                  a[b2 >> 0] = e2;
                  if (!(e2 << 24 >> 24))
                    break a;
                  d2 = d2 + 1 | 0;
                  b2 = b2 + 1 | 0;
                } while ((d2 & 3 | 0) != 0);
              e2 = c[d2 >> 2] | 0;
              if (!((e2 & -2139062144 ^ -2139062144) & e2 + -16843009)) {
                f2 = b2;
                while (1) {
                  d2 = d2 + 4 | 0;
                  b2 = f2 + 4 | 0;
                  c[f2 >> 2] = e2;
                  e2 = c[d2 >> 2] | 0;
                  if ((e2 & -2139062144 ^ -2139062144) & e2 + -16843009)
                    break;
                  else
                    f2 = b2;
                }
              }
              f2 = 8;
            } else
              f2 = 8;
          } while (0);
        if ((f2 | 0) == 8) {
          f2 = a[d2 >> 0] | 0;
          a[b2 >> 0] = f2;
          if (f2 << 24 >> 24)
            do {
              d2 = d2 + 1 | 0;
              b2 = b2 + 1 | 0;
              f2 = a[d2 >> 0] | 0;
              a[b2 >> 0] = f2;
            } while (f2 << 24 >> 24 != 0);
        }
        return b2 | 0;
      }
      function vj(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, h2 = 0;
        g2 = d2;
        do {
          if (!((g2 ^ b2) & 3)) {
            f2 = (e2 | 0) != 0;
            a:
              do {
                if (f2 & (g2 & 3 | 0) != 0)
                  while (1) {
                    g2 = a[d2 >> 0] | 0;
                    a[b2 >> 0] = g2;
                    if (!(g2 << 24 >> 24))
                      break a;
                    e2 = e2 + -1 | 0;
                    d2 = d2 + 1 | 0;
                    b2 = b2 + 1 | 0;
                    f2 = (e2 | 0) != 0;
                    if (!(f2 & (d2 & 3 | 0) != 0)) {
                      h2 = 5;
                      break;
                    }
                  }
                else
                  h2 = 5;
              } while (0);
            if ((h2 | 0) == 5) {
              if (!f2) {
                e2 = 0;
                break;
              }
            }
            if (a[d2 >> 0] | 0) {
              b:
                do {
                  if (e2 >>> 0 > 3)
                    do {
                      f2 = c[d2 >> 2] | 0;
                      if ((f2 & -2139062144 ^ -2139062144) & f2 + -16843009)
                        break b;
                      c[b2 >> 2] = f2;
                      e2 = e2 + -4 | 0;
                      d2 = d2 + 4 | 0;
                      b2 = b2 + 4 | 0;
                    } while (e2 >>> 0 > 3);
                } while (0);
              h2 = 11;
            }
          } else
            h2 = 11;
        } while (0);
        c:
          do {
            if ((h2 | 0) == 11)
              if (!e2)
                e2 = 0;
              else
                while (1) {
                  h2 = a[d2 >> 0] | 0;
                  a[b2 >> 0] = h2;
                  if (!(h2 << 24 >> 24))
                    break c;
                  e2 = e2 + -1 | 0;
                  b2 = b2 + 1 | 0;
                  if (!e2) {
                    e2 = 0;
                    break;
                  } else
                    d2 = d2 + 1 | 0;
                }
          } while (0);
        ek(b2 | 0, 0, e2 | 0) | 0;
        return b2 | 0;
      }
      function wj(b2, c2) {
        b2 = b2 | 0;
        c2 = c2 | 0;
        b2 = xj(b2, c2) | 0;
        return ((a[b2 >> 0] | 0) == (c2 & 255) << 24 >> 24 ? b2 : 0) | 0;
      }
      function xj(b2, d2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0;
        f2 = d2 & 255;
        a:
          do {
            if (!f2)
              b2 = b2 + (Bj(b2) | 0) | 0;
            else {
              if (b2 & 3) {
                e2 = d2 & 255;
                do {
                  g2 = a[b2 >> 0] | 0;
                  if (g2 << 24 >> 24 == 0 ? 1 : g2 << 24 >> 24 == e2 << 24 >> 24)
                    break a;
                  b2 = b2 + 1 | 0;
                } while ((b2 & 3 | 0) != 0);
              }
              f2 = $(f2, 16843009) | 0;
              e2 = c[b2 >> 2] | 0;
              b:
                do {
                  if (!((e2 & -2139062144 ^ -2139062144) & e2 + -16843009))
                    do {
                      g2 = e2 ^ f2;
                      if ((g2 & -2139062144 ^ -2139062144) & g2 + -16843009)
                        break b;
                      b2 = b2 + 4 | 0;
                      e2 = c[b2 >> 2] | 0;
                    } while (((e2 & -2139062144 ^ -2139062144) & e2 + -16843009 | 0) == 0);
                } while (0);
              e2 = d2 & 255;
              while (1) {
                g2 = a[b2 >> 0] | 0;
                if (g2 << 24 >> 24 == 0 ? 1 : g2 << 24 >> 24 == e2 << 24 >> 24)
                  break;
                else
                  b2 = b2 + 1 | 0;
              }
            }
          } while (0);
        return b2 | 0;
      }
      function yj(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        uj(a2, b2) | 0;
        return a2 | 0;
      }
      function zj(b2, d2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
        g2 = i2;
        i2 = i2 + 32 | 0;
        f2 = g2;
        e2 = a[d2 >> 0] | 0;
        if (e2 << 24 >> 24 != 0 ? (a[d2 + 1 >> 0] | 0) != 0 : 0) {
          c[f2 >> 2] = 0;
          c[f2 + 4 >> 2] = 0;
          c[f2 + 8 >> 2] = 0;
          c[f2 + 12 >> 2] = 0;
          c[f2 + 16 >> 2] = 0;
          c[f2 + 20 >> 2] = 0;
          c[f2 + 24 >> 2] = 0;
          c[f2 + 28 >> 2] = 0;
          do {
            h2 = f2 + (((e2 & 255) >>> 5 & 255) << 2) | 0;
            c[h2 >> 2] = c[h2 >> 2] | 1 << (e2 & 31);
            d2 = d2 + 1 | 0;
            e2 = a[d2 >> 0] | 0;
          } while (e2 << 24 >> 24 != 0);
          d2 = a[b2 >> 0] | 0;
          a:
            do {
              if (!(d2 << 24 >> 24))
                e2 = b2;
              else {
                e2 = b2;
                do {
                  if (c[f2 + (((d2 & 255) >>> 5 & 255) << 2) >> 2] & 1 << (d2 & 31))
                    break a;
                  e2 = e2 + 1 | 0;
                  d2 = a[e2 >> 0] | 0;
                } while (d2 << 24 >> 24 != 0);
              }
            } while (0);
          e2 = e2 - b2 | 0;
        } else
          e2 = (xj(b2, e2 << 24 >> 24) | 0) - b2 | 0;
        i2 = g2;
        return e2 | 0;
      }
      function Aj(a2) {
        a2 = a2 | 0;
        var b2 = 0, c2 = 0;
        c2 = (Bj(a2) | 0) + 1 | 0;
        b2 = Uj(c2) | 0;
        if (!b2)
          b2 = 0;
        else
          ik(b2 | 0, a2 | 0, c2 | 0) | 0;
        return b2 | 0;
      }
      function Bj(b2) {
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0;
        f2 = b2;
        a:
          do {
            if (!(f2 & 3))
              e2 = 4;
            else {
              d2 = b2;
              b2 = f2;
              while (1) {
                if (!(a[d2 >> 0] | 0))
                  break a;
                d2 = d2 + 1 | 0;
                b2 = d2;
                if (!(b2 & 3)) {
                  b2 = d2;
                  e2 = 4;
                  break;
                }
              }
            }
          } while (0);
        if ((e2 | 0) == 4) {
          while (1) {
            d2 = c[b2 >> 2] | 0;
            if (!((d2 & -2139062144 ^ -2139062144) & d2 + -16843009))
              b2 = b2 + 4 | 0;
            else
              break;
          }
          if ((d2 & 255) << 24 >> 24)
            do {
              b2 = b2 + 1 | 0;
            } while ((a[b2 >> 0] | 0) != 0);
        }
        return b2 - f2 | 0;
      }
      function Cj(b2, c2, d2) {
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0;
        e2 = b2 + (Bj(b2) | 0) | 0;
        a:
          do {
            if (d2)
              while (1) {
                f2 = a[c2 >> 0] | 0;
                if (!(f2 << 24 >> 24))
                  break a;
                d2 = d2 + -1 | 0;
                g2 = e2 + 1 | 0;
                a[e2 >> 0] = f2;
                if (!d2) {
                  e2 = g2;
                  break;
                } else {
                  c2 = c2 + 1 | 0;
                  e2 = g2;
                }
              }
          } while (0);
        a[e2 >> 0] = 0;
        return b2 | 0;
      }
      function Dj(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        vj(a2, b2, c2) | 0;
        return a2 | 0;
      }
      function Ej(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        return tj(a2, b2, (Bj(a2) | 0) + 1 | 0) | 0;
      }
      function Fj(b2, d2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
        h2 = i2;
        i2 = i2 + 32 | 0;
        g2 = h2;
        c[g2 >> 2] = 0;
        c[g2 + 4 >> 2] = 0;
        c[g2 + 8 >> 2] = 0;
        c[g2 + 12 >> 2] = 0;
        c[g2 + 16 >> 2] = 0;
        c[g2 + 20 >> 2] = 0;
        c[g2 + 24 >> 2] = 0;
        c[g2 + 28 >> 2] = 0;
        f2 = a[d2 >> 0] | 0;
        do {
          if (!(f2 << 24 >> 24))
            d2 = 0;
          else {
            if (!(a[d2 + 1 >> 0] | 0)) {
              d2 = b2;
              while (1)
                if ((a[d2 >> 0] | 0) == f2 << 24 >> 24)
                  d2 = d2 + 1 | 0;
                else
                  break;
              d2 = d2 - b2 | 0;
              break;
            } else {
              e2 = d2;
              d2 = f2;
            }
            do {
              f2 = g2 + (((d2 & 255) >>> 5 & 255) << 2) | 0;
              c[f2 >> 2] = c[f2 >> 2] | 1 << (d2 & 31);
              e2 = e2 + 1 | 0;
              d2 = a[e2 >> 0] | 0;
            } while (d2 << 24 >> 24 != 0);
            e2 = a[b2 >> 0] | 0;
            a:
              do {
                if (!(e2 << 24 >> 24))
                  d2 = b2;
                else {
                  d2 = b2;
                  do {
                    if (!(c[g2 + (((e2 & 255) >>> 5 & 255) << 2) >> 2] & 1 << (e2 & 31)))
                      break a;
                    d2 = d2 + 1 | 0;
                    e2 = a[d2 >> 0] | 0;
                  } while (e2 << 24 >> 24 != 0);
                }
              } while (0);
            d2 = d2 - b2 | 0;
          }
        } while (0);
        i2 = h2;
        return d2 | 0;
      }
      function Gj(b2, d2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0;
        if (!b2) {
          b2 = c[699] | 0;
          if (!b2)
            b2 = 0;
          else {
            f2 = b2;
            e2 = 3;
          }
        } else {
          f2 = b2;
          e2 = 3;
        }
        do {
          if ((e2 | 0) == 3) {
            e2 = Fj(f2, d2) | 0;
            b2 = f2 + e2 | 0;
            if (!(a[b2 >> 0] | 0)) {
              c[699] = 0;
              b2 = 0;
              break;
            }
            e2 = (zj(b2, d2) | 0) + e2 | 0;
            d2 = f2 + e2 | 0;
            c[699] = d2;
            if (!(a[d2 >> 0] | 0)) {
              c[699] = 0;
              break;
            } else {
              c[699] = f2 + (e2 + 1);
              a[d2 >> 0] = 0;
              break;
            }
          }
        } while (0);
        return b2 | 0;
      }
      function Hj(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
        i3 = a2 + 4 | 0;
        e2 = c[i3 >> 2] | 0;
        j2 = a2 + 100 | 0;
        if (e2 >>> 0 < (c[j2 >> 2] | 0) >>> 0) {
          c[i3 >> 2] = e2 + 1;
          e2 = d[e2 >> 0] | 0;
        } else
          e2 = vi(a2) | 0;
        switch (e2 | 0) {
          case 43:
          case 45: {
            f2 = (e2 | 0) == 45 & 1;
            e2 = c[i3 >> 2] | 0;
            if (e2 >>> 0 < (c[j2 >> 2] | 0) >>> 0) {
              c[i3 >> 2] = e2 + 1;
              e2 = d[e2 >> 0] | 0;
            } else
              e2 = vi(a2) | 0;
            if ((b2 | 0) != 0 & (e2 + -48 | 0) >>> 0 > 9 ? (c[j2 >> 2] | 0) != 0 : 0) {
              c[i3 >> 2] = (c[i3 >> 2] | 0) + -1;
              h2 = f2;
            } else
              h2 = f2;
            break;
          }
          default:
            h2 = 0;
        }
        if ((e2 + -48 | 0) >>> 0 > 9)
          if (!(c[j2 >> 2] | 0)) {
            f2 = -2147483648;
            e2 = 0;
          } else {
            c[i3 >> 2] = (c[i3 >> 2] | 0) + -1;
            f2 = -2147483648;
            e2 = 0;
          }
        else {
          f2 = 0;
          do {
            f2 = e2 + -48 + (f2 * 10 | 0) | 0;
            e2 = c[i3 >> 2] | 0;
            if (e2 >>> 0 < (c[j2 >> 2] | 0) >>> 0) {
              c[i3 >> 2] = e2 + 1;
              e2 = d[e2 >> 0] | 0;
            } else
              e2 = vi(a2) | 0;
          } while ((e2 + -48 | 0) >>> 0 < 10 & (f2 | 0) < 214748364);
          b2 = ((f2 | 0) < 0) << 31 >> 31;
          if ((e2 + -48 | 0) >>> 0 < 10) {
            do {
              b2 = ok(f2 | 0, b2 | 0, 10, 0) | 0;
              f2 = D;
              e2 = gk(e2 | 0, ((e2 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
              f2 = gk(e2 | 0, D | 0, b2 | 0, f2 | 0) | 0;
              b2 = D;
              e2 = c[i3 >> 2] | 0;
              if (e2 >>> 0 < (c[j2 >> 2] | 0) >>> 0) {
                c[i3 >> 2] = e2 + 1;
                e2 = d[e2 >> 0] | 0;
              } else
                e2 = vi(a2) | 0;
            } while ((e2 + -48 | 0) >>> 0 < 10 & ((b2 | 0) < 21474836 | (b2 | 0) == 21474836 & f2 >>> 0 < 2061584302));
            g2 = f2;
          } else
            g2 = f2;
          if ((e2 + -48 | 0) >>> 0 < 10)
            do {
              e2 = c[i3 >> 2] | 0;
              if (e2 >>> 0 < (c[j2 >> 2] | 0) >>> 0) {
                c[i3 >> 2] = e2 + 1;
                e2 = d[e2 >> 0] | 0;
              } else
                e2 = vi(a2) | 0;
            } while ((e2 + -48 | 0) >>> 0 < 10);
          if (c[j2 >> 2] | 0)
            c[i3 >> 2] = (c[i3 >> 2] | 0) + -1;
          a2 = (h2 | 0) != 0;
          e2 = dk(0, 0, g2 | 0, b2 | 0) | 0;
          f2 = a2 ? D : b2;
          e2 = a2 ? e2 : g2;
        }
        D = f2;
        return e2 | 0;
      }
      function Ij(a2) {
        a2 = a2 | 0;
        if (!(c[a2 + 68 >> 2] | 0))
          Mi(a2);
        return;
      }
      function Jj(a2) {
        a2 = a2 | 0;
        if (!(c[a2 + 68 >> 2] | 0))
          Mi(a2);
        return;
      }
      function Kj(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
        b2 = a2 + 20 | 0;
        g2 = a2 + 28 | 0;
        if ((c[b2 >> 2] | 0) >>> 0 > (c[g2 >> 2] | 0) >>> 0 ? (Qb[c[a2 + 36 >> 2] & 15](a2, 0, 0) | 0, (c[b2 >> 2] | 0) == 0) : 0)
          b2 = -1;
        else {
          h2 = a2 + 4 | 0;
          d2 = c[h2 >> 2] | 0;
          e2 = a2 + 8 | 0;
          f2 = c[e2 >> 2] | 0;
          if (d2 >>> 0 < f2 >>> 0)
            Qb[c[a2 + 40 >> 2] & 15](a2, d2 - f2 | 0, 1) | 0;
          c[a2 + 16 >> 2] = 0;
          c[g2 >> 2] = 0;
          c[b2 >> 2] = 0;
          c[e2 >> 2] = 0;
          c[h2 >> 2] = 0;
          b2 = 0;
        }
        return b2 | 0;
      }
      function Lj(e2, f2, g2, j2, l2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        l2 = l2 | 0;
        var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0;
        ha2 = i2;
        i2 = i2 + 624 | 0;
        ca2 = ha2 + 24 | 0;
        ea2 = ha2 + 16 | 0;
        da2 = ha2 + 588 | 0;
        Y2 = ha2 + 576 | 0;
        ba2 = ha2;
        V2 = ha2 + 536 | 0;
        ga2 = ha2 + 8 | 0;
        fa2 = ha2 + 528 | 0;
        M2 = (e2 | 0) != 0;
        N2 = V2 + 40 | 0;
        U2 = N2;
        V2 = V2 + 39 | 0;
        W2 = ga2 + 4 | 0;
        X2 = Y2 + 12 | 0;
        Y2 = Y2 + 11 | 0;
        Z2 = da2;
        _2 = X2;
        aa2 = _2 - Z2 | 0;
        O2 = -2 - Z2 | 0;
        P2 = _2 + 2 | 0;
        Q2 = ca2 + 288 | 0;
        R2 = da2 + 9 | 0;
        S2 = R2;
        T2 = da2 + 8 | 0;
        m2 = 0;
        w2 = f2;
        n2 = 0;
        f2 = 0;
        a:
          while (1) {
            do {
              if ((m2 | 0) > -1)
                if ((n2 | 0) > (2147483647 - m2 | 0)) {
                  c[(qi() | 0) >> 2] = 75;
                  m2 = -1;
                  break;
                } else {
                  m2 = n2 + m2 | 0;
                  break;
                }
            } while (0);
            n2 = a[w2 >> 0] | 0;
            if (!(n2 << 24 >> 24)) {
              L2 = 245;
              break;
            } else
              o2 = w2;
            b:
              while (1) {
                switch (n2 << 24 >> 24) {
                  case 37: {
                    n2 = o2;
                    L2 = 9;
                    break b;
                  }
                  case 0: {
                    n2 = o2;
                    break b;
                  }
                  default: {
                  }
                }
                K2 = o2 + 1 | 0;
                n2 = a[K2 >> 0] | 0;
                o2 = K2;
              }
            c:
              do {
                if ((L2 | 0) == 9)
                  while (1) {
                    L2 = 0;
                    if ((a[n2 + 1 >> 0] | 0) != 37)
                      break c;
                    o2 = o2 + 1 | 0;
                    n2 = n2 + 2 | 0;
                    if ((a[n2 >> 0] | 0) == 37)
                      L2 = 9;
                    else
                      break;
                  }
              } while (0);
            y2 = o2 - w2 | 0;
            if (M2 ? (c[e2 >> 2] & 32 | 0) == 0 : 0)
              hj(w2, y2, e2) | 0;
            if ((o2 | 0) != (w2 | 0)) {
              w2 = n2;
              n2 = y2;
              continue;
            }
            r2 = n2 + 1 | 0;
            o2 = a[r2 >> 0] | 0;
            p2 = (o2 << 24 >> 24) + -48 | 0;
            if (p2 >>> 0 < 10) {
              K2 = (a[n2 + 2 >> 0] | 0) == 36;
              r2 = K2 ? n2 + 3 | 0 : r2;
              o2 = a[r2 >> 0] | 0;
              u2 = K2 ? p2 : -1;
              f2 = K2 ? 1 : f2;
            } else
              u2 = -1;
            n2 = o2 << 24 >> 24;
            d:
              do {
                if ((n2 & -32 | 0) == 32) {
                  p2 = 0;
                  while (1) {
                    if (!(1 << n2 + -32 & 75913)) {
                      s2 = p2;
                      n2 = r2;
                      break d;
                    }
                    p2 = 1 << (o2 << 24 >> 24) + -32 | p2;
                    r2 = r2 + 1 | 0;
                    o2 = a[r2 >> 0] | 0;
                    n2 = o2 << 24 >> 24;
                    if ((n2 & -32 | 0) != 32) {
                      s2 = p2;
                      n2 = r2;
                      break;
                    }
                  }
                } else {
                  s2 = 0;
                  n2 = r2;
                }
              } while (0);
            do {
              if (o2 << 24 >> 24 == 42) {
                p2 = n2 + 1 | 0;
                o2 = (a[p2 >> 0] | 0) + -48 | 0;
                if (o2 >>> 0 < 10 ? (a[n2 + 2 >> 0] | 0) == 36 : 0) {
                  c[l2 + (o2 << 2) >> 2] = 10;
                  f2 = 1;
                  n2 = n2 + 3 | 0;
                  o2 = c[j2 + ((a[p2 >> 0] | 0) + -48 << 3) >> 2] | 0;
                } else {
                  if (f2) {
                    m2 = -1;
                    break a;
                  }
                  if (!M2) {
                    x2 = s2;
                    n2 = p2;
                    f2 = 0;
                    K2 = 0;
                    break;
                  }
                  f2 = (c[g2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                  o2 = c[f2 >> 2] | 0;
                  c[g2 >> 2] = f2 + 4;
                  f2 = 0;
                  n2 = p2;
                }
                if ((o2 | 0) < 0) {
                  x2 = s2 | 8192;
                  K2 = 0 - o2 | 0;
                } else {
                  x2 = s2;
                  K2 = o2;
                }
              } else {
                p2 = (o2 << 24 >> 24) + -48 | 0;
                if (p2 >>> 0 < 10) {
                  o2 = 0;
                  do {
                    o2 = (o2 * 10 | 0) + p2 | 0;
                    n2 = n2 + 1 | 0;
                    p2 = (a[n2 >> 0] | 0) + -48 | 0;
                  } while (p2 >>> 0 < 10);
                  if ((o2 | 0) < 0) {
                    m2 = -1;
                    break a;
                  } else {
                    x2 = s2;
                    K2 = o2;
                  }
                } else {
                  x2 = s2;
                  K2 = 0;
                }
              }
            } while (0);
            e:
              do {
                if ((a[n2 >> 0] | 0) == 46) {
                  p2 = n2 + 1 | 0;
                  o2 = a[p2 >> 0] | 0;
                  if (o2 << 24 >> 24 != 42) {
                    r2 = (o2 << 24 >> 24) + -48 | 0;
                    if (r2 >>> 0 < 10) {
                      n2 = p2;
                      o2 = 0;
                    } else {
                      n2 = p2;
                      r2 = 0;
                      break;
                    }
                    while (1) {
                      o2 = (o2 * 10 | 0) + r2 | 0;
                      n2 = n2 + 1 | 0;
                      r2 = (a[n2 >> 0] | 0) + -48 | 0;
                      if (r2 >>> 0 >= 10) {
                        r2 = o2;
                        break e;
                      }
                    }
                  }
                  p2 = n2 + 2 | 0;
                  o2 = (a[p2 >> 0] | 0) + -48 | 0;
                  if (o2 >>> 0 < 10 ? (a[n2 + 3 >> 0] | 0) == 36 : 0) {
                    c[l2 + (o2 << 2) >> 2] = 10;
                    n2 = n2 + 4 | 0;
                    r2 = c[j2 + ((a[p2 >> 0] | 0) + -48 << 3) >> 2] | 0;
                    break;
                  }
                  if (f2) {
                    m2 = -1;
                    break a;
                  }
                  if (M2) {
                    n2 = (c[g2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    r2 = c[n2 >> 2] | 0;
                    c[g2 >> 2] = n2 + 4;
                    n2 = p2;
                  } else {
                    n2 = p2;
                    r2 = 0;
                  }
                } else
                  r2 = -1;
              } while (0);
            t2 = 0;
            while (1) {
              o2 = (a[n2 >> 0] | 0) + -65 | 0;
              if (o2 >>> 0 > 57) {
                m2 = -1;
                break a;
              }
              p2 = n2 + 1 | 0;
              o2 = a[15953 + (t2 * 58 | 0) + o2 >> 0] | 0;
              s2 = o2 & 255;
              if ((s2 + -1 | 0) >>> 0 < 8) {
                n2 = p2;
                t2 = s2;
              } else {
                J2 = p2;
                break;
              }
            }
            if (!(o2 << 24 >> 24)) {
              m2 = -1;
              break;
            }
            p2 = (u2 | 0) > -1;
            do {
              if (o2 << 24 >> 24 == 19)
                if (p2) {
                  m2 = -1;
                  break a;
                } else
                  L2 = 52;
              else {
                if (p2) {
                  c[l2 + (u2 << 2) >> 2] = s2;
                  H2 = j2 + (u2 << 3) | 0;
                  I2 = c[H2 + 4 >> 2] | 0;
                  L2 = ba2;
                  c[L2 >> 2] = c[H2 >> 2];
                  c[L2 + 4 >> 2] = I2;
                  L2 = 52;
                  break;
                }
                if (!M2) {
                  m2 = 0;
                  break a;
                }
                Rj(ba2, s2, g2);
              }
            } while (0);
            if ((L2 | 0) == 52 ? (L2 = 0, !M2) : 0) {
              w2 = J2;
              n2 = y2;
              continue;
            }
            u2 = a[n2 >> 0] | 0;
            u2 = (t2 | 0) != 0 & (u2 & 15 | 0) == 3 ? u2 & -33 : u2;
            p2 = x2 & -65537;
            I2 = (x2 & 8192 | 0) == 0 ? x2 : p2;
            f:
              do {
                switch (u2 | 0) {
                  case 110:
                    switch (t2 | 0) {
                      case 0: {
                        c[c[ba2 >> 2] >> 2] = m2;
                        w2 = J2;
                        n2 = y2;
                        continue a;
                      }
                      case 1: {
                        c[c[ba2 >> 2] >> 2] = m2;
                        w2 = J2;
                        n2 = y2;
                        continue a;
                      }
                      case 2: {
                        w2 = c[ba2 >> 2] | 0;
                        c[w2 >> 2] = m2;
                        c[w2 + 4 >> 2] = ((m2 | 0) < 0) << 31 >> 31;
                        w2 = J2;
                        n2 = y2;
                        continue a;
                      }
                      case 3: {
                        b[c[ba2 >> 2] >> 1] = m2;
                        w2 = J2;
                        n2 = y2;
                        continue a;
                      }
                      case 4: {
                        a[c[ba2 >> 2] >> 0] = m2;
                        w2 = J2;
                        n2 = y2;
                        continue a;
                      }
                      case 6: {
                        c[c[ba2 >> 2] >> 2] = m2;
                        w2 = J2;
                        n2 = y2;
                        continue a;
                      }
                      case 7: {
                        w2 = c[ba2 >> 2] | 0;
                        c[w2 >> 2] = m2;
                        c[w2 + 4 >> 2] = ((m2 | 0) < 0) << 31 >> 31;
                        w2 = J2;
                        n2 = y2;
                        continue a;
                      }
                      default: {
                        w2 = J2;
                        n2 = y2;
                        continue a;
                      }
                    }
                  case 112: {
                    t2 = I2 | 8;
                    r2 = r2 >>> 0 > 8 ? r2 : 8;
                    u2 = 120;
                    L2 = 64;
                    break;
                  }
                  case 88:
                  case 120: {
                    t2 = I2;
                    L2 = 64;
                    break;
                  }
                  case 111: {
                    p2 = ba2;
                    o2 = c[p2 >> 2] | 0;
                    p2 = c[p2 + 4 >> 2] | 0;
                    if ((o2 | 0) == 0 & (p2 | 0) == 0)
                      n2 = N2;
                    else {
                      n2 = N2;
                      do {
                        n2 = n2 + -1 | 0;
                        a[n2 >> 0] = o2 & 7 | 48;
                        o2 = hk(o2 | 0, p2 | 0, 3) | 0;
                        p2 = D;
                      } while (!((o2 | 0) == 0 & (p2 | 0) == 0));
                    }
                    if (!(I2 & 8)) {
                      o2 = I2;
                      t2 = 0;
                      s2 = 16433;
                      L2 = 77;
                    } else {
                      t2 = U2 - n2 + 1 | 0;
                      o2 = I2;
                      r2 = (r2 | 0) < (t2 | 0) ? t2 : r2;
                      t2 = 0;
                      s2 = 16433;
                      L2 = 77;
                    }
                    break;
                  }
                  case 105:
                  case 100: {
                    o2 = ba2;
                    n2 = c[o2 >> 2] | 0;
                    o2 = c[o2 + 4 >> 2] | 0;
                    if ((o2 | 0) < 0) {
                      n2 = dk(0, 0, n2 | 0, o2 | 0) | 0;
                      o2 = D;
                      p2 = ba2;
                      c[p2 >> 2] = n2;
                      c[p2 + 4 >> 2] = o2;
                      p2 = 1;
                      s2 = 16433;
                      L2 = 76;
                      break f;
                    }
                    if (!(I2 & 2048)) {
                      s2 = I2 & 1;
                      p2 = s2;
                      s2 = (s2 | 0) == 0 ? 16433 : 16435;
                      L2 = 76;
                    } else {
                      p2 = 1;
                      s2 = 16434;
                      L2 = 76;
                    }
                    break;
                  }
                  case 117: {
                    o2 = ba2;
                    n2 = c[o2 >> 2] | 0;
                    o2 = c[o2 + 4 >> 2] | 0;
                    p2 = 0;
                    s2 = 16433;
                    L2 = 76;
                    break;
                  }
                  case 99: {
                    a[V2 >> 0] = c[ba2 >> 2];
                    w2 = V2;
                    o2 = 1;
                    t2 = 0;
                    u2 = 16433;
                    n2 = N2;
                    break;
                  }
                  case 109: {
                    n2 = ri(c[(qi() | 0) >> 2] | 0) | 0;
                    L2 = 82;
                    break;
                  }
                  case 115: {
                    n2 = c[ba2 >> 2] | 0;
                    n2 = (n2 | 0) != 0 ? n2 : 16443;
                    L2 = 82;
                    break;
                  }
                  case 67: {
                    c[ga2 >> 2] = c[ba2 >> 2];
                    c[W2 >> 2] = 0;
                    c[ba2 >> 2] = ga2;
                    r2 = -1;
                    L2 = 86;
                    break;
                  }
                  case 83: {
                    if (!r2) {
                      Tj(e2, 32, K2, 0, I2);
                      n2 = 0;
                      L2 = 98;
                    } else
                      L2 = 86;
                    break;
                  }
                  case 65:
                  case 71:
                  case 70:
                  case 69:
                  case 97:
                  case 103:
                  case 102:
                  case 101: {
                    q2 = +h[ba2 >> 3];
                    c[ea2 >> 2] = 0;
                    h[k >> 3] = q2;
                    if ((c[k + 4 >> 2] | 0) >= 0)
                      if (!(I2 & 2048)) {
                        H2 = I2 & 1;
                        G2 = H2;
                        H2 = (H2 | 0) == 0 ? 16451 : 16456;
                      } else {
                        G2 = 1;
                        H2 = 16453;
                      }
                    else {
                      q2 = -q2;
                      G2 = 1;
                      H2 = 16450;
                    }
                    h[k >> 3] = q2;
                    F2 = c[k + 4 >> 2] & 2146435072;
                    do {
                      if (F2 >>> 0 < 2146435072 | (F2 | 0) == 2146435072 & 0 < 0) {
                        v2 = +Ci(q2, ea2) * 2;
                        o2 = v2 != 0;
                        if (o2)
                          c[ea2 >> 2] = (c[ea2 >> 2] | 0) + -1;
                        C2 = u2 | 32;
                        if ((C2 | 0) == 97) {
                          w2 = u2 & 32;
                          y2 = (w2 | 0) == 0 ? H2 : H2 + 9 | 0;
                          x2 = G2 | 2;
                          n2 = 12 - r2 | 0;
                          do {
                            if (!(r2 >>> 0 > 11 | (n2 | 0) == 0)) {
                              q2 = 8;
                              do {
                                n2 = n2 + -1 | 0;
                                q2 = q2 * 16;
                              } while ((n2 | 0) != 0);
                              if ((a[y2 >> 0] | 0) == 45) {
                                q2 = -(q2 + (-v2 - q2));
                                break;
                              } else {
                                q2 = v2 + q2 - q2;
                                break;
                              }
                            } else
                              q2 = v2;
                          } while (0);
                          o2 = c[ea2 >> 2] | 0;
                          n2 = (o2 | 0) < 0 ? 0 - o2 | 0 : o2;
                          n2 = Sj(n2, ((n2 | 0) < 0) << 31 >> 31, X2) | 0;
                          if ((n2 | 0) == (X2 | 0)) {
                            a[Y2 >> 0] = 48;
                            n2 = Y2;
                          }
                          a[n2 + -1 >> 0] = (o2 >> 31 & 2) + 43;
                          t2 = n2 + -2 | 0;
                          a[t2 >> 0] = u2 + 15;
                          s2 = (r2 | 0) < 1;
                          p2 = (I2 & 8 | 0) == 0;
                          o2 = da2;
                          while (1) {
                            H2 = ~~q2;
                            n2 = o2 + 1 | 0;
                            a[o2 >> 0] = d[16417 + H2 >> 0] | w2;
                            q2 = (q2 - +(H2 | 0)) * 16;
                            do {
                              if ((n2 - Z2 | 0) == 1) {
                                if (p2 & (s2 & q2 == 0))
                                  break;
                                a[n2 >> 0] = 46;
                                n2 = o2 + 2 | 0;
                              }
                            } while (0);
                            if (!(q2 != 0))
                              break;
                            else
                              o2 = n2;
                          }
                          r2 = (r2 | 0) != 0 & (O2 + n2 | 0) < (r2 | 0) ? P2 + r2 - t2 | 0 : aa2 - t2 + n2 | 0;
                          p2 = r2 + x2 | 0;
                          Tj(e2, 32, K2, p2, I2);
                          if (!(c[e2 >> 2] & 32))
                            hj(y2, x2, e2) | 0;
                          Tj(e2, 48, K2, p2, I2 ^ 65536);
                          n2 = n2 - Z2 | 0;
                          if (!(c[e2 >> 2] & 32))
                            hj(da2, n2, e2) | 0;
                          o2 = _2 - t2 | 0;
                          Tj(e2, 48, r2 - (n2 + o2) | 0, 0, 0);
                          if (!(c[e2 >> 2] & 32))
                            hj(t2, o2, e2) | 0;
                          Tj(e2, 32, K2, p2, I2 ^ 8192);
                          n2 = (p2 | 0) < (K2 | 0) ? K2 : p2;
                          break;
                        }
                        n2 = (r2 | 0) < 0 ? 6 : r2;
                        if (o2) {
                          o2 = (c[ea2 >> 2] | 0) + -28 | 0;
                          c[ea2 >> 2] = o2;
                          q2 = v2 * 268435456;
                        } else {
                          q2 = v2;
                          o2 = c[ea2 >> 2] | 0;
                        }
                        F2 = (o2 | 0) < 0 ? ca2 : Q2;
                        E2 = F2;
                        o2 = F2;
                        do {
                          B2 = ~~q2 >>> 0;
                          c[o2 >> 2] = B2;
                          o2 = o2 + 4 | 0;
                          q2 = (q2 - +(B2 >>> 0)) * 1e9;
                        } while (q2 != 0);
                        p2 = o2;
                        o2 = c[ea2 >> 2] | 0;
                        if ((o2 | 0) > 0) {
                          s2 = F2;
                          while (1) {
                            t2 = (o2 | 0) > 29 ? 29 : o2;
                            r2 = p2 + -4 | 0;
                            do {
                              if (r2 >>> 0 < s2 >>> 0)
                                r2 = s2;
                              else {
                                o2 = 0;
                                do {
                                  B2 = fk(c[r2 >> 2] | 0, 0, t2 | 0) | 0;
                                  B2 = gk(B2 | 0, D | 0, o2 | 0, 0) | 0;
                                  o2 = D;
                                  A2 = qk(B2 | 0, o2 | 0, 1e9, 0) | 0;
                                  c[r2 >> 2] = A2;
                                  o2 = pk(B2 | 0, o2 | 0, 1e9, 0) | 0;
                                  r2 = r2 + -4 | 0;
                                } while (r2 >>> 0 >= s2 >>> 0);
                                if (!o2) {
                                  r2 = s2;
                                  break;
                                }
                                r2 = s2 + -4 | 0;
                                c[r2 >> 2] = o2;
                              }
                            } while (0);
                            while (1) {
                              if (p2 >>> 0 <= r2 >>> 0)
                                break;
                              o2 = p2 + -4 | 0;
                              if (!(c[o2 >> 2] | 0))
                                p2 = o2;
                              else
                                break;
                            }
                            o2 = (c[ea2 >> 2] | 0) - t2 | 0;
                            c[ea2 >> 2] = o2;
                            if ((o2 | 0) > 0)
                              s2 = r2;
                            else
                              break;
                          }
                        } else
                          r2 = F2;
                        if ((o2 | 0) < 0) {
                          y2 = ((n2 + 25 | 0) / 9 | 0) + 1 | 0;
                          z2 = (C2 | 0) == 102;
                          w2 = r2;
                          while (1) {
                            x2 = 0 - o2 | 0;
                            x2 = (x2 | 0) > 9 ? 9 : x2;
                            do {
                              if (w2 >>> 0 < p2 >>> 0) {
                                o2 = (1 << x2) + -1 | 0;
                                s2 = 1e9 >>> x2;
                                r2 = 0;
                                t2 = w2;
                                do {
                                  B2 = c[t2 >> 2] | 0;
                                  c[t2 >> 2] = (B2 >>> x2) + r2;
                                  r2 = $(B2 & o2, s2) | 0;
                                  t2 = t2 + 4 | 0;
                                } while (t2 >>> 0 < p2 >>> 0);
                                o2 = (c[w2 >> 2] | 0) == 0 ? w2 + 4 | 0 : w2;
                                if (!r2) {
                                  r2 = o2;
                                  break;
                                }
                                c[p2 >> 2] = r2;
                                r2 = o2;
                                p2 = p2 + 4 | 0;
                              } else
                                r2 = (c[w2 >> 2] | 0) == 0 ? w2 + 4 | 0 : w2;
                            } while (0);
                            o2 = z2 ? F2 : r2;
                            p2 = (p2 - o2 >> 2 | 0) > (y2 | 0) ? o2 + (y2 << 2) | 0 : p2;
                            o2 = (c[ea2 >> 2] | 0) + x2 | 0;
                            c[ea2 >> 2] = o2;
                            if ((o2 | 0) >= 0) {
                              w2 = r2;
                              break;
                            } else
                              w2 = r2;
                          }
                        } else
                          w2 = r2;
                        do {
                          if (w2 >>> 0 < p2 >>> 0) {
                            o2 = (E2 - w2 >> 2) * 9 | 0;
                            s2 = c[w2 >> 2] | 0;
                            if (s2 >>> 0 < 10)
                              break;
                            else
                              r2 = 10;
                            do {
                              r2 = r2 * 10 | 0;
                              o2 = o2 + 1 | 0;
                            } while (s2 >>> 0 >= r2 >>> 0);
                          } else
                            o2 = 0;
                        } while (0);
                        A2 = (C2 | 0) == 103;
                        B2 = (n2 | 0) != 0;
                        r2 = n2 - ((C2 | 0) != 102 ? o2 : 0) + ((B2 & A2) << 31 >> 31) | 0;
                        if ((r2 | 0) < (((p2 - E2 >> 2) * 9 | 0) + -9 | 0)) {
                          t2 = r2 + 9216 | 0;
                          z2 = (t2 | 0) / 9 | 0;
                          r2 = F2 + (z2 + -1023 << 2) | 0;
                          t2 = ((t2 | 0) % 9 | 0) + 1 | 0;
                          if ((t2 | 0) < 9) {
                            s2 = 10;
                            do {
                              s2 = s2 * 10 | 0;
                              t2 = t2 + 1 | 0;
                            } while ((t2 | 0) != 9);
                          } else
                            s2 = 10;
                          x2 = c[r2 >> 2] | 0;
                          y2 = (x2 >>> 0) % (s2 >>> 0) | 0;
                          if ((y2 | 0) == 0 ? (F2 + (z2 + -1022 << 2) | 0) == (p2 | 0) : 0)
                            s2 = w2;
                          else
                            L2 = 163;
                          do {
                            if ((L2 | 0) == 163) {
                              L2 = 0;
                              v2 = (((x2 >>> 0) / (s2 >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992 : 9007199254740994;
                              t2 = (s2 | 0) / 2 | 0;
                              do {
                                if (y2 >>> 0 < t2 >>> 0)
                                  q2 = 0.5;
                                else {
                                  if ((y2 | 0) == (t2 | 0) ? (F2 + (z2 + -1022 << 2) | 0) == (p2 | 0) : 0) {
                                    q2 = 1;
                                    break;
                                  }
                                  q2 = 1.5;
                                }
                              } while (0);
                              do {
                                if (G2) {
                                  if ((a[H2 >> 0] | 0) != 45)
                                    break;
                                  v2 = -v2;
                                  q2 = -q2;
                                }
                              } while (0);
                              t2 = x2 - y2 | 0;
                              c[r2 >> 2] = t2;
                              if (!(v2 + q2 != v2)) {
                                s2 = w2;
                                break;
                              }
                              C2 = t2 + s2 | 0;
                              c[r2 >> 2] = C2;
                              if (C2 >>> 0 > 999999999) {
                                o2 = w2;
                                while (1) {
                                  s2 = r2 + -4 | 0;
                                  c[r2 >> 2] = 0;
                                  if (s2 >>> 0 < o2 >>> 0) {
                                    o2 = o2 + -4 | 0;
                                    c[o2 >> 2] = 0;
                                  }
                                  C2 = (c[s2 >> 2] | 0) + 1 | 0;
                                  c[s2 >> 2] = C2;
                                  if (C2 >>> 0 > 999999999)
                                    r2 = s2;
                                  else {
                                    w2 = o2;
                                    r2 = s2;
                                    break;
                                  }
                                }
                              }
                              o2 = (E2 - w2 >> 2) * 9 | 0;
                              t2 = c[w2 >> 2] | 0;
                              if (t2 >>> 0 < 10) {
                                s2 = w2;
                                break;
                              } else
                                s2 = 10;
                              do {
                                s2 = s2 * 10 | 0;
                                o2 = o2 + 1 | 0;
                              } while (t2 >>> 0 >= s2 >>> 0);
                              s2 = w2;
                            }
                          } while (0);
                          C2 = r2 + 4 | 0;
                          w2 = s2;
                          p2 = p2 >>> 0 > C2 >>> 0 ? C2 : p2;
                        }
                        y2 = 0 - o2 | 0;
                        while (1) {
                          if (p2 >>> 0 <= w2 >>> 0) {
                            z2 = 0;
                            C2 = p2;
                            break;
                          }
                          r2 = p2 + -4 | 0;
                          if (!(c[r2 >> 2] | 0))
                            p2 = r2;
                          else {
                            z2 = 1;
                            C2 = p2;
                            break;
                          }
                        }
                        do {
                          if (A2) {
                            n2 = (B2 & 1 ^ 1) + n2 | 0;
                            if ((n2 | 0) > (o2 | 0) & (o2 | 0) > -5) {
                              u2 = u2 + -1 | 0;
                              n2 = n2 + -1 - o2 | 0;
                            } else {
                              u2 = u2 + -2 | 0;
                              n2 = n2 + -1 | 0;
                            }
                            p2 = I2 & 8;
                            if (p2)
                              break;
                            do {
                              if (z2) {
                                p2 = c[C2 + -4 >> 2] | 0;
                                if (!p2) {
                                  r2 = 9;
                                  break;
                                }
                                if (!((p2 >>> 0) % 10 | 0)) {
                                  s2 = 10;
                                  r2 = 0;
                                } else {
                                  r2 = 0;
                                  break;
                                }
                                do {
                                  s2 = s2 * 10 | 0;
                                  r2 = r2 + 1 | 0;
                                } while (((p2 >>> 0) % (s2 >>> 0) | 0 | 0) == 0);
                              } else
                                r2 = 9;
                            } while (0);
                            p2 = ((C2 - E2 >> 2) * 9 | 0) + -9 | 0;
                            if ((u2 | 32 | 0) == 102) {
                              p2 = p2 - r2 | 0;
                              p2 = (p2 | 0) < 0 ? 0 : p2;
                              n2 = (n2 | 0) < (p2 | 0) ? n2 : p2;
                              p2 = 0;
                              break;
                            } else {
                              p2 = p2 + o2 - r2 | 0;
                              p2 = (p2 | 0) < 0 ? 0 : p2;
                              n2 = (n2 | 0) < (p2 | 0) ? n2 : p2;
                              p2 = 0;
                              break;
                            }
                          } else
                            p2 = I2 & 8;
                        } while (0);
                        x2 = n2 | p2;
                        s2 = (x2 | 0) != 0 & 1;
                        t2 = (u2 | 32 | 0) == 102;
                        if (t2) {
                          o2 = (o2 | 0) > 0 ? o2 : 0;
                          u2 = 0;
                        } else {
                          r2 = (o2 | 0) < 0 ? y2 : o2;
                          r2 = Sj(r2, ((r2 | 0) < 0) << 31 >> 31, X2) | 0;
                          if ((_2 - r2 | 0) < 2)
                            do {
                              r2 = r2 + -1 | 0;
                              a[r2 >> 0] = 48;
                            } while ((_2 - r2 | 0) < 2);
                          a[r2 + -1 >> 0] = (o2 >> 31 & 2) + 43;
                          E2 = r2 + -2 | 0;
                          a[E2 >> 0] = u2;
                          o2 = _2 - E2 | 0;
                          u2 = E2;
                        }
                        y2 = G2 + 1 + n2 + s2 + o2 | 0;
                        Tj(e2, 32, K2, y2, I2);
                        if (!(c[e2 >> 2] & 32))
                          hj(H2, G2, e2) | 0;
                        Tj(e2, 48, K2, y2, I2 ^ 65536);
                        do {
                          if (t2) {
                            r2 = w2 >>> 0 > F2 >>> 0 ? F2 : w2;
                            o2 = r2;
                            do {
                              p2 = Sj(c[o2 >> 2] | 0, 0, R2) | 0;
                              do {
                                if ((o2 | 0) == (r2 | 0)) {
                                  if ((p2 | 0) != (R2 | 0))
                                    break;
                                  a[T2 >> 0] = 48;
                                  p2 = T2;
                                } else {
                                  if (p2 >>> 0 <= da2 >>> 0)
                                    break;
                                  do {
                                    p2 = p2 + -1 | 0;
                                    a[p2 >> 0] = 48;
                                  } while (p2 >>> 0 > da2 >>> 0);
                                }
                              } while (0);
                              if (!(c[e2 >> 2] & 32))
                                hj(p2, S2 - p2 | 0, e2) | 0;
                              o2 = o2 + 4 | 0;
                            } while (o2 >>> 0 <= F2 >>> 0);
                            do {
                              if (x2) {
                                if (c[e2 >> 2] & 32)
                                  break;
                                hj(16485, 1, e2) | 0;
                              }
                            } while (0);
                            if ((n2 | 0) > 0 & o2 >>> 0 < C2 >>> 0) {
                              p2 = o2;
                              while (1) {
                                o2 = Sj(c[p2 >> 2] | 0, 0, R2) | 0;
                                if (o2 >>> 0 > da2 >>> 0)
                                  do {
                                    o2 = o2 + -1 | 0;
                                    a[o2 >> 0] = 48;
                                  } while (o2 >>> 0 > da2 >>> 0);
                                if (!(c[e2 >> 2] & 32))
                                  hj(o2, (n2 | 0) > 9 ? 9 : n2, e2) | 0;
                                p2 = p2 + 4 | 0;
                                o2 = n2 + -9 | 0;
                                if (!((n2 | 0) > 9 & p2 >>> 0 < C2 >>> 0)) {
                                  n2 = o2;
                                  break;
                                } else
                                  n2 = o2;
                              }
                            }
                            Tj(e2, 48, n2 + 9 | 0, 9, 0);
                          } else {
                            t2 = z2 ? C2 : w2 + 4 | 0;
                            if ((n2 | 0) > -1) {
                              s2 = (p2 | 0) == 0;
                              r2 = w2;
                              do {
                                o2 = Sj(c[r2 >> 2] | 0, 0, R2) | 0;
                                if ((o2 | 0) == (R2 | 0)) {
                                  a[T2 >> 0] = 48;
                                  o2 = T2;
                                }
                                do {
                                  if ((r2 | 0) == (w2 | 0)) {
                                    p2 = o2 + 1 | 0;
                                    if (!(c[e2 >> 2] & 32))
                                      hj(o2, 1, e2) | 0;
                                    if (s2 & (n2 | 0) < 1) {
                                      o2 = p2;
                                      break;
                                    }
                                    if (c[e2 >> 2] & 32) {
                                      o2 = p2;
                                      break;
                                    }
                                    hj(16485, 1, e2) | 0;
                                    o2 = p2;
                                  } else {
                                    if (o2 >>> 0 <= da2 >>> 0)
                                      break;
                                    do {
                                      o2 = o2 + -1 | 0;
                                      a[o2 >> 0] = 48;
                                    } while (o2 >>> 0 > da2 >>> 0);
                                  }
                                } while (0);
                                p2 = S2 - o2 | 0;
                                if (!(c[e2 >> 2] & 32))
                                  hj(o2, (n2 | 0) > (p2 | 0) ? p2 : n2, e2) | 0;
                                n2 = n2 - p2 | 0;
                                r2 = r2 + 4 | 0;
                              } while (r2 >>> 0 < t2 >>> 0 & (n2 | 0) > -1);
                            }
                            Tj(e2, 48, n2 + 18 | 0, 18, 0);
                            if (c[e2 >> 2] & 32)
                              break;
                            hj(u2, _2 - u2 | 0, e2) | 0;
                          }
                        } while (0);
                        Tj(e2, 32, K2, y2, I2 ^ 8192);
                        n2 = (y2 | 0) < (K2 | 0) ? K2 : y2;
                      } else {
                        t2 = (u2 & 32 | 0) != 0;
                        s2 = q2 != q2 | false;
                        o2 = s2 ? 0 : G2;
                        r2 = o2 + 3 | 0;
                        Tj(e2, 32, K2, r2, p2);
                        n2 = c[e2 >> 2] | 0;
                        if (!(n2 & 32)) {
                          hj(H2, o2, e2) | 0;
                          n2 = c[e2 >> 2] | 0;
                        }
                        if (!(n2 & 32))
                          hj(s2 ? t2 ? 16477 : 16481 : t2 ? 16469 : 16473, 3, e2) | 0;
                        Tj(e2, 32, K2, r2, I2 ^ 8192);
                        n2 = (r2 | 0) < (K2 | 0) ? K2 : r2;
                      }
                    } while (0);
                    w2 = J2;
                    continue a;
                  }
                  default: {
                    p2 = I2;
                    o2 = r2;
                    t2 = 0;
                    u2 = 16433;
                    n2 = N2;
                  }
                }
              } while (0);
            g:
              do {
                if ((L2 | 0) == 64) {
                  p2 = ba2;
                  o2 = c[p2 >> 2] | 0;
                  p2 = c[p2 + 4 >> 2] | 0;
                  s2 = u2 & 32;
                  if (!((o2 | 0) == 0 & (p2 | 0) == 0)) {
                    n2 = N2;
                    do {
                      n2 = n2 + -1 | 0;
                      a[n2 >> 0] = d[16417 + (o2 & 15) >> 0] | s2;
                      o2 = hk(o2 | 0, p2 | 0, 4) | 0;
                      p2 = D;
                    } while (!((o2 | 0) == 0 & (p2 | 0) == 0));
                    L2 = ba2;
                    if ((t2 & 8 | 0) == 0 | (c[L2 >> 2] | 0) == 0 & (c[L2 + 4 >> 2] | 0) == 0) {
                      o2 = t2;
                      t2 = 0;
                      s2 = 16433;
                      L2 = 77;
                    } else {
                      o2 = t2;
                      t2 = 2;
                      s2 = 16433 + (u2 >> 4) | 0;
                      L2 = 77;
                    }
                  } else {
                    n2 = N2;
                    o2 = t2;
                    t2 = 0;
                    s2 = 16433;
                    L2 = 77;
                  }
                } else if ((L2 | 0) == 76) {
                  n2 = Sj(n2, o2, N2) | 0;
                  o2 = I2;
                  t2 = p2;
                  L2 = 77;
                } else if ((L2 | 0) == 82) {
                  L2 = 0;
                  I2 = sj(n2, 0, r2) | 0;
                  H2 = (I2 | 0) == 0;
                  w2 = n2;
                  o2 = H2 ? r2 : I2 - n2 | 0;
                  t2 = 0;
                  u2 = 16433;
                  n2 = H2 ? n2 + r2 | 0 : I2;
                } else if ((L2 | 0) == 86) {
                  L2 = 0;
                  o2 = 0;
                  n2 = 0;
                  s2 = c[ba2 >> 2] | 0;
                  while (1) {
                    p2 = c[s2 >> 2] | 0;
                    if (!p2)
                      break;
                    n2 = Ii(fa2, p2) | 0;
                    if ((n2 | 0) < 0 | n2 >>> 0 > (r2 - o2 | 0) >>> 0)
                      break;
                    o2 = n2 + o2 | 0;
                    if (r2 >>> 0 > o2 >>> 0)
                      s2 = s2 + 4 | 0;
                    else
                      break;
                  }
                  if ((n2 | 0) < 0) {
                    m2 = -1;
                    break a;
                  }
                  Tj(e2, 32, K2, o2, I2);
                  if (!o2) {
                    n2 = 0;
                    L2 = 98;
                  } else {
                    p2 = 0;
                    r2 = c[ba2 >> 2] | 0;
                    while (1) {
                      n2 = c[r2 >> 2] | 0;
                      if (!n2) {
                        n2 = o2;
                        L2 = 98;
                        break g;
                      }
                      n2 = Ii(fa2, n2) | 0;
                      p2 = n2 + p2 | 0;
                      if ((p2 | 0) > (o2 | 0)) {
                        n2 = o2;
                        L2 = 98;
                        break g;
                      }
                      if (!(c[e2 >> 2] & 32))
                        hj(fa2, n2, e2) | 0;
                      if (p2 >>> 0 >= o2 >>> 0) {
                        n2 = o2;
                        L2 = 98;
                        break;
                      } else
                        r2 = r2 + 4 | 0;
                    }
                  }
                }
              } while (0);
            if ((L2 | 0) == 98) {
              L2 = 0;
              Tj(e2, 32, K2, n2, I2 ^ 8192);
              w2 = J2;
              n2 = (K2 | 0) > (n2 | 0) ? K2 : n2;
              continue;
            }
            if ((L2 | 0) == 77) {
              L2 = 0;
              p2 = (r2 | 0) > -1 ? o2 & -65537 : o2;
              o2 = ba2;
              o2 = (c[o2 >> 2] | 0) != 0 | (c[o2 + 4 >> 2] | 0) != 0;
              if ((r2 | 0) != 0 | o2) {
                o2 = (o2 & 1 ^ 1) + (U2 - n2) | 0;
                w2 = n2;
                o2 = (r2 | 0) > (o2 | 0) ? r2 : o2;
                u2 = s2;
                n2 = N2;
              } else {
                w2 = N2;
                o2 = 0;
                u2 = s2;
                n2 = N2;
              }
            }
            s2 = n2 - w2 | 0;
            o2 = (o2 | 0) < (s2 | 0) ? s2 : o2;
            r2 = t2 + o2 | 0;
            n2 = (K2 | 0) < (r2 | 0) ? r2 : K2;
            Tj(e2, 32, n2, r2, p2);
            if (!(c[e2 >> 2] & 32))
              hj(u2, t2, e2) | 0;
            Tj(e2, 48, n2, r2, p2 ^ 65536);
            Tj(e2, 48, o2, s2, 0);
            if (!(c[e2 >> 2] & 32))
              hj(w2, s2, e2) | 0;
            Tj(e2, 32, n2, r2, p2 ^ 8192);
            w2 = J2;
          }
        h:
          do {
            if ((L2 | 0) == 245) {
              if (!e2)
                if (f2) {
                  m2 = 1;
                  while (1) {
                    f2 = c[l2 + (m2 << 2) >> 2] | 0;
                    if (!f2)
                      break;
                    Rj(j2 + (m2 << 3) | 0, f2, g2);
                    m2 = m2 + 1 | 0;
                    if ((m2 | 0) >= 10) {
                      m2 = 1;
                      break h;
                    }
                  }
                  if ((m2 | 0) < 10)
                    while (1) {
                      if (c[l2 + (m2 << 2) >> 2] | 0) {
                        m2 = -1;
                        break h;
                      }
                      m2 = m2 + 1 | 0;
                      if ((m2 | 0) >= 10) {
                        m2 = 1;
                        break;
                      }
                    }
                  else
                    m2 = 1;
                } else
                  m2 = 0;
            }
          } while (0);
        i2 = ha2;
        return m2 | 0;
      }
      function Mj(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        return Si(a2, b2, c2) | 0;
      }
      function Nj(a2, b2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
        p2 = i2;
        i2 = i2 + 240 | 0;
        o2 = p2;
        c[o2 >> 2] = a2;
        a:
          do {
            if ((e2 | 0) > 1) {
              n2 = 0 - b2 | 0;
              g2 = e2;
              h2 = a2;
              k2 = a2;
              l2 = 1;
              while (1) {
                a2 = h2 + n2 | 0;
                m2 = g2 + -2 | 0;
                j2 = h2 + (0 - ((c[f2 + (m2 << 2) >> 2] | 0) + b2)) | 0;
                if ((cc[d2 & 15](k2, j2) | 0) > -1 ? (cc[d2 & 15](k2, a2) | 0) > -1 : 0) {
                  e2 = l2;
                  break a;
                }
                e2 = l2 + 1 | 0;
                h2 = o2 + (l2 << 2) | 0;
                if ((cc[d2 & 15](j2, a2) | 0) > -1) {
                  c[h2 >> 2] = j2;
                  a2 = j2;
                  g2 = g2 + -1 | 0;
                } else {
                  c[h2 >> 2] = a2;
                  g2 = m2;
                }
                if ((g2 | 0) <= 1)
                  break a;
                h2 = a2;
                k2 = c[o2 >> 2] | 0;
                l2 = e2;
              }
            } else
              e2 = 1;
          } while (0);
        Pj(b2, o2, e2);
        i2 = p2;
        return;
      }
      function Oj(a2, b2, d2, e2, f2, g2, h2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        h2 = h2 | 0;
        var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
        r2 = i2;
        i2 = i2 + 240 | 0;
        p2 = r2;
        k2 = c[e2 >> 2] | 0;
        e2 = c[e2 + 4 >> 2] | 0;
        c[p2 >> 2] = a2;
        o2 = 0 - b2 | 0;
        a:
          do {
            if ((e2 | 0) != 0 | (k2 | 0) != 1 ? (j2 = a2 + (0 - (c[h2 + (f2 << 2) >> 2] | 0)) | 0, (cc[d2 & 15](j2, a2) | 0) >= 1) : 0) {
              g2 = (g2 | 0) == 0;
              n2 = j2;
              l2 = k2;
              m2 = e2;
              j2 = 1;
              while (1) {
                if (g2 & (f2 | 0) > 1) {
                  e2 = c[h2 + (f2 + -2 << 2) >> 2] | 0;
                  if ((cc[d2 & 15](a2 + o2 | 0, n2) | 0) > -1) {
                    g2 = f2;
                    e2 = j2;
                    q2 = 20;
                    break a;
                  }
                  if ((cc[d2 & 15](a2 + (0 - (e2 + b2)) | 0, n2) | 0) > -1) {
                    g2 = f2;
                    e2 = j2;
                    q2 = 20;
                    break a;
                  }
                }
                e2 = j2 + 1 | 0;
                c[p2 + (j2 << 2) >> 2] = n2;
                g2 = l2 + -1 | 0;
                do {
                  if (g2) {
                    if (!(g2 & 1)) {
                      a2 = g2;
                      g2 = 0;
                      do {
                        g2 = g2 + 1 | 0;
                        a2 = a2 >>> 1;
                      } while ((a2 & 1 | 0) == 0);
                      if (!g2)
                        q2 = 11;
                    } else
                      q2 = 11;
                    if ((q2 | 0) == 11) {
                      q2 = 0;
                      if (!m2) {
                        g2 = 64;
                        q2 = 16;
                        break;
                      }
                      if (!(m2 & 1)) {
                        a2 = m2;
                        g2 = 0;
                      } else {
                        k2 = 0;
                        a2 = l2;
                        j2 = m2;
                        g2 = 0;
                        break;
                      }
                      while (1) {
                        j2 = g2 + 1 | 0;
                        a2 = a2 >>> 1;
                        if (a2 & 1) {
                          a2 = j2;
                          break;
                        } else
                          g2 = j2;
                      }
                      if (!a2) {
                        k2 = 0;
                        a2 = l2;
                        j2 = m2;
                        g2 = 0;
                        break;
                      } else
                        g2 = g2 + 33 | 0;
                    }
                    if (g2 >>> 0 > 31)
                      q2 = 16;
                    else {
                      k2 = g2;
                      a2 = l2;
                      j2 = m2;
                    }
                  } else {
                    g2 = 32;
                    q2 = 16;
                  }
                } while (0);
                if ((q2 | 0) == 16) {
                  q2 = 0;
                  k2 = g2 + -32 | 0;
                  a2 = m2;
                  j2 = 0;
                }
                l2 = j2 << 32 - k2 | a2 >>> k2;
                m2 = j2 >>> k2;
                g2 = g2 + f2 | 0;
                if (!((m2 | 0) != 0 | (l2 | 0) != 1)) {
                  a2 = n2;
                  q2 = 20;
                  break a;
                }
                a2 = n2 + (0 - (c[h2 + (g2 << 2) >> 2] | 0)) | 0;
                if ((cc[d2 & 15](a2, c[p2 >> 2] | 0) | 0) < 1) {
                  a2 = n2;
                  f2 = g2;
                  g2 = 0;
                  q2 = 19;
                  break;
                } else {
                  k2 = n2;
                  f2 = g2;
                  g2 = 1;
                  n2 = a2;
                  j2 = e2;
                  a2 = k2;
                }
              }
            } else {
              e2 = 1;
              q2 = 19;
            }
          } while (0);
        if ((q2 | 0) == 19 ? (g2 | 0) == 0 : 0) {
          g2 = f2;
          q2 = 20;
        }
        if ((q2 | 0) == 20) {
          Pj(b2, p2, e2);
          Nj(a2, b2, d2, g2, h2);
        }
        i2 = r2;
        return;
      }
      function Pj(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0;
        h2 = i2;
        i2 = i2 + 256 | 0;
        e2 = h2;
        a:
          do {
            if ((d2 | 0) >= 2 ? (g2 = b2 + (d2 << 2) | 0, c[g2 >> 2] = e2, (a2 | 0) != 0) : 0)
              while (1) {
                f2 = a2 >>> 0 > 256 ? 256 : a2;
                ik(e2 | 0, c[b2 >> 2] | 0, f2 | 0) | 0;
                e2 = 0;
                do {
                  j2 = b2 + (e2 << 2) | 0;
                  e2 = e2 + 1 | 0;
                  ik(c[j2 >> 2] | 0, c[b2 + (e2 << 2) >> 2] | 0, f2 | 0) | 0;
                  c[j2 >> 2] = (c[j2 >> 2] | 0) + f2;
                } while ((e2 | 0) != (d2 | 0));
                if ((a2 | 0) == (f2 | 0))
                  break a;
                a2 = a2 - f2 | 0;
                e2 = c[g2 >> 2] | 0;
              }
          } while (0);
        i2 = h2;
        return;
      }
      function Qj(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0;
        e2 = a2 + 20 | 0;
        f2 = c[e2 >> 2] | 0;
        a2 = (c[a2 + 16 >> 2] | 0) - f2 | 0;
        a2 = a2 >>> 0 > d2 >>> 0 ? d2 : a2;
        ik(f2 | 0, b2 | 0, a2 | 0) | 0;
        c[e2 >> 2] = (c[e2 >> 2] | 0) + a2;
        return d2 | 0;
      }
      function Rj(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0;
        a:
          do {
            if (b2 >>> 0 <= 20)
              do {
                switch (b2 | 0) {
                  case 9: {
                    e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    b2 = c[e2 >> 2] | 0;
                    c[d2 >> 2] = e2 + 4;
                    c[a2 >> 2] = b2;
                    break a;
                  }
                  case 10: {
                    e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    b2 = c[e2 >> 2] | 0;
                    c[d2 >> 2] = e2 + 4;
                    e2 = a2;
                    c[e2 >> 2] = b2;
                    c[e2 + 4 >> 2] = ((b2 | 0) < 0) << 31 >> 31;
                    break a;
                  }
                  case 11: {
                    e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    b2 = c[e2 >> 2] | 0;
                    c[d2 >> 2] = e2 + 4;
                    e2 = a2;
                    c[e2 >> 2] = b2;
                    c[e2 + 4 >> 2] = 0;
                    break a;
                  }
                  case 12: {
                    e2 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                    b2 = e2;
                    f2 = c[b2 >> 2] | 0;
                    b2 = c[b2 + 4 >> 2] | 0;
                    c[d2 >> 2] = e2 + 8;
                    e2 = a2;
                    c[e2 >> 2] = f2;
                    c[e2 + 4 >> 2] = b2;
                    break a;
                  }
                  case 13: {
                    f2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    e2 = c[f2 >> 2] | 0;
                    c[d2 >> 2] = f2 + 4;
                    e2 = (e2 & 65535) << 16 >> 16;
                    f2 = a2;
                    c[f2 >> 2] = e2;
                    c[f2 + 4 >> 2] = ((e2 | 0) < 0) << 31 >> 31;
                    break a;
                  }
                  case 14: {
                    f2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    e2 = c[f2 >> 2] | 0;
                    c[d2 >> 2] = f2 + 4;
                    f2 = a2;
                    c[f2 >> 2] = e2 & 65535;
                    c[f2 + 4 >> 2] = 0;
                    break a;
                  }
                  case 15: {
                    f2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    e2 = c[f2 >> 2] | 0;
                    c[d2 >> 2] = f2 + 4;
                    e2 = (e2 & 255) << 24 >> 24;
                    f2 = a2;
                    c[f2 >> 2] = e2;
                    c[f2 + 4 >> 2] = ((e2 | 0) < 0) << 31 >> 31;
                    break a;
                  }
                  case 16: {
                    f2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    e2 = c[f2 >> 2] | 0;
                    c[d2 >> 2] = f2 + 4;
                    f2 = a2;
                    c[f2 >> 2] = e2 & 255;
                    c[f2 + 4 >> 2] = 0;
                    break a;
                  }
                  case 17: {
                    f2 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                    g2 = +h[f2 >> 3];
                    c[d2 >> 2] = f2 + 8;
                    h[a2 >> 3] = g2;
                    break a;
                  }
                  case 18: {
                    f2 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                    g2 = +h[f2 >> 3];
                    c[d2 >> 2] = f2 + 8;
                    h[a2 >> 3] = g2;
                    break a;
                  }
                  default:
                    break a;
                }
              } while (0);
          } while (0);
        return;
      }
      function Sj(b2, c2, d2) {
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        var e2 = 0;
        if (c2 >>> 0 > 0 | (c2 | 0) == 0 & b2 >>> 0 > 4294967295)
          while (1) {
            e2 = qk(b2 | 0, c2 | 0, 10, 0) | 0;
            d2 = d2 + -1 | 0;
            a[d2 >> 0] = e2 | 48;
            e2 = pk(b2 | 0, c2 | 0, 10, 0) | 0;
            if (c2 >>> 0 > 9 | (c2 | 0) == 9 & b2 >>> 0 > 4294967295) {
              b2 = e2;
              c2 = D;
            } else {
              b2 = e2;
              break;
            }
          }
        if (b2)
          while (1) {
            d2 = d2 + -1 | 0;
            a[d2 >> 0] = (b2 >>> 0) % 10 | 0 | 48;
            if (b2 >>> 0 < 10)
              break;
            else
              b2 = (b2 >>> 0) / 10 | 0;
          }
        return d2 | 0;
      }
      function Tj(a2, b2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, h2 = 0, j2 = 0;
        j2 = i2;
        i2 = i2 + 256 | 0;
        h2 = j2;
        do {
          if ((d2 | 0) > (e2 | 0) & (f2 & 73728 | 0) == 0) {
            f2 = d2 - e2 | 0;
            ek(h2 | 0, b2 | 0, (f2 >>> 0 > 256 ? 256 : f2) | 0) | 0;
            b2 = c[a2 >> 2] | 0;
            g2 = (b2 & 32 | 0) == 0;
            if (f2 >>> 0 > 255) {
              e2 = d2 - e2 | 0;
              do {
                if (g2) {
                  hj(h2, 256, a2) | 0;
                  b2 = c[a2 >> 2] | 0;
                }
                f2 = f2 + -256 | 0;
                g2 = (b2 & 32 | 0) == 0;
              } while (f2 >>> 0 > 255);
              if (g2)
                f2 = e2 & 255;
              else
                break;
            } else if (!g2)
              break;
            hj(h2, f2, a2) | 0;
          }
        } while (0);
        i2 = j2;
        return;
      }
      function Uj(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0;
        do {
          if (a2 >>> 0 < 245) {
            o2 = a2 >>> 0 < 11 ? 16 : a2 + 11 & -8;
            a2 = o2 >>> 3;
            i3 = c[756] | 0;
            d2 = i3 >>> a2;
            if (d2 & 3) {
              a2 = (d2 & 1 ^ 1) + a2 | 0;
              e2 = a2 << 1;
              d2 = 3064 + (e2 << 2) | 0;
              e2 = 3064 + (e2 + 2 << 2) | 0;
              f2 = c[e2 >> 2] | 0;
              g2 = f2 + 8 | 0;
              h2 = c[g2 >> 2] | 0;
              do {
                if ((d2 | 0) != (h2 | 0)) {
                  if (h2 >>> 0 < (c[760] | 0) >>> 0)
                    Da();
                  b2 = h2 + 12 | 0;
                  if ((c[b2 >> 2] | 0) == (f2 | 0)) {
                    c[b2 >> 2] = d2;
                    c[e2 >> 2] = h2;
                    break;
                  } else
                    Da();
                } else
                  c[756] = i3 & ~(1 << a2);
              } while (0);
              M2 = a2 << 3;
              c[f2 + 4 >> 2] = M2 | 3;
              M2 = f2 + (M2 | 4) | 0;
              c[M2 >> 2] = c[M2 >> 2] | 1;
              M2 = g2;
              return M2 | 0;
            }
            h2 = c[758] | 0;
            if (o2 >>> 0 > h2 >>> 0) {
              if (d2) {
                e2 = 2 << a2;
                e2 = d2 << a2 & (e2 | 0 - e2);
                e2 = (e2 & 0 - e2) + -1 | 0;
                j2 = e2 >>> 12 & 16;
                e2 = e2 >>> j2;
                f2 = e2 >>> 5 & 8;
                e2 = e2 >>> f2;
                g2 = e2 >>> 2 & 4;
                e2 = e2 >>> g2;
                d2 = e2 >>> 1 & 2;
                e2 = e2 >>> d2;
                a2 = e2 >>> 1 & 1;
                a2 = (f2 | j2 | g2 | d2 | a2) + (e2 >>> a2) | 0;
                e2 = a2 << 1;
                d2 = 3064 + (e2 << 2) | 0;
                e2 = 3064 + (e2 + 2 << 2) | 0;
                g2 = c[e2 >> 2] | 0;
                j2 = g2 + 8 | 0;
                f2 = c[j2 >> 2] | 0;
                do {
                  if ((d2 | 0) != (f2 | 0)) {
                    if (f2 >>> 0 < (c[760] | 0) >>> 0)
                      Da();
                    b2 = f2 + 12 | 0;
                    if ((c[b2 >> 2] | 0) == (g2 | 0)) {
                      c[b2 >> 2] = d2;
                      c[e2 >> 2] = f2;
                      k2 = c[758] | 0;
                      break;
                    } else
                      Da();
                  } else {
                    c[756] = i3 & ~(1 << a2);
                    k2 = h2;
                  }
                } while (0);
                M2 = a2 << 3;
                h2 = M2 - o2 | 0;
                c[g2 + 4 >> 2] = o2 | 3;
                i3 = g2 + o2 | 0;
                c[g2 + (o2 | 4) >> 2] = h2 | 1;
                c[g2 + M2 >> 2] = h2;
                if (k2) {
                  f2 = c[761] | 0;
                  d2 = k2 >>> 3;
                  b2 = d2 << 1;
                  e2 = 3064 + (b2 << 2) | 0;
                  a2 = c[756] | 0;
                  d2 = 1 << d2;
                  if (a2 & d2) {
                    a2 = 3064 + (b2 + 2 << 2) | 0;
                    b2 = c[a2 >> 2] | 0;
                    if (b2 >>> 0 < (c[760] | 0) >>> 0)
                      Da();
                    else {
                      l2 = a2;
                      m2 = b2;
                    }
                  } else {
                    c[756] = a2 | d2;
                    l2 = 3064 + (b2 + 2 << 2) | 0;
                    m2 = e2;
                  }
                  c[l2 >> 2] = f2;
                  c[m2 + 12 >> 2] = f2;
                  c[f2 + 8 >> 2] = m2;
                  c[f2 + 12 >> 2] = e2;
                }
                c[758] = h2;
                c[761] = i3;
                M2 = j2;
                return M2 | 0;
              }
              a2 = c[757] | 0;
              if (a2) {
                d2 = (a2 & 0 - a2) + -1 | 0;
                L2 = d2 >>> 12 & 16;
                d2 = d2 >>> L2;
                K2 = d2 >>> 5 & 8;
                d2 = d2 >>> K2;
                M2 = d2 >>> 2 & 4;
                d2 = d2 >>> M2;
                a2 = d2 >>> 1 & 2;
                d2 = d2 >>> a2;
                e2 = d2 >>> 1 & 1;
                e2 = c[3328 + ((K2 | L2 | M2 | a2 | e2) + (d2 >>> e2) << 2) >> 2] | 0;
                d2 = (c[e2 + 4 >> 2] & -8) - o2 | 0;
                a2 = e2;
                while (1) {
                  b2 = c[a2 + 16 >> 2] | 0;
                  if (!b2) {
                    b2 = c[a2 + 20 >> 2] | 0;
                    if (!b2) {
                      j2 = d2;
                      break;
                    }
                  }
                  a2 = (c[b2 + 4 >> 2] & -8) - o2 | 0;
                  M2 = a2 >>> 0 < d2 >>> 0;
                  d2 = M2 ? a2 : d2;
                  a2 = b2;
                  e2 = M2 ? b2 : e2;
                }
                g2 = c[760] | 0;
                if (e2 >>> 0 < g2 >>> 0)
                  Da();
                i3 = e2 + o2 | 0;
                if (e2 >>> 0 >= i3 >>> 0)
                  Da();
                h2 = c[e2 + 24 >> 2] | 0;
                d2 = c[e2 + 12 >> 2] | 0;
                do {
                  if ((d2 | 0) == (e2 | 0)) {
                    a2 = e2 + 20 | 0;
                    b2 = c[a2 >> 2] | 0;
                    if (!b2) {
                      a2 = e2 + 16 | 0;
                      b2 = c[a2 >> 2] | 0;
                      if (!b2) {
                        n2 = 0;
                        break;
                      }
                    }
                    while (1) {
                      d2 = b2 + 20 | 0;
                      f2 = c[d2 >> 2] | 0;
                      if (f2) {
                        b2 = f2;
                        a2 = d2;
                        continue;
                      }
                      d2 = b2 + 16 | 0;
                      f2 = c[d2 >> 2] | 0;
                      if (!f2)
                        break;
                      else {
                        b2 = f2;
                        a2 = d2;
                      }
                    }
                    if (a2 >>> 0 < g2 >>> 0)
                      Da();
                    else {
                      c[a2 >> 2] = 0;
                      n2 = b2;
                      break;
                    }
                  } else {
                    f2 = c[e2 + 8 >> 2] | 0;
                    if (f2 >>> 0 < g2 >>> 0)
                      Da();
                    b2 = f2 + 12 | 0;
                    if ((c[b2 >> 2] | 0) != (e2 | 0))
                      Da();
                    a2 = d2 + 8 | 0;
                    if ((c[a2 >> 2] | 0) == (e2 | 0)) {
                      c[b2 >> 2] = d2;
                      c[a2 >> 2] = f2;
                      n2 = d2;
                      break;
                    } else
                      Da();
                  }
                } while (0);
                do {
                  if (h2) {
                    b2 = c[e2 + 28 >> 2] | 0;
                    a2 = 3328 + (b2 << 2) | 0;
                    if ((e2 | 0) == (c[a2 >> 2] | 0)) {
                      c[a2 >> 2] = n2;
                      if (!n2) {
                        c[757] = c[757] & ~(1 << b2);
                        break;
                      }
                    } else {
                      if (h2 >>> 0 < (c[760] | 0) >>> 0)
                        Da();
                      b2 = h2 + 16 | 0;
                      if ((c[b2 >> 2] | 0) == (e2 | 0))
                        c[b2 >> 2] = n2;
                      else
                        c[h2 + 20 >> 2] = n2;
                      if (!n2)
                        break;
                    }
                    a2 = c[760] | 0;
                    if (n2 >>> 0 < a2 >>> 0)
                      Da();
                    c[n2 + 24 >> 2] = h2;
                    b2 = c[e2 + 16 >> 2] | 0;
                    do {
                      if (b2)
                        if (b2 >>> 0 < a2 >>> 0)
                          Da();
                        else {
                          c[n2 + 16 >> 2] = b2;
                          c[b2 + 24 >> 2] = n2;
                          break;
                        }
                    } while (0);
                    b2 = c[e2 + 20 >> 2] | 0;
                    if (b2)
                      if (b2 >>> 0 < (c[760] | 0) >>> 0)
                        Da();
                      else {
                        c[n2 + 20 >> 2] = b2;
                        c[b2 + 24 >> 2] = n2;
                        break;
                      }
                  }
                } while (0);
                if (j2 >>> 0 < 16) {
                  M2 = j2 + o2 | 0;
                  c[e2 + 4 >> 2] = M2 | 3;
                  M2 = e2 + (M2 + 4) | 0;
                  c[M2 >> 2] = c[M2 >> 2] | 1;
                } else {
                  c[e2 + 4 >> 2] = o2 | 3;
                  c[e2 + (o2 | 4) >> 2] = j2 | 1;
                  c[e2 + (j2 + o2) >> 2] = j2;
                  b2 = c[758] | 0;
                  if (b2) {
                    g2 = c[761] | 0;
                    d2 = b2 >>> 3;
                    b2 = d2 << 1;
                    f2 = 3064 + (b2 << 2) | 0;
                    a2 = c[756] | 0;
                    d2 = 1 << d2;
                    if (a2 & d2) {
                      b2 = 3064 + (b2 + 2 << 2) | 0;
                      a2 = c[b2 >> 2] | 0;
                      if (a2 >>> 0 < (c[760] | 0) >>> 0)
                        Da();
                      else {
                        p2 = b2;
                        q2 = a2;
                      }
                    } else {
                      c[756] = a2 | d2;
                      p2 = 3064 + (b2 + 2 << 2) | 0;
                      q2 = f2;
                    }
                    c[p2 >> 2] = g2;
                    c[q2 + 12 >> 2] = g2;
                    c[g2 + 8 >> 2] = q2;
                    c[g2 + 12 >> 2] = f2;
                  }
                  c[758] = j2;
                  c[761] = i3;
                }
                M2 = e2 + 8 | 0;
                return M2 | 0;
              } else
                q2 = o2;
            } else
              q2 = o2;
          } else if (a2 >>> 0 <= 4294967231) {
            a2 = a2 + 11 | 0;
            m2 = a2 & -8;
            l2 = c[757] | 0;
            if (l2) {
              d2 = 0 - m2 | 0;
              a2 = a2 >>> 8;
              if (a2)
                if (m2 >>> 0 > 16777215)
                  k2 = 31;
                else {
                  q2 = (a2 + 1048320 | 0) >>> 16 & 8;
                  v2 = a2 << q2;
                  p2 = (v2 + 520192 | 0) >>> 16 & 4;
                  v2 = v2 << p2;
                  k2 = (v2 + 245760 | 0) >>> 16 & 2;
                  k2 = 14 - (p2 | q2 | k2) + (v2 << k2 >>> 15) | 0;
                  k2 = m2 >>> (k2 + 7 | 0) & 1 | k2 << 1;
                }
              else
                k2 = 0;
              a2 = c[3328 + (k2 << 2) >> 2] | 0;
              a:
                do {
                  if (!a2) {
                    f2 = 0;
                    a2 = 0;
                    v2 = 86;
                  } else {
                    h2 = d2;
                    f2 = 0;
                    i3 = m2 << ((k2 | 0) == 31 ? 0 : 25 - (k2 >>> 1) | 0);
                    j2 = a2;
                    a2 = 0;
                    while (1) {
                      g2 = c[j2 + 4 >> 2] & -8;
                      d2 = g2 - m2 | 0;
                      if (d2 >>> 0 < h2 >>> 0)
                        if ((g2 | 0) == (m2 | 0)) {
                          g2 = j2;
                          a2 = j2;
                          v2 = 90;
                          break a;
                        } else
                          a2 = j2;
                      else
                        d2 = h2;
                      v2 = c[j2 + 20 >> 2] | 0;
                      j2 = c[j2 + 16 + (i3 >>> 31 << 2) >> 2] | 0;
                      f2 = (v2 | 0) == 0 | (v2 | 0) == (j2 | 0) ? f2 : v2;
                      if (!j2) {
                        v2 = 86;
                        break;
                      } else {
                        h2 = d2;
                        i3 = i3 << 1;
                      }
                    }
                  }
                } while (0);
              if ((v2 | 0) == 86) {
                if ((f2 | 0) == 0 & (a2 | 0) == 0) {
                  a2 = 2 << k2;
                  a2 = l2 & (a2 | 0 - a2);
                  if (!a2) {
                    q2 = m2;
                    break;
                  }
                  a2 = (a2 & 0 - a2) + -1 | 0;
                  n2 = a2 >>> 12 & 16;
                  a2 = a2 >>> n2;
                  l2 = a2 >>> 5 & 8;
                  a2 = a2 >>> l2;
                  p2 = a2 >>> 2 & 4;
                  a2 = a2 >>> p2;
                  q2 = a2 >>> 1 & 2;
                  a2 = a2 >>> q2;
                  f2 = a2 >>> 1 & 1;
                  f2 = c[3328 + ((l2 | n2 | p2 | q2 | f2) + (a2 >>> f2) << 2) >> 2] | 0;
                  a2 = 0;
                }
                if (!f2) {
                  i3 = d2;
                  j2 = a2;
                } else {
                  g2 = f2;
                  v2 = 90;
                }
              }
              if ((v2 | 0) == 90)
                while (1) {
                  v2 = 0;
                  q2 = (c[g2 + 4 >> 2] & -8) - m2 | 0;
                  f2 = q2 >>> 0 < d2 >>> 0;
                  d2 = f2 ? q2 : d2;
                  a2 = f2 ? g2 : a2;
                  f2 = c[g2 + 16 >> 2] | 0;
                  if (f2) {
                    g2 = f2;
                    v2 = 90;
                    continue;
                  }
                  g2 = c[g2 + 20 >> 2] | 0;
                  if (!g2) {
                    i3 = d2;
                    j2 = a2;
                    break;
                  } else
                    v2 = 90;
                }
              if ((j2 | 0) != 0 ? i3 >>> 0 < ((c[758] | 0) - m2 | 0) >>> 0 : 0) {
                f2 = c[760] | 0;
                if (j2 >>> 0 < f2 >>> 0)
                  Da();
                h2 = j2 + m2 | 0;
                if (j2 >>> 0 >= h2 >>> 0)
                  Da();
                g2 = c[j2 + 24 >> 2] | 0;
                d2 = c[j2 + 12 >> 2] | 0;
                do {
                  if ((d2 | 0) == (j2 | 0)) {
                    a2 = j2 + 20 | 0;
                    b2 = c[a2 >> 2] | 0;
                    if (!b2) {
                      a2 = j2 + 16 | 0;
                      b2 = c[a2 >> 2] | 0;
                      if (!b2) {
                        o2 = 0;
                        break;
                      }
                    }
                    while (1) {
                      d2 = b2 + 20 | 0;
                      e2 = c[d2 >> 2] | 0;
                      if (e2) {
                        b2 = e2;
                        a2 = d2;
                        continue;
                      }
                      d2 = b2 + 16 | 0;
                      e2 = c[d2 >> 2] | 0;
                      if (!e2)
                        break;
                      else {
                        b2 = e2;
                        a2 = d2;
                      }
                    }
                    if (a2 >>> 0 < f2 >>> 0)
                      Da();
                    else {
                      c[a2 >> 2] = 0;
                      o2 = b2;
                      break;
                    }
                  } else {
                    e2 = c[j2 + 8 >> 2] | 0;
                    if (e2 >>> 0 < f2 >>> 0)
                      Da();
                    b2 = e2 + 12 | 0;
                    if ((c[b2 >> 2] | 0) != (j2 | 0))
                      Da();
                    a2 = d2 + 8 | 0;
                    if ((c[a2 >> 2] | 0) == (j2 | 0)) {
                      c[b2 >> 2] = d2;
                      c[a2 >> 2] = e2;
                      o2 = d2;
                      break;
                    } else
                      Da();
                  }
                } while (0);
                do {
                  if (g2) {
                    b2 = c[j2 + 28 >> 2] | 0;
                    a2 = 3328 + (b2 << 2) | 0;
                    if ((j2 | 0) == (c[a2 >> 2] | 0)) {
                      c[a2 >> 2] = o2;
                      if (!o2) {
                        c[757] = c[757] & ~(1 << b2);
                        break;
                      }
                    } else {
                      if (g2 >>> 0 < (c[760] | 0) >>> 0)
                        Da();
                      b2 = g2 + 16 | 0;
                      if ((c[b2 >> 2] | 0) == (j2 | 0))
                        c[b2 >> 2] = o2;
                      else
                        c[g2 + 20 >> 2] = o2;
                      if (!o2)
                        break;
                    }
                    a2 = c[760] | 0;
                    if (o2 >>> 0 < a2 >>> 0)
                      Da();
                    c[o2 + 24 >> 2] = g2;
                    b2 = c[j2 + 16 >> 2] | 0;
                    do {
                      if (b2)
                        if (b2 >>> 0 < a2 >>> 0)
                          Da();
                        else {
                          c[o2 + 16 >> 2] = b2;
                          c[b2 + 24 >> 2] = o2;
                          break;
                        }
                    } while (0);
                    b2 = c[j2 + 20 >> 2] | 0;
                    if (b2)
                      if (b2 >>> 0 < (c[760] | 0) >>> 0)
                        Da();
                      else {
                        c[o2 + 20 >> 2] = b2;
                        c[b2 + 24 >> 2] = o2;
                        break;
                      }
                  }
                } while (0);
                b:
                  do {
                    if (i3 >>> 0 >= 16) {
                      c[j2 + 4 >> 2] = m2 | 3;
                      c[j2 + (m2 | 4) >> 2] = i3 | 1;
                      c[j2 + (i3 + m2) >> 2] = i3;
                      b2 = i3 >>> 3;
                      if (i3 >>> 0 < 256) {
                        a2 = b2 << 1;
                        e2 = 3064 + (a2 << 2) | 0;
                        d2 = c[756] | 0;
                        b2 = 1 << b2;
                        if (d2 & b2) {
                          b2 = 3064 + (a2 + 2 << 2) | 0;
                          a2 = c[b2 >> 2] | 0;
                          if (a2 >>> 0 < (c[760] | 0) >>> 0)
                            Da();
                          else {
                            s2 = b2;
                            t2 = a2;
                          }
                        } else {
                          c[756] = d2 | b2;
                          s2 = 3064 + (a2 + 2 << 2) | 0;
                          t2 = e2;
                        }
                        c[s2 >> 2] = h2;
                        c[t2 + 12 >> 2] = h2;
                        c[j2 + (m2 + 8) >> 2] = t2;
                        c[j2 + (m2 + 12) >> 2] = e2;
                        break;
                      }
                      b2 = i3 >>> 8;
                      if (b2)
                        if (i3 >>> 0 > 16777215)
                          e2 = 31;
                        else {
                          L2 = (b2 + 1048320 | 0) >>> 16 & 8;
                          M2 = b2 << L2;
                          K2 = (M2 + 520192 | 0) >>> 16 & 4;
                          M2 = M2 << K2;
                          e2 = (M2 + 245760 | 0) >>> 16 & 2;
                          e2 = 14 - (K2 | L2 | e2) + (M2 << e2 >>> 15) | 0;
                          e2 = i3 >>> (e2 + 7 | 0) & 1 | e2 << 1;
                        }
                      else
                        e2 = 0;
                      b2 = 3328 + (e2 << 2) | 0;
                      c[j2 + (m2 + 28) >> 2] = e2;
                      c[j2 + (m2 + 20) >> 2] = 0;
                      c[j2 + (m2 + 16) >> 2] = 0;
                      a2 = c[757] | 0;
                      d2 = 1 << e2;
                      if (!(a2 & d2)) {
                        c[757] = a2 | d2;
                        c[b2 >> 2] = h2;
                        c[j2 + (m2 + 24) >> 2] = b2;
                        c[j2 + (m2 + 12) >> 2] = h2;
                        c[j2 + (m2 + 8) >> 2] = h2;
                        break;
                      }
                      b2 = c[b2 >> 2] | 0;
                      c:
                        do {
                          if ((c[b2 + 4 >> 2] & -8 | 0) != (i3 | 0)) {
                            e2 = i3 << ((e2 | 0) == 31 ? 0 : 25 - (e2 >>> 1) | 0);
                            while (1) {
                              a2 = b2 + 16 + (e2 >>> 31 << 2) | 0;
                              d2 = c[a2 >> 2] | 0;
                              if (!d2)
                                break;
                              if ((c[d2 + 4 >> 2] & -8 | 0) == (i3 | 0)) {
                                y2 = d2;
                                break c;
                              } else {
                                e2 = e2 << 1;
                                b2 = d2;
                              }
                            }
                            if (a2 >>> 0 < (c[760] | 0) >>> 0)
                              Da();
                            else {
                              c[a2 >> 2] = h2;
                              c[j2 + (m2 + 24) >> 2] = b2;
                              c[j2 + (m2 + 12) >> 2] = h2;
                              c[j2 + (m2 + 8) >> 2] = h2;
                              break b;
                            }
                          } else
                            y2 = b2;
                        } while (0);
                      b2 = y2 + 8 | 0;
                      a2 = c[b2 >> 2] | 0;
                      M2 = c[760] | 0;
                      if (a2 >>> 0 >= M2 >>> 0 & y2 >>> 0 >= M2 >>> 0) {
                        c[a2 + 12 >> 2] = h2;
                        c[b2 >> 2] = h2;
                        c[j2 + (m2 + 8) >> 2] = a2;
                        c[j2 + (m2 + 12) >> 2] = y2;
                        c[j2 + (m2 + 24) >> 2] = 0;
                        break;
                      } else
                        Da();
                    } else {
                      M2 = i3 + m2 | 0;
                      c[j2 + 4 >> 2] = M2 | 3;
                      M2 = j2 + (M2 + 4) | 0;
                      c[M2 >> 2] = c[M2 >> 2] | 1;
                    }
                  } while (0);
                M2 = j2 + 8 | 0;
                return M2 | 0;
              } else
                q2 = m2;
            } else
              q2 = m2;
          } else
            q2 = -1;
        } while (0);
        d2 = c[758] | 0;
        if (d2 >>> 0 >= q2 >>> 0) {
          b2 = d2 - q2 | 0;
          a2 = c[761] | 0;
          if (b2 >>> 0 > 15) {
            c[761] = a2 + q2;
            c[758] = b2;
            c[a2 + (q2 + 4) >> 2] = b2 | 1;
            c[a2 + d2 >> 2] = b2;
            c[a2 + 4 >> 2] = q2 | 3;
          } else {
            c[758] = 0;
            c[761] = 0;
            c[a2 + 4 >> 2] = d2 | 3;
            M2 = a2 + (d2 + 4) | 0;
            c[M2 >> 2] = c[M2 >> 2] | 1;
          }
          M2 = a2 + 8 | 0;
          return M2 | 0;
        }
        a2 = c[759] | 0;
        if (a2 >>> 0 > q2 >>> 0) {
          L2 = a2 - q2 | 0;
          c[759] = L2;
          M2 = c[762] | 0;
          c[762] = M2 + q2;
          c[M2 + (q2 + 4) >> 2] = L2 | 1;
          c[M2 + 4 >> 2] = q2 | 3;
          M2 = M2 + 8 | 0;
          return M2 | 0;
        }
        do {
          if (!(c[874] | 0)) {
            a2 = $a(30) | 0;
            if (!(a2 + -1 & a2)) {
              c[876] = a2;
              c[875] = a2;
              c[877] = -1;
              c[878] = -1;
              c[879] = 0;
              c[867] = 0;
              c[874] = (Db(0) | 0) & -16 ^ 1431655768;
              break;
            } else
              Da();
          }
        } while (0);
        j2 = q2 + 48 | 0;
        i3 = c[876] | 0;
        k2 = q2 + 47 | 0;
        h2 = i3 + k2 | 0;
        i3 = 0 - i3 | 0;
        l2 = h2 & i3;
        if (l2 >>> 0 <= q2 >>> 0) {
          M2 = 0;
          return M2 | 0;
        }
        a2 = c[866] | 0;
        if ((a2 | 0) != 0 ? (t2 = c[864] | 0, y2 = t2 + l2 | 0, y2 >>> 0 <= t2 >>> 0 | y2 >>> 0 > a2 >>> 0) : 0) {
          M2 = 0;
          return M2 | 0;
        }
        d:
          do {
            if (!(c[867] & 4)) {
              a2 = c[762] | 0;
              e:
                do {
                  if (a2) {
                    f2 = 3472;
                    while (1) {
                      d2 = c[f2 >> 2] | 0;
                      if (d2 >>> 0 <= a2 >>> 0 ? (r2 = f2 + 4 | 0, (d2 + (c[r2 >> 2] | 0) | 0) >>> 0 > a2 >>> 0) : 0) {
                        g2 = f2;
                        a2 = r2;
                        break;
                      }
                      f2 = c[f2 + 8 >> 2] | 0;
                      if (!f2) {
                        v2 = 174;
                        break e;
                      }
                    }
                    d2 = h2 - (c[759] | 0) & i3;
                    if (d2 >>> 0 < 2147483647) {
                      f2 = Ua(d2 | 0) | 0;
                      y2 = (f2 | 0) == ((c[g2 >> 2] | 0) + (c[a2 >> 2] | 0) | 0);
                      a2 = y2 ? d2 : 0;
                      if (y2) {
                        if ((f2 | 0) != (-1 | 0)) {
                          w2 = f2;
                          p2 = a2;
                          v2 = 194;
                          break d;
                        }
                      } else
                        v2 = 184;
                    } else
                      a2 = 0;
                  } else
                    v2 = 174;
                } while (0);
              do {
                if ((v2 | 0) == 174) {
                  g2 = Ua(0) | 0;
                  if ((g2 | 0) != (-1 | 0)) {
                    a2 = g2;
                    d2 = c[875] | 0;
                    f2 = d2 + -1 | 0;
                    if (!(f2 & a2))
                      d2 = l2;
                    else
                      d2 = l2 - a2 + (f2 + a2 & 0 - d2) | 0;
                    a2 = c[864] | 0;
                    f2 = a2 + d2 | 0;
                    if (d2 >>> 0 > q2 >>> 0 & d2 >>> 0 < 2147483647) {
                      y2 = c[866] | 0;
                      if ((y2 | 0) != 0 ? f2 >>> 0 <= a2 >>> 0 | f2 >>> 0 > y2 >>> 0 : 0) {
                        a2 = 0;
                        break;
                      }
                      f2 = Ua(d2 | 0) | 0;
                      y2 = (f2 | 0) == (g2 | 0);
                      a2 = y2 ? d2 : 0;
                      if (y2) {
                        w2 = g2;
                        p2 = a2;
                        v2 = 194;
                        break d;
                      } else
                        v2 = 184;
                    } else
                      a2 = 0;
                  } else
                    a2 = 0;
                }
              } while (0);
              f:
                do {
                  if ((v2 | 0) == 184) {
                    g2 = 0 - d2 | 0;
                    do {
                      if (j2 >>> 0 > d2 >>> 0 & (d2 >>> 0 < 2147483647 & (f2 | 0) != (-1 | 0)) ? (u2 = c[876] | 0, u2 = k2 - d2 + u2 & 0 - u2, u2 >>> 0 < 2147483647) : 0)
                        if ((Ua(u2 | 0) | 0) == (-1 | 0)) {
                          Ua(g2 | 0) | 0;
                          break f;
                        } else {
                          d2 = u2 + d2 | 0;
                          break;
                        }
                    } while (0);
                    if ((f2 | 0) != (-1 | 0)) {
                      w2 = f2;
                      p2 = d2;
                      v2 = 194;
                      break d;
                    }
                  }
                } while (0);
              c[867] = c[867] | 4;
              v2 = 191;
            } else {
              a2 = 0;
              v2 = 191;
            }
          } while (0);
        if ((((v2 | 0) == 191 ? l2 >>> 0 < 2147483647 : 0) ? (w2 = Ua(l2 | 0) | 0, x2 = Ua(0) | 0, w2 >>> 0 < x2 >>> 0 & ((w2 | 0) != (-1 | 0) & (x2 | 0) != (-1 | 0))) : 0) ? (z2 = x2 - w2 | 0, A2 = z2 >>> 0 > (q2 + 40 | 0) >>> 0, A2) : 0) {
          p2 = A2 ? z2 : a2;
          v2 = 194;
        }
        if ((v2 | 0) == 194) {
          a2 = (c[864] | 0) + p2 | 0;
          c[864] = a2;
          if (a2 >>> 0 > (c[865] | 0) >>> 0)
            c[865] = a2;
          h2 = c[762] | 0;
          g:
            do {
              if (h2) {
                g2 = 3472;
                do {
                  a2 = c[g2 >> 2] | 0;
                  d2 = g2 + 4 | 0;
                  f2 = c[d2 >> 2] | 0;
                  if ((w2 | 0) == (a2 + f2 | 0)) {
                    B2 = a2;
                    C2 = d2;
                    D2 = f2;
                    E2 = g2;
                    v2 = 204;
                    break;
                  }
                  g2 = c[g2 + 8 >> 2] | 0;
                } while ((g2 | 0) != 0);
                if (((v2 | 0) == 204 ? (c[E2 + 12 >> 2] & 8 | 0) == 0 : 0) ? h2 >>> 0 < w2 >>> 0 & h2 >>> 0 >= B2 >>> 0 : 0) {
                  c[C2 >> 2] = D2 + p2;
                  M2 = (c[759] | 0) + p2 | 0;
                  L2 = h2 + 8 | 0;
                  L2 = (L2 & 7 | 0) == 0 ? 0 : 0 - L2 & 7;
                  K2 = M2 - L2 | 0;
                  c[762] = h2 + L2;
                  c[759] = K2;
                  c[h2 + (L2 + 4) >> 2] = K2 | 1;
                  c[h2 + (M2 + 4) >> 2] = 40;
                  c[763] = c[878];
                  break;
                }
                a2 = c[760] | 0;
                if (w2 >>> 0 < a2 >>> 0) {
                  c[760] = w2;
                  a2 = w2;
                }
                d2 = w2 + p2 | 0;
                g2 = 3472;
                while (1) {
                  if ((c[g2 >> 2] | 0) == (d2 | 0)) {
                    f2 = g2;
                    d2 = g2;
                    v2 = 212;
                    break;
                  }
                  g2 = c[g2 + 8 >> 2] | 0;
                  if (!g2) {
                    d2 = 3472;
                    break;
                  }
                }
                if ((v2 | 0) == 212)
                  if (!(c[d2 + 12 >> 2] & 8)) {
                    c[f2 >> 2] = w2;
                    n2 = d2 + 4 | 0;
                    c[n2 >> 2] = (c[n2 >> 2] | 0) + p2;
                    n2 = w2 + 8 | 0;
                    n2 = (n2 & 7 | 0) == 0 ? 0 : 0 - n2 & 7;
                    k2 = w2 + (p2 + 8) | 0;
                    k2 = (k2 & 7 | 0) == 0 ? 0 : 0 - k2 & 7;
                    b2 = w2 + (k2 + p2) | 0;
                    m2 = n2 + q2 | 0;
                    o2 = w2 + m2 | 0;
                    l2 = b2 - (w2 + n2) - q2 | 0;
                    c[w2 + (n2 + 4) >> 2] = q2 | 3;
                    h:
                      do {
                        if ((b2 | 0) != (h2 | 0)) {
                          if ((b2 | 0) == (c[761] | 0)) {
                            M2 = (c[758] | 0) + l2 | 0;
                            c[758] = M2;
                            c[761] = o2;
                            c[w2 + (m2 + 4) >> 2] = M2 | 1;
                            c[w2 + (M2 + m2) >> 2] = M2;
                            break;
                          }
                          i3 = p2 + 4 | 0;
                          d2 = c[w2 + (i3 + k2) >> 2] | 0;
                          if ((d2 & 3 | 0) == 1) {
                            j2 = d2 & -8;
                            g2 = d2 >>> 3;
                            i:
                              do {
                                if (d2 >>> 0 >= 256) {
                                  h2 = c[w2 + ((k2 | 24) + p2) >> 2] | 0;
                                  e2 = c[w2 + (p2 + 12 + k2) >> 2] | 0;
                                  do {
                                    if ((e2 | 0) == (b2 | 0)) {
                                      f2 = k2 | 16;
                                      e2 = w2 + (i3 + f2) | 0;
                                      d2 = c[e2 >> 2] | 0;
                                      if (!d2) {
                                        e2 = w2 + (f2 + p2) | 0;
                                        d2 = c[e2 >> 2] | 0;
                                        if (!d2) {
                                          J2 = 0;
                                          break;
                                        }
                                      }
                                      while (1) {
                                        f2 = d2 + 20 | 0;
                                        g2 = c[f2 >> 2] | 0;
                                        if (g2) {
                                          d2 = g2;
                                          e2 = f2;
                                          continue;
                                        }
                                        f2 = d2 + 16 | 0;
                                        g2 = c[f2 >> 2] | 0;
                                        if (!g2)
                                          break;
                                        else {
                                          d2 = g2;
                                          e2 = f2;
                                        }
                                      }
                                      if (e2 >>> 0 < a2 >>> 0)
                                        Da();
                                      else {
                                        c[e2 >> 2] = 0;
                                        J2 = d2;
                                        break;
                                      }
                                    } else {
                                      f2 = c[w2 + ((k2 | 8) + p2) >> 2] | 0;
                                      if (f2 >>> 0 < a2 >>> 0)
                                        Da();
                                      a2 = f2 + 12 | 0;
                                      if ((c[a2 >> 2] | 0) != (b2 | 0))
                                        Da();
                                      d2 = e2 + 8 | 0;
                                      if ((c[d2 >> 2] | 0) == (b2 | 0)) {
                                        c[a2 >> 2] = e2;
                                        c[d2 >> 2] = f2;
                                        J2 = e2;
                                        break;
                                      } else
                                        Da();
                                    }
                                  } while (0);
                                  if (!h2)
                                    break;
                                  a2 = c[w2 + (p2 + 28 + k2) >> 2] | 0;
                                  d2 = 3328 + (a2 << 2) | 0;
                                  do {
                                    if ((b2 | 0) != (c[d2 >> 2] | 0)) {
                                      if (h2 >>> 0 < (c[760] | 0) >>> 0)
                                        Da();
                                      a2 = h2 + 16 | 0;
                                      if ((c[a2 >> 2] | 0) == (b2 | 0))
                                        c[a2 >> 2] = J2;
                                      else
                                        c[h2 + 20 >> 2] = J2;
                                      if (!J2)
                                        break i;
                                    } else {
                                      c[d2 >> 2] = J2;
                                      if (J2)
                                        break;
                                      c[757] = c[757] & ~(1 << a2);
                                      break i;
                                    }
                                  } while (0);
                                  d2 = c[760] | 0;
                                  if (J2 >>> 0 < d2 >>> 0)
                                    Da();
                                  c[J2 + 24 >> 2] = h2;
                                  b2 = k2 | 16;
                                  a2 = c[w2 + (b2 + p2) >> 2] | 0;
                                  do {
                                    if (a2)
                                      if (a2 >>> 0 < d2 >>> 0)
                                        Da();
                                      else {
                                        c[J2 + 16 >> 2] = a2;
                                        c[a2 + 24 >> 2] = J2;
                                        break;
                                      }
                                  } while (0);
                                  b2 = c[w2 + (i3 + b2) >> 2] | 0;
                                  if (!b2)
                                    break;
                                  if (b2 >>> 0 < (c[760] | 0) >>> 0)
                                    Da();
                                  else {
                                    c[J2 + 20 >> 2] = b2;
                                    c[b2 + 24 >> 2] = J2;
                                    break;
                                  }
                                } else {
                                  e2 = c[w2 + ((k2 | 8) + p2) >> 2] | 0;
                                  f2 = c[w2 + (p2 + 12 + k2) >> 2] | 0;
                                  d2 = 3064 + (g2 << 1 << 2) | 0;
                                  do {
                                    if ((e2 | 0) != (d2 | 0)) {
                                      if (e2 >>> 0 < a2 >>> 0)
                                        Da();
                                      if ((c[e2 + 12 >> 2] | 0) == (b2 | 0))
                                        break;
                                      Da();
                                    }
                                  } while (0);
                                  if ((f2 | 0) == (e2 | 0)) {
                                    c[756] = c[756] & ~(1 << g2);
                                    break;
                                  }
                                  do {
                                    if ((f2 | 0) == (d2 | 0))
                                      F2 = f2 + 8 | 0;
                                    else {
                                      if (f2 >>> 0 < a2 >>> 0)
                                        Da();
                                      a2 = f2 + 8 | 0;
                                      if ((c[a2 >> 2] | 0) == (b2 | 0)) {
                                        F2 = a2;
                                        break;
                                      }
                                      Da();
                                    }
                                  } while (0);
                                  c[e2 + 12 >> 2] = f2;
                                  c[F2 >> 2] = e2;
                                }
                              } while (0);
                            b2 = w2 + ((j2 | k2) + p2) | 0;
                            f2 = j2 + l2 | 0;
                          } else
                            f2 = l2;
                          b2 = b2 + 4 | 0;
                          c[b2 >> 2] = c[b2 >> 2] & -2;
                          c[w2 + (m2 + 4) >> 2] = f2 | 1;
                          c[w2 + (f2 + m2) >> 2] = f2;
                          b2 = f2 >>> 3;
                          if (f2 >>> 0 < 256) {
                            a2 = b2 << 1;
                            e2 = 3064 + (a2 << 2) | 0;
                            d2 = c[756] | 0;
                            b2 = 1 << b2;
                            do {
                              if (!(d2 & b2)) {
                                c[756] = d2 | b2;
                                K2 = 3064 + (a2 + 2 << 2) | 0;
                                L2 = e2;
                              } else {
                                b2 = 3064 + (a2 + 2 << 2) | 0;
                                a2 = c[b2 >> 2] | 0;
                                if (a2 >>> 0 >= (c[760] | 0) >>> 0) {
                                  K2 = b2;
                                  L2 = a2;
                                  break;
                                }
                                Da();
                              }
                            } while (0);
                            c[K2 >> 2] = o2;
                            c[L2 + 12 >> 2] = o2;
                            c[w2 + (m2 + 8) >> 2] = L2;
                            c[w2 + (m2 + 12) >> 2] = e2;
                            break;
                          }
                          b2 = f2 >>> 8;
                          do {
                            if (!b2)
                              e2 = 0;
                            else {
                              if (f2 >>> 0 > 16777215) {
                                e2 = 31;
                                break;
                              }
                              K2 = (b2 + 1048320 | 0) >>> 16 & 8;
                              L2 = b2 << K2;
                              J2 = (L2 + 520192 | 0) >>> 16 & 4;
                              L2 = L2 << J2;
                              e2 = (L2 + 245760 | 0) >>> 16 & 2;
                              e2 = 14 - (J2 | K2 | e2) + (L2 << e2 >>> 15) | 0;
                              e2 = f2 >>> (e2 + 7 | 0) & 1 | e2 << 1;
                            }
                          } while (0);
                          b2 = 3328 + (e2 << 2) | 0;
                          c[w2 + (m2 + 28) >> 2] = e2;
                          c[w2 + (m2 + 20) >> 2] = 0;
                          c[w2 + (m2 + 16) >> 2] = 0;
                          a2 = c[757] | 0;
                          d2 = 1 << e2;
                          if (!(a2 & d2)) {
                            c[757] = a2 | d2;
                            c[b2 >> 2] = o2;
                            c[w2 + (m2 + 24) >> 2] = b2;
                            c[w2 + (m2 + 12) >> 2] = o2;
                            c[w2 + (m2 + 8) >> 2] = o2;
                            break;
                          }
                          b2 = c[b2 >> 2] | 0;
                          j:
                            do {
                              if ((c[b2 + 4 >> 2] & -8 | 0) != (f2 | 0)) {
                                e2 = f2 << ((e2 | 0) == 31 ? 0 : 25 - (e2 >>> 1) | 0);
                                while (1) {
                                  a2 = b2 + 16 + (e2 >>> 31 << 2) | 0;
                                  d2 = c[a2 >> 2] | 0;
                                  if (!d2)
                                    break;
                                  if ((c[d2 + 4 >> 2] & -8 | 0) == (f2 | 0)) {
                                    M2 = d2;
                                    break j;
                                  } else {
                                    e2 = e2 << 1;
                                    b2 = d2;
                                  }
                                }
                                if (a2 >>> 0 < (c[760] | 0) >>> 0)
                                  Da();
                                else {
                                  c[a2 >> 2] = o2;
                                  c[w2 + (m2 + 24) >> 2] = b2;
                                  c[w2 + (m2 + 12) >> 2] = o2;
                                  c[w2 + (m2 + 8) >> 2] = o2;
                                  break h;
                                }
                              } else
                                M2 = b2;
                            } while (0);
                          b2 = M2 + 8 | 0;
                          a2 = c[b2 >> 2] | 0;
                          L2 = c[760] | 0;
                          if (a2 >>> 0 >= L2 >>> 0 & M2 >>> 0 >= L2 >>> 0) {
                            c[a2 + 12 >> 2] = o2;
                            c[b2 >> 2] = o2;
                            c[w2 + (m2 + 8) >> 2] = a2;
                            c[w2 + (m2 + 12) >> 2] = M2;
                            c[w2 + (m2 + 24) >> 2] = 0;
                            break;
                          } else
                            Da();
                        } else {
                          M2 = (c[759] | 0) + l2 | 0;
                          c[759] = M2;
                          c[762] = o2;
                          c[w2 + (m2 + 4) >> 2] = M2 | 1;
                        }
                      } while (0);
                    M2 = w2 + (n2 | 8) | 0;
                    return M2 | 0;
                  } else
                    d2 = 3472;
                while (1) {
                  a2 = c[d2 >> 2] | 0;
                  if (a2 >>> 0 <= h2 >>> 0 ? (b2 = c[d2 + 4 >> 2] | 0, e2 = a2 + b2 | 0, e2 >>> 0 > h2 >>> 0) : 0)
                    break;
                  d2 = c[d2 + 8 >> 2] | 0;
                }
                f2 = a2 + (b2 + -39) | 0;
                a2 = a2 + (b2 + -47 + ((f2 & 7 | 0) == 0 ? 0 : 0 - f2 & 7)) | 0;
                f2 = h2 + 16 | 0;
                a2 = a2 >>> 0 < f2 >>> 0 ? h2 : a2;
                b2 = a2 + 8 | 0;
                d2 = w2 + 8 | 0;
                d2 = (d2 & 7 | 0) == 0 ? 0 : 0 - d2 & 7;
                M2 = p2 + -40 - d2 | 0;
                c[762] = w2 + d2;
                c[759] = M2;
                c[w2 + (d2 + 4) >> 2] = M2 | 1;
                c[w2 + (p2 + -36) >> 2] = 40;
                c[763] = c[878];
                d2 = a2 + 4 | 0;
                c[d2 >> 2] = 27;
                c[b2 >> 2] = c[868];
                c[b2 + 4 >> 2] = c[869];
                c[b2 + 8 >> 2] = c[870];
                c[b2 + 12 >> 2] = c[871];
                c[868] = w2;
                c[869] = p2;
                c[871] = 0;
                c[870] = b2;
                b2 = a2 + 28 | 0;
                c[b2 >> 2] = 7;
                if ((a2 + 32 | 0) >>> 0 < e2 >>> 0)
                  do {
                    M2 = b2;
                    b2 = b2 + 4 | 0;
                    c[b2 >> 2] = 7;
                  } while ((M2 + 8 | 0) >>> 0 < e2 >>> 0);
                if ((a2 | 0) != (h2 | 0)) {
                  g2 = a2 - h2 | 0;
                  c[d2 >> 2] = c[d2 >> 2] & -2;
                  c[h2 + 4 >> 2] = g2 | 1;
                  c[a2 >> 2] = g2;
                  b2 = g2 >>> 3;
                  if (g2 >>> 0 < 256) {
                    a2 = b2 << 1;
                    e2 = 3064 + (a2 << 2) | 0;
                    d2 = c[756] | 0;
                    b2 = 1 << b2;
                    if (d2 & b2) {
                      b2 = 3064 + (a2 + 2 << 2) | 0;
                      a2 = c[b2 >> 2] | 0;
                      if (a2 >>> 0 < (c[760] | 0) >>> 0)
                        Da();
                      else {
                        G2 = b2;
                        H2 = a2;
                      }
                    } else {
                      c[756] = d2 | b2;
                      G2 = 3064 + (a2 + 2 << 2) | 0;
                      H2 = e2;
                    }
                    c[G2 >> 2] = h2;
                    c[H2 + 12 >> 2] = h2;
                    c[h2 + 8 >> 2] = H2;
                    c[h2 + 12 >> 2] = e2;
                    break;
                  }
                  b2 = g2 >>> 8;
                  if (b2)
                    if (g2 >>> 0 > 16777215)
                      e2 = 31;
                    else {
                      L2 = (b2 + 1048320 | 0) >>> 16 & 8;
                      M2 = b2 << L2;
                      K2 = (M2 + 520192 | 0) >>> 16 & 4;
                      M2 = M2 << K2;
                      e2 = (M2 + 245760 | 0) >>> 16 & 2;
                      e2 = 14 - (K2 | L2 | e2) + (M2 << e2 >>> 15) | 0;
                      e2 = g2 >>> (e2 + 7 | 0) & 1 | e2 << 1;
                    }
                  else
                    e2 = 0;
                  d2 = 3328 + (e2 << 2) | 0;
                  c[h2 + 28 >> 2] = e2;
                  c[h2 + 20 >> 2] = 0;
                  c[f2 >> 2] = 0;
                  b2 = c[757] | 0;
                  a2 = 1 << e2;
                  if (!(b2 & a2)) {
                    c[757] = b2 | a2;
                    c[d2 >> 2] = h2;
                    c[h2 + 24 >> 2] = d2;
                    c[h2 + 12 >> 2] = h2;
                    c[h2 + 8 >> 2] = h2;
                    break;
                  }
                  b2 = c[d2 >> 2] | 0;
                  k:
                    do {
                      if ((c[b2 + 4 >> 2] & -8 | 0) != (g2 | 0)) {
                        e2 = g2 << ((e2 | 0) == 31 ? 0 : 25 - (e2 >>> 1) | 0);
                        while (1) {
                          a2 = b2 + 16 + (e2 >>> 31 << 2) | 0;
                          d2 = c[a2 >> 2] | 0;
                          if (!d2)
                            break;
                          if ((c[d2 + 4 >> 2] & -8 | 0) == (g2 | 0)) {
                            I2 = d2;
                            break k;
                          } else {
                            e2 = e2 << 1;
                            b2 = d2;
                          }
                        }
                        if (a2 >>> 0 < (c[760] | 0) >>> 0)
                          Da();
                        else {
                          c[a2 >> 2] = h2;
                          c[h2 + 24 >> 2] = b2;
                          c[h2 + 12 >> 2] = h2;
                          c[h2 + 8 >> 2] = h2;
                          break g;
                        }
                      } else
                        I2 = b2;
                    } while (0);
                  b2 = I2 + 8 | 0;
                  a2 = c[b2 >> 2] | 0;
                  M2 = c[760] | 0;
                  if (a2 >>> 0 >= M2 >>> 0 & I2 >>> 0 >= M2 >>> 0) {
                    c[a2 + 12 >> 2] = h2;
                    c[b2 >> 2] = h2;
                    c[h2 + 8 >> 2] = a2;
                    c[h2 + 12 >> 2] = I2;
                    c[h2 + 24 >> 2] = 0;
                    break;
                  } else
                    Da();
                }
              } else {
                M2 = c[760] | 0;
                if ((M2 | 0) == 0 | w2 >>> 0 < M2 >>> 0)
                  c[760] = w2;
                c[868] = w2;
                c[869] = p2;
                c[871] = 0;
                c[765] = c[874];
                c[764] = -1;
                b2 = 0;
                do {
                  M2 = b2 << 1;
                  L2 = 3064 + (M2 << 2) | 0;
                  c[3064 + (M2 + 3 << 2) >> 2] = L2;
                  c[3064 + (M2 + 2 << 2) >> 2] = L2;
                  b2 = b2 + 1 | 0;
                } while ((b2 | 0) != 32);
                M2 = w2 + 8 | 0;
                M2 = (M2 & 7 | 0) == 0 ? 0 : 0 - M2 & 7;
                L2 = p2 + -40 - M2 | 0;
                c[762] = w2 + M2;
                c[759] = L2;
                c[w2 + (M2 + 4) >> 2] = L2 | 1;
                c[w2 + (p2 + -36) >> 2] = 40;
                c[763] = c[878];
              }
            } while (0);
          b2 = c[759] | 0;
          if (b2 >>> 0 > q2 >>> 0) {
            L2 = b2 - q2 | 0;
            c[759] = L2;
            M2 = c[762] | 0;
            c[762] = M2 + q2;
            c[M2 + (q2 + 4) >> 2] = L2 | 1;
            c[M2 + 4 >> 2] = q2 | 3;
            M2 = M2 + 8 | 0;
            return M2 | 0;
          }
        }
        c[(qi() | 0) >> 2] = 12;
        M2 = 0;
        return M2 | 0;
      }
      function Vj(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
        if (!a2)
          return;
        b2 = a2 + -8 | 0;
        i3 = c[760] | 0;
        if (b2 >>> 0 < i3 >>> 0)
          Da();
        d2 = c[a2 + -4 >> 2] | 0;
        e2 = d2 & 3;
        if ((e2 | 0) == 1)
          Da();
        o2 = d2 & -8;
        q2 = a2 + (o2 + -8) | 0;
        do {
          if (!(d2 & 1)) {
            b2 = c[b2 >> 2] | 0;
            if (!e2)
              return;
            j2 = -8 - b2 | 0;
            l2 = a2 + j2 | 0;
            m2 = b2 + o2 | 0;
            if (l2 >>> 0 < i3 >>> 0)
              Da();
            if ((l2 | 0) == (c[761] | 0)) {
              b2 = a2 + (o2 + -4) | 0;
              d2 = c[b2 >> 2] | 0;
              if ((d2 & 3 | 0) != 3) {
                u2 = l2;
                g2 = m2;
                break;
              }
              c[758] = m2;
              c[b2 >> 2] = d2 & -2;
              c[a2 + (j2 + 4) >> 2] = m2 | 1;
              c[q2 >> 2] = m2;
              return;
            }
            f2 = b2 >>> 3;
            if (b2 >>> 0 < 256) {
              e2 = c[a2 + (j2 + 8) >> 2] | 0;
              d2 = c[a2 + (j2 + 12) >> 2] | 0;
              b2 = 3064 + (f2 << 1 << 2) | 0;
              if ((e2 | 0) != (b2 | 0)) {
                if (e2 >>> 0 < i3 >>> 0)
                  Da();
                if ((c[e2 + 12 >> 2] | 0) != (l2 | 0))
                  Da();
              }
              if ((d2 | 0) == (e2 | 0)) {
                c[756] = c[756] & ~(1 << f2);
                u2 = l2;
                g2 = m2;
                break;
              }
              if ((d2 | 0) != (b2 | 0)) {
                if (d2 >>> 0 < i3 >>> 0)
                  Da();
                b2 = d2 + 8 | 0;
                if ((c[b2 >> 2] | 0) == (l2 | 0))
                  h2 = b2;
                else
                  Da();
              } else
                h2 = d2 + 8 | 0;
              c[e2 + 12 >> 2] = d2;
              c[h2 >> 2] = e2;
              u2 = l2;
              g2 = m2;
              break;
            }
            h2 = c[a2 + (j2 + 24) >> 2] | 0;
            e2 = c[a2 + (j2 + 12) >> 2] | 0;
            do {
              if ((e2 | 0) == (l2 | 0)) {
                d2 = a2 + (j2 + 20) | 0;
                b2 = c[d2 >> 2] | 0;
                if (!b2) {
                  d2 = a2 + (j2 + 16) | 0;
                  b2 = c[d2 >> 2] | 0;
                  if (!b2) {
                    k2 = 0;
                    break;
                  }
                }
                while (1) {
                  e2 = b2 + 20 | 0;
                  f2 = c[e2 >> 2] | 0;
                  if (f2) {
                    b2 = f2;
                    d2 = e2;
                    continue;
                  }
                  e2 = b2 + 16 | 0;
                  f2 = c[e2 >> 2] | 0;
                  if (!f2)
                    break;
                  else {
                    b2 = f2;
                    d2 = e2;
                  }
                }
                if (d2 >>> 0 < i3 >>> 0)
                  Da();
                else {
                  c[d2 >> 2] = 0;
                  k2 = b2;
                  break;
                }
              } else {
                f2 = c[a2 + (j2 + 8) >> 2] | 0;
                if (f2 >>> 0 < i3 >>> 0)
                  Da();
                b2 = f2 + 12 | 0;
                if ((c[b2 >> 2] | 0) != (l2 | 0))
                  Da();
                d2 = e2 + 8 | 0;
                if ((c[d2 >> 2] | 0) == (l2 | 0)) {
                  c[b2 >> 2] = e2;
                  c[d2 >> 2] = f2;
                  k2 = e2;
                  break;
                } else
                  Da();
              }
            } while (0);
            if (h2) {
              b2 = c[a2 + (j2 + 28) >> 2] | 0;
              d2 = 3328 + (b2 << 2) | 0;
              if ((l2 | 0) == (c[d2 >> 2] | 0)) {
                c[d2 >> 2] = k2;
                if (!k2) {
                  c[757] = c[757] & ~(1 << b2);
                  u2 = l2;
                  g2 = m2;
                  break;
                }
              } else {
                if (h2 >>> 0 < (c[760] | 0) >>> 0)
                  Da();
                b2 = h2 + 16 | 0;
                if ((c[b2 >> 2] | 0) == (l2 | 0))
                  c[b2 >> 2] = k2;
                else
                  c[h2 + 20 >> 2] = k2;
                if (!k2) {
                  u2 = l2;
                  g2 = m2;
                  break;
                }
              }
              d2 = c[760] | 0;
              if (k2 >>> 0 < d2 >>> 0)
                Da();
              c[k2 + 24 >> 2] = h2;
              b2 = c[a2 + (j2 + 16) >> 2] | 0;
              do {
                if (b2)
                  if (b2 >>> 0 < d2 >>> 0)
                    Da();
                  else {
                    c[k2 + 16 >> 2] = b2;
                    c[b2 + 24 >> 2] = k2;
                    break;
                  }
              } while (0);
              b2 = c[a2 + (j2 + 20) >> 2] | 0;
              if (b2)
                if (b2 >>> 0 < (c[760] | 0) >>> 0)
                  Da();
                else {
                  c[k2 + 20 >> 2] = b2;
                  c[b2 + 24 >> 2] = k2;
                  u2 = l2;
                  g2 = m2;
                  break;
                }
              else {
                u2 = l2;
                g2 = m2;
              }
            } else {
              u2 = l2;
              g2 = m2;
            }
          } else {
            u2 = b2;
            g2 = o2;
          }
        } while (0);
        if (u2 >>> 0 >= q2 >>> 0)
          Da();
        b2 = a2 + (o2 + -4) | 0;
        d2 = c[b2 >> 2] | 0;
        if (!(d2 & 1))
          Da();
        if (!(d2 & 2)) {
          if ((q2 | 0) == (c[762] | 0)) {
            t2 = (c[759] | 0) + g2 | 0;
            c[759] = t2;
            c[762] = u2;
            c[u2 + 4 >> 2] = t2 | 1;
            if ((u2 | 0) != (c[761] | 0))
              return;
            c[761] = 0;
            c[758] = 0;
            return;
          }
          if ((q2 | 0) == (c[761] | 0)) {
            t2 = (c[758] | 0) + g2 | 0;
            c[758] = t2;
            c[761] = u2;
            c[u2 + 4 >> 2] = t2 | 1;
            c[u2 + t2 >> 2] = t2;
            return;
          }
          g2 = (d2 & -8) + g2 | 0;
          f2 = d2 >>> 3;
          do {
            if (d2 >>> 0 >= 256) {
              h2 = c[a2 + (o2 + 16) >> 2] | 0;
              b2 = c[a2 + (o2 | 4) >> 2] | 0;
              do {
                if ((b2 | 0) == (q2 | 0)) {
                  d2 = a2 + (o2 + 12) | 0;
                  b2 = c[d2 >> 2] | 0;
                  if (!b2) {
                    d2 = a2 + (o2 + 8) | 0;
                    b2 = c[d2 >> 2] | 0;
                    if (!b2) {
                      p2 = 0;
                      break;
                    }
                  }
                  while (1) {
                    e2 = b2 + 20 | 0;
                    f2 = c[e2 >> 2] | 0;
                    if (f2) {
                      b2 = f2;
                      d2 = e2;
                      continue;
                    }
                    e2 = b2 + 16 | 0;
                    f2 = c[e2 >> 2] | 0;
                    if (!f2)
                      break;
                    else {
                      b2 = f2;
                      d2 = e2;
                    }
                  }
                  if (d2 >>> 0 < (c[760] | 0) >>> 0)
                    Da();
                  else {
                    c[d2 >> 2] = 0;
                    p2 = b2;
                    break;
                  }
                } else {
                  d2 = c[a2 + o2 >> 2] | 0;
                  if (d2 >>> 0 < (c[760] | 0) >>> 0)
                    Da();
                  e2 = d2 + 12 | 0;
                  if ((c[e2 >> 2] | 0) != (q2 | 0))
                    Da();
                  f2 = b2 + 8 | 0;
                  if ((c[f2 >> 2] | 0) == (q2 | 0)) {
                    c[e2 >> 2] = b2;
                    c[f2 >> 2] = d2;
                    p2 = b2;
                    break;
                  } else
                    Da();
                }
              } while (0);
              if (h2) {
                b2 = c[a2 + (o2 + 20) >> 2] | 0;
                d2 = 3328 + (b2 << 2) | 0;
                if ((q2 | 0) == (c[d2 >> 2] | 0)) {
                  c[d2 >> 2] = p2;
                  if (!p2) {
                    c[757] = c[757] & ~(1 << b2);
                    break;
                  }
                } else {
                  if (h2 >>> 0 < (c[760] | 0) >>> 0)
                    Da();
                  b2 = h2 + 16 | 0;
                  if ((c[b2 >> 2] | 0) == (q2 | 0))
                    c[b2 >> 2] = p2;
                  else
                    c[h2 + 20 >> 2] = p2;
                  if (!p2)
                    break;
                }
                d2 = c[760] | 0;
                if (p2 >>> 0 < d2 >>> 0)
                  Da();
                c[p2 + 24 >> 2] = h2;
                b2 = c[a2 + (o2 + 8) >> 2] | 0;
                do {
                  if (b2)
                    if (b2 >>> 0 < d2 >>> 0)
                      Da();
                    else {
                      c[p2 + 16 >> 2] = b2;
                      c[b2 + 24 >> 2] = p2;
                      break;
                    }
                } while (0);
                b2 = c[a2 + (o2 + 12) >> 2] | 0;
                if (b2)
                  if (b2 >>> 0 < (c[760] | 0) >>> 0)
                    Da();
                  else {
                    c[p2 + 20 >> 2] = b2;
                    c[b2 + 24 >> 2] = p2;
                    break;
                  }
              }
            } else {
              e2 = c[a2 + o2 >> 2] | 0;
              d2 = c[a2 + (o2 | 4) >> 2] | 0;
              b2 = 3064 + (f2 << 1 << 2) | 0;
              if ((e2 | 0) != (b2 | 0)) {
                if (e2 >>> 0 < (c[760] | 0) >>> 0)
                  Da();
                if ((c[e2 + 12 >> 2] | 0) != (q2 | 0))
                  Da();
              }
              if ((d2 | 0) == (e2 | 0)) {
                c[756] = c[756] & ~(1 << f2);
                break;
              }
              if ((d2 | 0) != (b2 | 0)) {
                if (d2 >>> 0 < (c[760] | 0) >>> 0)
                  Da();
                b2 = d2 + 8 | 0;
                if ((c[b2 >> 2] | 0) == (q2 | 0))
                  n2 = b2;
                else
                  Da();
              } else
                n2 = d2 + 8 | 0;
              c[e2 + 12 >> 2] = d2;
              c[n2 >> 2] = e2;
            }
          } while (0);
          c[u2 + 4 >> 2] = g2 | 1;
          c[u2 + g2 >> 2] = g2;
          if ((u2 | 0) == (c[761] | 0)) {
            c[758] = g2;
            return;
          }
        } else {
          c[b2 >> 2] = d2 & -2;
          c[u2 + 4 >> 2] = g2 | 1;
          c[u2 + g2 >> 2] = g2;
        }
        b2 = g2 >>> 3;
        if (g2 >>> 0 < 256) {
          d2 = b2 << 1;
          f2 = 3064 + (d2 << 2) | 0;
          e2 = c[756] | 0;
          b2 = 1 << b2;
          if (e2 & b2) {
            b2 = 3064 + (d2 + 2 << 2) | 0;
            d2 = c[b2 >> 2] | 0;
            if (d2 >>> 0 < (c[760] | 0) >>> 0)
              Da();
            else {
              r2 = b2;
              s2 = d2;
            }
          } else {
            c[756] = e2 | b2;
            r2 = 3064 + (d2 + 2 << 2) | 0;
            s2 = f2;
          }
          c[r2 >> 2] = u2;
          c[s2 + 12 >> 2] = u2;
          c[u2 + 8 >> 2] = s2;
          c[u2 + 12 >> 2] = f2;
          return;
        }
        b2 = g2 >>> 8;
        if (b2)
          if (g2 >>> 0 > 16777215)
            f2 = 31;
          else {
            r2 = (b2 + 1048320 | 0) >>> 16 & 8;
            s2 = b2 << r2;
            q2 = (s2 + 520192 | 0) >>> 16 & 4;
            s2 = s2 << q2;
            f2 = (s2 + 245760 | 0) >>> 16 & 2;
            f2 = 14 - (q2 | r2 | f2) + (s2 << f2 >>> 15) | 0;
            f2 = g2 >>> (f2 + 7 | 0) & 1 | f2 << 1;
          }
        else
          f2 = 0;
        b2 = 3328 + (f2 << 2) | 0;
        c[u2 + 28 >> 2] = f2;
        c[u2 + 20 >> 2] = 0;
        c[u2 + 16 >> 2] = 0;
        d2 = c[757] | 0;
        e2 = 1 << f2;
        a:
          do {
            if (d2 & e2) {
              b2 = c[b2 >> 2] | 0;
              b:
                do {
                  if ((c[b2 + 4 >> 2] & -8 | 0) != (g2 | 0)) {
                    f2 = g2 << ((f2 | 0) == 31 ? 0 : 25 - (f2 >>> 1) | 0);
                    while (1) {
                      d2 = b2 + 16 + (f2 >>> 31 << 2) | 0;
                      e2 = c[d2 >> 2] | 0;
                      if (!e2)
                        break;
                      if ((c[e2 + 4 >> 2] & -8 | 0) == (g2 | 0)) {
                        t2 = e2;
                        break b;
                      } else {
                        f2 = f2 << 1;
                        b2 = e2;
                      }
                    }
                    if (d2 >>> 0 < (c[760] | 0) >>> 0)
                      Da();
                    else {
                      c[d2 >> 2] = u2;
                      c[u2 + 24 >> 2] = b2;
                      c[u2 + 12 >> 2] = u2;
                      c[u2 + 8 >> 2] = u2;
                      break a;
                    }
                  } else
                    t2 = b2;
                } while (0);
              b2 = t2 + 8 | 0;
              d2 = c[b2 >> 2] | 0;
              s2 = c[760] | 0;
              if (d2 >>> 0 >= s2 >>> 0 & t2 >>> 0 >= s2 >>> 0) {
                c[d2 + 12 >> 2] = u2;
                c[b2 >> 2] = u2;
                c[u2 + 8 >> 2] = d2;
                c[u2 + 12 >> 2] = t2;
                c[u2 + 24 >> 2] = 0;
                break;
              } else
                Da();
            } else {
              c[757] = d2 | e2;
              c[b2 >> 2] = u2;
              c[u2 + 24 >> 2] = b2;
              c[u2 + 12 >> 2] = u2;
              c[u2 + 8 >> 2] = u2;
            }
          } while (0);
        u2 = (c[764] | 0) + -1 | 0;
        c[764] = u2;
        if (!u2)
          b2 = 3480;
        else
          return;
        while (1) {
          b2 = c[b2 >> 2] | 0;
          if (!b2)
            break;
          else
            b2 = b2 + 8 | 0;
        }
        c[764] = -1;
        return;
      }
      function Wj(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0;
        if (a2) {
          d2 = $(b2, a2) | 0;
          if ((b2 | a2) >>> 0 > 65535)
            d2 = ((d2 >>> 0) / (a2 >>> 0) | 0 | 0) == (b2 | 0) ? d2 : -1;
        } else
          d2 = 0;
        b2 = Uj(d2) | 0;
        if (!b2)
          return b2 | 0;
        if (!(c[b2 + -4 >> 2] & 3))
          return b2 | 0;
        ek(b2 | 0, 0, d2 | 0) | 0;
        return b2 | 0;
      }
      function Xj(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0;
        if (!a2) {
          a2 = Uj(b2) | 0;
          return a2 | 0;
        }
        if (b2 >>> 0 > 4294967231) {
          c[(qi() | 0) >> 2] = 12;
          a2 = 0;
          return a2 | 0;
        }
        d2 = Yj(a2 + -8 | 0, b2 >>> 0 < 11 ? 16 : b2 + 11 & -8) | 0;
        if (d2) {
          a2 = d2 + 8 | 0;
          return a2 | 0;
        }
        d2 = Uj(b2) | 0;
        if (!d2) {
          a2 = 0;
          return a2 | 0;
        }
        e2 = c[a2 + -4 >> 2] | 0;
        e2 = (e2 & -8) - ((e2 & 3 | 0) == 0 ? 8 : 4) | 0;
        ik(d2 | 0, a2 | 0, (e2 >>> 0 < b2 >>> 0 ? e2 : b2) | 0) | 0;
        Vj(a2);
        a2 = d2;
        return a2 | 0;
      }
      function Yj(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
        o2 = a2 + 4 | 0;
        p2 = c[o2 >> 2] | 0;
        j2 = p2 & -8;
        l2 = a2 + j2 | 0;
        i3 = c[760] | 0;
        d2 = p2 & 3;
        if (!((d2 | 0) != 1 & a2 >>> 0 >= i3 >>> 0 & a2 >>> 0 < l2 >>> 0))
          Da();
        e2 = a2 + (j2 | 4) | 0;
        f2 = c[e2 >> 2] | 0;
        if (!(f2 & 1))
          Da();
        if (!d2) {
          if (b2 >>> 0 < 256) {
            a2 = 0;
            return a2 | 0;
          }
          if (j2 >>> 0 >= (b2 + 4 | 0) >>> 0 ? (j2 - b2 | 0) >>> 0 <= c[876] << 1 >>> 0 : 0)
            return a2 | 0;
          a2 = 0;
          return a2 | 0;
        }
        if (j2 >>> 0 >= b2 >>> 0) {
          d2 = j2 - b2 | 0;
          if (d2 >>> 0 <= 15)
            return a2 | 0;
          c[o2 >> 2] = p2 & 1 | b2 | 2;
          c[a2 + (b2 + 4) >> 2] = d2 | 3;
          c[e2 >> 2] = c[e2 >> 2] | 1;
          Zj(a2 + b2 | 0, d2);
          return a2 | 0;
        }
        if ((l2 | 0) == (c[762] | 0)) {
          d2 = (c[759] | 0) + j2 | 0;
          if (d2 >>> 0 <= b2 >>> 0) {
            a2 = 0;
            return a2 | 0;
          }
          n2 = d2 - b2 | 0;
          c[o2 >> 2] = p2 & 1 | b2 | 2;
          c[a2 + (b2 + 4) >> 2] = n2 | 1;
          c[762] = a2 + b2;
          c[759] = n2;
          return a2 | 0;
        }
        if ((l2 | 0) == (c[761] | 0)) {
          e2 = (c[758] | 0) + j2 | 0;
          if (e2 >>> 0 < b2 >>> 0) {
            a2 = 0;
            return a2 | 0;
          }
          d2 = e2 - b2 | 0;
          if (d2 >>> 0 > 15) {
            c[o2 >> 2] = p2 & 1 | b2 | 2;
            c[a2 + (b2 + 4) >> 2] = d2 | 1;
            c[a2 + e2 >> 2] = d2;
            e2 = a2 + (e2 + 4) | 0;
            c[e2 >> 2] = c[e2 >> 2] & -2;
            e2 = a2 + b2 | 0;
          } else {
            c[o2 >> 2] = p2 & 1 | e2 | 2;
            e2 = a2 + (e2 + 4) | 0;
            c[e2 >> 2] = c[e2 >> 2] | 1;
            e2 = 0;
            d2 = 0;
          }
          c[758] = d2;
          c[761] = e2;
          return a2 | 0;
        }
        if (f2 & 2) {
          a2 = 0;
          return a2 | 0;
        }
        m2 = (f2 & -8) + j2 | 0;
        if (m2 >>> 0 < b2 >>> 0) {
          a2 = 0;
          return a2 | 0;
        }
        n2 = m2 - b2 | 0;
        g2 = f2 >>> 3;
        do {
          if (f2 >>> 0 >= 256) {
            h2 = c[a2 + (j2 + 24) >> 2] | 0;
            g2 = c[a2 + (j2 + 12) >> 2] | 0;
            do {
              if ((g2 | 0) == (l2 | 0)) {
                e2 = a2 + (j2 + 20) | 0;
                d2 = c[e2 >> 2] | 0;
                if (!d2) {
                  e2 = a2 + (j2 + 16) | 0;
                  d2 = c[e2 >> 2] | 0;
                  if (!d2) {
                    k2 = 0;
                    break;
                  }
                }
                while (1) {
                  f2 = d2 + 20 | 0;
                  g2 = c[f2 >> 2] | 0;
                  if (g2) {
                    d2 = g2;
                    e2 = f2;
                    continue;
                  }
                  f2 = d2 + 16 | 0;
                  g2 = c[f2 >> 2] | 0;
                  if (!g2)
                    break;
                  else {
                    d2 = g2;
                    e2 = f2;
                  }
                }
                if (e2 >>> 0 < i3 >>> 0)
                  Da();
                else {
                  c[e2 >> 2] = 0;
                  k2 = d2;
                  break;
                }
              } else {
                f2 = c[a2 + (j2 + 8) >> 2] | 0;
                if (f2 >>> 0 < i3 >>> 0)
                  Da();
                d2 = f2 + 12 | 0;
                if ((c[d2 >> 2] | 0) != (l2 | 0))
                  Da();
                e2 = g2 + 8 | 0;
                if ((c[e2 >> 2] | 0) == (l2 | 0)) {
                  c[d2 >> 2] = g2;
                  c[e2 >> 2] = f2;
                  k2 = g2;
                  break;
                } else
                  Da();
              }
            } while (0);
            if (h2) {
              d2 = c[a2 + (j2 + 28) >> 2] | 0;
              e2 = 3328 + (d2 << 2) | 0;
              if ((l2 | 0) == (c[e2 >> 2] | 0)) {
                c[e2 >> 2] = k2;
                if (!k2) {
                  c[757] = c[757] & ~(1 << d2);
                  break;
                }
              } else {
                if (h2 >>> 0 < (c[760] | 0) >>> 0)
                  Da();
                d2 = h2 + 16 | 0;
                if ((c[d2 >> 2] | 0) == (l2 | 0))
                  c[d2 >> 2] = k2;
                else
                  c[h2 + 20 >> 2] = k2;
                if (!k2)
                  break;
              }
              e2 = c[760] | 0;
              if (k2 >>> 0 < e2 >>> 0)
                Da();
              c[k2 + 24 >> 2] = h2;
              d2 = c[a2 + (j2 + 16) >> 2] | 0;
              do {
                if (d2)
                  if (d2 >>> 0 < e2 >>> 0)
                    Da();
                  else {
                    c[k2 + 16 >> 2] = d2;
                    c[d2 + 24 >> 2] = k2;
                    break;
                  }
              } while (0);
              d2 = c[a2 + (j2 + 20) >> 2] | 0;
              if (d2)
                if (d2 >>> 0 < (c[760] | 0) >>> 0)
                  Da();
                else {
                  c[k2 + 20 >> 2] = d2;
                  c[d2 + 24 >> 2] = k2;
                  break;
                }
            }
          } else {
            f2 = c[a2 + (j2 + 8) >> 2] | 0;
            e2 = c[a2 + (j2 + 12) >> 2] | 0;
            d2 = 3064 + (g2 << 1 << 2) | 0;
            if ((f2 | 0) != (d2 | 0)) {
              if (f2 >>> 0 < i3 >>> 0)
                Da();
              if ((c[f2 + 12 >> 2] | 0) != (l2 | 0))
                Da();
            }
            if ((e2 | 0) == (f2 | 0)) {
              c[756] = c[756] & ~(1 << g2);
              break;
            }
            if ((e2 | 0) != (d2 | 0)) {
              if (e2 >>> 0 < i3 >>> 0)
                Da();
              d2 = e2 + 8 | 0;
              if ((c[d2 >> 2] | 0) == (l2 | 0))
                h2 = d2;
              else
                Da();
            } else
              h2 = e2 + 8 | 0;
            c[f2 + 12 >> 2] = e2;
            c[h2 >> 2] = f2;
          }
        } while (0);
        if (n2 >>> 0 < 16) {
          c[o2 >> 2] = m2 | p2 & 1 | 2;
          b2 = a2 + (m2 | 4) | 0;
          c[b2 >> 2] = c[b2 >> 2] | 1;
          return a2 | 0;
        } else {
          c[o2 >> 2] = p2 & 1 | b2 | 2;
          c[a2 + (b2 + 4) >> 2] = n2 | 3;
          p2 = a2 + (m2 | 4) | 0;
          c[p2 >> 2] = c[p2 >> 2] | 1;
          Zj(a2 + b2 | 0, n2);
          return a2 | 0;
        }
        return 0;
      }
      function Zj(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
        q2 = a2 + b2 | 0;
        d2 = c[a2 + 4 >> 2] | 0;
        do {
          if (!(d2 & 1)) {
            k2 = c[a2 >> 2] | 0;
            if (!(d2 & 3))
              return;
            n2 = a2 + (0 - k2) | 0;
            m2 = k2 + b2 | 0;
            j2 = c[760] | 0;
            if (n2 >>> 0 < j2 >>> 0)
              Da();
            if ((n2 | 0) == (c[761] | 0)) {
              e2 = a2 + (b2 + 4) | 0;
              d2 = c[e2 >> 2] | 0;
              if ((d2 & 3 | 0) != 3) {
                t2 = n2;
                h2 = m2;
                break;
              }
              c[758] = m2;
              c[e2 >> 2] = d2 & -2;
              c[a2 + (4 - k2) >> 2] = m2 | 1;
              c[q2 >> 2] = m2;
              return;
            }
            g2 = k2 >>> 3;
            if (k2 >>> 0 < 256) {
              f2 = c[a2 + (8 - k2) >> 2] | 0;
              e2 = c[a2 + (12 - k2) >> 2] | 0;
              d2 = 3064 + (g2 << 1 << 2) | 0;
              if ((f2 | 0) != (d2 | 0)) {
                if (f2 >>> 0 < j2 >>> 0)
                  Da();
                if ((c[f2 + 12 >> 2] | 0) != (n2 | 0))
                  Da();
              }
              if ((e2 | 0) == (f2 | 0)) {
                c[756] = c[756] & ~(1 << g2);
                t2 = n2;
                h2 = m2;
                break;
              }
              if ((e2 | 0) != (d2 | 0)) {
                if (e2 >>> 0 < j2 >>> 0)
                  Da();
                d2 = e2 + 8 | 0;
                if ((c[d2 >> 2] | 0) == (n2 | 0))
                  i3 = d2;
                else
                  Da();
              } else
                i3 = e2 + 8 | 0;
              c[f2 + 12 >> 2] = e2;
              c[i3 >> 2] = f2;
              t2 = n2;
              h2 = m2;
              break;
            }
            i3 = c[a2 + (24 - k2) >> 2] | 0;
            f2 = c[a2 + (12 - k2) >> 2] | 0;
            do {
              if ((f2 | 0) == (n2 | 0)) {
                f2 = 16 - k2 | 0;
                e2 = a2 + (f2 + 4) | 0;
                d2 = c[e2 >> 2] | 0;
                if (!d2) {
                  e2 = a2 + f2 | 0;
                  d2 = c[e2 >> 2] | 0;
                  if (!d2) {
                    l2 = 0;
                    break;
                  }
                }
                while (1) {
                  f2 = d2 + 20 | 0;
                  g2 = c[f2 >> 2] | 0;
                  if (g2) {
                    d2 = g2;
                    e2 = f2;
                    continue;
                  }
                  f2 = d2 + 16 | 0;
                  g2 = c[f2 >> 2] | 0;
                  if (!g2)
                    break;
                  else {
                    d2 = g2;
                    e2 = f2;
                  }
                }
                if (e2 >>> 0 < j2 >>> 0)
                  Da();
                else {
                  c[e2 >> 2] = 0;
                  l2 = d2;
                  break;
                }
              } else {
                g2 = c[a2 + (8 - k2) >> 2] | 0;
                if (g2 >>> 0 < j2 >>> 0)
                  Da();
                d2 = g2 + 12 | 0;
                if ((c[d2 >> 2] | 0) != (n2 | 0))
                  Da();
                e2 = f2 + 8 | 0;
                if ((c[e2 >> 2] | 0) == (n2 | 0)) {
                  c[d2 >> 2] = f2;
                  c[e2 >> 2] = g2;
                  l2 = f2;
                  break;
                } else
                  Da();
              }
            } while (0);
            if (i3) {
              d2 = c[a2 + (28 - k2) >> 2] | 0;
              e2 = 3328 + (d2 << 2) | 0;
              if ((n2 | 0) == (c[e2 >> 2] | 0)) {
                c[e2 >> 2] = l2;
                if (!l2) {
                  c[757] = c[757] & ~(1 << d2);
                  t2 = n2;
                  h2 = m2;
                  break;
                }
              } else {
                if (i3 >>> 0 < (c[760] | 0) >>> 0)
                  Da();
                d2 = i3 + 16 | 0;
                if ((c[d2 >> 2] | 0) == (n2 | 0))
                  c[d2 >> 2] = l2;
                else
                  c[i3 + 20 >> 2] = l2;
                if (!l2) {
                  t2 = n2;
                  h2 = m2;
                  break;
                }
              }
              f2 = c[760] | 0;
              if (l2 >>> 0 < f2 >>> 0)
                Da();
              c[l2 + 24 >> 2] = i3;
              d2 = 16 - k2 | 0;
              e2 = c[a2 + d2 >> 2] | 0;
              do {
                if (e2)
                  if (e2 >>> 0 < f2 >>> 0)
                    Da();
                  else {
                    c[l2 + 16 >> 2] = e2;
                    c[e2 + 24 >> 2] = l2;
                    break;
                  }
              } while (0);
              d2 = c[a2 + (d2 + 4) >> 2] | 0;
              if (d2)
                if (d2 >>> 0 < (c[760] | 0) >>> 0)
                  Da();
                else {
                  c[l2 + 20 >> 2] = d2;
                  c[d2 + 24 >> 2] = l2;
                  t2 = n2;
                  h2 = m2;
                  break;
                }
              else {
                t2 = n2;
                h2 = m2;
              }
            } else {
              t2 = n2;
              h2 = m2;
            }
          } else {
            t2 = a2;
            h2 = b2;
          }
        } while (0);
        j2 = c[760] | 0;
        if (q2 >>> 0 < j2 >>> 0)
          Da();
        d2 = a2 + (b2 + 4) | 0;
        e2 = c[d2 >> 2] | 0;
        if (!(e2 & 2)) {
          if ((q2 | 0) == (c[762] | 0)) {
            s2 = (c[759] | 0) + h2 | 0;
            c[759] = s2;
            c[762] = t2;
            c[t2 + 4 >> 2] = s2 | 1;
            if ((t2 | 0) != (c[761] | 0))
              return;
            c[761] = 0;
            c[758] = 0;
            return;
          }
          if ((q2 | 0) == (c[761] | 0)) {
            s2 = (c[758] | 0) + h2 | 0;
            c[758] = s2;
            c[761] = t2;
            c[t2 + 4 >> 2] = s2 | 1;
            c[t2 + s2 >> 2] = s2;
            return;
          }
          h2 = (e2 & -8) + h2 | 0;
          g2 = e2 >>> 3;
          do {
            if (e2 >>> 0 >= 256) {
              i3 = c[a2 + (b2 + 24) >> 2] | 0;
              f2 = c[a2 + (b2 + 12) >> 2] | 0;
              do {
                if ((f2 | 0) == (q2 | 0)) {
                  e2 = a2 + (b2 + 20) | 0;
                  d2 = c[e2 >> 2] | 0;
                  if (!d2) {
                    e2 = a2 + (b2 + 16) | 0;
                    d2 = c[e2 >> 2] | 0;
                    if (!d2) {
                      p2 = 0;
                      break;
                    }
                  }
                  while (1) {
                    f2 = d2 + 20 | 0;
                    g2 = c[f2 >> 2] | 0;
                    if (g2) {
                      d2 = g2;
                      e2 = f2;
                      continue;
                    }
                    f2 = d2 + 16 | 0;
                    g2 = c[f2 >> 2] | 0;
                    if (!g2)
                      break;
                    else {
                      d2 = g2;
                      e2 = f2;
                    }
                  }
                  if (e2 >>> 0 < j2 >>> 0)
                    Da();
                  else {
                    c[e2 >> 2] = 0;
                    p2 = d2;
                    break;
                  }
                } else {
                  g2 = c[a2 + (b2 + 8) >> 2] | 0;
                  if (g2 >>> 0 < j2 >>> 0)
                    Da();
                  d2 = g2 + 12 | 0;
                  if ((c[d2 >> 2] | 0) != (q2 | 0))
                    Da();
                  e2 = f2 + 8 | 0;
                  if ((c[e2 >> 2] | 0) == (q2 | 0)) {
                    c[d2 >> 2] = f2;
                    c[e2 >> 2] = g2;
                    p2 = f2;
                    break;
                  } else
                    Da();
                }
              } while (0);
              if (i3) {
                d2 = c[a2 + (b2 + 28) >> 2] | 0;
                e2 = 3328 + (d2 << 2) | 0;
                if ((q2 | 0) == (c[e2 >> 2] | 0)) {
                  c[e2 >> 2] = p2;
                  if (!p2) {
                    c[757] = c[757] & ~(1 << d2);
                    break;
                  }
                } else {
                  if (i3 >>> 0 < (c[760] | 0) >>> 0)
                    Da();
                  d2 = i3 + 16 | 0;
                  if ((c[d2 >> 2] | 0) == (q2 | 0))
                    c[d2 >> 2] = p2;
                  else
                    c[i3 + 20 >> 2] = p2;
                  if (!p2)
                    break;
                }
                e2 = c[760] | 0;
                if (p2 >>> 0 < e2 >>> 0)
                  Da();
                c[p2 + 24 >> 2] = i3;
                d2 = c[a2 + (b2 + 16) >> 2] | 0;
                do {
                  if (d2)
                    if (d2 >>> 0 < e2 >>> 0)
                      Da();
                    else {
                      c[p2 + 16 >> 2] = d2;
                      c[d2 + 24 >> 2] = p2;
                      break;
                    }
                } while (0);
                d2 = c[a2 + (b2 + 20) >> 2] | 0;
                if (d2)
                  if (d2 >>> 0 < (c[760] | 0) >>> 0)
                    Da();
                  else {
                    c[p2 + 20 >> 2] = d2;
                    c[d2 + 24 >> 2] = p2;
                    break;
                  }
              }
            } else {
              f2 = c[a2 + (b2 + 8) >> 2] | 0;
              e2 = c[a2 + (b2 + 12) >> 2] | 0;
              d2 = 3064 + (g2 << 1 << 2) | 0;
              if ((f2 | 0) != (d2 | 0)) {
                if (f2 >>> 0 < j2 >>> 0)
                  Da();
                if ((c[f2 + 12 >> 2] | 0) != (q2 | 0))
                  Da();
              }
              if ((e2 | 0) == (f2 | 0)) {
                c[756] = c[756] & ~(1 << g2);
                break;
              }
              if ((e2 | 0) != (d2 | 0)) {
                if (e2 >>> 0 < j2 >>> 0)
                  Da();
                d2 = e2 + 8 | 0;
                if ((c[d2 >> 2] | 0) == (q2 | 0))
                  o2 = d2;
                else
                  Da();
              } else
                o2 = e2 + 8 | 0;
              c[f2 + 12 >> 2] = e2;
              c[o2 >> 2] = f2;
            }
          } while (0);
          c[t2 + 4 >> 2] = h2 | 1;
          c[t2 + h2 >> 2] = h2;
          if ((t2 | 0) == (c[761] | 0)) {
            c[758] = h2;
            return;
          }
        } else {
          c[d2 >> 2] = e2 & -2;
          c[t2 + 4 >> 2] = h2 | 1;
          c[t2 + h2 >> 2] = h2;
        }
        d2 = h2 >>> 3;
        if (h2 >>> 0 < 256) {
          e2 = d2 << 1;
          g2 = 3064 + (e2 << 2) | 0;
          f2 = c[756] | 0;
          d2 = 1 << d2;
          if (f2 & d2) {
            d2 = 3064 + (e2 + 2 << 2) | 0;
            e2 = c[d2 >> 2] | 0;
            if (e2 >>> 0 < (c[760] | 0) >>> 0)
              Da();
            else {
              r2 = d2;
              s2 = e2;
            }
          } else {
            c[756] = f2 | d2;
            r2 = 3064 + (e2 + 2 << 2) | 0;
            s2 = g2;
          }
          c[r2 >> 2] = t2;
          c[s2 + 12 >> 2] = t2;
          c[t2 + 8 >> 2] = s2;
          c[t2 + 12 >> 2] = g2;
          return;
        }
        d2 = h2 >>> 8;
        if (d2)
          if (h2 >>> 0 > 16777215)
            g2 = 31;
          else {
            r2 = (d2 + 1048320 | 0) >>> 16 & 8;
            s2 = d2 << r2;
            q2 = (s2 + 520192 | 0) >>> 16 & 4;
            s2 = s2 << q2;
            g2 = (s2 + 245760 | 0) >>> 16 & 2;
            g2 = 14 - (q2 | r2 | g2) + (s2 << g2 >>> 15) | 0;
            g2 = h2 >>> (g2 + 7 | 0) & 1 | g2 << 1;
          }
        else
          g2 = 0;
        d2 = 3328 + (g2 << 2) | 0;
        c[t2 + 28 >> 2] = g2;
        c[t2 + 20 >> 2] = 0;
        c[t2 + 16 >> 2] = 0;
        e2 = c[757] | 0;
        f2 = 1 << g2;
        if (!(e2 & f2)) {
          c[757] = e2 | f2;
          c[d2 >> 2] = t2;
          c[t2 + 24 >> 2] = d2;
          c[t2 + 12 >> 2] = t2;
          c[t2 + 8 >> 2] = t2;
          return;
        }
        d2 = c[d2 >> 2] | 0;
        a:
          do {
            if ((c[d2 + 4 >> 2] & -8 | 0) != (h2 | 0)) {
              g2 = h2 << ((g2 | 0) == 31 ? 0 : 25 - (g2 >>> 1) | 0);
              while (1) {
                e2 = d2 + 16 + (g2 >>> 31 << 2) | 0;
                f2 = c[e2 >> 2] | 0;
                if (!f2)
                  break;
                if ((c[f2 + 4 >> 2] & -8 | 0) == (h2 | 0)) {
                  d2 = f2;
                  break a;
                } else {
                  g2 = g2 << 1;
                  d2 = f2;
                }
              }
              if (e2 >>> 0 < (c[760] | 0) >>> 0)
                Da();
              c[e2 >> 2] = t2;
              c[t2 + 24 >> 2] = d2;
              c[t2 + 12 >> 2] = t2;
              c[t2 + 8 >> 2] = t2;
              return;
            }
          } while (0);
        e2 = d2 + 8 | 0;
        f2 = c[e2 >> 2] | 0;
        s2 = c[760] | 0;
        if (!(f2 >>> 0 >= s2 >>> 0 & d2 >>> 0 >= s2 >>> 0))
          Da();
        c[f2 + 12 >> 2] = t2;
        c[e2 >> 2] = t2;
        c[t2 + 8 >> 2] = f2;
        c[t2 + 12 >> 2] = d2;
        c[t2 + 24 >> 2] = 0;
        return;
      }
      function Ee(b2, e2, f2, j2, k2, l2, m2, n2, o2, p2, q2, r2) {
        b2 = b2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        l2 = l2 | 0;
        m2 = m2 | 0;
        n2 = n2 | 0;
        o2 = o2 | 0;
        p2 = p2 | 0;
        q2 = +q2;
        r2 = r2 | 0;
        var s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0;
        T2 = i2;
        i2 = i2 + 240 | 0;
        x2 = T2 + 224 | 0;
        w2 = T2 + 216 | 0;
        C2 = T2 + 208 | 0;
        B2 = T2 + 200 | 0;
        s2 = T2 + 136 | 0;
        N2 = T2 + 72 | 0;
        P2 = T2;
        Q2 = T2 + 232 | 0;
        R2 = T2 + 228 | 0;
        h[s2 >> 3] = 100;
        h[s2 + 8 >> 3] = 100;
        h[s2 + 16 >> 3] = 110;
        h[s2 + 24 >> 3] = 100;
        h[s2 + 32 >> 3] = 110;
        h[s2 + 40 >> 3] = 110;
        h[s2 + 48 >> 3] = 100;
        h[s2 + 56 >> 3] = 110;
        h[N2 >> 3] = +h[p2 >> 3];
        h[N2 + 8 >> 3] = +h[p2 + 8 >> 3];
        h[N2 + 16 >> 3] = +h[p2 + 16 >> 3];
        h[N2 + 24 >> 3] = +h[p2 + 24 >> 3];
        h[N2 + 32 >> 3] = +h[p2 + 32 >> 3];
        h[N2 + 40 >> 3] = +h[p2 + 40 >> 3];
        h[N2 + 48 >> 3] = +h[p2 + 48 >> 3];
        h[N2 + 56 >> 3] = +h[p2 + 56 >> 3];
        He(s2, N2, P2);
        A2 = +h[N2 >> 3];
        V2 = +h[N2 + 16 >> 3];
        y2 = A2 - V2;
        J2 = +h[N2 + 8 >> 3];
        U2 = +h[N2 + 24 >> 3];
        u2 = J2 - U2;
        s2 = ~~(y2 * y2 + u2 * u2);
        u2 = +h[N2 + 32 >> 3];
        y2 = +h[N2 + 48 >> 3];
        X2 = u2 - y2;
        v2 = +h[N2 + 40 >> 3];
        z2 = +h[N2 + 56 >> 3];
        W2 = v2 - z2;
        N2 = ~~(X2 * X2 + W2 * W2);
        u2 = V2 - u2;
        v2 = U2 - v2;
        t2 = ~~(u2 * u2 + v2 * v2);
        A2 = y2 - A2;
        J2 = z2 - J2;
        O2 = ~~(A2 * A2 + J2 * J2);
        s2 = ~~(+(((N2 | 0) > (s2 | 0) ? N2 : s2) | 0) * q2 * q2);
        t2 = ~~(+(((O2 | 0) > (t2 | 0) ? O2 : t2) | 0) * q2 * q2);
        if (!b2) {
          p2 = f2;
          while (1)
            if ((p2 | 0) < (j2 | 0) & ($(p2, p2) | 0) < (s2 | 0))
              p2 = p2 << 1;
            else
              break;
          s2 = f2;
          while (1)
            if ((s2 | 0) < (j2 | 0) & ($(s2, s2) | 0) < (t2 | 0))
              s2 = s2 << 1;
            else
              break;
        } else {
          p2 = f2;
          while (1)
            if ((p2 | 0) < (j2 | 0) & ($(p2 << 2, p2) | 0) < (s2 | 0))
              p2 = p2 << 1;
            else
              break;
          s2 = f2;
          while (1)
            if ((s2 | 0) < (j2 | 0) & ($(s2 << 2, s2) | 0) < (t2 | 0))
              s2 = s2 << 1;
            else
              break;
        }
        O2 = (p2 | 0) > (j2 | 0) ? j2 : p2;
        M2 = (s2 | 0) > (j2 | 0) ? j2 : s2;
        L2 = (O2 | 0) / (f2 | 0) | 0;
        K2 = (M2 | 0) / (f2 | 0) | 0;
        u2 = (1 - q2) * 0.5 * 10;
        J2 = q2 * 10;
        N2 = $(f2, f2) | 0;
        a:
          do {
            if (!e2) {
              I2 = N2 * 3 | 0;
              p2 = Wj(I2, 4) | 0;
              if (!p2) {
                Me(3, 5472, B2);
                rb(1);
              }
              do {
                switch (n2 | 0) {
                  case 0: {
                    y2 = u2 + 100;
                    z2 = +(M2 | 0);
                    A2 = +(O2 | 0);
                    B2 = P2 + 48 | 0;
                    C2 = P2 + 56 | 0;
                    n2 = P2 + 64 | 0;
                    D2 = P2 + 8 | 0;
                    E2 = P2 + 16 | 0;
                    F2 = P2 + 24 | 0;
                    G2 = P2 + 32 | 0;
                    H2 = P2 + 40 | 0;
                    j2 = (b2 | 0) == 1;
                    if ((M2 | 0) > 0) {
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      do {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              t2 = (($(t2, l2) | 0) + s2 | 0) * 3 | 0;
                              b2 = (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) | 0) * 3 | 0;
                              s2 = p2 + (b2 << 2) | 0;
                              c[s2 >> 2] = (c[s2 >> 2] | 0) + (d[k2 + (t2 + 2) >> 0] | 0);
                              s2 = p2 + (b2 + 1 << 2) | 0;
                              c[s2 >> 2] = (c[s2 >> 2] | 0) + (d[k2 + (t2 + 1) >> 0] | 0);
                              b2 = p2 + (b2 + 2 << 2) | 0;
                              c[b2 >> 2] = (c[b2 >> 2] | 0) + (d[k2 + t2 >> 0] | 0);
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                      } while ((x2 | 0) < (M2 | 0));
                    }
                    break;
                  }
                  case 1: {
                    y2 = u2 + 100;
                    z2 = +(M2 | 0);
                    A2 = +(O2 | 0);
                    B2 = P2 + 48 | 0;
                    C2 = P2 + 56 | 0;
                    n2 = P2 + 64 | 0;
                    D2 = P2 + 8 | 0;
                    E2 = P2 + 16 | 0;
                    F2 = P2 + 24 | 0;
                    G2 = P2 + 32 | 0;
                    H2 = P2 + 40 | 0;
                    j2 = (b2 | 0) == 1;
                    if ((M2 | 0) > 0) {
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      do {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              t2 = (($(t2, l2) | 0) + s2 | 0) * 3 | 0;
                              b2 = (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) | 0) * 3 | 0;
                              s2 = p2 + (b2 << 2) | 0;
                              c[s2 >> 2] = (c[s2 >> 2] | 0) + (d[k2 + t2 >> 0] | 0);
                              s2 = p2 + (b2 + 1 << 2) | 0;
                              c[s2 >> 2] = (c[s2 >> 2] | 0) + (d[k2 + (t2 + 1) >> 0] | 0);
                              b2 = p2 + (b2 + 2 << 2) | 0;
                              c[b2 >> 2] = (c[b2 >> 2] | 0) + (d[k2 + (t2 + 2) >> 0] | 0);
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                      } while ((x2 | 0) < (M2 | 0));
                    }
                    break;
                  }
                  case 2: {
                    y2 = u2 + 100;
                    z2 = +(M2 | 0);
                    A2 = +(O2 | 0);
                    B2 = P2 + 48 | 0;
                    C2 = P2 + 56 | 0;
                    n2 = P2 + 64 | 0;
                    D2 = P2 + 8 | 0;
                    E2 = P2 + 16 | 0;
                    F2 = P2 + 24 | 0;
                    G2 = P2 + 32 | 0;
                    H2 = P2 + 40 | 0;
                    j2 = (b2 | 0) == 1;
                    if ((M2 | 0) > 0) {
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      do {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              t2 = ($(t2, l2) | 0) + s2 << 2;
                              b2 = (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) | 0) * 3 | 0;
                              s2 = p2 + (b2 << 2) | 0;
                              c[s2 >> 2] = (c[s2 >> 2] | 0) + (d[k2 + (t2 | 2) >> 0] | 0);
                              s2 = p2 + (b2 + 1 << 2) | 0;
                              c[s2 >> 2] = (c[s2 >> 2] | 0) + (d[k2 + (t2 | 1) >> 0] | 0);
                              b2 = p2 + (b2 + 2 << 2) | 0;
                              c[b2 >> 2] = (c[b2 >> 2] | 0) + (d[k2 + t2 >> 0] | 0);
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                      } while ((x2 | 0) < (M2 | 0));
                    }
                    break;
                  }
                  case 3: {
                    y2 = u2 + 100;
                    z2 = +(M2 | 0);
                    A2 = +(O2 | 0);
                    B2 = P2 + 48 | 0;
                    C2 = P2 + 56 | 0;
                    n2 = P2 + 64 | 0;
                    D2 = P2 + 8 | 0;
                    E2 = P2 + 16 | 0;
                    F2 = P2 + 24 | 0;
                    G2 = P2 + 32 | 0;
                    H2 = P2 + 40 | 0;
                    j2 = (b2 | 0) == 1;
                    if ((M2 | 0) > 0) {
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      do {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              t2 = ($(t2, l2) | 0) + s2 << 2;
                              b2 = (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) | 0) * 3 | 0;
                              s2 = p2 + (b2 << 2) | 0;
                              c[s2 >> 2] = (c[s2 >> 2] | 0) + (d[k2 + t2 >> 0] | 0);
                              s2 = p2 + (b2 + 1 << 2) | 0;
                              c[s2 >> 2] = (c[s2 >> 2] | 0) + (d[k2 + (t2 | 1) >> 0] | 0);
                              b2 = p2 + (b2 + 2 << 2) | 0;
                              c[b2 >> 2] = (c[b2 >> 2] | 0) + (d[k2 + (t2 | 2) >> 0] | 0);
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                      } while ((x2 | 0) < (M2 | 0));
                    }
                    break;
                  }
                  case 4: {
                    y2 = u2 + 100;
                    z2 = +(M2 | 0);
                    A2 = +(O2 | 0);
                    B2 = P2 + 48 | 0;
                    C2 = P2 + 56 | 0;
                    n2 = P2 + 64 | 0;
                    D2 = P2 + 8 | 0;
                    E2 = P2 + 16 | 0;
                    F2 = P2 + 24 | 0;
                    G2 = P2 + 32 | 0;
                    H2 = P2 + 40 | 0;
                    j2 = (b2 | 0) == 1;
                    if ((M2 | 0) > 0) {
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      do {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              t2 = ($(t2, l2) | 0) + s2 << 2;
                              b2 = (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) | 0) * 3 | 0;
                              s2 = p2 + (b2 << 2) | 0;
                              c[s2 >> 2] = (c[s2 >> 2] | 0) + (d[k2 + (t2 | 1) >> 0] | 0);
                              s2 = p2 + (b2 + 1 << 2) | 0;
                              c[s2 >> 2] = (c[s2 >> 2] | 0) + (d[k2 + (t2 | 2) >> 0] | 0);
                              b2 = p2 + (b2 + 2 << 2) | 0;
                              c[b2 >> 2] = (c[b2 >> 2] | 0) + (d[k2 + (t2 | 3) >> 0] | 0);
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                      } while ((x2 | 0) < (M2 | 0));
                    }
                    break;
                  }
                  case 5:
                  case 12:
                  case 13:
                  case 14: {
                    y2 = u2 + 100;
                    z2 = +(M2 | 0);
                    A2 = +(O2 | 0);
                    B2 = P2 + 48 | 0;
                    C2 = P2 + 56 | 0;
                    n2 = P2 + 64 | 0;
                    D2 = P2 + 8 | 0;
                    E2 = P2 + 16 | 0;
                    F2 = P2 + 24 | 0;
                    G2 = P2 + 32 | 0;
                    H2 = P2 + 40 | 0;
                    j2 = (b2 | 0) == 1;
                    if ((M2 | 0) > 0) {
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      do {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              t2 = d[k2 + (($(t2, l2) | 0) + s2) >> 0] | 0;
                              b2 = (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) | 0) * 3 | 0;
                              s2 = p2 + (b2 << 2) | 0;
                              c[s2 >> 2] = (c[s2 >> 2] | 0) + t2;
                              s2 = p2 + (b2 + 1 << 2) | 0;
                              c[s2 >> 2] = (c[s2 >> 2] | 0) + t2;
                              b2 = p2 + (b2 + 2 << 2) | 0;
                              c[b2 >> 2] = (c[b2 >> 2] | 0) + t2;
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                      } while ((x2 | 0) < (M2 | 0));
                    }
                    break;
                  }
                  case 6: {
                    y2 = u2 + 100;
                    z2 = +(M2 | 0);
                    A2 = +(O2 | 0);
                    B2 = P2 + 48 | 0;
                    C2 = P2 + 56 | 0;
                    n2 = P2 + 64 | 0;
                    D2 = P2 + 8 | 0;
                    E2 = P2 + 16 | 0;
                    F2 = P2 + 24 | 0;
                    G2 = P2 + 32 | 0;
                    H2 = P2 + 40 | 0;
                    j2 = (b2 | 0) == 1;
                    if ((M2 | 0) > 0) {
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      do {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              t2 = ($(t2, l2) | 0) + s2 << 2;
                              b2 = (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) | 0) * 3 | 0;
                              s2 = p2 + (b2 << 2) | 0;
                              c[s2 >> 2] = (c[s2 >> 2] | 0) + (d[k2 + (t2 | 3) >> 0] | 0);
                              s2 = p2 + (b2 + 1 << 2) | 0;
                              c[s2 >> 2] = (c[s2 >> 2] | 0) + (d[k2 + (t2 | 2) >> 0] | 0);
                              b2 = p2 + (b2 + 2 << 2) | 0;
                              c[b2 >> 2] = (c[b2 >> 2] | 0) + (d[k2 + (t2 | 1) >> 0] | 0);
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                      } while ((x2 | 0) < (M2 | 0));
                    }
                    break;
                  }
                  case 7: {
                    y2 = u2 + 100;
                    z2 = +(M2 | 0);
                    A2 = +(O2 | 0);
                    B2 = P2 + 48 | 0;
                    C2 = P2 + 56 | 0;
                    n2 = P2 + 64 | 0;
                    D2 = P2 + 8 | 0;
                    E2 = P2 + 16 | 0;
                    F2 = P2 + 24 | 0;
                    G2 = P2 + 32 | 0;
                    H2 = P2 + 40 | 0;
                    j2 = (b2 | 0) == 1;
                    if ((M2 | 0) > 0) {
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      do {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              Z2 = $(t2, l2) | 0;
                              Y2 = (s2 & 65534) + Z2 << 1;
                              V2 = +((d[k2 + Y2 >> 0] | 0) + -128 | 0);
                              X2 = +((d[k2 + (Y2 + 2) >> 0] | 0) + -128 | 0);
                              W2 = +((d[k2 + (Z2 + s2 << 1 | 1) >> 0] | 0) + -16 | 0) * 298.0820007324219;
                              Z2 = ~~(V2 * 516.4110107421875 + W2) >> 8;
                              Y2 = ~~(W2 - V2 * 100.29100036621094 - X2 * 208.1199951171875) >> 8;
                              t2 = ~~(W2 + X2 * 408.5830078125) >> 8;
                              Z2 = (Z2 | 0) > 0 ? Z2 : 0;
                              b2 = (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) | 0) * 3 | 0;
                              s2 = p2 + (b2 << 2) | 0;
                              c[s2 >> 2] = ((Z2 | 0) < 255 ? Z2 : 255) + (c[s2 >> 2] | 0);
                              Y2 = (Y2 | 0) > 0 ? Y2 : 0;
                              s2 = p2 + (b2 + 1 << 2) | 0;
                              c[s2 >> 2] = ((Y2 | 0) < 255 ? Y2 : 255) + (c[s2 >> 2] | 0);
                              t2 = (t2 | 0) > 0 ? t2 : 0;
                              b2 = p2 + (b2 + 2 << 2) | 0;
                              c[b2 >> 2] = ((t2 | 0) < 255 ? t2 : 255) + (c[b2 >> 2] | 0);
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                      } while ((x2 | 0) < (M2 | 0));
                    }
                    break;
                  }
                  case 8: {
                    y2 = u2 + 100;
                    z2 = +(M2 | 0);
                    A2 = +(O2 | 0);
                    B2 = P2 + 48 | 0;
                    C2 = P2 + 56 | 0;
                    n2 = P2 + 64 | 0;
                    D2 = P2 + 8 | 0;
                    E2 = P2 + 16 | 0;
                    F2 = P2 + 24 | 0;
                    G2 = P2 + 32 | 0;
                    H2 = P2 + 40 | 0;
                    j2 = (b2 | 0) == 1;
                    if ((M2 | 0) > 0) {
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      do {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              t2 = $(t2, l2) | 0;
                              Y2 = (s2 & 65534) + t2 << 1;
                              V2 = +((d[k2 + (Y2 | 1) >> 0] | 0) + -128 | 0);
                              X2 = +((d[k2 + (Y2 + 3) >> 0] | 0) + -128 | 0);
                              W2 = +((d[k2 + (t2 + s2 << 1) >> 0] | 0) + -16 | 0) * 298.0820007324219;
                              s2 = ~~(W2 + V2 * 516.4110107421875) >> 8;
                              t2 = ~~(W2 - V2 * 100.29100036621094 - X2 * 208.1199951171875) >> 8;
                              Y2 = ~~(W2 + X2 * 408.5830078125) >> 8;
                              s2 = (s2 | 0) > 0 ? s2 : 0;
                              Z2 = (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) | 0) * 3 | 0;
                              b2 = p2 + (Z2 << 2) | 0;
                              c[b2 >> 2] = ((s2 | 0) < 255 ? s2 : 255) + (c[b2 >> 2] | 0);
                              t2 = (t2 | 0) > 0 ? t2 : 0;
                              b2 = p2 + (Z2 + 1 << 2) | 0;
                              c[b2 >> 2] = ((t2 | 0) < 255 ? t2 : 255) + (c[b2 >> 2] | 0);
                              Y2 = (Y2 | 0) > 0 ? Y2 : 0;
                              Z2 = p2 + (Z2 + 2 << 2) | 0;
                              c[Z2 >> 2] = ((Y2 | 0) < 255 ? Y2 : 255) + (c[Z2 >> 2] | 0);
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                      } while ((x2 | 0) < (M2 | 0));
                    }
                    break;
                  }
                  case 9: {
                    y2 = u2 + 100;
                    z2 = +(M2 | 0);
                    A2 = +(O2 | 0);
                    B2 = P2 + 48 | 0;
                    C2 = P2 + 56 | 0;
                    n2 = P2 + 64 | 0;
                    D2 = P2 + 8 | 0;
                    E2 = P2 + 16 | 0;
                    F2 = P2 + 24 | 0;
                    G2 = P2 + 32 | 0;
                    H2 = P2 + 40 | 0;
                    j2 = (b2 | 0) == 1;
                    if ((M2 | 0) > 0) {
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      do {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              Y2 = ($(t2, l2) | 0) + s2 << 1;
                              t2 = d[k2 + (Y2 | 1) >> 0] | 0;
                              Z2 = (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) | 0) * 3 | 0;
                              b2 = p2 + (Z2 << 2) | 0;
                              c[b2 >> 2] = (t2 << 3 & 248 | 4) + (c[b2 >> 2] | 0);
                              Y2 = d[k2 + Y2 >> 0] | 0;
                              b2 = p2 + (Z2 + 1 << 2) | 0;
                              c[b2 >> 2] = (Y2 << 5 & 224 | t2 >>> 3 & 28 | 2) + (c[b2 >> 2] | 0);
                              Z2 = p2 + (Z2 + 2 << 2) | 0;
                              c[Z2 >> 2] = (Y2 & 248 | 4) + (c[Z2 >> 2] | 0);
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                      } while ((x2 | 0) < (M2 | 0));
                    }
                    break;
                  }
                  case 10: {
                    y2 = u2 + 100;
                    z2 = +(M2 | 0);
                    A2 = +(O2 | 0);
                    B2 = P2 + 48 | 0;
                    C2 = P2 + 56 | 0;
                    n2 = P2 + 64 | 0;
                    D2 = P2 + 8 | 0;
                    E2 = P2 + 16 | 0;
                    F2 = P2 + 24 | 0;
                    G2 = P2 + 32 | 0;
                    H2 = P2 + 40 | 0;
                    j2 = (b2 | 0) == 1;
                    if ((M2 | 0) > 0) {
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      do {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              Y2 = ($(t2, l2) | 0) + s2 << 1;
                              t2 = d[k2 + (Y2 | 1) >> 0] | 0;
                              Z2 = (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) | 0) * 3 | 0;
                              b2 = p2 + (Z2 << 2) | 0;
                              c[b2 >> 2] = (t2 << 2 & 248 | 4) + (c[b2 >> 2] | 0);
                              Y2 = d[k2 + Y2 >> 0] | 0;
                              b2 = p2 + (Z2 + 1 << 2) | 0;
                              c[b2 >> 2] = (Y2 << 5 & 224 | t2 >>> 3 & 24 | 4) + (c[b2 >> 2] | 0);
                              Z2 = p2 + (Z2 + 2 << 2) | 0;
                              c[Z2 >> 2] = (Y2 & 248 | 4) + (c[Z2 >> 2] | 0);
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                      } while ((x2 | 0) < (M2 | 0));
                    }
                    break;
                  }
                  case 11: {
                    y2 = u2 + 100;
                    z2 = +(M2 | 0);
                    A2 = +(O2 | 0);
                    B2 = P2 + 48 | 0;
                    C2 = P2 + 56 | 0;
                    n2 = P2 + 64 | 0;
                    D2 = P2 + 8 | 0;
                    E2 = P2 + 16 | 0;
                    F2 = P2 + 24 | 0;
                    G2 = P2 + 32 | 0;
                    H2 = P2 + 40 | 0;
                    j2 = (b2 | 0) == 1;
                    if ((M2 | 0) > 0) {
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      do {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              Y2 = ($(t2, l2) | 0) + s2 << 1;
                              Z2 = (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) | 0) * 3 | 0;
                              b2 = p2 + (Z2 << 2) | 0;
                              c[b2 >> 2] = (c[b2 >> 2] | 0) + ((d[k2 + (Y2 | 1) >> 0] | 0) & 240 | 8);
                              Y2 = d[k2 + Y2 >> 0] | 0;
                              b2 = p2 + (Z2 + 1 << 2) | 0;
                              c[b2 >> 2] = (Y2 << 4 & 240 | 8) + (c[b2 >> 2] | 0);
                              Z2 = p2 + (Z2 + 2 << 2) | 0;
                              c[Z2 >> 2] = (Y2 & 240 | 8) + (c[Z2 >> 2] | 0);
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                      } while ((x2 | 0) < (M2 | 0));
                    }
                    break;
                  }
                  default: {
                    Me(3, 4615, C2);
                    S2 = 278;
                    break a;
                  }
                }
              } while (0);
              t2 = $(K2, L2) | 0;
              if (N2) {
                s2 = 0;
                do {
                  a[r2 + s2 >> 0] = ((c[p2 + (s2 << 2) >> 2] | 0) >>> 0) / (t2 >>> 0) | 0;
                  s2 = s2 + 1 | 0;
                } while ((s2 | 0) < (I2 | 0));
              }
              Vj(p2);
              p2 = 0;
            } else {
              p2 = Wj(N2, 4) | 0;
              if (!p2) {
                Me(3, 5472, w2);
                rb(1);
              }
              b:
                do {
                  if (n2 >>> 0 < 2) {
                    y2 = u2 + 100;
                    z2 = +(M2 | 0);
                    A2 = +(O2 | 0);
                    B2 = P2 + 48 | 0;
                    C2 = P2 + 56 | 0;
                    n2 = P2 + 64 | 0;
                    D2 = P2 + 8 | 0;
                    E2 = P2 + 16 | 0;
                    F2 = P2 + 24 | 0;
                    G2 = P2 + 32 | 0;
                    H2 = P2 + 40 | 0;
                    j2 = (b2 | 0) == 1;
                    if ((M2 | 0) > 0) {
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      do {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              Y2 = (($(t2, l2) | 0) + s2 | 0) * 3 | 0;
                              Z2 = p2 + (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) << 2) | 0;
                              c[Z2 >> 2] = (c[Z2 >> 2] | 0) + ((((d[k2 + (Y2 + 1) >> 0] | 0) + (d[k2 + Y2 >> 0] | 0) + (d[k2 + (Y2 + 2) >> 0] | 0) | 0) >>> 0) / 3 | 0);
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                      } while ((x2 | 0) < (M2 | 0));
                    }
                  } else {
                    if ((n2 & -2 | 0) == 2) {
                      y2 = u2 + 100;
                      z2 = +(M2 | 0);
                      A2 = +(O2 | 0);
                      B2 = P2 + 48 | 0;
                      C2 = P2 + 56 | 0;
                      n2 = P2 + 64 | 0;
                      D2 = P2 + 8 | 0;
                      E2 = P2 + 16 | 0;
                      F2 = P2 + 24 | 0;
                      G2 = P2 + 32 | 0;
                      H2 = P2 + 40 | 0;
                      j2 = (b2 | 0) == 1;
                      if ((M2 | 0) <= 0)
                        break;
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      while (1) {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              Y2 = ($(t2, l2) | 0) + s2 << 2;
                              Z2 = p2 + (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) << 2) | 0;
                              c[Z2 >> 2] = (c[Z2 >> 2] | 0) + ((((d[k2 + (Y2 | 1) >> 0] | 0) + (d[k2 + Y2 >> 0] | 0) + (d[k2 + (Y2 | 2) >> 0] | 0) | 0) >>> 0) / 3 | 0);
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                        if ((x2 | 0) >= (M2 | 0))
                          break b;
                      }
                    }
                    if ((n2 & -3 | 0) == 4) {
                      y2 = u2 + 100;
                      z2 = +(M2 | 0);
                      A2 = +(O2 | 0);
                      B2 = P2 + 48 | 0;
                      C2 = P2 + 56 | 0;
                      n2 = P2 + 64 | 0;
                      D2 = P2 + 8 | 0;
                      E2 = P2 + 16 | 0;
                      F2 = P2 + 24 | 0;
                      G2 = P2 + 32 | 0;
                      H2 = P2 + 40 | 0;
                      j2 = (b2 | 0) == 1;
                      if ((M2 | 0) <= 0)
                        break;
                      e2 = (O2 | 0) > 0;
                      x2 = 0;
                      while (1) {
                        v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                        if (e2) {
                          w2 = 0;
                          do {
                            u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                            q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                            if (q2 == 0) {
                              S2 = 278;
                              break a;
                            }
                            X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                            g[Q2 >> 2] = X2;
                            u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                            g[R2 >> 2] = u2;
                            lf(o2, X2, u2, Q2, R2) | 0;
                            u2 = +g[Q2 >> 2];
                            if (j2) {
                              s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                              t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                            } else {
                              s2 = ~~(u2 + 0.5);
                              t2 = ~~(+g[R2 >> 2] + 0.5);
                            }
                            if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                              Y2 = ($(t2, l2) | 0) + s2 << 2;
                              Z2 = p2 + (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) << 2) | 0;
                              c[Z2 >> 2] = (c[Z2 >> 2] | 0) + ((((d[k2 + (Y2 | 2) >> 0] | 0) + (d[k2 + (Y2 | 1) >> 0] | 0) + (d[k2 + (Y2 | 3) >> 0] | 0) | 0) >>> 0) / 3 | 0);
                            }
                            w2 = w2 + 1 | 0;
                          } while ((w2 | 0) < (O2 | 0));
                        }
                        x2 = x2 + 1 | 0;
                        if ((x2 | 0) >= (M2 | 0))
                          break b;
                      }
                    }
                    switch (n2 | 0) {
                      case 5:
                      case 12:
                      case 13:
                      case 14: {
                        y2 = u2 + 100;
                        z2 = +(M2 | 0);
                        A2 = +(O2 | 0);
                        B2 = P2 + 48 | 0;
                        C2 = P2 + 56 | 0;
                        n2 = P2 + 64 | 0;
                        D2 = P2 + 8 | 0;
                        E2 = P2 + 16 | 0;
                        F2 = P2 + 24 | 0;
                        G2 = P2 + 32 | 0;
                        H2 = P2 + 40 | 0;
                        j2 = (b2 | 0) == 1;
                        if ((M2 | 0) <= 0)
                          break b;
                        e2 = (O2 | 0) > 0;
                        x2 = 0;
                        do {
                          v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                          if (e2) {
                            w2 = 0;
                            do {
                              u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                              q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                              if (q2 == 0) {
                                S2 = 278;
                                break a;
                              }
                              X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                              g[Q2 >> 2] = X2;
                              u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                              g[R2 >> 2] = u2;
                              lf(o2, X2, u2, Q2, R2) | 0;
                              u2 = +g[Q2 >> 2];
                              if (j2) {
                                s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                                t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                              } else {
                                s2 = ~~(u2 + 0.5);
                                t2 = ~~(+g[R2 >> 2] + 0.5);
                              }
                              if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                                Y2 = d[k2 + (($(t2, l2) | 0) + s2) >> 0] | 0;
                                Z2 = p2 + (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) << 2) | 0;
                                c[Z2 >> 2] = (c[Z2 >> 2] | 0) + Y2;
                              }
                              w2 = w2 + 1 | 0;
                            } while ((w2 | 0) < (O2 | 0));
                          }
                          x2 = x2 + 1 | 0;
                        } while ((x2 | 0) < (M2 | 0));
                        break;
                      }
                      case 7: {
                        y2 = u2 + 100;
                        z2 = +(M2 | 0);
                        A2 = +(O2 | 0);
                        B2 = P2 + 48 | 0;
                        C2 = P2 + 56 | 0;
                        n2 = P2 + 64 | 0;
                        D2 = P2 + 8 | 0;
                        E2 = P2 + 16 | 0;
                        F2 = P2 + 24 | 0;
                        G2 = P2 + 32 | 0;
                        H2 = P2 + 40 | 0;
                        j2 = (b2 | 0) == 1;
                        if ((M2 | 0) <= 0)
                          break b;
                        e2 = (O2 | 0) > 0;
                        x2 = 0;
                        do {
                          v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                          if (e2) {
                            w2 = 0;
                            do {
                              u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                              q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                              if (q2 == 0) {
                                S2 = 278;
                                break a;
                              }
                              X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                              g[Q2 >> 2] = X2;
                              u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                              g[R2 >> 2] = u2;
                              lf(o2, X2, u2, Q2, R2) | 0;
                              u2 = +g[Q2 >> 2];
                              if (j2) {
                                s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                                t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                              } else {
                                s2 = ~~(u2 + 0.5);
                                t2 = ~~(+g[R2 >> 2] + 0.5);
                              }
                              if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                                Y2 = d[k2 + (($(t2, l2) | 0) + s2 << 1 | 1) >> 0] | 0;
                                Z2 = p2 + (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) << 2) | 0;
                                c[Z2 >> 2] = (c[Z2 >> 2] | 0) + Y2;
                              }
                              w2 = w2 + 1 | 0;
                            } while ((w2 | 0) < (O2 | 0));
                          }
                          x2 = x2 + 1 | 0;
                        } while ((x2 | 0) < (M2 | 0));
                        break;
                      }
                      case 8: {
                        y2 = u2 + 100;
                        z2 = +(M2 | 0);
                        A2 = +(O2 | 0);
                        B2 = P2 + 48 | 0;
                        C2 = P2 + 56 | 0;
                        n2 = P2 + 64 | 0;
                        D2 = P2 + 8 | 0;
                        E2 = P2 + 16 | 0;
                        F2 = P2 + 24 | 0;
                        G2 = P2 + 32 | 0;
                        H2 = P2 + 40 | 0;
                        j2 = (b2 | 0) == 1;
                        if ((M2 | 0) <= 0)
                          break b;
                        e2 = (O2 | 0) > 0;
                        x2 = 0;
                        do {
                          v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                          if (e2) {
                            w2 = 0;
                            do {
                              u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                              q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                              if (q2 == 0) {
                                S2 = 278;
                                break a;
                              }
                              X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                              g[Q2 >> 2] = X2;
                              u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                              g[R2 >> 2] = u2;
                              lf(o2, X2, u2, Q2, R2) | 0;
                              u2 = +g[Q2 >> 2];
                              if (j2) {
                                s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                                t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                              } else {
                                s2 = ~~(u2 + 0.5);
                                t2 = ~~(+g[R2 >> 2] + 0.5);
                              }
                              if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                                Y2 = d[k2 + (($(t2, l2) | 0) + s2 << 1) >> 0] | 0;
                                Z2 = p2 + (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) << 2) | 0;
                                c[Z2 >> 2] = (c[Z2 >> 2] | 0) + Y2;
                              }
                              w2 = w2 + 1 | 0;
                            } while ((w2 | 0) < (O2 | 0));
                          }
                          x2 = x2 + 1 | 0;
                        } while ((x2 | 0) < (M2 | 0));
                        break;
                      }
                      case 9: {
                        y2 = u2 + 100;
                        z2 = +(M2 | 0);
                        A2 = +(O2 | 0);
                        B2 = P2 + 48 | 0;
                        C2 = P2 + 56 | 0;
                        n2 = P2 + 64 | 0;
                        D2 = P2 + 8 | 0;
                        E2 = P2 + 16 | 0;
                        F2 = P2 + 24 | 0;
                        G2 = P2 + 32 | 0;
                        H2 = P2 + 40 | 0;
                        j2 = (b2 | 0) == 1;
                        if ((M2 | 0) <= 0)
                          break b;
                        e2 = (O2 | 0) > 0;
                        x2 = 0;
                        do {
                          v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                          if (e2) {
                            w2 = 0;
                            do {
                              u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                              q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                              if (q2 == 0) {
                                S2 = 278;
                                break a;
                              }
                              X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                              g[Q2 >> 2] = X2;
                              u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                              g[R2 >> 2] = u2;
                              lf(o2, X2, u2, Q2, R2) | 0;
                              u2 = +g[Q2 >> 2];
                              if (j2) {
                                s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                                t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                              } else {
                                s2 = ~~(u2 + 0.5);
                                t2 = ~~(+g[R2 >> 2] + 0.5);
                              }
                              if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                                Y2 = ($(t2, l2) | 0) + s2 << 1;
                                I2 = d[k2 + Y2 >> 0] | 0;
                                Y2 = d[k2 + (Y2 | 1) >> 0] | 0;
                                Z2 = p2 + (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) << 2) | 0;
                                c[Z2 >> 2] = (c[Z2 >> 2] | 0) + ((((Y2 << 3 & 248 | 4) + (I2 & 248 | 4) + (I2 << 5 & 224 | Y2 >>> 3 & 28 | 2) | 0) >>> 0) / 3 | 0);
                              }
                              w2 = w2 + 1 | 0;
                            } while ((w2 | 0) < (O2 | 0));
                          }
                          x2 = x2 + 1 | 0;
                        } while ((x2 | 0) < (M2 | 0));
                        break;
                      }
                      case 10: {
                        y2 = u2 + 100;
                        z2 = +(M2 | 0);
                        A2 = +(O2 | 0);
                        B2 = P2 + 48 | 0;
                        C2 = P2 + 56 | 0;
                        n2 = P2 + 64 | 0;
                        D2 = P2 + 8 | 0;
                        E2 = P2 + 16 | 0;
                        F2 = P2 + 24 | 0;
                        G2 = P2 + 32 | 0;
                        H2 = P2 + 40 | 0;
                        j2 = (b2 | 0) == 1;
                        if ((M2 | 0) <= 0)
                          break b;
                        e2 = (O2 | 0) > 0;
                        x2 = 0;
                        do {
                          v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                          if (e2) {
                            w2 = 0;
                            do {
                              u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                              q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                              if (q2 == 0) {
                                S2 = 278;
                                break a;
                              }
                              X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                              g[Q2 >> 2] = X2;
                              u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                              g[R2 >> 2] = u2;
                              lf(o2, X2, u2, Q2, R2) | 0;
                              u2 = +g[Q2 >> 2];
                              if (j2) {
                                s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                                t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                              } else {
                                s2 = ~~(u2 + 0.5);
                                t2 = ~~(+g[R2 >> 2] + 0.5);
                              }
                              if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                                Y2 = ($(t2, l2) | 0) + s2 << 1;
                                I2 = d[k2 + Y2 >> 0] | 0;
                                Y2 = d[k2 + (Y2 | 1) >> 0] | 0;
                                Z2 = p2 + (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) << 2) | 0;
                                c[Z2 >> 2] = (c[Z2 >> 2] | 0) + ((((Y2 << 2 & 248 | 4) + (I2 & 248 | 4) + (I2 << 5 & 224 | Y2 >>> 3 & 24 | 4) | 0) >>> 0) / 3 | 0);
                              }
                              w2 = w2 + 1 | 0;
                            } while ((w2 | 0) < (O2 | 0));
                          }
                          x2 = x2 + 1 | 0;
                        } while ((x2 | 0) < (M2 | 0));
                        break;
                      }
                      case 11: {
                        y2 = u2 + 100;
                        z2 = +(M2 | 0);
                        A2 = +(O2 | 0);
                        B2 = P2 + 48 | 0;
                        C2 = P2 + 56 | 0;
                        n2 = P2 + 64 | 0;
                        D2 = P2 + 8 | 0;
                        E2 = P2 + 16 | 0;
                        F2 = P2 + 24 | 0;
                        G2 = P2 + 32 | 0;
                        H2 = P2 + 40 | 0;
                        j2 = (b2 | 0) == 1;
                        if ((M2 | 0) <= 0)
                          break b;
                        e2 = (O2 | 0) > 0;
                        x2 = 0;
                        do {
                          v2 = y2 + J2 * (+(x2 | 0) + 0.5) / z2;
                          if (e2) {
                            w2 = 0;
                            do {
                              u2 = y2 + J2 * (+(w2 | 0) + 0.5) / A2;
                              q2 = +h[n2 >> 3] + (+h[B2 >> 3] * u2 + v2 * +h[C2 >> 3]);
                              if (q2 == 0) {
                                S2 = 278;
                                break a;
                              }
                              X2 = (+h[E2 >> 3] + (u2 * +h[P2 >> 3] + v2 * +h[D2 >> 3])) / q2;
                              g[Q2 >> 2] = X2;
                              u2 = (+h[H2 >> 3] + (u2 * +h[F2 >> 3] + v2 * +h[G2 >> 3])) / q2;
                              g[R2 >> 2] = u2;
                              lf(o2, X2, u2, Q2, R2) | 0;
                              u2 = +g[Q2 >> 2];
                              if (j2) {
                                s2 = ((~~(u2 + 1) | 0) / 2 | 0) << 1;
                                t2 = ((~~(+g[R2 >> 2] + 1) | 0) / 2 | 0) << 1;
                              } else {
                                s2 = ~~(u2 + 0.5);
                                t2 = ~~(+g[R2 >> 2] + 0.5);
                              }
                              if ((s2 | 0) > -1 ? (t2 | 0) < (m2 | 0) & ((t2 | 0) > -1 & (s2 | 0) < (l2 | 0)) : 0) {
                                Y2 = ($(t2, l2) | 0) + s2 << 1;
                                I2 = d[k2 + Y2 >> 0] | 0;
                                Z2 = p2 + (($((x2 | 0) / (K2 | 0) | 0, f2) | 0) + ((w2 | 0) / (L2 | 0) | 0) << 2) | 0;
                                c[Z2 >> 2] = (c[Z2 >> 2] | 0) + ((((I2 << 4 & 240 | 8) + (I2 & 240 | 8) + ((d[k2 + (Y2 | 1) >> 0] | 0) & 240 | 8) | 0) >>> 0) / 3 | 0);
                              }
                              w2 = w2 + 1 | 0;
                            } while ((w2 | 0) < (O2 | 0));
                          }
                          x2 = x2 + 1 | 0;
                        } while ((x2 | 0) < (M2 | 0));
                        break;
                      }
                      default: {
                        Me(3, 4615, x2);
                        S2 = 278;
                        break a;
                      }
                    }
                  }
                } while (0);
              s2 = $(K2, L2) | 0;
              if (N2) {
                t2 = 0;
                do {
                  a[r2 + t2 >> 0] = ((c[p2 + (t2 << 2) >> 2] | 0) >>> 0) / (s2 >>> 0) | 0;
                  t2 = t2 + 1 | 0;
                } while ((t2 | 0) < (N2 | 0));
              }
              Vj(p2);
              p2 = 0;
            }
          } while (0);
        if ((S2 | 0) == 278) {
          Vj(p2);
          p2 = -1;
        }
        i2 = T2;
        return p2 | 0;
      }
      function Fe(b2, e2, f2, g2, j2, k2, l2) {
        b2 = b2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        l2 = l2 | 0;
        var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
        v2 = i2;
        i2 = i2 + 32 | 0;
        p2 = v2 + 24 | 0;
        o2 = v2 + 8 | 0;
        u2 = v2;
        a:
          do {
            if ((e2 + -3 | 0) >>> 0 > 5) {
              c[f2 >> 2] = -1;
              c[g2 >> 2] = 0;
              h[j2 >> 3] = -1;
              m2 = -1;
            } else {
              c[o2 >> 2] = 0;
              t2 = e2 + -1 | 0;
              c[o2 + 4 >> 2] = $(t2, e2) | 0;
              r2 = $(e2, e2) | 0;
              c[o2 + 8 >> 2] = r2 + -1;
              c[o2 + 12 >> 2] = t2;
              n2 = a[b2 + (c[o2 >> 2] | 0) >> 0] | 0;
              m2 = (n2 & 255) > 0 ? n2 : 0;
              n2 = (n2 & 255) < 255 ? n2 : -1;
              s2 = a[b2 + (c[o2 + 4 >> 2] | 0) >> 0] | 0;
              m2 = (s2 & 255) > (m2 & 255) ? s2 : m2;
              n2 = (s2 & 255) < (n2 & 255) ? s2 : n2;
              s2 = a[b2 + (c[o2 + 8 >> 2] | 0) >> 0] | 0;
              m2 = (s2 & 255) > (m2 & 255) ? s2 : m2;
              n2 = (s2 & 255) < (n2 & 255) ? s2 : n2;
              s2 = a[b2 + (c[o2 + 12 >> 2] | 0) >> 0] | 0;
              m2 = ((s2 & 255) > (m2 & 255) ? s2 : m2) & 255;
              n2 = ((s2 & 255) < (n2 & 255) ? s2 : n2) & 255;
              if ((m2 - n2 | 0) < 30) {
                c[f2 >> 2] = -1;
                c[g2 >> 2] = 0;
                h[j2 >> 3] = -1;
                m2 = -2;
                break;
              }
              q2 = (m2 + n2 | 0) >>> 1;
              a[p2 >> 0] = (d[b2 + (c[o2 >> 2] | 0) >> 0] | 0) >>> 0 < q2 >>> 0 & 1;
              a[p2 + 1 >> 0] = (d[b2 + (c[o2 + 4 >> 2] | 0) >> 0] | 0) >>> 0 < q2 >>> 0 & 1;
              a[p2 + 2 >> 0] = (d[b2 + (c[o2 + 8 >> 2] | 0) >> 0] | 0) >>> 0 < q2 >>> 0 & 1;
              a[p2 + 3 >> 0] = (d[b2 + (c[o2 + 12 >> 2] | 0) >> 0] | 0) >>> 0 < q2 >>> 0 & 1;
              n2 = 0;
              while (1) {
                m2 = n2 + 1 | 0;
                if (((a[p2 + n2 >> 0] | 0) == 1 ? (a[p2 + ((m2 | 0) % 4 | 0) >> 0] | 0) == 1 : 0) ? (a[p2 + ((n2 + 2 | 0) % 4 | 0) >> 0] | 0) == 0 : 0) {
                  m2 = n2;
                  n2 = 10;
                  break;
                }
                if ((m2 | 0) < 4)
                  n2 = m2;
                else {
                  n2 = 12;
                  break;
                }
              }
              if ((n2 | 0) == 10)
                c[g2 >> 2] = m2;
              else if ((n2 | 0) == 12 ? (m2 | 0) == 4 : 0) {
                c[f2 >> 2] = -1;
                c[g2 >> 2] = 0;
                h[j2 >> 3] = -1;
                m2 = -3;
                break;
              }
              if (!r2)
                s2 = 255;
              else {
                m2 = 255;
                n2 = 0;
                do {
                  s2 = b2 + n2 | 0;
                  p2 = d[s2 >> 0] | 0;
                  o2 = p2 - q2 | 0;
                  o2 = (o2 | 0) < 0 ? 0 - o2 | 0 : o2;
                  m2 = (o2 | 0) < (m2 | 0) ? o2 : m2;
                  a[s2 >> 0] = p2 >>> 0 < q2 >>> 0 & 1;
                  n2 = n2 + 1 | 0;
                } while ((n2 | 0) < (r2 | 0));
                s2 = m2;
              }
              switch (c[g2 >> 2] | 0) {
                case 0: {
                  if ((e2 | 0) > 0) {
                    r2 = (e2 | 0) == 0;
                    n2 = 0;
                    m2 = 0;
                    g2 = 0;
                    do {
                      p2 = (g2 | 0) == (t2 | 0);
                      q2 = $(g2, e2) | 0;
                      if (!r2) {
                        o2 = 0;
                        do {
                          if ((o2 | g2 | 0) != 0 ? !(p2 & ((o2 | 0) == 0 | (o2 | 0) == (t2 | 0))) : 0) {
                            n2 = fk(n2 | 0, m2 | 0, 1) | 0;
                            n2 = (a[b2 + (o2 + q2) >> 0] | 0) != 0 | n2;
                            m2 = D;
                          }
                          o2 = o2 + 1 | 0;
                        } while ((o2 | 0) != (e2 | 0));
                      }
                      g2 = g2 + 1 | 0;
                    } while ((g2 | 0) < (e2 | 0));
                  } else {
                    n2 = 0;
                    m2 = 0;
                  }
                  break;
                }
                case 1: {
                  if ((e2 | 0) > 0) {
                    r2 = (e2 | 0) > 0;
                    n2 = 0;
                    m2 = 0;
                    g2 = 0;
                    do {
                      p2 = (g2 | 0) == 0;
                      q2 = (g2 | 0) == (t2 | 0);
                      if (r2) {
                        o2 = t2;
                        while (1) {
                          w2 = (o2 | 0) == (t2 | 0);
                          if (!(p2 & w2) ? !(q2 & (w2 | (o2 | 0) == 0)) : 0) {
                            n2 = fk(n2 | 0, m2 | 0, 1) | 0;
                            n2 = (a[b2 + (($(o2, e2) | 0) + g2) >> 0] | 0) != 0 | n2;
                            m2 = D;
                          }
                          if ((o2 | 0) > 0)
                            o2 = o2 + -1 | 0;
                          else
                            break;
                        }
                      }
                      g2 = g2 + 1 | 0;
                    } while ((g2 | 0) < (e2 | 0));
                  } else {
                    n2 = 0;
                    m2 = 0;
                  }
                  break;
                }
                case 2: {
                  if ((e2 | 0) > 0) {
                    r2 = (e2 | 0) > 0;
                    n2 = 0;
                    m2 = 0;
                    g2 = t2;
                    while (1) {
                      q2 = (g2 | 0) == (t2 | 0) | (g2 | 0) == 0;
                      p2 = $(g2, e2) | 0;
                      if (r2) {
                        o2 = t2;
                        while (1) {
                          if (!(q2 & (o2 | 0) == (t2 | 0) | (o2 | g2 | 0) == 0)) {
                            n2 = fk(n2 | 0, m2 | 0, 1) | 0;
                            n2 = (a[b2 + (o2 + p2) >> 0] | 0) != 0 | n2;
                            m2 = D;
                          }
                          if ((o2 | 0) > 0)
                            o2 = o2 + -1 | 0;
                          else
                            break;
                        }
                      }
                      if ((g2 | 0) > 0)
                        g2 = g2 + -1 | 0;
                      else
                        break;
                    }
                  } else {
                    n2 = 0;
                    m2 = 0;
                  }
                  break;
                }
                case 3: {
                  if ((e2 | 0) > 0) {
                    r2 = (e2 | 0) > 0;
                    n2 = 0;
                    m2 = 0;
                    g2 = t2;
                    while (1) {
                      p2 = (g2 | 0) == (t2 | 0);
                      q2 = (g2 | 0) == 0;
                      if (r2) {
                        o2 = 0;
                        do {
                          if (!(p2 & (o2 | 0) == 0 | (o2 | g2 | 0) == 0 | q2 & (o2 | 0) == (t2 | 0))) {
                            n2 = fk(n2 | 0, m2 | 0, 1) | 0;
                            n2 = (a[b2 + (($(o2, e2) | 0) + g2) >> 0] | 0) != 0 | n2;
                            m2 = D;
                          }
                          o2 = o2 + 1 | 0;
                        } while ((o2 | 0) < (e2 | 0));
                      }
                      if ((g2 | 0) > 0)
                        g2 = g2 + -1 | 0;
                      else
                        break;
                    }
                  } else {
                    n2 = 0;
                    m2 = 0;
                  }
                  break;
                }
                default: {
                  n2 = 0;
                  m2 = 0;
                }
              }
              h[j2 >> 3] = (s2 | 0) > 30 ? 1 : +(s2 | 0) / 30;
              switch (k2 | 0) {
                case 259: {
                  w2 = a[4551 + n2 >> 0] | 0;
                  k2 = w2 << 24 >> 24;
                  l2 = u2;
                  c[l2 >> 2] = k2;
                  c[l2 + 4 >> 2] = ((k2 | 0) < 0) << 31 >> 31;
                  if (w2 << 24 >> 24 < 0) {
                    c[f2 >> 2] = -1;
                    h[j2 >> 3] = -1;
                    m2 = -4;
                    break a;
                  }
                  break;
                }
                case 515: {
                  m2 = a[4423 + n2 >> 0] | 0;
                  k2 = m2 << 24 >> 24;
                  w2 = u2;
                  c[w2 >> 2] = k2;
                  c[w2 + 4 >> 2] = ((k2 | 0) < 0) << 31 >> 31;
                  if (l2)
                    c[l2 >> 2] = d[4487 + n2 >> 0];
                  if (m2 << 24 >> 24 < 0) {
                    c[f2 >> 2] = -1;
                    h[j2 >> 3] = -1;
                    m2 = -4;
                    break a;
                  }
                  break;
                }
                case 772:
                case 1028: {
                  m2 = Ie(k2, n2, m2, 0, u2) | 0;
                  if ((m2 | 0) < 0) {
                    c[f2 >> 2] = -1;
                    h[j2 >> 3] = -1;
                    m2 = -4;
                    break a;
                  }
                  if ((l2 | 0) != 0 & (m2 | 0) > 0)
                    c[l2 >> 2] = m2;
                  break;
                }
                default: {
                  w2 = u2;
                  c[w2 >> 2] = n2;
                  c[w2 + 4 >> 2] = m2;
                }
              }
              c[f2 >> 2] = c[u2 >> 2];
              m2 = 0;
            }
          } while (0);
        i2 = v2;
        return m2 | 0;
      }
      function Ge(a2, b2, e2, f2, g2, j2, k2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
        C2 = i2;
        i2 = i2 + 16 | 0;
        l2 = C2 + 8 | 0;
        n2 = C2;
        a:
          do {
            if (!a2) {
              c[g2 >> 2] = 0;
              c[j2 >> 2] = 0;
              h[k2 >> 3] = -1;
              b2 = -1;
            } else
              switch (b2 | 0) {
                case 0: {
                  o2 = $(f2, f2) | 0;
                  z2 = o2 * 3 | 0;
                  A2 = Uj(o2 * 12 | 0) | 0;
                  if (!A2) {
                    Me(3, 5472, n2);
                    rb(1);
                  }
                  if (!o2)
                    b2 = 0;
                  else {
                    b2 = 0;
                    l2 = 0;
                    do {
                      b2 = ((d[e2 + l2 >> 0] | 0) ^ 255) + b2 | 0;
                      l2 = l2 + 1 | 0;
                    } while ((l2 | 0) < (z2 | 0));
                  }
                  l2 = (b2 | 0) / (z2 | 0) | 0;
                  if (!o2)
                    m2 = 0;
                  else {
                    n2 = 0;
                    b2 = 0;
                    do {
                      x2 = ((d[e2 + n2 >> 0] | 0) ^ 255) - l2 | 0;
                      c[A2 + (n2 << 2) >> 2] = x2;
                      b2 = ($(x2, x2) | 0) + b2 | 0;
                      n2 = n2 + 1 | 0;
                    } while ((n2 | 0) < (z2 | 0));
                    m2 = +(b2 | 0);
                  }
                  y2 = +P(+m2);
                  if (y2 / (+(f2 | 0) * 1.7320508) < 15) {
                    c[g2 >> 2] = 0;
                    c[j2 >> 2] = 0;
                    h[k2 >> 3] = -1;
                    Vj(A2);
                    b2 = -2;
                    break a;
                  }
                  v2 = c[a2 >> 2] | 0;
                  w2 = a2 + 12 | 0;
                  x2 = a2 + 16 | 0;
                  if ((v2 | 0) > 0) {
                    u2 = c[a2 + 8 >> 2] | 0;
                    s2 = (o2 | 0) == 0;
                    n2 = -1;
                    t2 = 0;
                    m2 = 0;
                    l2 = -1;
                    b2 = -1;
                    do {
                      b:
                        while (1) {
                          n2 = n2 + 1 | 0;
                          switch (c[u2 + (n2 << 2) >> 2] | 0) {
                            case 0:
                              break;
                            case 2:
                              break b;
                            default: {
                              B2 = 17;
                              break b;
                            }
                          }
                        }
                      if ((B2 | 0) == 17) {
                        B2 = 0;
                        p2 = n2 << 2;
                        q2 = c[x2 >> 2] | 0;
                        r2 = 0;
                        do {
                          a2 = r2 + p2 | 0;
                          if (s2)
                            o2 = 0;
                          else {
                            e2 = c[(c[w2 >> 2] | 0) + (a2 << 2) >> 2] | 0;
                            f2 = 0;
                            o2 = 0;
                            do {
                              o2 = ($(c[e2 + (f2 << 2) >> 2] | 0, c[A2 + (f2 << 2) >> 2] | 0) | 0) + o2 | 0;
                              f2 = f2 + 1 | 0;
                            } while ((f2 | 0) < (z2 | 0));
                          }
                          D2 = +(o2 | 0) / +h[q2 + (a2 << 3) >> 3] / y2;
                          a2 = D2 > m2;
                          l2 = a2 ? r2 : l2;
                          b2 = a2 ? n2 : b2;
                          m2 = a2 ? D2 : m2;
                          r2 = r2 + 1 | 0;
                        } while ((r2 | 0) != 4);
                      }
                      t2 = t2 + 1 | 0;
                    } while ((t2 | 0) < (v2 | 0));
                  } else {
                    m2 = 0;
                    l2 = -1;
                    b2 = -1;
                  }
                  c[j2 >> 2] = l2;
                  c[g2 >> 2] = b2;
                  h[k2 >> 3] = m2;
                  Vj(A2);
                  b2 = 0;
                  break a;
                }
                case 1: {
                  z2 = $(f2, f2) | 0;
                  A2 = Uj(z2 << 2) | 0;
                  if (!A2) {
                    Me(3, 5472, l2);
                    rb(1);
                  }
                  if (!z2)
                    b2 = 0;
                  else {
                    b2 = 0;
                    l2 = 0;
                    do {
                      b2 = ((d[e2 + l2 >> 0] | 0) ^ 255) + b2 | 0;
                      l2 = l2 + 1 | 0;
                    } while ((l2 | 0) < (z2 | 0));
                  }
                  l2 = (b2 | 0) / (z2 | 0) | 0;
                  if (!z2)
                    m2 = 0;
                  else {
                    n2 = 0;
                    b2 = 0;
                    do {
                      x2 = ((d[e2 + n2 >> 0] | 0) ^ 255) - l2 | 0;
                      c[A2 + (n2 << 2) >> 2] = x2;
                      b2 = ($(x2, x2) | 0) + b2 | 0;
                      n2 = n2 + 1 | 0;
                    } while ((n2 | 0) < (z2 | 0));
                    m2 = +(b2 | 0);
                  }
                  y2 = +P(+m2);
                  if (y2 / +(f2 | 0) < 15) {
                    c[g2 >> 2] = 0;
                    c[j2 >> 2] = 0;
                    h[k2 >> 3] = -1;
                    Vj(A2);
                    b2 = -2;
                    break a;
                  }
                  v2 = c[a2 >> 2] | 0;
                  w2 = a2 + 20 | 0;
                  x2 = a2 + 24 | 0;
                  if ((v2 | 0) > 0) {
                    s2 = c[a2 + 8 >> 2] | 0;
                    t2 = (z2 | 0) == 0;
                    n2 = -1;
                    u2 = 0;
                    m2 = 0;
                    l2 = -1;
                    b2 = -1;
                    do {
                      c:
                        while (1) {
                          n2 = n2 + 1 | 0;
                          switch (c[s2 + (n2 << 2) >> 2] | 0) {
                            case 0:
                              break;
                            case 2:
                              break c;
                            default: {
                              B2 = 37;
                              break c;
                            }
                          }
                        }
                      if ((B2 | 0) == 37) {
                        B2 = 0;
                        p2 = n2 << 2;
                        q2 = c[x2 >> 2] | 0;
                        r2 = 0;
                        do {
                          a2 = r2 + p2 | 0;
                          if (t2)
                            o2 = 0;
                          else {
                            e2 = c[(c[w2 >> 2] | 0) + (a2 << 2) >> 2] | 0;
                            f2 = 0;
                            o2 = 0;
                            do {
                              o2 = ($(c[e2 + (f2 << 2) >> 2] | 0, c[A2 + (f2 << 2) >> 2] | 0) | 0) + o2 | 0;
                              f2 = f2 + 1 | 0;
                            } while ((f2 | 0) < (z2 | 0));
                          }
                          D2 = +(o2 | 0) / +h[q2 + (a2 << 3) >> 3] / y2;
                          a2 = D2 > m2;
                          l2 = a2 ? r2 : l2;
                          b2 = a2 ? n2 : b2;
                          m2 = a2 ? D2 : m2;
                          r2 = r2 + 1 | 0;
                        } while ((r2 | 0) != 4);
                      }
                      u2 = u2 + 1 | 0;
                    } while ((u2 | 0) < (v2 | 0));
                  } else {
                    m2 = 0;
                    l2 = -1;
                    b2 = -1;
                  }
                  c[j2 >> 2] = l2;
                  c[g2 >> 2] = b2;
                  h[k2 >> 3] = m2;
                  Vj(A2);
                  b2 = 0;
                  break a;
                }
                default: {
                  b2 = -1;
                  break a;
                }
              }
          } while (0);
        i2 = C2;
        return b2 | 0;
      }
      function He(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
        e2 = Re(8, 8) | 0;
        f2 = Re(8, 1) | 0;
        g2 = Re(8, 1) | 0;
        i3 = c[e2 >> 2] | 0;
        j2 = c[f2 >> 2] | 0;
        k2 = 0;
        do {
          p2 = a2 + (k2 << 4) | 0;
          l2 = k2 << 4;
          h[i3 + (l2 << 3) >> 3] = +h[p2 >> 3];
          o2 = a2 + (k2 << 4) + 8 | 0;
          h[i3 + ((l2 | 1) << 3) >> 3] = +h[o2 >> 3];
          h[i3 + ((l2 | 2) << 3) >> 3] = 1;
          h[i3 + ((l2 | 3) << 3) >> 3] = 0;
          h[i3 + ((l2 | 4) << 3) >> 3] = 0;
          h[i3 + ((l2 | 5) << 3) >> 3] = 0;
          n2 = b2 + (k2 << 4) | 0;
          h[i3 + ((l2 | 6) << 3) >> 3] = -(+h[p2 >> 3] * +h[n2 >> 3]);
          h[i3 + ((l2 | 7) << 3) >> 3] = -(+h[o2 >> 3] * +h[n2 >> 3]);
          h[i3 + ((l2 | 8) << 3) >> 3] = 0;
          h[i3 + ((l2 | 9) << 3) >> 3] = 0;
          h[i3 + ((l2 | 10) << 3) >> 3] = 0;
          h[i3 + ((l2 | 11) << 3) >> 3] = +h[p2 >> 3];
          h[i3 + ((l2 | 12) << 3) >> 3] = +h[o2 >> 3];
          h[i3 + ((l2 | 13) << 3) >> 3] = 1;
          m2 = b2 + (k2 << 4) + 8 | 0;
          h[i3 + ((l2 | 14) << 3) >> 3] = -(+h[p2 >> 3] * +h[m2 >> 3]);
          h[i3 + ((l2 | 15) << 3) >> 3] = -(+h[o2 >> 3] * +h[m2 >> 3]);
          l2 = k2 << 1;
          h[j2 + (l2 << 3) >> 3] = +h[n2 >> 3];
          h[j2 + ((l2 | 1) << 3) >> 3] = +h[m2 >> 3];
          k2 = k2 + 1 | 0;
        } while ((k2 | 0) != 4);
        _e(e2) | 0;
        Xe(g2, e2, f2) | 0;
        p2 = c[g2 >> 2] | 0;
        h[d2 >> 3] = +h[p2 >> 3];
        h[d2 + 8 >> 3] = +h[p2 + 8 >> 3];
        h[d2 + 16 >> 3] = +h[p2 + 16 >> 3];
        p2 = c[g2 >> 2] | 0;
        h[d2 + 24 >> 3] = +h[p2 + 24 >> 3];
        h[d2 + 32 >> 3] = +h[p2 + 32 >> 3];
        h[d2 + 40 >> 3] = +h[p2 + 40 >> 3];
        p2 = c[g2 >> 2] | 0;
        h[d2 + 48 >> 3] = +h[p2 + 48 >> 3];
        h[d2 + 56 >> 3] = +h[p2 + 56 >> 3];
        h[d2 + 64 >> 3] = 1;
        We(e2) | 0;
        We(f2) | 0;
        We(g2) | 0;
        return;
      }
      function Ie(b2, e2, f2, g2, h2) {
        b2 = b2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        h2 = h2 | 0;
        var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0;
        I2 = i2;
        i2 = i2 + 2320 | 0;
        k2 = I2 + 2304 | 0;
        y2 = I2 + 864 | 0;
        u2 = I2 + 784 | 0;
        H2 = I2 + 704 | 0;
        w2 = I2 + 624 | 0;
        v2 = I2 + 548 | 0;
        G2 = I2 + 40 | 0;
        E2 = I2;
        switch (b2 | 0) {
          case 772: {
            g2 = 9;
            j2 = 1;
            l2 = 3;
            break;
          }
          case 1028: {
            g2 = 5;
            j2 = 2;
            l2 = 3;
            break;
          }
          case 2830: {
            A2 = 900;
            s2 = 1472;
            C2 = 64;
            F2 = 120;
            z2 = 127;
            B2 = g2;
            j2 = 9;
            l2 = 6;
            break;
          }
          default:
            f2 = -1;
        }
        if ((l2 | 0) == 3) {
          b2 = 0;
          while (1) {
            a[k2 + b2 >> 0] = e2 & 1;
            e2 = hk(e2 | 0, f2 | 0, 1) | 0;
            b2 = b2 + 1 | 0;
            if ((b2 | 0) == 13)
              break;
            else
              f2 = D;
          }
          A2 = 840;
          s2 = 1408;
          C2 = g2;
          F2 = 13;
          z2 = 15;
          B2 = k2;
          l2 = 6;
        }
        do {
          if ((l2 | 0) == 6) {
            r2 = j2 << 1;
            k2 = 1;
            f2 = 0;
            while (1) {
              g2 = v2 + (k2 << 2) | 0;
              c[g2 >> 2] = 0;
              b2 = 0;
              e2 = 0;
              do {
                if (a[B2 + e2 >> 0] | 0) {
                  b2 = b2 ^ c[A2 + ((($(e2, k2) | 0) % (z2 | 0) | 0) << 2) >> 2];
                  c[g2 >> 2] = b2;
                }
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (F2 | 0));
              f2 = (b2 | 0) == 0 ? f2 : 1;
              c[g2 >> 2] = c[s2 + (b2 << 2) >> 2];
              if ((k2 | 0) < (r2 | 0))
                k2 = k2 + 1 | 0;
              else
                break;
            }
            x2 = (f2 | 0) != 0;
            if (x2) {
              c[u2 >> 2] = 0;
              f2 = c[v2 + 4 >> 2] | 0;
              c[u2 + 4 >> 2] = f2;
              c[y2 >> 2] = 0;
              c[y2 + 72 >> 2] = 1;
              if ((r2 | 0) > 1) {
                b2 = 1;
                do {
                  c[y2 + (b2 << 2) >> 2] = -1;
                  c[y2 + 72 + (b2 << 2) >> 2] = 0;
                  b2 = b2 + 1 | 0;
                } while ((b2 | 0) < (r2 | 0));
              }
              c[H2 >> 2] = 0;
              c[H2 + 4 >> 2] = 0;
              c[w2 >> 2] = -1;
              c[w2 + 4 >> 2] = 0;
              p2 = 0;
              q2 = 0;
              while (1) {
                g2 = q2;
                q2 = q2 + 1 | 0;
                o2 = u2 + (q2 << 2) | 0;
                if ((f2 | 0) == -1) {
                  k2 = g2 + 2 | 0;
                  c[H2 + (k2 << 2) >> 2] = p2;
                  if ((p2 | 0) < 0)
                    n2 = p2;
                  else {
                    f2 = 0;
                    while (1) {
                      o2 = y2 + (q2 * 72 | 0) + (f2 << 2) | 0;
                      n2 = c[o2 >> 2] | 0;
                      c[y2 + (k2 * 72 | 0) + (f2 << 2) >> 2] = n2;
                      c[o2 >> 2] = c[s2 + (n2 << 2) >> 2];
                      if ((f2 | 0) < (p2 | 0))
                        f2 = f2 + 1 | 0;
                      else {
                        n2 = p2;
                        break;
                      }
                    }
                  }
                } else {
                  b2 = g2;
                  while (1) {
                    f2 = (b2 | 0) > 0;
                    if (f2 & (c[u2 + (b2 << 2) >> 2] | 0) == -1)
                      b2 = b2 + -1 | 0;
                    else
                      break;
                  }
                  if (f2) {
                    e2 = b2;
                    do {
                      f2 = e2;
                      e2 = e2 + -1 | 0;
                      if ((c[u2 + (e2 << 2) >> 2] | 0) != -1)
                        b2 = (c[w2 + (b2 << 2) >> 2] | 0) < (c[w2 + (e2 << 2) >> 2] | 0) ? e2 : b2;
                    } while ((f2 | 0) > 1);
                  }
                  e2 = H2 + (b2 << 2) | 0;
                  m2 = q2 - b2 | 0;
                  n2 = m2 + (c[e2 >> 2] | 0) | 0;
                  k2 = g2 + 2 | 0;
                  n2 = (p2 | 0) > (n2 | 0) ? p2 : n2;
                  c[H2 + (k2 << 2) >> 2] = n2;
                  f2 = 0;
                  do {
                    c[y2 + (k2 * 72 | 0) + (f2 << 2) >> 2] = 0;
                    f2 = f2 + 1 | 0;
                  } while ((f2 | 0) < (r2 | 0));
                  f2 = c[e2 >> 2] | 0;
                  e2 = u2 + (b2 << 2) | 0;
                  if ((f2 | 0) >= 0) {
                    l2 = 0;
                    while (1) {
                      g2 = c[y2 + (b2 * 72 | 0) + (l2 << 2) >> 2] | 0;
                      if ((g2 | 0) != -1)
                        c[y2 + (k2 * 72 | 0) + (m2 + l2 << 2) >> 2] = c[A2 + (((g2 + z2 + (c[o2 >> 2] | 0) - (c[e2 >> 2] | 0) | 0) % (z2 | 0) | 0) << 2) >> 2];
                      if ((l2 | 0) < (f2 | 0))
                        l2 = l2 + 1 | 0;
                      else
                        break;
                    }
                  }
                  if ((p2 | 0) >= 0) {
                    f2 = 0;
                    while (1) {
                      o2 = y2 + (q2 * 72 | 0) + (f2 << 2) | 0;
                      m2 = c[o2 >> 2] | 0;
                      l2 = y2 + (k2 * 72 | 0) + (f2 << 2) | 0;
                      c[l2 >> 2] = c[l2 >> 2] ^ m2;
                      c[o2 >> 2] = c[s2 + (m2 << 2) >> 2];
                      if ((f2 | 0) < (p2 | 0))
                        f2 = f2 + 1 | 0;
                      else
                        break;
                    }
                  }
                }
                c[w2 + (k2 << 2) >> 2] = q2 - n2;
                if ((q2 | 0) >= (r2 | 0))
                  break;
                f2 = c[v2 + (k2 << 2) >> 2] | 0;
                if ((f2 | 0) == -1)
                  f2 = 0;
                else
                  f2 = c[A2 + (f2 << 2) >> 2] | 0;
                g2 = u2 + (k2 << 2) | 0;
                c[g2 >> 2] = f2;
                if ((n2 | 0) >= 1) {
                  e2 = 1;
                  while (1) {
                    b2 = c[v2 + (k2 - e2 << 2) >> 2] | 0;
                    if ((b2 | 0) != -1 ? (t2 = c[y2 + (k2 * 72 | 0) + (e2 << 2) >> 2] | 0, (t2 | 0) != 0) : 0) {
                      f2 = f2 ^ c[A2 + ((((c[s2 + (t2 << 2) >> 2] | 0) + b2 | 0) % (z2 | 0) | 0) << 2) >> 2];
                      c[g2 >> 2] = f2;
                    }
                    if ((e2 | 0) < (n2 | 0))
                      e2 = e2 + 1 | 0;
                    else
                      break;
                  }
                }
                f2 = c[s2 + (f2 << 2) >> 2] | 0;
                c[g2 >> 2] = f2;
                if ((n2 | 0) > (j2 | 0))
                  break;
                else
                  p2 = n2;
              }
              if ((n2 | 0) > (j2 | 0)) {
                f2 = -1;
                break;
              }
              if ((n2 | 0) >= 0) {
                f2 = 0;
                while (1) {
                  w2 = y2 + (k2 * 72 | 0) + (f2 << 2) | 0;
                  c[w2 >> 2] = c[s2 + (c[w2 >> 2] << 2) >> 2];
                  if ((f2 | 0) < (n2 | 0))
                    f2 = f2 + 1 | 0;
                  else
                    break;
                }
              }
              if ((n2 | 0) >= 1) {
                f2 = 1;
                while (1) {
                  c[E2 + (f2 << 2) >> 2] = c[y2 + (k2 * 72 | 0) + (f2 << 2) >> 2];
                  if ((f2 | 0) < (n2 | 0))
                    f2 = f2 + 1 | 0;
                  else
                    break;
                }
              }
              l2 = (n2 | 0) < 1;
              f2 = 0;
              m2 = 1;
              do {
                if (l2)
                  b2 = 1;
                else {
                  j2 = 1;
                  b2 = 1;
                  while (1) {
                    e2 = E2 + (j2 << 2) | 0;
                    g2 = c[e2 >> 2] | 0;
                    if ((g2 | 0) != -1) {
                      y2 = (g2 + j2 | 0) % (z2 | 0) | 0;
                      c[e2 >> 2] = y2;
                      b2 = c[A2 + (y2 << 2) >> 2] ^ b2;
                    }
                    if ((j2 | 0) < (n2 | 0))
                      j2 = j2 + 1 | 0;
                    else
                      break;
                  }
                }
                if (!b2) {
                  c[G2 + (f2 << 2) >> 2] = z2 - m2;
                  f2 = f2 + 1 | 0;
                }
                m2 = m2 + 1 | 0;
              } while ((z2 | 0) >= (m2 | 0));
              if ((f2 | 0) != (n2 | 0)) {
                f2 = -1;
                break;
              }
              if ((n2 | 0) > 0) {
                f2 = 0;
                do {
                  E2 = B2 + (c[G2 + (f2 << 2) >> 2] | 0) | 0;
                  a[E2 >> 0] = d[E2 >> 0] ^ 1;
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) < (n2 | 0));
              }
            } else
              k2 = 0;
            b2 = h2;
            c[b2 >> 2] = 0;
            c[b2 + 4 >> 2] = 0;
            b2 = 1;
            e2 = 0;
            g2 = 0;
            j2 = 0;
            f2 = F2 - C2 | 0;
            while (1) {
              G2 = ok(d[B2 + f2 >> 0] | 0, 0, b2 | 0, e2 | 0) | 0;
              g2 = gk(G2 | 0, D | 0, g2 | 0, j2 | 0) | 0;
              j2 = D;
              G2 = h2;
              c[G2 >> 2] = g2;
              c[G2 + 4 >> 2] = j2;
              b2 = fk(b2 | 0, e2 | 0, 1) | 0;
              f2 = f2 + 1 | 0;
              if ((f2 | 0) >= (F2 | 0))
                break;
              else
                e2 = D;
            }
            if (x2)
              f2 = c[H2 + (k2 << 2) >> 2] | 0;
            else
              f2 = 0;
          }
        } while (0);
        i2 = I2;
        return f2 | 0;
      }
      function Je(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0;
        A2 = i2;
        i2 = i2 + 32 | 0;
        z2 = A2 + 24 | 0;
        g2 = A2 + 16 | 0;
        d2 = A2 + 8 | 0;
        do {
          if (a2) {
            if (!b2) {
              Me(3, 4674, d2);
              d2 = -1;
              break;
            }
            y2 = a2 + 8 | 0;
            f2 = c[a2 + 4 >> 2] | 0;
            a:
              do {
                if ((f2 | 0) > 0) {
                  e2 = c[y2 >> 2] | 0;
                  d2 = 0;
                  do {
                    if (!(c[e2 + (d2 << 2) >> 2] | 0))
                      break a;
                    d2 = d2 + 1 | 0;
                  } while ((d2 | 0) < (f2 | 0));
                } else
                  d2 = 0;
              } while (0);
            if ((d2 | 0) != (f2 | 0)) {
              x2 = Aj(b2) | 0;
              if (!x2) {
                Me(3, 4719, g2);
                d2 = -1;
                break;
              }
              r2 = a2 + 28 | 0;
              s2 = d2 << 2;
              t2 = a2 + 12 | 0;
              u2 = a2 + 20 | 0;
              v2 = a2 + 16 | 0;
              w2 = a2 + 24 | 0;
              f2 = Gj(x2, 4742) | 0;
              e2 = 0;
              b:
                while (1) {
                  q2 = e2 + s2 | 0;
                  p2 = 0;
                  b2 = 0;
                  do {
                    n2 = (p2 | 0) == 0;
                    o2 = (p2 | 0) == 2;
                    g2 = c[r2 >> 2] | 0;
                    if ((g2 | 0) > 0) {
                      m2 = 0;
                      do {
                        if ((g2 | 0) > 0) {
                          l2 = 0;
                          do {
                            if (!f2) {
                              e2 = 17;
                              break b;
                            }
                            g2 = qj(f2) | 0;
                            f2 = Gj(0, 4742) | 0;
                            g2 = 255 - g2 | 0;
                            k2 = ((($(c[r2 >> 2] | 0, m2) | 0) + l2 | 0) * 3 | 0) + p2 | 0;
                            c[(c[(c[t2 >> 2] | 0) + (q2 << 2) >> 2] | 0) + (k2 << 2) >> 2] = g2;
                            k2 = ($(c[r2 >> 2] | 0, m2) | 0) + l2 | 0;
                            j2 = c[(c[u2 >> 2] | 0) + (q2 << 2) >> 2] | 0;
                            k2 = j2 + (k2 << 2) | 0;
                            if (!n2) {
                              c[k2 >> 2] = (c[k2 >> 2] | 0) + g2;
                              if (o2) {
                                k2 = j2 + (($(c[r2 >> 2] | 0, m2) | 0) + l2 << 2) | 0;
                                c[k2 >> 2] = (c[k2 >> 2] | 0) / 3 | 0;
                              }
                            } else
                              c[k2 >> 2] = g2;
                            b2 = g2 + b2 | 0;
                            l2 = l2 + 1 | 0;
                            g2 = c[r2 >> 2] | 0;
                          } while ((l2 | 0) < (g2 | 0));
                        }
                        m2 = m2 + 1 | 0;
                      } while ((m2 | 0) < (g2 | 0));
                    }
                    p2 = p2 + 1 | 0;
                  } while ((p2 | 0) < 3);
                  g2 = c[r2 >> 2] | 0;
                  l2 = (b2 | 0) / ($(g2 * 3 | 0, g2) | 0) | 0;
                  if (($(g2 * 3 | 0, g2) | 0) > 0) {
                    j2 = c[(c[t2 >> 2] | 0) + (q2 << 2) >> 2] | 0;
                    k2 = 0;
                    b2 = 0;
                    do {
                      p2 = j2 + (k2 << 2) | 0;
                      g2 = (c[p2 >> 2] | 0) - l2 | 0;
                      c[p2 >> 2] = g2;
                      b2 = ($(g2, g2) | 0) + b2 | 0;
                      k2 = k2 + 1 | 0;
                      g2 = c[r2 >> 2] | 0;
                    } while ((k2 | 0) < ($(g2 * 3 | 0, g2) | 0));
                  } else
                    b2 = 0;
                  B2 = +P(+ +(b2 | 0));
                  h[(c[v2 >> 2] | 0) + (q2 << 3) >> 3] = B2 == 0 ? 1e-7 : B2;
                  if (!($(g2, g2) | 0))
                    b2 = 0;
                  else {
                    g2 = c[(c[u2 >> 2] | 0) + (q2 << 2) >> 2] | 0;
                    j2 = 0;
                    b2 = 0;
                    do {
                      o2 = g2 + (j2 << 2) | 0;
                      p2 = (c[o2 >> 2] | 0) - l2 | 0;
                      c[o2 >> 2] = p2;
                      b2 = ($(p2, p2) | 0) + b2 | 0;
                      j2 = j2 + 1 | 0;
                      p2 = c[r2 >> 2] | 0;
                    } while ((j2 | 0) < ($(p2, p2) | 0));
                  }
                  B2 = +P(+ +(b2 | 0));
                  h[(c[w2 >> 2] | 0) + (q2 << 3) >> 3] = B2 == 0 ? 1e-7 : B2;
                  e2 = e2 + 1 | 0;
                  if ((e2 | 0) >= 4) {
                    e2 = 32;
                    break;
                  }
                }
              if ((e2 | 0) == 17) {
                Me(3, 4747, z2);
                Vj(x2);
                d2 = -1;
                break;
              } else if ((e2 | 0) == 32) {
                Vj(x2);
                c[(c[y2 >> 2] | 0) + (d2 << 2) >> 2] = 1;
                c[a2 >> 2] = (c[a2 >> 2] | 0) + 1;
                break;
              }
            } else
              d2 = -1;
          } else {
            Me(3, 4649, A2);
            d2 = -1;
          }
        } while (0);
        i2 = A2;
        return d2 | 0;
      }
      function Ke(b2, d2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0;
        k2 = i2;
        i2 = i2 + 32 | 0;
        j2 = k2 + 16 | 0;
        h2 = k2 + 8 | 0;
        e2 = k2;
        g2 = _i(d2, 4854) | 0;
        do {
          if (g2) {
            dj(g2, 0, 2) | 0;
            e2 = gj(g2) | 0;
            dj(g2, 0, 0) | 0;
            f2 = Uj(e2 + 1 | 0) | 0;
            if (!f2) {
              Me(3, 5472, h2);
              Wi(g2) | 0;
              e2 = -1;
              break;
            }
            h2 = aj(f2, e2, 1, g2) | 0;
            Wi(g2) | 0;
            if (!h2) {
              c[j2 >> 2] = d2;
              Me(3, 4820, j2);
              Vj(f2);
              e2 = -1;
              break;
            } else {
              a[f2 + e2 >> 0] = 0;
              e2 = Je(b2, f2) | 0;
              Vj(f2);
              break;
            }
          } else {
            c[e2 >> 2] = d2;
            Me(3, 4774, e2);
            e2 = -1;
          }
        } while (0);
        i2 = k2;
        return e2 | 0;
      }
      function Le(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        b2 = (c[a2 + 8 >> 2] | 0) + (b2 << 2) | 0;
        if (!(c[b2 >> 2] | 0))
          b2 = -1;
        else {
          c[b2 >> 2] = 0;
          c[a2 >> 2] = (c[a2 >> 2] | 0) + -1;
          b2 = 1;
        }
        return b2 | 0;
      }
      function Me(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, h2 = 0, j2 = 0;
        j2 = i2;
        i2 = i2 + 32 | 0;
        h2 = j2 + 16 | 0;
        f2 = j2;
        c[h2 >> 2] = 0;
        if (((d2 | 0) != 0 & (c[496] | 0) <= (b2 | 0) ? (a[d2 >> 0] | 0) != 0 : 0) ? (c[f2 >> 2] = e2, g2 = lj(h2, d2, f2) | 0, (g2 | 0) > -1) : 0) {
          f2 = c[497] | 0;
          do {
            if (f2) {
              if (!(c[498] | 0)) {
                Wb[f2 & 15](c[h2 >> 2] | 0);
                break;
              }
              e2 = gb() | 0;
              b2 = c[500] | 0;
              if ((e2 | 0) == (c[499] | 0)) {
                if ((b2 | 0) > 0) {
                  Wb[f2 & 15](c[502] | 0);
                  c[500] = 0;
                  f2 = c[497] | 0;
                }
                Wb[f2 & 15](c[h2 >> 2] | 0);
                break;
              }
              f2 = c[501] | 0;
              if ((b2 | 0) < (f2 | 0)) {
                d2 = (c[502] | 0) + b2 | 0;
                if ((g2 | 0) < (-3 - b2 + f2 | 0)) {
                  yj(d2, c[h2 >> 2] | 0) | 0;
                  c[500] = (c[500] | 0) + g2;
                  break;
                } else {
                  a[d2 >> 0] = 46;
                  a[d2 + 1 >> 0] = 46;
                  a[d2 + 2 >> 0] = 46;
                  a[d2 + 3 >> 0] = 0;
                  c[500] = c[501];
                  break;
                }
              }
            } else
              $i(c[h2 >> 2] | 0, c[659] | 0) | 0;
          } while (0);
          Vj(c[h2 >> 2] | 0);
        }
        i2 = j2;
        return;
      }
      function Ne(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, i3 = 0;
        i3 = 0;
        do {
          d2 = a2 + (i3 << 5) | 0;
          e2 = a2 + (i3 << 5) + 8 | 0;
          f2 = a2 + (i3 << 5) + 16 | 0;
          g2 = 0;
          do {
            h[c2 + (i3 << 5) + (g2 << 3) >> 3] = +h[d2 >> 3] * +h[b2 + (g2 << 3) >> 3] + +h[e2 >> 3] * +h[b2 + 32 + (g2 << 3) >> 3] + +h[f2 >> 3] * +h[b2 + 64 + (g2 << 3) >> 3];
            g2 = g2 + 1 | 0;
          } while ((g2 | 0) != 4);
          g2 = c2 + (i3 << 5) + 24 | 0;
          h[g2 >> 3] = +h[a2 + (i3 << 5) + 24 >> 3] + +h[g2 >> 3];
          i3 = i3 + 1 | 0;
        } while ((i3 | 0) != 3);
        return 0;
      }
      function Oe(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, i3 = 0, j2 = 0, k2 = 0;
        j2 = Re(4, 4) | 0;
        d2 = c[j2 >> 2] | 0;
        e2 = c[j2 >> 2] | 0;
        f2 = c[j2 >> 2] | 0;
        g2 = c[j2 >> 2] | 0;
        i3 = 0;
        do {
          k2 = i3 << 2;
          h[d2 + (k2 << 3) >> 3] = +h[a2 + (i3 << 5) >> 3];
          h[e2 + (1 + k2 << 3) >> 3] = +h[a2 + (i3 << 5) + 8 >> 3];
          h[f2 + (2 + k2 << 3) >> 3] = +h[a2 + (i3 << 5) + 16 >> 3];
          h[g2 + (3 + k2 << 3) >> 3] = +h[a2 + (i3 << 5) + 24 >> 3];
          i3 = i3 + 1 | 0;
        } while ((i3 | 0) != 3);
        d2 = c[j2 >> 2] | 0;
        e2 = d2 + 96 | 0;
        c[e2 >> 2] = 0;
        c[e2 + 4 >> 2] = 0;
        c[e2 + 8 >> 2] = 0;
        c[e2 + 12 >> 2] = 0;
        c[e2 + 16 >> 2] = 0;
        c[e2 + 20 >> 2] = 0;
        h[d2 + 120 >> 3] = 1;
        _e(j2) | 0;
        d2 = c[j2 >> 2] | 0;
        e2 = c[j2 >> 2] | 0;
        f2 = c[j2 >> 2] | 0;
        g2 = c[j2 >> 2] | 0;
        i3 = 0;
        do {
          k2 = i3 << 2;
          h[b2 + (i3 << 5) >> 3] = +h[d2 + (k2 << 3) >> 3];
          h[b2 + (i3 << 5) + 8 >> 3] = +h[e2 + (1 + k2 << 3) >> 3];
          h[b2 + (i3 << 5) + 16 >> 3] = +h[f2 + (2 + k2 << 3) >> 3];
          h[b2 + (i3 << 5) + 24 >> 3] = +h[g2 + (3 + k2 << 3) >> 3];
          i3 = i3 + 1 | 0;
        } while ((i3 | 0) != 3);
        We(j2) | 0;
        return 0;
      }
      function Pe(a2) {
        a2 = a2 | 0;
        switch (a2 | 0) {
          case 1:
          case 0: {
            a2 = 3;
            break;
          }
          case 6:
          case 4:
          case 3:
          case 2: {
            a2 = 4;
            break;
          }
          case 14:
          case 13:
          case 12:
          case 5: {
            a2 = 1;
            break;
          }
          case 11:
          case 10:
          case 9:
          case 8:
          case 7: {
            a2 = 2;
            break;
          }
          default:
            a2 = 0;
        }
        return a2 | 0;
      }
      function Qe(b2, c2, d2, e2) {
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0;
        do {
          if ((b2 | 0) != 0 & (c2 | 0) != 0 & (d2 | 0) != 0) {
            f2 = Ej(c2, 47) | 0;
            if (!f2) {
              a[b2 >> 0] = 0;
              break;
            }
            f2 = f2 + ((e2 | 0) != 0 & 1) - c2 | 0;
            if ((f2 + 1 | 0) >>> 0 <= d2 >>> 0) {
              Dj(b2, c2, f2) | 0;
              a[b2 + f2 >> 0] = 0;
            } else
              b2 = 0;
          } else
            b2 = 0;
        } while (0);
        return b2 | 0;
      }
      function Re(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0;
        d2 = Uj(12) | 0;
        do {
          if (d2) {
            e2 = Uj($(a2 << 3, b2) | 0) | 0;
            c[d2 >> 2] = e2;
            if (!e2) {
              Vj(d2);
              d2 = 0;
              break;
            } else {
              c[d2 + 4 >> 2] = a2;
              c[d2 + 8 >> 2] = b2;
              break;
            }
          } else
            d2 = 0;
        } while (0);
        return d2 | 0;
      }
      function Se(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        b2 = Re(c[a2 + 4 >> 2] | 0, c[a2 + 8 >> 2] | 0) | 0;
        if (b2) {
          if ((Ve(b2, a2) | 0) < 0) {
            We(b2) | 0;
            b2 = 0;
          }
        } else
          b2 = 0;
        return b2 | 0;
      }
      function Te(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0;
        d2 = Re(c[a2 + 4 >> 2] | 0, c[b2 + 8 >> 2] | 0) | 0;
        if (d2) {
          if ((Xe(d2, a2, b2) | 0) < 0) {
            We(d2) | 0;
            d2 = 0;
          }
        } else
          d2 = 0;
        return d2 | 0;
      }
      function Ue(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        b2 = Re(c[a2 + 8 >> 2] | 0, c[a2 + 4 >> 2] | 0) | 0;
        if (b2) {
          if (($e(b2, a2) | 0) < 0) {
            We(b2) | 0;
            b2 = 0;
          }
        } else
          b2 = 0;
        return b2 | 0;
      }
      function Ve(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
        d2 = c[a2 + 4 >> 2] | 0;
        if ((d2 | 0) == (c[b2 + 4 >> 2] | 0) ? (j2 = c[a2 + 8 >> 2] | 0, (j2 | 0) == (c[b2 + 8 >> 2] | 0)) : 0)
          if ((d2 | 0) > 0) {
            e2 = (j2 | 0) > 0;
            l2 = 0;
            do {
              f2 = $(j2, l2) | 0;
              if (e2) {
                g2 = c[b2 >> 2] | 0;
                i3 = c[a2 >> 2] | 0;
                k2 = 0;
                do {
                  m2 = f2 + k2 | 0;
                  h[i3 + (m2 << 3) >> 3] = +h[g2 + (m2 << 3) >> 3];
                  k2 = k2 + 1 | 0;
                } while ((k2 | 0) < (j2 | 0));
              }
              l2 = l2 + 1 | 0;
            } while ((l2 | 0) < (d2 | 0));
            d2 = 0;
          } else
            d2 = 0;
        else
          d2 = -1;
        return d2 | 0;
      }
      function We(a2) {
        a2 = a2 | 0;
        if (a2) {
          Vj(c[a2 >> 2] | 0);
          Vj(a2);
        }
        return 0;
      }
      function Xe(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
        n2 = c[b2 + 8 >> 2] | 0;
        if (((n2 | 0) == (c[d2 + 4 >> 2] | 0) ? (r2 = c[a2 + 4 >> 2] | 0, (r2 | 0) == (c[b2 + 4 >> 2] | 0)) : 0) ? (o2 = c[a2 + 8 >> 2] | 0, (o2 | 0) == (c[d2 + 8 >> 2] | 0)) : 0) {
          s2 = (o2 | 0) > 0 ? o2 : 0;
          if ((r2 | 0) > 0) {
            p2 = (o2 | 0) > 0;
            q2 = (n2 | 0) > 0;
            k2 = c[a2 >> 2] | 0;
            m2 = 0;
            while (1) {
              a2 = $(n2, m2) | 0;
              if (p2) {
                f2 = 0;
                l2 = k2;
                while (1) {
                  h[l2 >> 3] = 0;
                  if (q2) {
                    e2 = 0;
                    g2 = 0;
                    i3 = (c[b2 >> 2] | 0) + (a2 << 3) | 0;
                    j2 = (c[d2 >> 2] | 0) + (f2 << 3) | 0;
                    while (1) {
                      e2 = e2 + +h[i3 >> 3] * +h[j2 >> 3];
                      h[l2 >> 3] = e2;
                      g2 = g2 + 1 | 0;
                      if ((g2 | 0) >= (n2 | 0))
                        break;
                      else {
                        i3 = i3 + 8 | 0;
                        j2 = j2 + (o2 << 3) | 0;
                      }
                    }
                  }
                  f2 = f2 + 1 | 0;
                  if ((f2 | 0) >= (o2 | 0))
                    break;
                  else
                    l2 = l2 + 8 | 0;
                }
              }
              m2 = m2 + 1 | 0;
              if ((m2 | 0) >= (r2 | 0)) {
                a2 = 0;
                break;
              } else
                k2 = k2 + (s2 << 3) | 0;
            }
          } else
            a2 = 0;
        } else
          a2 = -1;
        return a2 | 0;
      }
      function Ye(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
        q2 = c[a2 + 4 >> 2] | 0;
        s2 = c[a2 + 8 >> 2] | 0;
        f2 = (q2 | 0) < (s2 | 0) ? q2 : s2;
        a:
          do {
            if (((((!((q2 | 0) < 2 | (s2 | 0) < 2) ? (c[b2 + 8 >> 2] | 0) == (s2 | 0) : 0) ? (c[b2 + 4 >> 2] | 0) == (f2 | 0) : 0) ? (t2 = d2 + 4 | 0, (c[t2 >> 2] | 0) == (f2 | 0)) : 0) ? (g2 = e2 + 4 | 0, (c[g2 >> 2] | 0) == (s2 | 0)) : 0) ? (u2 = Se(a2) | 0, (u2 | 0) != 0) : 0) {
              r2 = +P(+ +(q2 | 0));
              o2 = c[u2 + 4 >> 2] | 0;
              p2 = c[u2 + 8 >> 2] | 0;
              if (!((o2 | 0) < 1 | (p2 | 0) < 1) ? (c[g2 >> 2] | 0) == (p2 | 0) : 0) {
                if (p2) {
                  f2 = c[e2 >> 2] | 0;
                  a2 = 0;
                  do {
                    h[f2 + (a2 << 3) >> 3] = 0;
                    a2 = a2 + 1 | 0;
                  } while ((a2 | 0) != (p2 | 0));
                }
                n2 = c[u2 >> 2] | 0;
                if (o2) {
                  f2 = (p2 | 0) == 0;
                  a2 = 0;
                  j2 = n2;
                  while (1) {
                    if (!f2) {
                      g2 = 0;
                      k2 = j2;
                      l2 = c[e2 >> 2] | 0;
                      while (1) {
                        h[l2 >> 3] = +h[k2 >> 3] + +h[l2 >> 3];
                        g2 = g2 + 1 | 0;
                        if ((g2 | 0) == (p2 | 0))
                          break;
                        else {
                          k2 = k2 + 8 | 0;
                          l2 = l2 + 8 | 0;
                        }
                      }
                    }
                    a2 = a2 + 1 | 0;
                    if ((a2 | 0) == (o2 | 0))
                      break;
                    else
                      j2 = j2 + (p2 << 3) | 0;
                  }
                }
                i3 = +(o2 | 0);
                if (p2) {
                  f2 = c[e2 >> 2] | 0;
                  a2 = 0;
                  do {
                    m2 = f2 + (a2 << 3) | 0;
                    h[m2 >> 3] = +h[m2 >> 3] / i3;
                    a2 = a2 + 1 | 0;
                  } while ((a2 | 0) != (p2 | 0));
                }
                l2 = (p2 | 0) > 0 ? p2 : 0;
                if ((o2 | 0) > 0) {
                  f2 = (p2 | 0) > 0;
                  a2 = 0;
                  j2 = n2;
                  while (1) {
                    if (f2) {
                      g2 = 0;
                      k2 = j2;
                      m2 = c[e2 >> 2] | 0;
                      while (1) {
                        h[k2 >> 3] = +h[k2 >> 3] - +h[m2 >> 3];
                        g2 = g2 + 1 | 0;
                        if ((g2 | 0) >= (p2 | 0))
                          break;
                        else {
                          k2 = k2 + 8 | 0;
                          m2 = m2 + 8 | 0;
                        }
                      }
                    }
                    a2 = a2 + 1 | 0;
                    if ((a2 | 0) >= (o2 | 0))
                      break;
                    else
                      j2 = j2 + (l2 << 3) | 0;
                  }
                }
                f2 = $(s2, q2) | 0;
                if ((f2 | 0) > 0) {
                  a2 = 0;
                  do {
                    e2 = n2 + (a2 << 3) | 0;
                    h[e2 >> 3] = +h[e2 >> 3] / r2;
                    a2 = a2 + 1 | 0;
                  } while ((a2 | 0) < (f2 | 0));
                }
                f2 = Ze(u2, b2, d2) | 0;
                We(u2) | 0;
                j2 = c[t2 >> 2] | 0;
                if ((j2 | 0) > 0) {
                  a2 = c[d2 >> 2] | 0;
                  g2 = 0;
                  i3 = 0;
                  do {
                    i3 = i3 + +h[a2 + (g2 << 3) >> 3];
                    g2 = g2 + 1 | 0;
                  } while ((g2 | 0) < (j2 | 0));
                } else
                  i3 = 0;
                if ((j2 | 0) <= 0)
                  break;
                a2 = c[d2 >> 2] | 0;
                g2 = 0;
                while (1) {
                  d2 = a2 + (g2 << 3) | 0;
                  h[d2 >> 3] = +h[d2 >> 3] / i3;
                  g2 = g2 + 1 | 0;
                  if ((g2 | 0) >= (j2 | 0))
                    break a;
                }
              }
              We(u2) | 0;
              f2 = -1;
            } else
              f2 = -1;
          } while (0);
        return f2 | 0;
      }
      function Ze(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0;
        U2 = i2;
        i2 = i2 + 16 | 0;
        w2 = U2;
        F2 = a2 + 4 | 0;
        I2 = c[F2 >> 2] | 0;
        J2 = a2 + 8 | 0;
        K2 = c[J2 >> 2] | 0;
        S2 = (K2 | 0) < (I2 | 0) ? K2 : I2;
        a:
          do {
            if (((!((I2 | 0) < 2 | (K2 | 0) < 2) ? (R2 = b2 + 8 | 0, (c[R2 >> 2] | 0) == (K2 | 0)) : 0) ? (L2 = b2 + 4 | 0, (c[L2 >> 2] | 0) == (S2 | 0)) : 0) ? (M2 = d2 + 4 | 0, (c[M2 >> 2] | 0) == (S2 | 0)) : 0) {
              T2 = Re(S2, S2) | 0;
              N2 = T2 + 4 | 0;
              if ((c[N2 >> 2] | 0) == (S2 | 0) ? (Q2 = T2 + 8 | 0, (c[Q2 >> 2] | 0) == (S2 | 0)) : 0) {
                G2 = (I2 | 0) < (K2 | 0);
                s2 = c[F2 >> 2] | 0;
                t2 = c[J2 >> 2] | 0;
                if (G2) {
                  if ((S2 | 0) != (s2 | 0)) {
                    We(T2) | 0;
                    e2 = -1;
                    break;
                  }
                  g2 = c[T2 >> 2] | 0;
                  if ((S2 | 0) > 0) {
                    m2 = (S2 | 0) == 0;
                    j2 = (t2 | 0) > 0;
                    n2 = 0;
                    r2 = g2;
                    while (1) {
                      l2 = $(n2, t2) | 0;
                      if (!m2) {
                        p2 = 0;
                        s2 = r2;
                        while (1) {
                          if ((p2 | 0) >= (n2 | 0)) {
                            e2 = c[a2 >> 2] | 0;
                            h[s2 >> 3] = 0;
                            if (j2) {
                              k2 = 0;
                              o2 = e2 + (l2 << 3) | 0;
                              e2 = e2 + (($(p2, t2) | 0) << 3) | 0;
                              f2 = 0;
                              while (1) {
                                k2 = k2 + +h[o2 >> 3] * +h[e2 >> 3];
                                h[s2 >> 3] = k2;
                                f2 = f2 + 1 | 0;
                                if ((f2 | 0) >= (t2 | 0))
                                  break;
                                else {
                                  o2 = o2 + 8 | 0;
                                  e2 = e2 + 8 | 0;
                                }
                              }
                            }
                          } else
                            h[s2 >> 3] = +h[g2 + (($(p2, S2) | 0) + n2 << 3) >> 3];
                          p2 = p2 + 1 | 0;
                          if ((p2 | 0) == (S2 | 0))
                            break;
                          else
                            s2 = s2 + 8 | 0;
                        }
                      }
                      n2 = n2 + 1 | 0;
                      if ((n2 | 0) >= (S2 | 0))
                        break;
                      else
                        r2 = r2 + (S2 << 3) | 0;
                    }
                  }
                } else {
                  if ((S2 | 0) != (t2 | 0)) {
                    We(T2) | 0;
                    e2 = -1;
                    break;
                  }
                  g2 = c[T2 >> 2] | 0;
                  if ((S2 | 0) > 0) {
                    l2 = (S2 | 0) == 0;
                    j2 = (s2 | 0) > 0;
                    m2 = 0;
                    p2 = g2;
                    while (1) {
                      if (!l2) {
                        o2 = 0;
                        r2 = p2;
                        while (1) {
                          if ((o2 | 0) >= (m2 | 0)) {
                            e2 = c[a2 >> 2] | 0;
                            h[r2 >> 3] = 0;
                            if (j2) {
                              k2 = 0;
                              n2 = e2 + (m2 << 3) | 0;
                              e2 = e2 + (o2 << 3) | 0;
                              f2 = 0;
                              while (1) {
                                k2 = k2 + +h[n2 >> 3] * +h[e2 >> 3];
                                h[r2 >> 3] = k2;
                                f2 = f2 + 1 | 0;
                                if ((f2 | 0) >= (s2 | 0))
                                  break;
                                else {
                                  n2 = n2 + (S2 << 3) | 0;
                                  e2 = e2 + (S2 << 3) | 0;
                                }
                              }
                            }
                          } else
                            h[r2 >> 3] = +h[g2 + (($(o2, S2) | 0) + m2 << 3) >> 3];
                          o2 = o2 + 1 | 0;
                          if ((o2 | 0) == (S2 | 0))
                            break;
                          else
                            r2 = r2 + 8 | 0;
                        }
                      }
                      m2 = m2 + 1 | 0;
                      if ((m2 | 0) >= (S2 | 0))
                        break;
                      else
                        p2 = p2 + (S2 << 3) | 0;
                    }
                  }
                }
                do {
                  if (((S2 | 0) >= 2 ? (c[M2 >> 2] | 0) == (S2 | 0) : 0) ? (H2 = nf(S2) | 0, (H2 | 0) != 0) : 0) {
                    E2 = S2 + -1 | 0;
                    c[w2 + 4 >> 2] = E2;
                    c[w2 >> 2] = (c[H2 >> 2] | 0) + 8;
                    if ((rf(T2, d2, w2) | 0) < 0) {
                      of(H2) | 0;
                      break;
                    }
                    B2 = c[H2 >> 2] | 0;
                    h[B2 >> 3] = 0;
                    if ((E2 | 0) > 0) {
                      C2 = (S2 | 0) == 0;
                      D2 = E2;
                      do {
                        f2 = D2;
                        while (1) {
                          if ((f2 | 0) <= 0)
                            break;
                          v2 = +O(+ +h[B2 + (f2 << 3) >> 3]);
                          e2 = f2 + -1 | 0;
                          A2 = c[d2 >> 2] | 0;
                          x2 = +O(+ +h[A2 + (e2 << 3) >> 3]);
                          if (v2 > (x2 + +O(+ +h[A2 + (f2 << 3) >> 3])) * 1e-6)
                            f2 = e2;
                          else
                            break;
                        }
                        y2 = D2;
                        D2 = D2 + -1 | 0;
                        b:
                          do {
                            if ((f2 | 0) != (y2 | 0)) {
                              o2 = B2 + (y2 << 3) | 0;
                              p2 = B2 + (f2 + 1 << 3) | 0;
                              r2 = (f2 | 0) < (y2 | 0);
                              z2 = 0;
                              do {
                                if ((z2 | 0) > 99)
                                  break b;
                                z2 = z2 + 1 | 0;
                                s2 = c[d2 >> 2] | 0;
                                t2 = s2 + (D2 << 3) | 0;
                                w2 = s2 + (y2 << 3) | 0;
                                k2 = +h[w2 >> 3];
                                q2 = (+h[t2 >> 3] - k2) * 0.5;
                                u2 = +h[o2 >> 3];
                                u2 = u2 * u2;
                                v2 = +P(+(u2 + q2 * q2));
                                if (r2) {
                                  A2 = f2;
                                  q2 = +h[s2 + (f2 << 3) >> 3] - k2 + u2 / (q2 + (q2 < 0 ? -v2 : v2));
                                  u2 = +h[p2 >> 3];
                                  while (1) {
                                    k2 = +O(+q2);
                                    do {
                                      if (!(k2 >= +O(+u2))) {
                                        v2 = -q2 / u2;
                                        x2 = 1 / +P(+(v2 * v2 + 1));
                                        v2 = v2 * x2;
                                      } else {
                                        if (!(k2 > 1e-16)) {
                                          v2 = 1;
                                          x2 = 0;
                                          break;
                                        }
                                        k2 = -u2 / q2;
                                        x2 = 1 / +P(+(k2 * k2 + 1));
                                        v2 = x2;
                                        x2 = k2 * x2;
                                      }
                                    } while (0);
                                    j2 = s2 + (A2 << 3) | 0;
                                    X2 = +h[j2 >> 3];
                                    n2 = A2;
                                    A2 = A2 + 1 | 0;
                                    l2 = s2 + (A2 << 3) | 0;
                                    W2 = +h[l2 >> 3];
                                    k2 = X2 - W2;
                                    m2 = B2 + (A2 << 3) | 0;
                                    V2 = x2 * (x2 * k2 + v2 * 2 * +h[m2 >> 3]);
                                    h[j2 >> 3] = X2 - V2;
                                    h[l2 >> 3] = W2 + V2;
                                    if ((n2 | 0) > (f2 | 0)) {
                                      l2 = B2 + (n2 << 3) | 0;
                                      h[l2 >> 3] = v2 * +h[l2 >> 3] - u2 * x2;
                                    }
                                    X2 = +h[m2 >> 3];
                                    h[m2 >> 3] = X2 + x2 * (v2 * k2 - x2 * 2 * X2);
                                    j2 = $(n2, S2) | 0;
                                    l2 = $(A2, S2) | 0;
                                    if (C2)
                                      k2 = u2;
                                    else {
                                      e2 = c[T2 >> 2] | 0;
                                      g2 = 0;
                                      do {
                                        Z2 = e2 + (g2 + j2 << 3) | 0;
                                        q2 = +h[Z2 >> 3];
                                        Y2 = e2 + (g2 + l2 << 3) | 0;
                                        k2 = +h[Y2 >> 3];
                                        h[Z2 >> 3] = v2 * q2 - x2 * k2;
                                        h[Y2 >> 3] = x2 * q2 + v2 * k2;
                                        g2 = g2 + 1 | 0;
                                      } while ((g2 | 0) != (S2 | 0));
                                    }
                                    if ((n2 | 0) < (D2 | 0)) {
                                      q2 = +h[m2 >> 3];
                                      Z2 = B2 + (n2 + 2 << 3) | 0;
                                      k2 = +h[Z2 >> 3];
                                      h[Z2 >> 3] = v2 * k2;
                                      k2 = -(x2 * k2);
                                    }
                                    if ((A2 | 0) >= (y2 | 0))
                                      break;
                                    else
                                      u2 = k2;
                                  }
                                }
                                W2 = +O(+ +h[o2 >> 3]);
                                X2 = +O(+ +h[t2 >> 3]);
                              } while (W2 > (X2 + +O(+ +h[w2 >> 3])) * 1e-6);
                            }
                          } while (0);
                      } while ((y2 | 0) > 1);
                    }
                    if (E2) {
                      l2 = c[d2 >> 2] | 0;
                      m2 = c[T2 >> 2] | 0;
                      n2 = (S2 | 0) == 0;
                      o2 = 0;
                      do {
                        g2 = l2 + (o2 << 3) | 0;
                        q2 = +h[g2 >> 3];
                        j2 = o2;
                        o2 = o2 + 1 | 0;
                        if ((o2 | 0) < (S2 | 0)) {
                          e2 = j2;
                          f2 = o2;
                          k2 = q2;
                          do {
                            X2 = +h[l2 + (f2 << 3) >> 3];
                            Z2 = X2 > k2;
                            k2 = Z2 ? X2 : k2;
                            e2 = Z2 ? f2 : e2;
                            f2 = f2 + 1 | 0;
                          } while ((f2 | 0) < (S2 | 0));
                        } else {
                          e2 = j2;
                          k2 = q2;
                        }
                        h[l2 + (e2 << 3) >> 3] = q2;
                        h[g2 >> 3] = k2;
                        if (!n2) {
                          g2 = 0;
                          f2 = m2 + (($(e2, S2) | 0) << 3) | 0;
                          e2 = m2 + (($(j2, S2) | 0) << 3) | 0;
                          while (1) {
                            X2 = +h[f2 >> 3];
                            h[f2 >> 3] = +h[e2 >> 3];
                            h[e2 >> 3] = X2;
                            g2 = g2 + 1 | 0;
                            if ((g2 | 0) == (S2 | 0))
                              break;
                            else {
                              f2 = f2 + 8 | 0;
                              e2 = e2 + 8 | 0;
                            }
                          }
                        }
                      } while ((o2 | 0) != (E2 | 0));
                    }
                    of(H2) | 0;
                    c:
                      do {
                        if (!G2) {
                          g2 = c[b2 >> 2] | 0;
                          p2 = (I2 | 0) > (K2 | 0) ? K2 : I2;
                          d:
                            do {
                              if ((S2 | 0) > 0) {
                                m2 = c[d2 >> 2] | 0;
                                n2 = (p2 | 0) == 0;
                                e2 = 0;
                                o2 = c[T2 >> 2] | 0;
                                do {
                                  if (+h[m2 + (e2 << 3) >> 3] < 1e-16)
                                    break d;
                                  if (!n2) {
                                    f2 = 0;
                                    j2 = o2;
                                    l2 = g2;
                                    while (1) {
                                      h[l2 >> 3] = +h[j2 >> 3];
                                      f2 = f2 + 1 | 0;
                                      if ((f2 | 0) == (p2 | 0))
                                        break;
                                      else {
                                        j2 = j2 + 8 | 0;
                                        l2 = l2 + 8 | 0;
                                      }
                                    }
                                  }
                                  o2 = o2 + (p2 << 3) | 0;
                                  g2 = g2 + (p2 << 3) | 0;
                                  e2 = e2 + 1 | 0;
                                } while ((e2 | 0) < (S2 | 0));
                              } else
                                e2 = 0;
                            } while (0);
                          n2 = (p2 | 0) > 0 ? p2 : 0;
                          if ((e2 | 0) < (S2 | 0)) {
                            l2 = c[d2 >> 2] | 0;
                            m2 = (S2 | 0) > 0;
                            while (1) {
                              h[l2 + (e2 << 3) >> 3] = 0;
                              if (m2) {
                                f2 = 0;
                                j2 = g2;
                                while (1) {
                                  h[j2 >> 3] = 0;
                                  f2 = f2 + 1 | 0;
                                  if ((f2 | 0) >= (S2 | 0))
                                    break;
                                  else
                                    j2 = j2 + 8 | 0;
                                }
                              }
                              e2 = e2 + 1 | 0;
                              if ((e2 | 0) >= (S2 | 0))
                                break;
                              else
                                g2 = g2 + (n2 << 3) | 0;
                            }
                          }
                        } else {
                          w2 = c[F2 >> 2] | 0;
                          t2 = c[J2 >> 2] | 0;
                          do {
                            if (!((w2 | 0) < 1 | (t2 | 0) < 1)) {
                              if ((c[N2 >> 2] | 0) != (w2 | 0))
                                break;
                              if ((c[Q2 >> 2] | 0) != (w2 | 0))
                                break;
                              if ((c[L2 >> 2] | 0) != (w2 | 0))
                                break;
                              if ((c[R2 >> 2] | 0) != (t2 | 0))
                                break;
                              if ((c[M2 >> 2] | 0) != (w2 | 0))
                                break;
                              f2 = c[b2 >> 2] | 0;
                              e:
                                do {
                                  if ((w2 | 0) > 0) {
                                    p2 = c[d2 >> 2] | 0;
                                    s2 = (t2 | 0) == 0;
                                    r2 = (w2 | 0) == 0;
                                    e2 = 0;
                                    do {
                                      k2 = +h[p2 + (e2 << 3) >> 3];
                                      if (k2 < 1e-16)
                                        break e;
                                      q2 = 1 / +P(+ +O(+k2));
                                      m2 = $(e2, w2) | 0;
                                      if (!s2) {
                                        n2 = 0;
                                        o2 = f2;
                                        while (1) {
                                          if (r2)
                                            k2 = 0;
                                          else {
                                            g2 = 0;
                                            j2 = (c[T2 >> 2] | 0) + (m2 << 3) | 0;
                                            l2 = (c[a2 >> 2] | 0) + (n2 << 3) | 0;
                                            k2 = 0;
                                            while (1) {
                                              k2 = k2 + +h[j2 >> 3] * +h[l2 >> 3];
                                              g2 = g2 + 1 | 0;
                                              if ((g2 | 0) == (w2 | 0))
                                                break;
                                              else {
                                                j2 = j2 + 8 | 0;
                                                l2 = l2 + (t2 << 3) | 0;
                                              }
                                            }
                                          }
                                          h[o2 >> 3] = q2 * k2;
                                          n2 = n2 + 1 | 0;
                                          if ((n2 | 0) == (t2 | 0))
                                            break;
                                          else
                                            o2 = o2 + 8 | 0;
                                        }
                                      }
                                      f2 = f2 + (t2 << 3) | 0;
                                      e2 = e2 + 1 | 0;
                                    } while ((e2 | 0) < (w2 | 0));
                                  } else
                                    e2 = 0;
                                } while (0);
                              n2 = (t2 | 0) > 0 ? t2 : 0;
                              if ((e2 | 0) >= (w2 | 0))
                                break c;
                              l2 = c[d2 >> 2] | 0;
                              m2 = (t2 | 0) > 0;
                              g2 = f2;
                              while (1) {
                                h[l2 + (e2 << 3) >> 3] = 0;
                                if (m2) {
                                  f2 = 0;
                                  j2 = g2;
                                  while (1) {
                                    h[j2 >> 3] = 0;
                                    f2 = f2 + 1 | 0;
                                    if ((f2 | 0) >= (t2 | 0))
                                      break;
                                    else
                                      j2 = j2 + 8 | 0;
                                  }
                                }
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (w2 | 0))
                                  break c;
                                else
                                  g2 = g2 + (n2 << 3) | 0;
                              }
                            }
                          } while (0);
                          We(T2) | 0;
                          e2 = -1;
                          break a;
                        }
                      } while (0);
                    We(T2) | 0;
                    e2 = 0;
                    break a;
                  }
                } while (0);
                We(T2) | 0;
                e2 = -1;
                break;
              }
              We(T2) | 0;
              e2 = -1;
            } else
              e2 = -1;
          } while (0);
        i2 = U2;
        return e2 | 0;
      }
      function _e(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
        v2 = i2;
        i2 = i2 + 2e3 | 0;
        u2 = v2;
        b2 = c[a2 >> 2] | 0;
        t2 = c[a2 + 4 >> 2] | 0;
        a:
          do {
            if ((t2 | 0) <= 500) {
              switch (t2 | 0) {
                case 0: {
                  b2 = 0;
                  break a;
                }
                case 1: {
                  h[b2 >> 3] = 1 / +h[b2 >> 3];
                  break a;
                }
                default: {
                }
              }
              if ((t2 | 0) > 0) {
                a2 = 0;
                do {
                  c[u2 + (a2 << 2) >> 2] = a2;
                  a2 = a2 + 1 | 0;
                } while ((a2 | 0) < (t2 | 0));
              }
              s2 = b2 + (t2 + -1 << 3) | 0;
              if ((t2 | 0) > 0) {
                m2 = (t2 | 0) == 0;
                p2 = (t2 | 0) == 1;
                o2 = (t2 | 0) == 0;
                n2 = (t2 | 0) == 1;
                q2 = s2;
                a2 = 0;
                r2 = 0;
                while (1) {
                  l2 = b2 + (($(r2, t2) | 0) << 3) | 0;
                  if ((r2 | 0) < (t2 | 0)) {
                    e2 = r2;
                    f2 = 0;
                    d2 = l2;
                    while (1) {
                      w2 = +O(+ +h[d2 >> 3]);
                      k2 = f2 < w2;
                      a2 = k2 ? e2 : a2;
                      f2 = k2 ? w2 : f2;
                      e2 = e2 + 1 | 0;
                      if ((e2 | 0) >= (t2 | 0))
                        break;
                      else
                        d2 = d2 + (t2 << 3) | 0;
                    }
                  } else
                    f2 = 0;
                  if (f2 <= 1e-10) {
                    b2 = 0;
                    break a;
                  }
                  g2 = u2 + (a2 << 2) | 0;
                  j2 = c[g2 >> 2] | 0;
                  k2 = u2 + (r2 << 2) | 0;
                  c[g2 >> 2] = c[k2 >> 2];
                  c[k2 >> 2] = j2;
                  if (!m2) {
                    d2 = 0;
                    e2 = b2 + (($(a2, t2) | 0) << 3) | 0;
                    g2 = l2;
                    while (1) {
                      w2 = +h[e2 >> 3];
                      h[e2 >> 3] = +h[g2 >> 3];
                      h[g2 >> 3] = w2;
                      d2 = d2 + 1 | 0;
                      if ((d2 | 0) == (t2 | 0))
                        break;
                      else {
                        e2 = e2 + 8 | 0;
                        g2 = g2 + 8 | 0;
                      }
                    }
                  }
                  f2 = +h[l2 >> 3];
                  if (!p2) {
                    d2 = 1;
                    e2 = l2;
                    do {
                      k2 = e2;
                      e2 = e2 + 8 | 0;
                      h[k2 >> 3] = +h[e2 >> 3] / f2;
                      d2 = d2 + 1 | 0;
                    } while ((d2 | 0) != (t2 | 0));
                  }
                  h[q2 >> 3] = 1 / f2;
                  if (!o2) {
                    g2 = 0;
                    j2 = s2;
                    while (1) {
                      if ((g2 | 0) != (r2 | 0)) {
                        d2 = b2 + (($(g2, t2) | 0) << 3) | 0;
                        f2 = +h[d2 >> 3];
                        if (!n2) {
                          k2 = 1;
                          e2 = l2;
                          while (1) {
                            x2 = d2;
                            d2 = d2 + 8 | 0;
                            h[x2 >> 3] = +h[d2 >> 3] - f2 * +h[e2 >> 3];
                            k2 = k2 + 1 | 0;
                            if ((k2 | 0) == (t2 | 0))
                              break;
                            else
                              e2 = e2 + 8 | 0;
                          }
                        }
                        h[j2 >> 3] = -(f2 * +h[q2 >> 3]);
                      }
                      g2 = g2 + 1 | 0;
                      if ((g2 | 0) == (t2 | 0))
                        break;
                      else
                        j2 = j2 + (t2 << 3) | 0;
                    }
                  }
                  r2 = r2 + 1 | 0;
                  if ((r2 | 0) >= (t2 | 0))
                    break;
                  else
                    q2 = q2 + (t2 << 3) | 0;
                }
              }
              if ((t2 | 0) > 0) {
                g2 = (t2 | 0) > 0;
                j2 = 0;
                do {
                  a2 = u2 + (j2 << 2) | 0;
                  b:
                    do {
                      if ((j2 | 0) < (t2 | 0)) {
                        d2 = j2;
                        do {
                          if ((c[a2 >> 2] | 0) == (j2 | 0))
                            break b;
                          d2 = d2 + 1 | 0;
                          a2 = u2 + (d2 << 2) | 0;
                        } while ((d2 | 0) < (t2 | 0));
                      } else
                        d2 = j2;
                    } while (0);
                  c[a2 >> 2] = c[u2 + (j2 << 2) >> 2];
                  if (g2) {
                    e2 = 0;
                    a2 = b2 + (d2 << 3) | 0;
                    d2 = b2 + (j2 << 3) | 0;
                    while (1) {
                      w2 = +h[a2 >> 3];
                      h[a2 >> 3] = +h[d2 >> 3];
                      h[d2 >> 3] = w2;
                      e2 = e2 + 1 | 0;
                      if ((e2 | 0) >= (t2 | 0))
                        break;
                      else {
                        a2 = a2 + (t2 << 3) | 0;
                        d2 = d2 + (t2 << 3) | 0;
                      }
                    }
                  }
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) < (t2 | 0));
              }
            } else
              b2 = 0;
          } while (0);
        i2 = v2;
        return ((b2 | 0) == 0) << 31 >> 31 | 0;
      }
      function $e(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0;
        i3 = c[a2 + 4 >> 2] | 0;
        if ((i3 | 0) == (c[b2 + 8 >> 2] | 0) ? (k2 = c[a2 + 8 >> 2] | 0, (k2 | 0) == (c[b2 + 4 >> 2] | 0)) : 0) {
          l2 = (k2 | 0) > 0 ? k2 : 0;
          if ((i3 | 0) > 0) {
            j2 = (k2 | 0) > 0;
            e2 = c[a2 >> 2] | 0;
            g2 = 0;
            while (1) {
              if (j2) {
                a2 = 0;
                d2 = (c[b2 >> 2] | 0) + (g2 << 3) | 0;
                f2 = e2;
                while (1) {
                  h[f2 >> 3] = +h[d2 >> 3];
                  a2 = a2 + 1 | 0;
                  if ((a2 | 0) >= (k2 | 0))
                    break;
                  else {
                    d2 = d2 + (i3 << 3) | 0;
                    f2 = f2 + 8 | 0;
                  }
                }
              }
              g2 = g2 + 1 | 0;
              if ((g2 | 0) >= (i3 | 0)) {
                a2 = 0;
                break;
              } else
                e2 = e2 + (l2 << 3) | 0;
            }
          } else
            a2 = 0;
        } else
          a2 = -1;
        return a2 | 0;
      }
      function af(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, i3 = 0;
        f2 = +(b2 | 0) / +(c[a2 >> 2] | 0);
        g2 = +(d2 | 0) / +(c[a2 + 4 >> 2] | 0);
        c[e2 >> 2] = b2;
        c[e2 + 4 >> 2] = d2;
        b2 = 0;
        do {
          h[e2 + 8 + (b2 << 3) >> 3] = f2 * +h[a2 + 8 + (b2 << 3) >> 3];
          h[e2 + 40 + (b2 << 3) >> 3] = g2 * +h[a2 + 40 + (b2 << 3) >> 3];
          h[e2 + 72 + (b2 << 3) >> 3] = +h[a2 + 72 + (b2 << 3) >> 3];
          b2 = b2 + 1 | 0;
        } while ((b2 | 0) != 4);
        b2 = c[a2 + 176 >> 2] | 0;
        switch (b2 | 0) {
          case 4: {
            h[e2 + 104 >> 3] = +h[a2 + 104 >> 3];
            h[e2 + 112 >> 3] = +h[a2 + 112 >> 3];
            h[e2 + 120 >> 3] = +h[a2 + 120 >> 3];
            h[e2 + 128 >> 3] = +h[a2 + 128 >> 3];
            h[e2 + 136 >> 3] = f2 * +h[a2 + 136 >> 3];
            h[e2 + 144 >> 3] = g2 * +h[a2 + 144 >> 3];
            h[e2 + 152 >> 3] = f2 * +h[a2 + 152 >> 3];
            h[e2 + 160 >> 3] = g2 * +h[a2 + 160 >> 3];
            h[e2 + 168 >> 3] = +h[a2 + 168 >> 3];
            i3 = 8;
            break;
          }
          case 3: {
            h[e2 + 104 >> 3] = f2 * +h[a2 + 104 >> 3];
            h[e2 + 112 >> 3] = g2 * +h[a2 + 112 >> 3];
            h[e2 + 120 >> 3] = +h[a2 + 120 >> 3];
            h[e2 + 128 >> 3] = +h[a2 + 128 >> 3];
            h[e2 + 136 >> 3] = +h[a2 + 136 >> 3] / (f2 * g2);
            h[e2 + 144 >> 3] = +h[a2 + 144 >> 3] / (g2 * (f2 * f2 * g2));
            i3 = 8;
            break;
          }
          case 2: {
            h[e2 + 104 >> 3] = f2 * +h[a2 + 104 >> 3];
            h[e2 + 112 >> 3] = g2 * +h[a2 + 112 >> 3];
            h[e2 + 120 >> 3] = +h[a2 + 120 >> 3];
            h[e2 + 128 >> 3] = +h[a2 + 128 >> 3] / (f2 * g2);
            h[e2 + 136 >> 3] = +h[a2 + 136 >> 3] / (g2 * (f2 * f2 * g2));
            i3 = 8;
            break;
          }
          case 1: {
            h[e2 + 104 >> 3] = f2 * +h[a2 + 104 >> 3];
            h[e2 + 112 >> 3] = g2 * +h[a2 + 112 >> 3];
            h[e2 + 120 >> 3] = +h[a2 + 120 >> 3];
            h[e2 + 128 >> 3] = +h[a2 + 128 >> 3] / (f2 * g2);
            i3 = 8;
            break;
          }
          default:
            b2 = -1;
        }
        if ((i3 | 0) == 8) {
          c[e2 + 176 >> 2] = b2;
          b2 = 0;
        }
        return b2 | 0;
      }
      function bf(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
        f2 = i2;
        i2 = i2 + 96 | 0;
        e2 = f2;
        if (!(+h[a2 + 88 >> 3] >= 0)) {
          d2 = 0;
          do {
            h[e2 + (d2 << 5) >> 3] = -+h[a2 + (d2 << 5) >> 3];
            h[e2 + (d2 << 5) + 8 >> 3] = -+h[a2 + (d2 << 5) + 8 >> 3];
            h[e2 + (d2 << 5) + 16 >> 3] = -+h[a2 + (d2 << 5) + 16 >> 3];
            h[e2 + (d2 << 5) + 24 >> 3] = -+h[a2 + (d2 << 5) + 24 >> 3];
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != 3);
        } else {
          d2 = 0;
          do {
            h[e2 + (d2 << 5) >> 3] = +h[a2 + (d2 << 5) >> 3];
            h[e2 + (d2 << 5) + 8 >> 3] = +h[a2 + (d2 << 5) + 8 >> 3];
            h[e2 + (d2 << 5) + 16 >> 3] = +h[a2 + (d2 << 5) + 16 >> 3];
            h[e2 + (d2 << 5) + 24 >> 3] = +h[a2 + (d2 << 5) + 24 >> 3];
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != 3);
        }
        h[b2 >> 3] = 0;
        h[b2 + 8 >> 3] = 0;
        h[b2 + 16 >> 3] = 0;
        h[b2 + 24 >> 3] = 0;
        h[b2 + 32 >> 3] = 0;
        h[b2 + 40 >> 3] = 0;
        h[b2 + 48 >> 3] = 0;
        h[b2 + 56 >> 3] = 0;
        h[b2 + 64 >> 3] = 0;
        h[b2 + 72 >> 3] = 0;
        h[b2 + 80 >> 3] = 0;
        h[b2 + 88 >> 3] = 0;
        g2 = +h[e2 + 64 >> 3];
        o2 = +h[e2 + 72 >> 3];
        p2 = +h[e2 + 80 >> 3];
        x2 = +P(+(g2 * g2 + o2 * o2 + p2 * p2));
        a2 = b2 + 80 | 0;
        h[a2 >> 3] = x2;
        x2 = g2 / x2;
        v2 = c2 + 64 | 0;
        h[v2 >> 3] = x2;
        o2 = o2 / +h[a2 >> 3];
        t2 = c2 + 72 | 0;
        h[t2 >> 3] = o2;
        p2 = p2 / +h[a2 >> 3];
        q2 = c2 + 80 | 0;
        h[q2 >> 3] = p2;
        n2 = c2 + 88 | 0;
        h[n2 >> 3] = +h[e2 + 88 >> 3] / +h[a2 >> 3];
        g2 = +h[e2 + 32 >> 3];
        k2 = +h[e2 + 40 >> 3];
        s2 = +h[e2 + 48 >> 3];
        p2 = x2 * g2 + o2 * k2 + p2 * s2;
        m2 = b2 + 48 | 0;
        h[m2 >> 3] = p2;
        g2 = g2 - p2 * +h[v2 >> 3];
        k2 = k2 - p2 * +h[t2 >> 3];
        p2 = s2 - p2 * +h[q2 >> 3];
        s2 = +P(+(g2 * g2 + k2 * k2 + p2 * p2));
        l2 = b2 + 40 | 0;
        h[l2 >> 3] = s2;
        w2 = c2 + 32 | 0;
        h[w2 >> 3] = g2 / s2;
        u2 = c2 + 40 | 0;
        h[u2 >> 3] = k2 / +h[l2 >> 3];
        r2 = c2 + 48 | 0;
        h[r2 >> 3] = p2 / +h[l2 >> 3];
        p2 = +h[e2 >> 3];
        k2 = +h[e2 + 8 >> 3];
        s2 = +h[e2 + 16 >> 3];
        g2 = +h[v2 >> 3] * p2 + +h[t2 >> 3] * k2 + +h[q2 >> 3] * s2;
        d2 = b2 + 16 | 0;
        h[d2 >> 3] = g2;
        o2 = +h[w2 >> 3] * p2 + +h[u2 >> 3] * k2 + +h[r2 >> 3] * s2;
        j2 = b2 + 8 | 0;
        h[j2 >> 3] = o2;
        p2 = p2 - o2 * +h[w2 >> 3] - g2 * +h[v2 >> 3];
        k2 = k2 - o2 * +h[u2 >> 3] - g2 * +h[t2 >> 3];
        g2 = s2 - o2 * +h[r2 >> 3] - g2 * +h[q2 >> 3];
        o2 = +P(+(p2 * p2 + k2 * k2 + g2 * g2));
        h[b2 >> 3] = o2;
        h[c2 >> 3] = p2 / o2;
        h[c2 + 8 >> 3] = k2 / +h[b2 >> 3];
        h[c2 + 16 >> 3] = g2 / +h[b2 >> 3];
        g2 = +h[n2 >> 3];
        k2 = (+h[e2 + 56 >> 3] - +h[m2 >> 3] * g2) / +h[l2 >> 3];
        h[c2 + 56 >> 3] = k2;
        h[c2 + 24 >> 3] = (+h[e2 + 24 >> 3] - k2 * +h[j2 >> 3] - +h[d2 >> 3] * g2) / +h[b2 >> 3];
        d2 = 0;
        do {
          w2 = b2 + (d2 << 5) | 0;
          h[w2 >> 3] = +h[w2 >> 3] / +h[a2 >> 3];
          w2 = b2 + (d2 << 5) + 8 | 0;
          h[w2 >> 3] = +h[w2 >> 3] / +h[a2 >> 3];
          w2 = b2 + (d2 << 5) + 16 | 0;
          h[w2 >> 3] = +h[w2 >> 3] / +h[a2 >> 3];
          d2 = d2 + 1 | 0;
        } while ((d2 | 0) != 3);
        i2 = f2;
        return 0;
      }
      function cf(a2, b2, c2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = +b2;
        c2 = +c2;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
        switch (f2 | 0) {
          case 4: {
            q2 = +h[a2 >> 3];
            r2 = +h[a2 + 8 >> 3];
            s2 = +h[a2 + 16 >> 3];
            t2 = +h[a2 + 24 >> 3];
            y2 = +h[a2 + 32 >> 3];
            v2 = +h[a2 + 40 >> 3];
            w2 = +h[a2 + 48 >> 3];
            x2 = +h[a2 + 56 >> 3];
            u2 = +h[a2 + 64 >> 3];
            p2 = (b2 - w2) / y2;
            j2 = (c2 - x2) / v2;
            c2 = p2 * p2;
            i3 = j2 * j2;
            k2 = s2 * 2;
            l2 = t2 * 6;
            m2 = t2 * 2;
            n2 = s2 * 6;
            a:
              do {
                if (i3 != 0 | c2 != 0) {
                  f2 = 1;
                  g2 = p2;
                  b2 = j2;
                  while (1) {
                    C2 = i3 + c2;
                    B2 = q2 * C2 + 1 + C2 * (r2 * C2);
                    z2 = c2 * 3;
                    A2 = i3 * z2;
                    g2 = g2 - (t2 * (C2 + c2 * 2) + (b2 * (k2 * g2) + g2 * B2) - p2) / (l2 * g2 + (k2 * b2 + (q2 * (i3 + z2) + 1 + r2 * (i3 * i3 + (c2 * (c2 * 5) + A2)))));
                    z2 = m2 * g2;
                    b2 = b2 - (s2 * (i3 * 2 + C2) + b2 * B2 + b2 * z2 - j2) / (n2 * b2 + (q2 * (c2 + i3 * 3) + 1 + r2 * (i3 * (i3 * 5) + (c2 * c2 + A2))) + z2);
                    if ((f2 | 0) == 4)
                      break a;
                    c2 = g2 * g2;
                    i3 = b2 * b2;
                    if (!(i3 != 0 | c2 != 0)) {
                      g2 = 0;
                      b2 = 0;
                      break;
                    } else
                      f2 = f2 + 1 | 0;
                  }
                } else {
                  g2 = 0;
                  b2 = 0;
                }
              } while (0);
            h[d2 >> 3] = w2 + y2 * g2 / u2;
            h[e2 >> 3] = x2 + v2 * b2 / u2;
            f2 = 0;
            break;
          }
          case 3: {
            p2 = +h[a2 >> 3];
            g2 = (b2 - p2) / +h[a2 + 24 >> 3];
            o2 = a2 + 8 | 0;
            b2 = c2 - +h[o2 >> 3];
            j2 = +h[a2 + 32 >> 3] / 1e8;
            k2 = +h[a2 + 40 >> 3] / 1e8 / 1e5;
            c2 = g2 * g2 + b2 * b2;
            l2 = +P(+c2);
            m2 = j2 * 3;
            n2 = k2 * 5;
            b:
              do {
                if (l2 != 0) {
                  f2 = 1;
                  i3 = l2;
                  while (1) {
                    C2 = i3 - (i3 * (1 - j2 * c2 - c2 * (k2 * c2)) - l2) / (1 - m2 * c2 - c2 * (n2 * c2));
                    g2 = g2 * C2 / i3;
                    b2 = b2 * C2 / i3;
                    if ((f2 | 0) == 3)
                      break b;
                    c2 = g2 * g2 + b2 * b2;
                    i3 = +P(+c2);
                    if (!(i3 != 0)) {
                      g2 = 0;
                      b2 = 0;
                      break;
                    } else
                      f2 = f2 + 1 | 0;
                  }
                } else {
                  g2 = 0;
                  b2 = 0;
                }
              } while (0);
            f2 = a2 + 16 | 0;
            h[d2 >> 3] = g2 / +h[f2 >> 3] + p2;
            h[e2 >> 3] = b2 / +h[f2 >> 3] + +h[o2 >> 3];
            f2 = 0;
            break;
          }
          case 2: {
            p2 = +h[a2 >> 3];
            g2 = b2 - p2;
            o2 = a2 + 8 | 0;
            b2 = c2 - +h[o2 >> 3];
            j2 = +h[a2 + 24 >> 3] / 1e8;
            k2 = +h[a2 + 32 >> 3] / 1e8 / 1e5;
            c2 = g2 * g2 + b2 * b2;
            l2 = +P(+c2);
            m2 = j2 * 3;
            n2 = k2 * 5;
            c:
              do {
                if (l2 != 0) {
                  f2 = 1;
                  i3 = l2;
                  while (1) {
                    C2 = i3 - (i3 * (1 - j2 * c2 - c2 * (k2 * c2)) - l2) / (1 - m2 * c2 - c2 * (n2 * c2));
                    g2 = g2 * C2 / i3;
                    b2 = b2 * C2 / i3;
                    if ((f2 | 0) == 3)
                      break c;
                    c2 = g2 * g2 + b2 * b2;
                    i3 = +P(+c2);
                    if (!(i3 != 0)) {
                      g2 = 0;
                      b2 = 0;
                      break;
                    } else
                      f2 = f2 + 1 | 0;
                  }
                } else {
                  g2 = 0;
                  b2 = 0;
                }
              } while (0);
            f2 = a2 + 16 | 0;
            h[d2 >> 3] = g2 / +h[f2 >> 3] + p2;
            h[e2 >> 3] = b2 / +h[f2 >> 3] + +h[o2 >> 3];
            f2 = 0;
            break;
          }
          case 1: {
            m2 = +h[a2 >> 3];
            g2 = b2 - m2;
            o2 = a2 + 8 | 0;
            b2 = c2 - +h[o2 >> 3];
            j2 = +h[a2 + 24 >> 3] / 1e8;
            c2 = g2 * g2 + b2 * b2;
            k2 = +P(+c2);
            l2 = j2 * 3;
            d:
              do {
                if (k2 != 0) {
                  f2 = 1;
                  i3 = k2;
                  while (1) {
                    C2 = i3 - (i3 * (1 - j2 * c2) - k2) / (1 - l2 * c2);
                    g2 = g2 * C2 / i3;
                    b2 = b2 * C2 / i3;
                    if ((f2 | 0) == 3)
                      break d;
                    c2 = g2 * g2 + b2 * b2;
                    i3 = +P(+c2);
                    if (!(i3 != 0)) {
                      g2 = 0;
                      b2 = 0;
                      break;
                    } else
                      f2 = f2 + 1 | 0;
                  }
                } else {
                  g2 = 0;
                  b2 = 0;
                }
              } while (0);
            f2 = a2 + 16 | 0;
            h[d2 >> 3] = g2 / +h[f2 >> 3] + m2;
            h[e2 >> 3] = b2 / +h[f2 >> 3] + +h[o2 >> 3];
            f2 = 0;
            break;
          }
          default:
            f2 = -1;
        }
        return f2 | 0;
      }
      function df(a2, b2, c2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = +b2;
        c2 = +c2;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
        switch (f2 | 0) {
          case 4: {
            j2 = +h[a2 + 16 >> 3];
            k2 = +h[a2 + 24 >> 3];
            n2 = +h[a2 + 32 >> 3];
            l2 = +h[a2 + 40 >> 3];
            o2 = +h[a2 + 48 >> 3];
            m2 = +h[a2 + 56 >> 3];
            i3 = +h[a2 + 64 >> 3];
            b2 = (b2 - o2) * i3 / n2;
            i3 = (c2 - m2) * i3 / l2;
            g2 = b2 * b2 + i3 * i3;
            c2 = +h[a2 >> 3] * g2 + 1 + g2 * (+h[a2 + 8 >> 3] * g2);
            h[d2 >> 3] = o2 + n2 * (k2 * (b2 * (b2 * 2) + g2) + (j2 * 2 * b2 * i3 + b2 * c2));
            h[e2 >> 3] = m2 + l2 * (k2 * 2 * b2 * i3 + (j2 * (g2 + i3 * (i3 * 2)) + i3 * c2));
            f2 = 0;
            break;
          }
          case 3: {
            i3 = +h[a2 >> 3];
            o2 = +h[a2 + 16 >> 3];
            g2 = (b2 - i3) * o2;
            f2 = a2 + 8 | 0;
            b2 = o2 * (c2 - +h[f2 >> 3]);
            if (g2 == 0 & b2 == 0) {
              h[d2 >> 3] = i3;
              b2 = +h[f2 >> 3];
            } else {
              o2 = g2 * g2 + b2 * b2;
              o2 = 1 - o2 * (+h[a2 + 32 >> 3] / 1e8) - o2 * (o2 * (+h[a2 + 40 >> 3] / 1e8 / 1e5));
              h[d2 >> 3] = i3 + +h[a2 + 24 >> 3] * (g2 * o2);
              b2 = +h[f2 >> 3] + b2 * o2;
            }
            h[e2 >> 3] = b2;
            f2 = 0;
            break;
          }
          case 2: {
            i3 = +h[a2 >> 3];
            o2 = +h[a2 + 16 >> 3];
            g2 = (b2 - i3) * o2;
            f2 = a2 + 8 | 0;
            b2 = o2 * (c2 - +h[f2 >> 3]);
            if (g2 == 0 & b2 == 0) {
              h[d2 >> 3] = i3;
              b2 = +h[f2 >> 3];
            } else {
              o2 = g2 * g2 + b2 * b2;
              o2 = 1 - o2 * (+h[a2 + 24 >> 3] / 1e8) - o2 * (o2 * (+h[a2 + 32 >> 3] / 1e8 / 1e5));
              h[d2 >> 3] = i3 + g2 * o2;
              b2 = +h[f2 >> 3] + b2 * o2;
            }
            h[e2 >> 3] = b2;
            f2 = 0;
            break;
          }
          case 1: {
            i3 = +h[a2 >> 3];
            o2 = +h[a2 + 16 >> 3];
            g2 = (b2 - i3) * o2;
            f2 = a2 + 8 | 0;
            b2 = o2 * (c2 - +h[f2 >> 3]);
            if (g2 == 0 & b2 == 0) {
              h[d2 >> 3] = i3;
              b2 = +h[f2 >> 3];
            } else {
              o2 = 1 - (g2 * g2 + b2 * b2) * (+h[a2 + 24 >> 3] / 1e8);
              h[d2 >> 3] = i3 + g2 * o2;
              b2 = +h[f2 >> 3] + b2 * o2;
            }
            h[e2 >> 3] = b2;
            f2 = 0;
            break;
          }
          default:
            f2 = -1;
        }
        return f2 | 0;
      }
      function ef(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
        s2 = i2;
        i2 = i2 + 256 | 0;
        n2 = s2 + 232 | 0;
        m2 = s2 + 224 | 0;
        l2 = s2 + 216 | 0;
        k2 = s2 + 208 | 0;
        j2 = s2 + 200 | 0;
        g2 = s2 + 192 | 0;
        f2 = s2 + 184 | 0;
        p2 = s2 + 240 | 0;
        q2 = s2;
        do {
          if ((a2 | 0) != 0 & (b2 | 0) > 0 & (d2 | 0) != 0) {
            r2 = _i(a2, 4854) | 0;
            if (!r2) {
              r2 = qi() | 0;
              c[f2 >> 2] = c[r2 >> 2];
              c[f2 + 4 >> 2] = a2;
              Me(3, 4857, f2);
              a2 = ri(c[r2 >> 2] | 0) | 0;
              c[g2 >> 2] = 5367;
              c[g2 + 4 >> 2] = a2;
              Me(3, 5361, g2);
              a2 = -1;
              break;
            }
            dj(r2, 0, 2) | 0;
            a:
              do {
                if (!(Xi(r2) | 0)) {
                  g2 = gj(r2) | 0;
                  jj(r2);
                  a2 = 0;
                  do {
                    if ((a2 | 0) >= 4) {
                      o2 = 9;
                      break;
                    }
                    f2 = c[2012 + (a2 << 3) + 4 >> 2] | 0;
                    a2 = a2 + 1 | 0;
                  } while (((g2 | 0) % (f2 | 0) | 0 | 0) != 0);
                  do {
                    if ((o2 | 0) == 9)
                      if ((a2 | 0) == 4) {
                        Me(3, 4971, l2);
                        a2 = -1;
                        break a;
                      } else {
                        f2 = c[2012 + (0 << 3) + 4 >> 2] | 0;
                        a2 = 0;
                        break;
                      }
                  } while (0);
                  if ((aj(q2, f2, 1, r2) | 0) != 1) {
                    a2 = qi() | 0;
                    c[m2 >> 2] = c[a2 >> 2];
                    Me(3, 5051, m2);
                    a2 = ri(c[a2 >> 2] | 0) | 0;
                    c[n2 >> 2] = 5367;
                    c[n2 + 4 >> 2] = a2;
                    Me(3, 5361, n2);
                    a2 = -1;
                    break;
                  }
                  l2 = q2 + 176 | 0;
                  c[l2 >> 2] = a2;
                  ff(q2);
                  m2 = (a2 | 0) == 1;
                  n2 = q2 + 120 | 0;
                  if (m2) {
                    t2 = +h[n2 >> 3];
                    k2 = q2 + 128 | 0;
                    h[n2 >> 3] = +h[k2 >> 3];
                    h[k2 >> 3] = t2;
                  } else
                    k2 = q2 + 128 | 0;
                  ik(d2 | 0, q2 | 0, 184) | 0;
                  c[p2 >> 2] = e2;
                  f2 = d2 + 176 | 0;
                  if ((b2 | 0) > 1) {
                    j2 = 1;
                    while (1) {
                      e2 = (c[p2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      g2 = c[e2 >> 2] | 0;
                      c[p2 >> 2] = e2 + 4;
                      c[g2 + 176 >> 2] = c[f2 >> 2];
                      if ((aj(q2, c[2012 + ((c[f2 >> 2] | 0) + -1 << 3) + 4 >> 2] | 0, 1, r2) | 0) != 1) {
                        a2 = -1;
                        break a;
                      }
                      c[l2 >> 2] = a2;
                      ff(q2);
                      if (m2) {
                        t2 = +h[n2 >> 3];
                        h[n2 >> 3] = +h[k2 >> 3];
                        h[k2 >> 3] = t2;
                      }
                      ik(g2 | 0, q2 | 0, 184) | 0;
                      j2 = j2 + 1 | 0;
                      if ((j2 | 0) >= (b2 | 0)) {
                        a2 = 0;
                        break;
                      }
                    }
                  } else
                    a2 = 0;
                } else {
                  a2 = qi() | 0;
                  c[j2 >> 2] = c[a2 >> 2];
                  Me(3, 4926, j2);
                  a2 = ri(c[a2 >> 2] | 0) | 0;
                  c[k2 >> 2] = 5367;
                  c[k2 + 4 >> 2] = a2;
                  Me(3, 5361, k2);
                  a2 = -1;
                }
              } while (0);
            Wi(r2) | 0;
          } else
            a2 = -1;
        } while (0);
        i2 = s2;
        return a2 | 0;
      }
      function ff(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0;
        g2 = i2;
        i2 = i2 + 192 | 0;
        f2 = g2;
        hf(a2, f2);
        hf(a2 + 4 | 0, f2 + 4 | 0);
        b2 = 0;
        do {
          gf(a2 + 8 + (b2 << 5) | 0, f2 + 8 + (b2 << 5) | 0);
          gf(a2 + 8 + (b2 << 5) + 8 | 0, f2 + 8 + (b2 << 5) + 8 | 0);
          gf(a2 + 8 + (b2 << 5) + 16 | 0, f2 + 8 + (b2 << 5) + 16 | 0);
          gf(a2 + 8 + (b2 << 5) + 24 | 0, f2 + 8 + (b2 << 5) + 24 | 0);
          b2 = b2 + 1 | 0;
        } while ((b2 | 0) != 3);
        d2 = a2 + 176 | 0;
        e2 = 0;
        do {
          gf(a2 + 104 + (e2 << 3) | 0, f2 + 104 + (e2 << 3) | 0);
          e2 = e2 + 1 | 0;
          b2 = c[d2 >> 2] | 0;
        } while ((e2 | 0) < (c[2012 + (b2 + -1 << 3) >> 2] | 0));
        c[f2 + 176 >> 2] = b2;
        ik(a2 | 0, f2 | 0, 184) | 0;
        i2 = g2;
        return;
      }
      function gf(b2, c2) {
        b2 = b2 | 0;
        c2 = c2 | 0;
        a[c2 >> 0] = a[b2 + 7 >> 0] | 0;
        a[c2 + 1 >> 0] = a[b2 + 6 >> 0] | 0;
        a[c2 + 2 >> 0] = a[b2 + 5 >> 0] | 0;
        a[c2 + 3 >> 0] = a[b2 + 4 >> 0] | 0;
        a[c2 + 4 >> 0] = a[b2 + 3 >> 0] | 0;
        a[c2 + 5 >> 0] = a[b2 + 2 >> 0] | 0;
        a[c2 + 6 >> 0] = a[b2 + 1 >> 0] | 0;
        a[c2 + 7 >> 0] = a[b2 >> 0] | 0;
        return;
      }
      function hf(b2, c2) {
        b2 = b2 | 0;
        c2 = c2 | 0;
        a[c2 >> 0] = a[b2 + 3 >> 0] | 0;
        a[c2 + 1 >> 0] = a[b2 + 2 >> 0] | 0;
        a[c2 + 2 >> 0] = a[b2 + 1 >> 0] | 0;
        a[c2 + 3 >> 0] = a[b2 >> 0] | 0;
        return;
      }
      function jf(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0;
        x2 = i2;
        i2 = i2 + 64 | 0;
        t2 = x2 + 24 | 0;
        u2 = x2 + 16 | 0;
        v2 = x2 + 8 | 0;
        w2 = x2;
        q2 = Uj(208) | 0;
        if (!q2) {
          Me(3, 5472, x2 + 32 | 0);
          rb(1);
        }
        ik(q2 | 0, a2 | 0, 184) | 0;
        s2 = b2 << 1;
        r2 = (c[a2 >> 2] | 0) + s2 | 0;
        c[q2 + 192 >> 2] = r2;
        s2 = (c[a2 + 4 >> 2] | 0) + s2 | 0;
        c[q2 + 196 >> 2] = s2;
        c[q2 + 200 >> 2] = b2;
        c[q2 + 204 >> 2] = b2;
        d2 = $(r2 << 3, s2) | 0;
        e2 = Uj(d2) | 0;
        c[q2 + 184 >> 2] = e2;
        if (!e2) {
          Me(3, 5472, x2 + 40 | 0);
          rb(1);
        }
        d2 = Uj(d2) | 0;
        c[q2 + 188 >> 2] = d2;
        if (!d2) {
          Me(3, 5472, x2 + 48 | 0);
          rb(1);
        }
        p2 = a2 + 104 | 0;
        m2 = c[a2 + 176 >> 2] | 0;
        n2 = (r2 | 0) > 0 ? r2 << 1 : 0;
        if ((s2 | 0) > 0) {
          o2 = (r2 | 0) > 0;
          l2 = 0;
          while (1) {
            f2 = +(l2 - b2 | 0);
            if (o2) {
              a2 = 0;
              j2 = e2;
              k2 = d2;
              while (1) {
                y2 = +(a2 - b2 | 0);
                df(p2, y2, f2, v2, w2, m2) | 0;
                g[j2 >> 2] = +h[v2 >> 3];
                g[j2 + 4 >> 2] = +h[w2 >> 3];
                cf(p2, y2, f2, t2, u2, m2) | 0;
                g[k2 >> 2] = +h[t2 >> 3];
                g[k2 + 4 >> 2] = +h[u2 >> 3];
                a2 = a2 + 1 | 0;
                if ((a2 | 0) >= (r2 | 0))
                  break;
                else {
                  j2 = j2 + 8 | 0;
                  k2 = k2 + 8 | 0;
                }
              }
            }
            d2 = d2 + (n2 << 2) | 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (s2 | 0))
              break;
            else
              e2 = e2 + (n2 << 2) | 0;
          }
        }
        i2 = x2;
        return q2 | 0;
      }
      function kf(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        if ((a2 | 0) != 0 ? (b2 = c[a2 >> 2] | 0, (b2 | 0) != 0) : 0) {
          Vj(c[b2 + 184 >> 2] | 0);
          Vj(c[(c[a2 >> 2] | 0) + 188 >> 2] | 0);
          Vj(c[a2 >> 2] | 0);
          c[a2 >> 2] = 0;
          b2 = 0;
        } else
          b2 = -1;
        return b2 | 0;
      }
      function lf(a2, b2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = +b2;
        d2 = +d2;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, h2 = 0, i3 = 0;
        h2 = (c[a2 + 16 >> 2] | 0) + ~~(b2 + 0.5) | 0;
        g2 = (c[a2 + 20 >> 2] | 0) + ~~(d2 + 0.5) | 0;
        if (((h2 | 0) >= 0 ? (i3 = c[a2 + 8 >> 2] | 0, !((g2 | 0) < 0 | (h2 | 0) >= (i3 | 0))) : 0) ? (g2 | 0) < (c[a2 + 12 >> 2] | 0) : 0) {
          a2 = c[a2 >> 2] | 0;
          g2 = ($(i3, g2) | 0) + h2 << 1;
          c[e2 >> 2] = c[a2 + (g2 << 2) >> 2];
          c[f2 >> 2] = c[a2 + ((g2 | 1) << 2) >> 2];
          g2 = 0;
        } else
          g2 = -1;
        return g2 | 0;
      }
      function mf(a2, b2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = +b2;
        d2 = +d2;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, h2 = 0, i3 = 0;
        h2 = (c[a2 + 16 >> 2] | 0) + ~~(b2 + 0.5) | 0;
        g2 = (c[a2 + 20 >> 2] | 0) + ~~(d2 + 0.5) | 0;
        if (((h2 | 0) >= 0 ? (i3 = c[a2 + 8 >> 2] | 0, !((g2 | 0) < 0 | (h2 | 0) >= (i3 | 0))) : 0) ? (g2 | 0) < (c[a2 + 12 >> 2] | 0) : 0) {
          a2 = c[a2 + 4 >> 2] | 0;
          g2 = ($(i3, g2) | 0) + h2 << 1;
          c[e2 >> 2] = c[a2 + (g2 << 2) >> 2];
          c[f2 >> 2] = c[a2 + ((g2 | 1) << 2) >> 2];
          g2 = 0;
        } else
          g2 = -1;
        return g2 | 0;
      }
      function nf(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0;
        b2 = Uj(8) | 0;
        do {
          if (b2) {
            d2 = Uj(a2 << 3) | 0;
            c[b2 >> 2] = d2;
            if (!d2) {
              Vj(b2);
              b2 = 0;
              break;
            } else {
              c[b2 + 4 >> 2] = a2;
              break;
            }
          } else
            b2 = 0;
        } while (0);
        return b2 | 0;
      }
      function of(a2) {
        a2 = a2 | 0;
        Vj(c[a2 >> 2] | 0);
        Vj(a2);
        return 0;
      }
      function pf(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0;
        b2 = +P(+ +qf(a2, a2));
        if (b2 != 0) {
          f2 = c[a2 >> 2] | 0;
          e2 = +h[f2 >> 3];
          b2 = e2 < 0 ? -b2 : b2;
          e2 = e2 + b2;
          h[f2 >> 3] = e2;
          e2 = 1 / +P(+(e2 * b2));
          a2 = c[a2 + 4 >> 2] | 0;
          if ((a2 | 0) > 0) {
            d2 = 0;
            do {
              g2 = f2 + (d2 << 3) | 0;
              h[g2 >> 3] = e2 * +h[g2 >> 3];
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) < (a2 | 0));
          }
        }
        return +-b2;
      }
      function qf(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0;
        f2 = c[a2 + 4 >> 2] | 0;
        if ((f2 | 0) != (c[b2 + 4 >> 2] | 0))
          rb(0);
        if ((f2 | 0) > 0) {
          e2 = c[a2 >> 2] | 0;
          a2 = c[b2 >> 2] | 0;
          b2 = 0;
          d2 = 0;
          do {
            d2 = d2 + +h[e2 + (b2 << 3) >> 3] * +h[a2 + (b2 << 3) >> 3];
            b2 = b2 + 1 | 0;
          } while ((b2 | 0) < (f2 | 0));
        } else
          d2 = 0;
        return +d2;
      }
      function rf(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2 + 8 | 0;
        D2 = E2;
        w2 = c[a2 + 8 >> 2] | 0;
        if (((w2 | 0) == (c[a2 + 4 >> 2] | 0) ? (w2 | 0) == (c[b2 + 4 >> 2] | 0) : 0) ? (w2 | 0) == ((c[d2 + 4 >> 2] | 0) + 1 | 0) : 0) {
          z2 = w2 + -2 | 0;
          A2 = C2 + 4 | 0;
          B2 = D2 + 4 | 0;
          if ((w2 | 0) > 2) {
            s2 = w2 + -1 | 0;
            t2 = 0;
            do {
              o2 = $(t2, w2) | 0;
              p2 = c[a2 >> 2] | 0;
              h[(c[b2 >> 2] | 0) + (t2 << 3) >> 3] = +h[p2 + (o2 + t2 << 3) >> 3];
              k2 = w2 - t2 + -1 | 0;
              c[A2 >> 2] = k2;
              u2 = t2;
              t2 = t2 + 1 | 0;
              l2 = p2 + (o2 + t2 << 3) | 0;
              c[C2 >> 2] = l2;
              r2 = +pf(C2);
              h[(c[d2 >> 2] | 0) + (u2 << 3) >> 3] = r2;
              if (!(r2 == 0)) {
                if ((t2 | 0) < (w2 | 0)) {
                  m2 = c[b2 >> 2] | 0;
                  n2 = t2;
                  do {
                    if ((t2 | 0) < (n2 | 0)) {
                      e2 = c[a2 >> 2] | 0;
                      f2 = t2;
                      j2 = 0;
                      do {
                        r2 = +h[e2 + (($(f2, w2) | 0) + n2 << 3) >> 3];
                        j2 = j2 + r2 * +h[p2 + (f2 + o2 << 3) >> 3];
                        f2 = f2 + 1 | 0;
                      } while ((f2 | 0) < (n2 | 0));
                    } else
                      j2 = 0;
                    e2 = $(n2, w2) | 0;
                    if ((n2 | 0) < (w2 | 0)) {
                      f2 = c[a2 >> 2] | 0;
                      g2 = n2;
                      do {
                        j2 = j2 + +h[f2 + (g2 + e2 << 3) >> 3] * +h[p2 + (g2 + o2 << 3) >> 3];
                        g2 = g2 + 1 | 0;
                      } while ((g2 | 0) < (w2 | 0));
                    }
                    h[m2 + (n2 << 3) >> 3] = j2;
                    n2 = n2 + 1 | 0;
                  } while ((n2 | 0) < (w2 | 0));
                }
                c[B2 >> 2] = k2;
                c[A2 >> 2] = k2;
                c[C2 >> 2] = l2;
                c[D2 >> 2] = (c[b2 >> 2] | 0) + (t2 << 3);
                j2 = +qf(C2, D2) * 0.5;
                if ((s2 | 0) > (u2 | 0)) {
                  e2 = c[b2 >> 2] | 0;
                  k2 = s2;
                  do {
                    q2 = +h[p2 + (k2 + o2 << 3) >> 3];
                    f2 = e2 + (k2 << 3) | 0;
                    r2 = +h[f2 >> 3] - j2 * q2;
                    h[f2 >> 3] = r2;
                    f2 = $(k2, w2) | 0;
                    if ((k2 | 0) < (w2 | 0)) {
                      g2 = c[a2 >> 2] | 0;
                      l2 = k2;
                      do {
                        n2 = g2 + (l2 + f2 << 3) | 0;
                        h[n2 >> 3] = +h[n2 >> 3] - (q2 * +h[e2 + (l2 << 3) >> 3] + r2 * +h[p2 + (l2 + o2 << 3) >> 3]);
                        l2 = l2 + 1 | 0;
                      } while ((l2 | 0) < (w2 | 0));
                    }
                    k2 = k2 + -1 | 0;
                  } while ((k2 | 0) > (u2 | 0));
                }
              }
            } while ((t2 | 0) < (z2 | 0));
          }
          if ((w2 | 0) <= 1) {
            if ((w2 | 0) > 0) {
              f2 = 0;
              g2 = c[a2 >> 2] | 0;
              e2 = c[b2 >> 2] | 0;
              v2 = 27;
            }
          } else {
            v2 = $(z2, w2) | 0;
            g2 = c[a2 >> 2] | 0;
            e2 = c[b2 >> 2] | 0;
            h[e2 + (z2 << 3) >> 3] = +h[g2 + (v2 + z2 << 3) >> 3];
            f2 = w2 + -1 | 0;
            h[(c[d2 >> 2] | 0) + (z2 << 3) >> 3] = +h[g2 + (f2 + v2 << 3) >> 3];
            v2 = 27;
          }
          if ((v2 | 0) == 27)
            h[e2 + (f2 << 3) >> 3] = +h[g2 + (($(f2, w2) | 0) + f2 << 3) >> 3];
          if ((w2 | 0) > 0) {
            m2 = (w2 | 0) > 0;
            p2 = w2;
            do {
              d2 = p2;
              p2 = p2 + -1 | 0;
              n2 = $(p2, w2) | 0;
              o2 = c[a2 >> 2] | 0;
              if ((d2 | 0) <= (z2 | 0) ? (x2 = w2 - p2 + -1 | 0, y2 = o2 + (n2 + d2 << 3) | 0, (d2 | 0) < (w2 | 0)) : 0) {
                e2 = (d2 | 0) < (w2 | 0);
                k2 = d2;
                do {
                  c[B2 >> 2] = x2;
                  c[A2 >> 2] = x2;
                  c[C2 >> 2] = y2;
                  f2 = $(k2, w2) | 0;
                  c[D2 >> 2] = (c[a2 >> 2] | 0) + (f2 + d2 << 3);
                  j2 = +qf(C2, D2);
                  if (e2) {
                    g2 = c[a2 >> 2] | 0;
                    l2 = d2;
                    do {
                      v2 = g2 + (l2 + f2 << 3) | 0;
                      h[v2 >> 3] = +h[v2 >> 3] - j2 * +h[o2 + (l2 + n2 << 3) >> 3];
                      l2 = l2 + 1 | 0;
                    } while ((l2 | 0) < (w2 | 0));
                  }
                  k2 = k2 + 1 | 0;
                } while ((k2 | 0) < (w2 | 0));
              }
              if (m2) {
                e2 = 0;
                do {
                  h[o2 + (e2 + n2 << 3) >> 3] = 0;
                  e2 = e2 + 1 | 0;
                } while ((e2 | 0) < (w2 | 0));
              }
              h[o2 + (n2 + p2 << 3) >> 3] = 1;
            } while ((d2 | 0) > 1);
            e2 = 0;
          } else
            e2 = 0;
        } else
          e2 = -1;
        i2 = E2;
        return e2 | 0;
      }
      function sf(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, i3 = 0;
        f2 = +h[c2 >> 3];
        g2 = +h[c2 + 8 >> 3];
        e2 = +h[c2 + 16 >> 3];
        d2 = +h[b2 + 88 >> 3] + (f2 * +h[b2 + 64 >> 3] + g2 * +h[b2 + 72 >> 3] + e2 * +h[b2 + 80 >> 3]);
        if (d2 == 0)
          c2 = -1;
        else {
          i3 = +h[b2 + 56 >> 3] + (f2 * +h[b2 + 32 >> 3] + g2 * +h[b2 + 40 >> 3] + e2 * +h[b2 + 48 >> 3]);
          h[a2 >> 3] = (+h[b2 + 24 >> 3] + (f2 * +h[b2 >> 3] + g2 * +h[b2 + 8 >> 3] + e2 * +h[b2 + 16 >> 3])) / d2;
          h[a2 + 8 >> 3] = i3 / d2;
          c2 = 0;
        }
        return c2 | 0;
      }
      function tf(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0;
        B2 = i2;
        i2 = i2 + 1072 | 0;
        y2 = B2 + 1056 | 0;
        x2 = B2 + 768 | 0;
        w2 = B2 + 192 | 0;
        A2 = B2 + 48 | 0;
        z2 = B2;
        K2 = +h[d2 >> 3];
        F2 = +h[e2 >> 3];
        s2 = K2 * F2;
        J2 = +h[d2 + 8 >> 3];
        t2 = e2 + 8 | 0;
        E2 = +h[t2 >> 3];
        v2 = J2 * E2;
        j2 = +h[d2 + 16 >> 3];
        G2 = +h[e2 + 16 >> 3];
        l2 = j2 * G2;
        m2 = +h[d2 + 24 >> 3];
        I2 = +h[d2 + 32 >> 3];
        H2 = +h[d2 + 40 >> 3];
        n2 = E2 * H2;
        k2 = +h[d2 + 48 >> 3];
        o2 = G2 * k2;
        p2 = +h[d2 + 56 >> 3];
        D2 = +h[d2 + 64 >> 3];
        C2 = +h[d2 + 72 >> 3];
        q2 = E2 * C2;
        f2 = +h[d2 + 80 >> 3];
        r2 = G2 * f2;
        g2 = +h[d2 + 88 >> 3];
        h[x2 >> 3] = s2;
        h[x2 + 8 >> 3] = K2 * E2;
        h[x2 + 16 >> 3] = K2 * G2;
        h[x2 + 24 >> 3] = F2 * J2;
        h[x2 + 32 >> 3] = v2;
        h[x2 + 40 >> 3] = G2 * J2;
        h[x2 + 48 >> 3] = F2 * j2;
        h[x2 + 56 >> 3] = E2 * j2;
        h[x2 + 64 >> 3] = l2;
        h[x2 + 72 >> 3] = K2;
        h[x2 + 80 >> 3] = J2;
        h[x2 + 88 >> 3] = j2;
        j2 = F2 * I2;
        h[x2 + 96 >> 3] = j2;
        h[x2 + 104 >> 3] = E2 * I2;
        h[x2 + 112 >> 3] = G2 * I2;
        h[x2 + 120 >> 3] = F2 * H2;
        h[x2 + 128 >> 3] = n2;
        h[x2 + 136 >> 3] = G2 * H2;
        h[x2 + 144 >> 3] = F2 * k2;
        h[x2 + 152 >> 3] = E2 * k2;
        h[x2 + 160 >> 3] = o2;
        h[x2 + 168 >> 3] = I2;
        h[x2 + 176 >> 3] = H2;
        h[x2 + 184 >> 3] = k2;
        k2 = D2 * F2;
        h[x2 + 192 >> 3] = k2;
        h[x2 + 200 >> 3] = E2 * D2;
        h[x2 + 208 >> 3] = G2 * D2;
        h[x2 + 216 >> 3] = F2 * C2;
        E2 = +h[t2 >> 3];
        h[x2 + 224 >> 3] = C2 * E2;
        h[x2 + 232 >> 3] = G2 * C2;
        h[x2 + 240 >> 3] = F2 * f2;
        h[x2 + 248 >> 3] = E2 * f2;
        h[x2 + 256 >> 3] = r2;
        h[x2 + 264 >> 3] = D2;
        h[x2 + 272 >> 3] = C2;
        h[x2 + 280 >> 3] = f2;
        e2 = w2 + 64 | 0;
        d2 = w2;
        t2 = d2 + 64 | 0;
        do {
          c[d2 >> 2] = 0;
          d2 = d2 + 4 | 0;
        } while ((d2 | 0) < (t2 | 0));
        h[e2 >> 3] = -1;
        e2 = w2 + 72 | 0;
        c[e2 >> 2] = 0;
        c[e2 + 4 >> 2] = 0;
        c[e2 + 8 >> 2] = 0;
        c[e2 + 12 >> 2] = 0;
        c[e2 + 16 >> 2] = 0;
        c[e2 + 20 >> 2] = 0;
        c[e2 + 24 >> 2] = 0;
        c[e2 + 28 >> 2] = 0;
        h[w2 + 104 >> 3] = 1;
        e2 = w2 + 160 | 0;
        d2 = w2 + 112 | 0;
        t2 = d2 + 48 | 0;
        do {
          c[d2 >> 2] = 0;
          d2 = d2 + 4 | 0;
        } while ((d2 | 0) < (t2 | 0));
        h[e2 >> 3] = 1;
        e2 = w2 + 240 | 0;
        d2 = w2 + 168 | 0;
        t2 = d2 + 72 | 0;
        do {
          c[d2 >> 2] = 0;
          d2 = d2 + 4 | 0;
        } while ((d2 | 0) < (t2 | 0));
        h[e2 >> 3] = -1;
        e2 = w2 + 296 | 0;
        d2 = w2 + 248 | 0;
        t2 = d2 + 48 | 0;
        do {
          c[d2 >> 2] = 0;
          d2 = d2 + 4 | 0;
        } while ((d2 | 0) < (t2 | 0));
        h[e2 >> 3] = -1;
        e2 = w2 + 304 | 0;
        c[e2 >> 2] = 0;
        c[e2 + 4 >> 2] = 0;
        c[e2 + 8 >> 2] = 0;
        c[e2 + 12 >> 2] = 0;
        c[e2 + 16 >> 2] = 0;
        c[e2 + 20 >> 2] = 0;
        c[e2 + 24 >> 2] = 0;
        c[e2 + 28 >> 2] = 0;
        h[w2 + 336 >> 3] = 1;
        e2 = w2 + 456 | 0;
        d2 = w2 + 344 | 0;
        t2 = d2 + 112 | 0;
        do {
          c[d2 >> 2] = 0;
          d2 = d2 + 4 | 0;
        } while ((d2 | 0) < (t2 | 0));
        h[e2 >> 3] = 1;
        e2 = w2 + 512 | 0;
        d2 = w2 + 464 | 0;
        t2 = d2 + 48 | 0;
        do {
          c[d2 >> 2] = 0;
          d2 = d2 + 4 | 0;
        } while ((d2 | 0) < (t2 | 0));
        h[e2 >> 3] = 1;
        e2 = w2 + 568 | 0;
        d2 = w2 + 520 | 0;
        t2 = d2 + 48 | 0;
        do {
          c[d2 >> 2] = 0;
          d2 = d2 + 4 | 0;
        } while ((d2 | 0) < (t2 | 0));
        h[e2 >> 3] = 1;
        u2 = 0;
        do {
          t2 = 0;
          do {
            d2 = A2 + (u2 * 48 | 0) + (t2 << 3) | 0;
            h[d2 >> 3] = 0;
            f2 = 0;
            e2 = 0;
            do {
              f2 = f2 + +h[x2 + (u2 * 96 | 0) + (e2 << 3) >> 3] * +h[w2 + (e2 * 48 | 0) + (t2 << 3) >> 3];
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != 12);
            h[d2 >> 3] = f2;
            t2 = t2 + 1 | 0;
          } while ((t2 | 0) != 6);
          u2 = u2 + 1 | 0;
        } while ((u2 | 0) != 3);
        J2 = m2 + (s2 + v2 + l2);
        K2 = p2 + (j2 + n2 + o2);
        f2 = g2 + (k2 + q2 + r2);
        g2 = +h[b2 >> 3];
        j2 = +h[b2 + 8 >> 3];
        k2 = +h[b2 + 16 >> 3];
        l2 = +h[b2 + 24 >> 3] + (J2 * g2 + K2 * j2 + f2 * k2);
        m2 = +h[b2 + 32 >> 3];
        n2 = +h[b2 + 40 >> 3];
        o2 = +h[b2 + 48 >> 3];
        p2 = +h[b2 + 56 >> 3] + (J2 * m2 + K2 * n2 + f2 * o2);
        q2 = +h[b2 + 64 >> 3];
        r2 = +h[b2 + 72 >> 3];
        s2 = +h[b2 + 80 >> 3];
        f2 = +h[b2 + 88 >> 3] + (J2 * q2 + K2 * r2 + f2 * s2);
        if (f2 == 0) {
          Me(3, 5089, y2);
          e2 = -1;
        } else {
          K2 = f2 * f2;
          h[z2 >> 3] = (g2 * f2 - l2 * q2) / K2;
          h[z2 + 8 >> 3] = (f2 * j2 - l2 * r2) / K2;
          h[z2 + 16 >> 3] = (f2 * k2 - l2 * s2) / K2;
          h[z2 + 24 >> 3] = (f2 * m2 - p2 * q2) / K2;
          h[z2 + 32 >> 3] = (f2 * n2 - p2 * r2) / K2;
          h[z2 + 40 >> 3] = (f2 * o2 - p2 * s2) / K2;
          d2 = 0;
          do {
            f2 = +h[z2 + (d2 * 24 | 0) >> 3];
            g2 = +h[z2 + (d2 * 24 | 0) + 8 >> 3];
            j2 = +h[z2 + (d2 * 24 | 0) + 16 >> 3];
            e2 = 0;
            do {
              y2 = a2 + (d2 * 48 | 0) + (e2 << 3) | 0;
              h[y2 >> 3] = 0;
              K2 = f2 * +h[A2 + (e2 << 3) >> 3] + 0;
              h[y2 >> 3] = K2;
              K2 = K2 + g2 * +h[A2 + 48 + (e2 << 3) >> 3];
              h[y2 >> 3] = K2;
              h[y2 >> 3] = K2 + j2 * +h[A2 + 96 + (e2 << 3) >> 3];
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != 6);
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != 2);
          e2 = 0;
        }
        i2 = B2;
        return e2 | 0;
      }
      function uf(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, h2 = 0, j2 = 0;
        j2 = i2;
        i2 = i2 + 48 | 0;
        h2 = j2 + 24 | 0;
        g2 = j2 + 12 | 0;
        f2 = j2;
        c[h2 + 4 >> 2] = 6;
        c[h2 + 8 >> 2] = 1;
        c[h2 >> 2] = a2;
        c[g2 + 4 >> 2] = e2;
        c[g2 + 8 >> 2] = 1;
        c[g2 >> 2] = b2;
        c[f2 + 4 >> 2] = e2;
        c[f2 + 8 >> 2] = 6;
        c[f2 >> 2] = d2;
        b2 = Ue(f2) | 0;
        do {
          if (b2) {
            a2 = Te(b2, f2) | 0;
            if (!a2) {
              We(b2) | 0;
              d2 = -1;
              break;
            }
            d2 = Te(b2, g2) | 0;
            if (!d2) {
              We(b2) | 0;
              We(a2) | 0;
              d2 = -1;
              break;
            }
            if ((_e(a2) | 0) < 0) {
              We(b2) | 0;
              We(a2) | 0;
              We(d2) | 0;
              d2 = -1;
              break;
            } else {
              Xe(h2, a2, d2) | 0;
              We(b2) | 0;
              We(a2) | 0;
              We(d2) | 0;
              d2 = 0;
              break;
            }
          } else
            d2 = -1;
        } while (0);
        i2 = j2;
        return d2 | 0;
      }
      function vf(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var c2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
        n2 = i2;
        i2 = i2 + 192 | 0;
        l2 = n2 + 96 | 0;
        m2 = n2;
        g2 = +h[b2 >> 3];
        k2 = +h[b2 + 8 >> 3];
        d2 = +h[b2 + 16 >> 3];
        c2 = g2 * g2 + k2 * k2 + d2 * d2;
        if (c2 == 0) {
          j2 = 0;
          e2 = 0;
          d2 = 1;
          c2 = 0;
        } else {
          c2 = +P(+c2);
          j2 = c2;
          e2 = d2 / c2;
          d2 = g2 / c2;
          c2 = k2 / c2;
        }
        u2 = +h[b2 + 24 >> 3];
        r2 = +h[b2 + 32 >> 3];
        k2 = +h[b2 + 40 >> 3];
        o2 = +R(+j2);
        g2 = 1 - o2;
        j2 = +S(+j2);
        h[l2 >> 3] = o2 + d2 * d2 * g2;
        t2 = c2 * d2 * g2;
        s2 = e2 * j2;
        h[l2 + 8 >> 3] = t2 - s2;
        q2 = d2 * e2 * g2;
        p2 = c2 * j2;
        h[l2 + 16 >> 3] = q2 + p2;
        h[l2 + 24 >> 3] = u2;
        h[l2 + 32 >> 3] = t2 + s2;
        h[l2 + 40 >> 3] = o2 + c2 * c2 * g2;
        c2 = c2 * e2 * g2;
        j2 = d2 * j2;
        h[l2 + 48 >> 3] = c2 - j2;
        h[l2 + 56 >> 3] = r2;
        h[l2 + 64 >> 3] = q2 - p2;
        h[l2 + 72 >> 3] = c2 + j2;
        h[l2 + 80 >> 3] = o2 + e2 * e2 * g2;
        h[l2 + 88 >> 3] = k2;
        f2 = 0;
        do {
          c2 = +h[a2 + (f2 << 5) >> 3];
          d2 = +h[a2 + (f2 << 5) + 8 >> 3];
          e2 = +h[a2 + (f2 << 5) + 16 >> 3];
          b2 = 0;
          do {
            h[m2 + (f2 << 5) + (b2 << 3) >> 3] = c2 * +h[l2 + (b2 << 3) >> 3] + d2 * +h[l2 + 32 + (b2 << 3) >> 3] + e2 * +h[l2 + 64 + (b2 << 3) >> 3];
            b2 = b2 + 1 | 0;
          } while ((b2 | 0) != 4);
          b2 = m2 + (f2 << 5) + 24 | 0;
          h[b2 >> 3] = +h[a2 + (f2 << 5) + 24 >> 3] + +h[b2 >> 3];
          f2 = f2 + 1 | 0;
        } while ((f2 | 0) != 3);
        b2 = 0;
        do {
          h[a2 + (b2 << 5) >> 3] = +h[m2 + (b2 << 5) >> 3];
          h[a2 + (b2 << 5) + 8 >> 3] = +h[m2 + (b2 << 5) + 8 >> 3];
          h[a2 + (b2 << 5) + 16 >> 3] = +h[m2 + (b2 << 5) + 16 >> 3];
          h[a2 + (b2 << 5) + 24 >> 3] = +h[m2 + (b2 << 5) + 24 >> 3];
          b2 = b2 + 1 | 0;
        } while ((b2 | 0) != 3);
        i2 = n2;
        return 0;
      }
      function wf(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0;
        b2 = Uj(136) | 0;
        if (!b2)
          b2 = 0;
        else {
          d2 = 0;
          do {
            h[b2 + (d2 << 5) >> 3] = +h[a2 + (d2 << 5) >> 3];
            h[b2 + (d2 << 5) + 8 >> 3] = +h[a2 + (d2 << 5) + 8 >> 3];
            h[b2 + (d2 << 5) + 16 >> 3] = +h[a2 + (d2 << 5) + 16 >> 3];
            h[b2 + (d2 << 5) + 24 >> 3] = +h[a2 + (d2 << 5) + 24 >> 3];
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != 3);
          c[b2 + 96 >> 2] = 10;
          h[b2 + 104 >> 3] = 0.10000000149011612;
          h[b2 + 112 >> 3] = 0.9900000095367432;
          h[b2 + 120 >> 3] = 4;
          h[b2 + 128 >> 3] = 0.5;
        }
        return b2 | 0;
      }
      function xf(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        b2 = c[a2 >> 2] | 0;
        if (!b2)
          b2 = -1;
        else {
          Vj(b2);
          c[a2 >> 2] = 0;
          b2 = 0;
        }
        return b2 | 0;
      }
      function yf(a2, b2) {
        a2 = a2 | 0;
        b2 = +b2;
        if (!a2)
          a2 = -1;
        else {
          h[a2 + 128 >> 3] = b2;
          a2 = 0;
        }
        return a2 | 0;
      }
      function zf(a2, b2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0;
        y2 = i2;
        i2 = i2 + 176 | 0;
        l2 = y2 + 168 | 0;
        k2 = y2 + 160 | 0;
        u2 = y2 + 48 | 0;
        w2 = y2 + 64 | 0;
        v2 = y2;
        s2 = b2 + 8 | 0;
        g2 = c[s2 >> 2] | 0;
        do {
          if ((g2 | 0) >= 3) {
            x2 = Uj(g2 * 96 | 0) | 0;
            if (!x2) {
              Me(3, 5109, k2);
              g2 = -1;
              break;
            }
            t2 = Uj(g2 << 4) | 0;
            if (!t2) {
              Me(3, 5109, l2);
              Vj(x2);
              g2 = -1;
              break;
            } else
              g2 = 0;
            do {
              h[e2 + (g2 << 5) >> 3] = +h[d2 + (g2 << 5) >> 3];
              h[e2 + (g2 << 5) + 8 >> 3] = +h[d2 + (g2 << 5) + 8 >> 3];
              h[e2 + (g2 << 5) + 16 >> 3] = +h[d2 + (g2 << 5) + 16 >> 3];
              h[e2 + (g2 << 5) + 24 >> 3] = +h[d2 + (g2 << 5) + 24 >> 3];
              g2 = g2 + 1 | 0;
            } while ((g2 | 0) != 3);
            q2 = b2 + 4 | 0;
            l2 = u2 + 8 | 0;
            d2 = a2 + 104 | 0;
            n2 = a2 + 120 | 0;
            o2 = a2 + 112 | 0;
            p2 = a2 + 96 | 0;
            m2 = 0;
            r2 = 0;
            a:
              while (1) {
                Ne(a2, e2, w2) | 0;
                g2 = c[s2 >> 2] | 0;
                if ((g2 | 0) > 0) {
                  j2 = 0;
                  k2 = 0;
                  do {
                    if ((sf(u2, w2, (c[q2 >> 2] | 0) + (k2 * 24 | 0) | 0) | 0) < 0) {
                      k2 = 10;
                      break a;
                    }
                    g2 = c[b2 >> 2] | 0;
                    A2 = +h[g2 + (k2 << 4) >> 3] - +h[u2 >> 3];
                    z2 = +h[g2 + (k2 << 4) + 8 >> 3] - +h[l2 >> 3];
                    j2 = j2 + (A2 * A2 + z2 * z2);
                    g2 = k2 << 1;
                    h[t2 + (g2 << 3) >> 3] = A2;
                    h[t2 + ((g2 | 1) << 3) >> 3] = z2;
                    k2 = k2 + 1 | 0;
                    g2 = c[s2 >> 2] | 0;
                  } while ((k2 | 0) < (g2 | 0));
                } else
                  j2 = 0;
                j2 = j2 / +(g2 | 0);
                if (j2 < +h[d2 >> 3]) {
                  k2 = 24;
                  break;
                }
                if (((r2 | 0) > 0 ? j2 < +h[n2 >> 3] : 0) ? j2 / m2 > +h[o2 >> 3] : 0) {
                  k2 = 24;
                  break;
                }
                if ((r2 | 0) == (c[p2 >> 2] | 0)) {
                  k2 = 24;
                  break;
                }
                if ((g2 | 0) > 0) {
                  k2 = 0;
                  do {
                    if ((tf(x2 + (k2 * 12 << 3) | 0, a2, e2, (c[q2 >> 2] | 0) + (k2 * 24 | 0) | 0) | 0) < 0) {
                      k2 = 20;
                      break a;
                    }
                    k2 = k2 + 1 | 0;
                    g2 = c[s2 >> 2] | 0;
                  } while ((k2 | 0) < (g2 | 0));
                }
                if ((uf(v2, t2, x2, g2 << 1) | 0) < 0) {
                  k2 = 22;
                  break;
                }
                vf(e2, v2) | 0;
                m2 = j2;
                r2 = r2 + 1 | 0;
              }
            if ((k2 | 0) == 10) {
              Af(x2, t2);
              g2 = -1;
              break;
            } else if ((k2 | 0) == 20) {
              Af(x2, t2);
              g2 = -1;
              break;
            } else if ((k2 | 0) == 22) {
              Af(x2, t2);
              g2 = -1;
              break;
            } else if ((k2 | 0) == 24) {
              h[f2 >> 3] = j2;
              Vj(x2);
              Vj(t2);
              g2 = 0;
              break;
            }
          } else
            g2 = -1;
        } while (0);
        i2 = y2;
        return g2 | 0;
      }
      function Af(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Vj(a2);
        Vj(b2);
        return;
      }
      function Bf(a2, b2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0;
        G2 = i2;
        i2 = i2 + 192 | 0;
        n2 = G2 + 184 | 0;
        m2 = G2 + 176 | 0;
        l2 = G2 + 168 | 0;
        g2 = G2 + 160 | 0;
        B2 = G2 + 48 | 0;
        D2 = G2 + 64 | 0;
        C2 = G2;
        A2 = b2 + 8 | 0;
        k2 = c[A2 >> 2] | 0;
        do {
          if ((k2 | 0) >= 4) {
            o2 = ~~(+(k2 | 0) * +h[a2 + 128 >> 3]) + -1 | 0;
            o2 = (o2 | 0) < 3 ? 3 : o2;
            F2 = Uj(k2 * 96 | 0) | 0;
            if (!F2) {
              Me(3, 5109, g2);
              g2 = -1;
              break;
            }
            E2 = Uj(k2 << 4) | 0;
            if (!E2) {
              Me(3, 5109, l2);
              Vj(F2);
              g2 = -1;
              break;
            }
            g2 = k2 << 3;
            z2 = Uj(g2) | 0;
            if (!z2) {
              Me(3, 5109, m2);
              Vj(F2);
              Vj(E2);
              g2 = -1;
              break;
            }
            y2 = Uj(g2) | 0;
            if (!y2) {
              Me(3, 5109, n2);
              Vj(F2);
              Vj(E2);
              Vj(z2);
              g2 = -1;
              break;
            } else
              g2 = 0;
            do {
              h[e2 + (g2 << 5) >> 3] = +h[d2 + (g2 << 5) >> 3];
              h[e2 + (g2 << 5) + 8 >> 3] = +h[d2 + (g2 << 5) + 8 >> 3];
              h[e2 + (g2 << 5) + 16 >> 3] = +h[d2 + (g2 << 5) + 16 >> 3];
              h[e2 + (g2 << 5) + 24 >> 3] = +h[d2 + (g2 << 5) + 24 >> 3];
              g2 = g2 + 1 | 0;
            } while ((g2 | 0) != 3);
            w2 = b2 + 4 | 0;
            x2 = B2 + 8 | 0;
            n2 = y2 + (o2 << 3) | 0;
            d2 = a2 + 104 | 0;
            o2 = a2 + 120 | 0;
            t2 = a2 + 112 | 0;
            u2 = a2 + 96 | 0;
            r2 = 0;
            v2 = 0;
            a:
              while (1) {
                Ne(a2, e2, D2) | 0;
                g2 = c[A2 >> 2] | 0;
                if ((g2 | 0) > 0) {
                  k2 = 0;
                  do {
                    if ((sf(B2, D2, (c[w2 >> 2] | 0) + (k2 * 24 | 0) | 0) | 0) < 0) {
                      k2 = 14;
                      break a;
                    }
                    g2 = c[b2 >> 2] | 0;
                    q2 = +h[g2 + (k2 << 4) >> 3] - +h[B2 >> 3];
                    s2 = +h[g2 + (k2 << 4) + 8 >> 3] - +h[x2 >> 3];
                    g2 = k2 << 1;
                    h[E2 + (g2 << 3) >> 3] = q2;
                    h[E2 + ((g2 | 1) << 3) >> 3] = s2;
                    s2 = q2 * q2 + s2 * s2;
                    h[y2 + (k2 << 3) >> 3] = s2;
                    h[z2 + (k2 << 3) >> 3] = s2;
                    k2 = k2 + 1 | 0;
                    g2 = c[A2 >> 2] | 0;
                  } while ((k2 | 0) < (g2 | 0));
                }
                rj(y2, g2, 8, 1);
                s2 = +h[n2 >> 3] * 4;
                s2 = s2 < 16 ? 16 : s2;
                k2 = c[A2 >> 2] | 0;
                q2 = s2 / 6;
                if ((k2 | 0) > 0) {
                  j2 = 0;
                  g2 = 0;
                  do {
                    p2 = +h[y2 + (g2 << 3) >> 3];
                    if (p2 > s2)
                      p2 = q2;
                    else {
                      p2 = 1 - p2 / s2;
                      p2 = q2 * (1 - p2 * (p2 * p2));
                    }
                    j2 = j2 + p2;
                    g2 = g2 + 1 | 0;
                  } while ((g2 | 0) < (k2 | 0));
                } else
                  j2 = 0;
                j2 = j2 / +(k2 | 0);
                if (j2 < +h[d2 >> 3]) {
                  k2 = 36;
                  break;
                }
                if (((v2 | 0) > 0 ? j2 < +h[o2 >> 3] : 0) ? j2 / r2 > +h[t2 >> 3] : 0) {
                  k2 = 36;
                  break;
                }
                if ((v2 | 0) == (c[u2 >> 2] | 0)) {
                  k2 = 36;
                  break;
                }
                if ((k2 | 0) > 0) {
                  m2 = 0;
                  g2 = 0;
                  do {
                    p2 = +h[z2 + (m2 << 3) >> 3];
                    if (p2 <= s2) {
                      k2 = g2 * 6 | 0;
                      l2 = F2 + (k2 << 3) | 0;
                      if ((tf(l2, a2, e2, (c[w2 >> 2] | 0) + (m2 * 24 | 0) | 0) | 0) < 0) {
                        k2 = 28;
                        break a;
                      }
                      r2 = 1 - p2 / s2;
                      r2 = r2 * r2;
                      h[l2 >> 3] = +h[l2 >> 3] * r2;
                      l2 = F2 + ((k2 | 1) << 3) | 0;
                      h[l2 >> 3] = +h[l2 >> 3] * r2;
                      l2 = F2 + (k2 + 2 << 3) | 0;
                      h[l2 >> 3] = r2 * +h[l2 >> 3];
                      l2 = F2 + (k2 + 3 << 3) | 0;
                      h[l2 >> 3] = r2 * +h[l2 >> 3];
                      l2 = F2 + (k2 + 4 << 3) | 0;
                      h[l2 >> 3] = r2 * +h[l2 >> 3];
                      l2 = F2 + (k2 + 5 << 3) | 0;
                      h[l2 >> 3] = r2 * +h[l2 >> 3];
                      l2 = F2 + (k2 + 6 << 3) | 0;
                      h[l2 >> 3] = r2 * +h[l2 >> 3];
                      l2 = F2 + (k2 + 7 << 3) | 0;
                      h[l2 >> 3] = r2 * +h[l2 >> 3];
                      l2 = F2 + (k2 + 8 << 3) | 0;
                      h[l2 >> 3] = r2 * +h[l2 >> 3];
                      l2 = F2 + (k2 + 9 << 3) | 0;
                      h[l2 >> 3] = r2 * +h[l2 >> 3];
                      l2 = F2 + (k2 + 10 << 3) | 0;
                      h[l2 >> 3] = r2 * +h[l2 >> 3];
                      k2 = F2 + (k2 + 11 << 3) | 0;
                      h[k2 >> 3] = r2 * +h[k2 >> 3];
                      k2 = m2 << 1;
                      h[E2 + (g2 << 3) >> 3] = r2 * +h[E2 + (k2 << 3) >> 3];
                      h[E2 + (g2 + 1 << 3) >> 3] = r2 * +h[E2 + ((k2 | 1) << 3) >> 3];
                      k2 = c[A2 >> 2] | 0;
                      g2 = g2 + 2 | 0;
                    }
                    m2 = m2 + 1 | 0;
                  } while ((m2 | 0) < (k2 | 0));
                } else
                  g2 = 0;
                if ((g2 | 0) < 6) {
                  k2 = 32;
                  break;
                }
                if ((uf(C2, E2, F2, g2) | 0) < 0) {
                  k2 = 34;
                  break;
                }
                vf(e2, C2) | 0;
                r2 = j2;
                v2 = v2 + 1 | 0;
              }
            if ((k2 | 0) == 14) {
              Cf(F2, E2, z2, y2);
              g2 = -1;
              break;
            } else if ((k2 | 0) == 28) {
              Cf(F2, E2, z2, y2);
              g2 = -1;
              break;
            } else if ((k2 | 0) == 32) {
              Cf(F2, E2, z2, y2);
              g2 = -1;
              break;
            } else if ((k2 | 0) == 34) {
              Cf(F2, E2, z2, y2);
              g2 = -1;
              break;
            } else if ((k2 | 0) == 36) {
              h[f2 >> 3] = j2;
              Vj(F2);
              Vj(E2);
              Vj(z2);
              Vj(y2);
              g2 = 0;
              break;
            }
          } else
            g2 = -1;
        } while (0);
        i2 = G2;
        return g2 | 0;
      }
      function Cf(a2, b2, c2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        Vj(a2);
        Vj(b2);
        Vj(c2);
        Vj(d2);
        return;
      }
      function Df(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var c2 = 0;
        c2 = +h[a2 >> 3] - +h[b2 >> 3];
        return (c2 < 0 ? -1 : c2 > 0 & 1) | 0;
      }
      function Ef(a2, b2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0;
        U2 = i2;
        i2 = i2 + 64 | 0;
        D2 = U2 + 48 | 0;
        z2 = U2 + 40 | 0;
        y2 = U2 + 32 | 0;
        x2 = U2 + 24 | 0;
        u2 = U2 + 16 | 0;
        o2 = U2 + 8 | 0;
        l2 = U2;
        a:
          do {
            if ((e2 | 0) >= 4) {
              g2 = 0;
              while (1) {
                if ((g2 | 0) >= (e2 | 0))
                  break;
                if (+h[d2 + (g2 * 24 | 0) + 16 >> 3] != 0) {
                  g2 = -1;
                  break a;
                } else
                  g2 = g2 + 1 | 0;
              }
              if ((((((((!(+h[a2 >> 3] == 0) ? !(+h[a2 + 32 >> 3] != 0) : 0) ? (B2 = a2 + 40 | 0, !(+h[B2 >> 3] == 0)) : 0) ? !(+h[a2 + 64 >> 3] != 0) : 0) ? !(+h[a2 + 72 >> 3] != 0) : 0) ? !(+h[a2 + 80 >> 3] != 1) : 0) ? !(+h[a2 + 24 >> 3] != 0) : 0) ? !(+h[a2 + 56 >> 3] != 0) : 0) ? !(+h[a2 + 88 >> 3] != 0) : 0) {
                g2 = e2 << 1;
                C2 = Re(g2, 8) | 0;
                if (!C2) {
                  Me(3, 5124, l2);
                  g2 = -1;
                  break;
                }
                w2 = Re(g2, 1) | 0;
                if (!w2) {
                  We(C2) | 0;
                  Me(3, 5150, o2);
                  g2 = -1;
                  break;
                }
                if (e2) {
                  g2 = c[C2 >> 2] | 0;
                  l2 = c[w2 >> 2] | 0;
                  o2 = 0;
                  do {
                    Z2 = d2 + (o2 * 24 | 0) | 0;
                    V2 = o2 << 4;
                    h[g2 + (V2 << 3) >> 3] = +h[Z2 >> 3];
                    Y2 = d2 + (o2 * 24 | 0) + 8 | 0;
                    h[g2 + ((V2 | 1) << 3) >> 3] = +h[Y2 >> 3];
                    h[g2 + ((V2 | 2) << 3) >> 3] = 1;
                    h[g2 + ((V2 | 3) << 3) >> 3] = 0;
                    h[g2 + ((V2 | 4) << 3) >> 3] = 0;
                    h[g2 + ((V2 | 5) << 3) >> 3] = 0;
                    X2 = b2 + (o2 << 4) | 0;
                    h[g2 + ((V2 | 6) << 3) >> 3] = -(+h[Z2 >> 3] * +h[X2 >> 3]);
                    h[g2 + ((V2 | 7) << 3) >> 3] = -(+h[Y2 >> 3] * +h[X2 >> 3]);
                    h[g2 + ((V2 | 8) << 3) >> 3] = 0;
                    h[g2 + ((V2 | 9) << 3) >> 3] = 0;
                    h[g2 + ((V2 | 10) << 3) >> 3] = 0;
                    h[g2 + ((V2 | 11) << 3) >> 3] = +h[Z2 >> 3];
                    h[g2 + ((V2 | 12) << 3) >> 3] = +h[Y2 >> 3];
                    h[g2 + ((V2 | 13) << 3) >> 3] = 1;
                    W2 = b2 + (o2 << 4) + 8 | 0;
                    h[g2 + ((V2 | 14) << 3) >> 3] = -(+h[Z2 >> 3] * +h[W2 >> 3]);
                    h[g2 + ((V2 | 15) << 3) >> 3] = -(+h[Y2 >> 3] * +h[W2 >> 3]);
                    V2 = o2 << 1;
                    h[l2 + (V2 << 3) >> 3] = +h[X2 >> 3];
                    h[l2 + ((V2 | 1) << 3) >> 3] = +h[W2 >> 3];
                    o2 = o2 + 1 | 0;
                  } while ((o2 | 0) != (e2 | 0));
                }
                e2 = Ue(C2) | 0;
                if (!e2) {
                  We(C2) | 0;
                  We(w2) | 0;
                  Me(3, 5176, u2);
                  g2 = -1;
                  break;
                }
                o2 = Te(e2, C2) | 0;
                if (!o2) {
                  We(C2) | 0;
                  We(w2) | 0;
                  We(e2) | 0;
                  Me(3, 5202, x2);
                  g2 = -1;
                  break;
                }
                l2 = Te(e2, w2) | 0;
                if (!l2) {
                  We(C2) | 0;
                  We(w2) | 0;
                  We(e2) | 0;
                  We(o2) | 0;
                  Me(3, 5228, y2);
                  g2 = -1;
                  break;
                }
                if ((_e(o2) | 0) < 0) {
                  We(C2) | 0;
                  We(w2) | 0;
                  We(e2) | 0;
                  We(o2) | 0;
                  We(l2) | 0;
                  Me(3, 5254, z2);
                  g2 = -1;
                  break;
                }
                g2 = Te(o2, l2) | 0;
                if (!g2) {
                  We(C2) | 0;
                  We(w2) | 0;
                  We(e2) | 0;
                  We(o2) | 0;
                  We(l2) | 0;
                  Me(3, 5280, D2);
                  g2 = -1;
                  break;
                }
                Z2 = c[g2 >> 2] | 0;
                p2 = +h[Z2 + 48 >> 3];
                S2 = +h[a2 + 48 >> 3];
                t2 = +h[B2 >> 3];
                j2 = (+h[Z2 + 24 >> 3] - p2 * S2) / t2;
                s2 = +h[a2 + 16 >> 3];
                T2 = +h[a2 + 8 >> 3];
                r2 = +h[a2 >> 3];
                q2 = (+h[Z2 >> 3] - p2 * s2 - j2 * T2) / r2;
                k2 = +h[Z2 + 56 >> 3];
                m2 = (+h[Z2 + 32 >> 3] - S2 * k2) / t2;
                n2 = (+h[Z2 + 8 >> 3] - s2 * k2 - T2 * m2) / r2;
                t2 = (+h[Z2 + 40 >> 3] - S2) / t2;
                r2 = (+h[Z2 + 16 >> 3] - s2 - T2 * t2) / r2;
                We(C2) | 0;
                We(w2) | 0;
                We(e2) | 0;
                We(o2) | 0;
                We(l2) | 0;
                We(g2) | 0;
                T2 = +P(+(p2 * p2 + (j2 * j2 + q2 * q2)));
                s2 = +P(+(k2 * k2 + (m2 * m2 + n2 * n2)));
                q2 = q2 / T2;
                j2 = j2 / T2;
                p2 = p2 / T2;
                n2 = n2 / s2;
                m2 = m2 / s2;
                k2 = k2 / s2;
                s2 = (T2 + s2) * 0.5;
                r2 = r2 / s2;
                T2 = 1 / s2;
                if (T2 < 0) {
                  O2 = -j2;
                  k2 = -k2;
                  m2 = -m2;
                  p2 = -p2;
                  n2 = -n2;
                  Q2 = -q2;
                  S2 = -r2;
                  R2 = -T2;
                } else {
                  O2 = j2;
                  Q2 = q2;
                  S2 = r2;
                  R2 = t2 / s2;
                }
                j2 = k2 * O2 - m2 * p2;
                q2 = n2 * p2 - k2 * Q2;
                r2 = m2 * Q2 - n2 * O2;
                s2 = +P(+(r2 * r2 + (j2 * j2 + q2 * q2)));
                do {
                  if (!(s2 == 0)) {
                    t2 = j2 / s2;
                    q2 = q2 / s2;
                    j2 = r2 / s2;
                    N2 = k2 * p2 + (m2 * O2 + n2 * Q2);
                    N2 = N2 < 0 ? -N2 : N2;
                    N2 = (+P(+(N2 + 1)) + +P(+(1 - N2))) * 0.5;
                    if (Q2 * q2 - O2 * t2 != 0) {
                      g2 = 0;
                      E2 = Q2;
                      v2 = O2;
                      F2 = p2;
                      I2 = t2;
                      H2 = q2;
                    } else {
                      Z2 = Q2 * j2 - p2 * t2 != 0;
                      g2 = Z2 ? 1 : 2;
                      E2 = Z2 ? Q2 : p2;
                      v2 = Z2 ? p2 : O2;
                      F2 = Z2 ? O2 : Q2;
                      I2 = Z2 ? t2 : j2;
                      H2 = Z2 ? j2 : q2;
                      j2 = Z2 ? q2 : t2;
                    }
                    r2 = E2 * H2;
                    s2 = v2 * I2;
                    q2 = r2 - s2;
                    if (q2 == 0) {
                      q2 = O2;
                      j2 = Q2;
                      break;
                    }
                    G2 = (v2 * j2 - F2 * H2) / q2;
                    A2 = N2 * H2 / q2;
                    r2 = s2 - r2;
                    q2 = (E2 * j2 - F2 * I2) / r2;
                    r2 = N2 * I2 / r2;
                    s2 = G2 * G2 + q2 * q2 + 1;
                    t2 = G2 * A2 + q2 * r2;
                    v2 = t2 * t2 - s2 * (A2 * A2 + r2 * r2 + -1);
                    if (v2 < 0) {
                      q2 = O2;
                      j2 = Q2;
                      break;
                    }
                    M2 = +P(+v2);
                    L2 = (M2 - t2) / s2;
                    F2 = A2 + G2 * L2;
                    K2 = r2 + q2 * L2;
                    M2 = (-t2 - M2) / s2;
                    G2 = A2 + G2 * M2;
                    r2 = r2 + q2 * M2;
                    Z2 = (g2 | 0) == 1;
                    q2 = Z2 ? H2 : j2;
                    s2 = Z2 ? j2 : H2;
                    J2 = Z2 ? L2 : K2;
                    L2 = Z2 ? K2 : L2;
                    K2 = Z2 ? M2 : r2;
                    H2 = Z2 ? r2 : M2;
                    Z2 = (g2 | 0) == 2 & (Z2 ^ 1);
                    r2 = Z2 ? I2 : q2;
                    q2 = Z2 ? q2 : I2;
                    M2 = Z2 ? L2 : F2;
                    L2 = Z2 ? F2 : L2;
                    j2 = Z2 ? H2 : G2;
                    I2 = Z2 ? G2 : H2;
                    if (n2 * s2 - m2 * q2 != 0) {
                      g2 = 0;
                      E2 = n2;
                      v2 = m2;
                      F2 = k2;
                      H2 = q2;
                      A2 = s2;
                    } else {
                      Z2 = n2 * r2 - k2 * q2 != 0;
                      g2 = Z2 ? 1 : 2;
                      E2 = Z2 ? n2 : k2;
                      v2 = Z2 ? k2 : m2;
                      F2 = Z2 ? m2 : n2;
                      H2 = Z2 ? q2 : r2;
                      A2 = Z2 ? r2 : s2;
                      r2 = Z2 ? s2 : q2;
                    }
                    s2 = E2 * A2;
                    t2 = v2 * H2;
                    q2 = s2 - t2;
                    if (q2 == 0) {
                      q2 = O2;
                      j2 = Q2;
                      break;
                    }
                    G2 = (v2 * r2 - F2 * A2) / q2;
                    A2 = N2 * A2 / q2;
                    q2 = t2 - s2;
                    v2 = (E2 * r2 - F2 * H2) / q2;
                    q2 = N2 * H2 / q2;
                    r2 = G2 * G2 + v2 * v2 + 1;
                    s2 = G2 * A2 + v2 * q2;
                    t2 = s2 * s2 - r2 * (A2 * A2 + q2 * q2 + -1);
                    if (t2 < 0) {
                      q2 = O2;
                      j2 = Q2;
                      break;
                    }
                    t2 = +P(+t2);
                    k2 = (t2 - s2) / r2;
                    Q2 = A2 + G2 * k2;
                    O2 = q2 + v2 * k2;
                    t2 = (-s2 - t2) / r2;
                    p2 = A2 + G2 * t2;
                    n2 = q2 + v2 * t2;
                    Z2 = (g2 | 0) == 1;
                    m2 = Z2 ? k2 : O2;
                    k2 = Z2 ? O2 : k2;
                    v2 = Z2 ? t2 : n2;
                    t2 = Z2 ? n2 : t2;
                    Z2 = (g2 | 0) == 2 & (Z2 ^ 1);
                    n2 = Z2 ? k2 : Q2;
                    k2 = Z2 ? Q2 : k2;
                    A2 = Z2 ? t2 : p2;
                    t2 = Z2 ? p2 : t2;
                    p2 = L2 * k2 + (J2 * m2 + M2 * n2);
                    p2 = p2 < 0 ? -p2 : p2;
                    q2 = L2 * t2 + (J2 * v2 + M2 * A2);
                    q2 = q2 < 0 ? -q2 : q2;
                    r2 = I2 * k2 + (K2 * m2 + j2 * n2);
                    r2 = r2 < 0 ? -r2 : r2;
                    s2 = I2 * t2 + (K2 * v2 + j2 * A2);
                    s2 = s2 < 0 ? -s2 : s2;
                    if (p2 < q2)
                      if (p2 < r2) {
                        if (p2 < s2) {
                          q2 = J2;
                          p2 = L2;
                          j2 = M2;
                          break;
                        }
                        q2 = K2;
                        k2 = t2;
                        m2 = v2;
                        p2 = I2;
                        n2 = A2;
                        break;
                      } else {
                        if (r2 < s2) {
                          q2 = K2;
                          p2 = I2;
                          break;
                        }
                        q2 = K2;
                        k2 = t2;
                        m2 = v2;
                        p2 = I2;
                        n2 = A2;
                        break;
                      }
                    else if (q2 < r2) {
                      if (q2 < s2) {
                        q2 = J2;
                        k2 = t2;
                        m2 = v2;
                        p2 = L2;
                        n2 = A2;
                        j2 = M2;
                        break;
                      }
                      q2 = K2;
                      k2 = t2;
                      m2 = v2;
                      p2 = I2;
                      n2 = A2;
                      break;
                    } else {
                      if (r2 < s2) {
                        q2 = K2;
                        p2 = I2;
                        break;
                      }
                      q2 = K2;
                      k2 = t2;
                      m2 = v2;
                      p2 = I2;
                      n2 = A2;
                      break;
                    }
                  } else {
                    q2 = O2;
                    j2 = Q2;
                  }
                } while (0);
                M2 = k2 * q2 - m2 * p2;
                N2 = n2 * p2 - k2 * j2;
                O2 = m2 * j2 - n2 * q2;
                Q2 = +P(+(O2 * O2 + (M2 * M2 + N2 * N2)));
                h[f2 >> 3] = j2;
                h[f2 + 32 >> 3] = q2;
                h[f2 + 64 >> 3] = p2;
                h[f2 + 8 >> 3] = n2;
                h[f2 + 40 >> 3] = m2;
                h[f2 + 72 >> 3] = k2;
                h[f2 + 16 >> 3] = M2 / Q2;
                h[f2 + 48 >> 3] = N2 / Q2;
                h[f2 + 80 >> 3] = O2 / Q2;
                h[f2 + 24 >> 3] = S2;
                h[f2 + 56 >> 3] = R2;
                h[f2 + 88 >> 3] = T2;
                g2 = 0;
              } else
                g2 = -1;
            } else
              g2 = -1;
          } while (0);
        i2 = U2;
        return g2 | 0;
      }
      function Ff(a2) {
        a2 = a2 | 0;
        Vj(c[a2 >> 2] | 0);
        Vj(a2);
        return 0;
      }
      function Gf(a2, b2, c2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        return + +If(a2, b2, c2, d2, 0);
      }
      function Hf(a2, b2, c2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        return + +If(a2, b2, c2, d2, 1);
      }
      function If(a2, b2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 208 | 0;
        z2 = F2 + 200 | 0;
        y2 = F2 + 192 | 0;
        A2 = F2 + 96 | 0;
        B2 = F2;
        C2 = e2 + 4 | 0;
        p2 = c[C2 >> 2] | 0;
        q2 = e2 + 112 | 0;
        r2 = e2 + 120 | 0;
        if ((p2 | 0) > 0) {
          u2 = c[e2 >> 2] | 0;
          v2 = (d2 | 0) > 0;
          w2 = (d2 | 0) > 0;
          x2 = 0;
          do {
            if (!(c[u2 + (x2 * 320 | 0) + 4 >> 2] | 0)) {
              if (v2) {
                k2 = c[u2 + (x2 * 320 | 0) >> 2] | 0;
                l2 = 0;
                j2 = -1;
                do {
                  if ((c[b2 + (l2 << 8) + 8 >> 2] | 0) == (k2 | 0) ? (n2 = +h[b2 + (l2 << 8) + 40 >> 3], !(n2 < +h[q2 >> 3])) : 0) {
                    if (!((j2 | 0) != -1 ? !(+h[b2 + (j2 << 8) + 40 >> 3] < n2) : 0))
                      j2 = l2;
                  }
                  l2 = l2 + 1 | 0;
                } while ((l2 | 0) < (d2 | 0));
              } else
                j2 = -1;
              c[u2 + (x2 * 320 | 0) + 304 >> 2] = j2;
              if ((j2 | 0) > -1)
                c[b2 + (j2 << 8) + 16 >> 2] = c[b2 + (j2 << 8) + 20 >> 2];
            } else {
              l2 = u2 + (x2 * 320 | 0) + 312 | 0;
              m2 = u2 + (x2 * 320 | 0) | 0;
              if (w2) {
                o2 = 0;
                j2 = -1;
                do {
                  k2 = c[b2 + (o2 << 8) + 12 >> 2] | 0;
                  if ((k2 | 0) == 0 ? (t2 = b2 + (o2 << 8) + 248 | 0, s2 = c[t2 >> 2] | 0, t2 = c[t2 + 4 >> 2] | 0, !((s2 | 0) == 0 & (t2 | 0) == 0)) : 0) {
                    k2 = l2;
                    if ((s2 | 0) == (c[k2 >> 2] | 0) ? (t2 | 0) == (c[k2 + 4 >> 2] | 0) : 0)
                      E2 = 20;
                  } else if ((k2 | 0) == (c[m2 >> 2] | 0))
                    E2 = 20;
                  if ((E2 | 0) == 20) {
                    E2 = 0;
                    g2 = +h[b2 + (o2 << 8) + 48 >> 3];
                    if (!(g2 < +h[r2 >> 3])) {
                      if (!((j2 | 0) != -1 ? !(+h[b2 + (j2 << 8) + 48 >> 3] < g2) : 0))
                        j2 = o2;
                    }
                  }
                  o2 = o2 + 1 | 0;
                } while ((o2 | 0) < (d2 | 0));
              } else
                j2 = -1;
              c[u2 + (x2 * 320 | 0) + 304 >> 2] = j2;
              if ((j2 | 0) > -1)
                c[b2 + (j2 << 8) + 16 >> 2] = c[b2 + (j2 << 8) + 24 >> 2];
            }
            x2 = x2 + 1 | 0;
          } while ((x2 | 0) < (p2 | 0));
        }
        if ((p2 | 0) > 0) {
          q2 = 0;
          j2 = 0;
          p2 = 0;
          k2 = 0;
          while (1) {
            l2 = c[e2 >> 2] | 0;
            m2 = c[l2 + (q2 * 320 | 0) + 304 >> 2] | 0;
            do {
              if ((m2 | 0) < 0)
                l2 = p2;
              else {
                o2 = b2 + (m2 << 8) | 0;
                if (+ke(a2, o2, +h[l2 + (q2 * 320 | 0) + 8 >> 3], B2) > 4) {
                  c[(c[e2 >> 2] | 0) + (q2 * 320 | 0) + 304 >> 2] = -1;
                  l2 = b2 + (m2 << 8) + 236 | 0;
                  if (c[l2 >> 2] | 0) {
                    l2 = p2;
                    break;
                  }
                  c[l2 >> 2] = 7;
                  l2 = p2;
                  break;
                }
                l2 = c[o2 >> 2] | 0;
                if ((k2 | 0) == 0 | (p2 | 0) < (l2 | 0)) {
                  j2 = 0;
                  do {
                    h[A2 + (j2 << 5) >> 3] = +h[B2 + (j2 << 5) >> 3];
                    h[A2 + (j2 << 5) + 8 >> 3] = +h[B2 + (j2 << 5) + 8 >> 3];
                    h[A2 + (j2 << 5) + 16 >> 3] = +h[B2 + (j2 << 5) + 16 >> 3];
                    h[A2 + (j2 << 5) + 24 >> 3] = +h[B2 + (j2 << 5) + 24 >> 3];
                    j2 = j2 + 1 | 0;
                  } while ((j2 | 0) != 3);
                  j2 = q2;
                } else
                  l2 = p2;
                k2 = k2 + 1 | 0;
              }
            } while (0);
            q2 = q2 + 1 | 0;
            if ((q2 | 0) >= (c[C2 >> 2] | 0))
              break;
            else
              p2 = l2;
          }
        } else {
          j2 = 0;
          k2 = 0;
        }
        do {
          if ((k2 | 0) != 0 ? (k2 | 0) >= (c[e2 + 128 >> 2] | 0) : 0) {
            Ne(A2, (c[e2 >> 2] | 0) + (j2 * 320 | 0) + 112 | 0, B2) | 0;
            p2 = k2 << 2;
            r2 = Uj(k2 << 6) | 0;
            if (!r2) {
              Me(3, 5472, y2);
              rb(1);
            }
            q2 = Uj(k2 * 96 | 0) | 0;
            if (!q2) {
              Me(3, 5472, z2);
              rb(1);
            }
            l2 = c[C2 >> 2] | 0;
            if ((l2 | 0) > 0) {
              m2 = c[e2 >> 2] | 0;
              o2 = 0;
              j2 = 0;
              do {
                k2 = c[m2 + (o2 * 320 | 0) + 304 >> 2] | 0;
                if ((k2 | 0) >= 0) {
                  y2 = c[b2 + (k2 << 8) + 16 >> 2] | 0;
                  d2 = (4 - y2 | 0) % 4 | 0;
                  z2 = j2 << 3;
                  h[r2 + (z2 << 3) >> 3] = +h[b2 + (k2 << 8) + 168 + (d2 << 4) >> 3];
                  h[r2 + ((z2 | 1) << 3) >> 3] = +h[b2 + (k2 << 8) + 168 + (d2 << 4) + 8 >> 3];
                  d2 = (5 - y2 | 0) % 4 | 0;
                  h[r2 + ((z2 | 2) << 3) >> 3] = +h[b2 + (k2 << 8) + 168 + (d2 << 4) >> 3];
                  h[r2 + ((z2 | 3) << 3) >> 3] = +h[b2 + (k2 << 8) + 168 + (d2 << 4) + 8 >> 3];
                  d2 = (6 - y2 | 0) % 4 | 0;
                  h[r2 + ((z2 | 4) << 3) >> 3] = +h[b2 + (k2 << 8) + 168 + (d2 << 4) >> 3];
                  h[r2 + ((z2 | 5) << 3) >> 3] = +h[b2 + (k2 << 8) + 168 + (d2 << 4) + 8 >> 3];
                  y2 = (7 - y2 | 0) % 4 | 0;
                  h[r2 + ((z2 | 6) << 3) >> 3] = +h[b2 + (k2 << 8) + 168 + (y2 << 4) >> 3];
                  h[r2 + ((z2 | 7) << 3) >> 3] = +h[b2 + (k2 << 8) + 168 + (y2 << 4) + 8 >> 3];
                  z2 = j2 * 12 | 0;
                  h[q2 + (z2 << 3) >> 3] = +h[m2 + (o2 * 320 | 0) + 208 >> 3];
                  h[q2 + ((z2 | 1) << 3) >> 3] = +h[m2 + (o2 * 320 | 0) + 216 >> 3];
                  h[q2 + ((z2 | 2) << 3) >> 3] = +h[m2 + (o2 * 320 | 0) + 224 >> 3];
                  h[q2 + ((z2 | 3) << 3) >> 3] = +h[m2 + (o2 * 320 | 0) + 232 >> 3];
                  h[q2 + (z2 + 4 << 3) >> 3] = +h[m2 + (o2 * 320 | 0) + 240 >> 3];
                  h[q2 + (z2 + 5 << 3) >> 3] = +h[m2 + (o2 * 320 | 0) + 248 >> 3];
                  h[q2 + (z2 + 6 << 3) >> 3] = +h[m2 + (o2 * 320 | 0) + 256 >> 3];
                  h[q2 + (z2 + 7 << 3) >> 3] = +h[m2 + (o2 * 320 | 0) + 264 >> 3];
                  h[q2 + (z2 + 8 << 3) >> 3] = +h[m2 + (o2 * 320 | 0) + 272 >> 3];
                  h[q2 + (z2 + 9 << 3) >> 3] = +h[m2 + (o2 * 320 | 0) + 280 >> 3];
                  y2 = c[e2 >> 2] | 0;
                  h[q2 + (z2 + 10 << 3) >> 3] = +h[y2 + (o2 * 320 | 0) + 288 >> 3];
                  h[q2 + (z2 + 11 << 3) >> 3] = +h[y2 + (o2 * 320 | 0) + 296 >> 3];
                  j2 = j2 + 1 | 0;
                }
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) < (l2 | 0));
            }
            m2 = e2 + 104 | 0;
            k2 = (f2 | 0) != 0;
            if (!(c[m2 >> 2] | 0)) {
              j2 = e2 + 8 | 0;
              g2 = +me(a2, B2, r2, q2, p2, j2);
              if (k2 & g2 >= 20) {
                yf(c[a2 >> 2] | 0, 0.8) | 0;
                g2 = +ne(a2, B2, r2, q2, p2, j2);
                if (g2 >= 20) {
                  yf(c[a2 >> 2] | 0, 0.6) | 0;
                  g2 = +ne(a2, B2, r2, q2, p2, j2);
                  if (g2 >= 20) {
                    yf(c[a2 >> 2] | 0, 0.4) | 0;
                    g2 = +ne(a2, B2, r2, q2, p2, j2);
                    if (g2 >= 20) {
                      yf(c[a2 >> 2] | 0, 0) | 0;
                      g2 = +ne(a2, B2, r2, q2, p2, j2);
                    }
                  }
                }
              }
              Vj(q2);
              Vj(r2);
            } else {
              g2 = +me(a2, B2, r2, q2, p2, A2);
              l2 = e2 + 8 | 0;
              n2 = +me(a2, l2, r2, q2, p2, l2);
              j2 = g2 < n2;
              do {
                if (k2) {
                  if (j2) {
                    j2 = 0;
                    do {
                      h[e2 + 8 + (j2 << 5) >> 3] = +h[A2 + (j2 << 5) >> 3];
                      h[e2 + 8 + (j2 << 5) + 8 >> 3] = +h[A2 + (j2 << 5) + 8 >> 3];
                      h[e2 + 8 + (j2 << 5) + 16 >> 3] = +h[A2 + (j2 << 5) + 16 >> 3];
                      h[e2 + 8 + (j2 << 5) + 24 >> 3] = +h[A2 + (j2 << 5) + 24 >> 3];
                      j2 = j2 + 1 | 0;
                    } while ((j2 | 0) != 3);
                  } else
                    g2 = n2;
                  if (g2 >= 20) {
                    yf(c[a2 >> 2] | 0, 0.8) | 0;
                    g2 = +ne(a2, B2, r2, q2, p2, A2);
                    n2 = +ne(a2, l2, r2, q2, p2, l2);
                    if (g2 < n2) {
                      j2 = 0;
                      do {
                        h[e2 + 8 + (j2 << 5) >> 3] = +h[A2 + (j2 << 5) >> 3];
                        h[e2 + 8 + (j2 << 5) + 8 >> 3] = +h[A2 + (j2 << 5) + 8 >> 3];
                        h[e2 + 8 + (j2 << 5) + 16 >> 3] = +h[A2 + (j2 << 5) + 16 >> 3];
                        h[e2 + 8 + (j2 << 5) + 24 >> 3] = +h[A2 + (j2 << 5) + 24 >> 3];
                        j2 = j2 + 1 | 0;
                      } while ((j2 | 0) != 3);
                    } else
                      g2 = n2;
                    if (g2 >= 20) {
                      yf(c[a2 >> 2] | 0, 0.6) | 0;
                      g2 = +ne(a2, B2, r2, q2, p2, A2);
                      n2 = +ne(a2, l2, r2, q2, p2, l2);
                      if (g2 < n2) {
                        j2 = 0;
                        do {
                          h[e2 + 8 + (j2 << 5) >> 3] = +h[A2 + (j2 << 5) >> 3];
                          h[e2 + 8 + (j2 << 5) + 8 >> 3] = +h[A2 + (j2 << 5) + 8 >> 3];
                          h[e2 + 8 + (j2 << 5) + 16 >> 3] = +h[A2 + (j2 << 5) + 16 >> 3];
                          h[e2 + 8 + (j2 << 5) + 24 >> 3] = +h[A2 + (j2 << 5) + 24 >> 3];
                          j2 = j2 + 1 | 0;
                        } while ((j2 | 0) != 3);
                      } else
                        g2 = n2;
                      if (g2 >= 20) {
                        yf(c[a2 >> 2] | 0, 0.4) | 0;
                        g2 = +ne(a2, B2, r2, q2, p2, A2);
                        n2 = +ne(a2, l2, r2, q2, p2, l2);
                        if (g2 < n2) {
                          j2 = 0;
                          do {
                            h[e2 + 8 + (j2 << 5) >> 3] = +h[A2 + (j2 << 5) >> 3];
                            h[e2 + 8 + (j2 << 5) + 8 >> 3] = +h[A2 + (j2 << 5) + 8 >> 3];
                            h[e2 + 8 + (j2 << 5) + 16 >> 3] = +h[A2 + (j2 << 5) + 16 >> 3];
                            h[e2 + 8 + (j2 << 5) + 24 >> 3] = +h[A2 + (j2 << 5) + 24 >> 3];
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) != 3);
                        } else
                          g2 = n2;
                        if (g2 >= 20) {
                          yf(c[a2 >> 2] | 0, 0) | 0;
                          g2 = +ne(a2, B2, r2, q2, p2, A2);
                          n2 = +ne(a2, l2, r2, q2, p2, l2);
                          if (g2 < n2)
                            j2 = 0;
                          else {
                            g2 = n2;
                            break;
                          }
                          do {
                            h[e2 + 8 + (j2 << 5) >> 3] = +h[A2 + (j2 << 5) >> 3];
                            h[e2 + 8 + (j2 << 5) + 8 >> 3] = +h[A2 + (j2 << 5) + 8 >> 3];
                            h[e2 + 8 + (j2 << 5) + 16 >> 3] = +h[A2 + (j2 << 5) + 16 >> 3];
                            h[e2 + 8 + (j2 << 5) + 24 >> 3] = +h[A2 + (j2 << 5) + 24 >> 3];
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) != 3);
                        }
                      }
                    }
                  }
                } else if (j2) {
                  j2 = 0;
                  do {
                    h[e2 + 8 + (j2 << 5) >> 3] = +h[A2 + (j2 << 5) >> 3];
                    h[e2 + 8 + (j2 << 5) + 8 >> 3] = +h[A2 + (j2 << 5) + 8 >> 3];
                    h[e2 + 8 + (j2 << 5) + 16 >> 3] = +h[A2 + (j2 << 5) + 16 >> 3];
                    h[e2 + 8 + (j2 << 5) + 24 >> 3] = +h[A2 + (j2 << 5) + 24 >> 3];
                    j2 = j2 + 1 | 0;
                  } while ((j2 | 0) != 3);
                } else
                  g2 = n2;
              } while (0);
              Vj(q2);
              Vj(r2);
            }
            if (g2 < 20) {
              c[m2 >> 2] = 1;
              break;
            }
            c[m2 >> 2] = 0;
            m2 = c[C2 >> 2] | 0;
            if ((m2 | 0) > 0) {
              j2 = c[e2 >> 2] | 0;
              l2 = 0;
              do {
                k2 = c[j2 + (l2 * 320 | 0) + 304 >> 2] | 0;
                if ((k2 | 0) >= 0 ? (D2 = b2 + (k2 << 8) + 236 | 0, (c[D2 >> 2] | 0) == 0) : 0)
                  c[D2 >> 2] = 8;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (m2 | 0));
            }
          } else
            E2 = 38;
        } while (0);
        if ((E2 | 0) == 38) {
          c[e2 + 104 >> 2] = 0;
          g2 = -1;
        }
        i2 = F2;
        return +g2;
      }
      function Jf(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0;
        U2 = i2;
        i2 = i2 + 2544 | 0;
        S2 = U2 + 208 | 0;
        R2 = U2 + 200 | 0;
        G2 = U2 + 184 | 0;
        Q2 = U2 + 176 | 0;
        F2 = U2 + 168 | 0;
        E2 = U2 + 152 | 0;
        P2 = U2 + 144 | 0;
        D2 = U2 + 136 | 0;
        M2 = U2 + 128 | 0;
        L2 = U2 + 120 | 0;
        K2 = U2 + 112 | 0;
        C2 = U2 + 104 | 0;
        j2 = U2 + 96 | 0;
        g2 = U2 + 88 | 0;
        f2 = U2 + 80 | 0;
        e2 = U2 + 72 | 0;
        d2 = U2 + 64 | 0;
        H2 = U2;
        I2 = U2 + 2280 | 0;
        J2 = U2 + 232 | 0;
        z2 = U2 + 224 | 0;
        O2 = U2 + 220 | 0;
        A2 = U2 + 216 | 0;
        B2 = U2 + 212 | 0;
        T2 = _i(a2, 5306) | 0;
        a:
          do {
            if (!T2) {
              c[d2 >> 2] = a2;
              Me(3, 5308, d2);
              d2 = ri(c[(qi() | 0) >> 2] | 0) | 0;
              c[e2 >> 2] = 5367;
              c[e2 + 4 >> 2] = d2;
              Me(3, 5361, e2);
              d2 = 0;
            } else {
              Kf(I2, T2);
              c[f2 >> 2] = O2;
              if ((kj(I2, 5368, f2) | 0) != 1) {
                c[g2 >> 2] = a2;
                Me(3, 5371, g2);
                Wi(T2) | 0;
                d2 = 0;
                break;
              }
              d2 = c[O2 >> 2] | 0;
              N2 = Uj(d2 * 320 | 0) | 0;
              if (!N2) {
                Me(3, 5472, j2);
                rb(1);
              }
              r2 = H2 + 8 | 0;
              s2 = H2 + 16 | 0;
              t2 = H2 + 24 | 0;
              u2 = H2 + 32 | 0;
              v2 = H2 + 40 | 0;
              w2 = H2 + 48 | 0;
              x2 = H2 + 56 | 0;
              y2 = (b2 | 0) == 0;
              b:
                do {
                  if ((d2 | 0) > 0) {
                    d2 = 0;
                    f2 = 0;
                    c:
                      while (1) {
                        Kf(I2, T2);
                        e2 = N2 + (d2 * 320 | 0) | 0;
                        g2 = N2 + (d2 * 320 | 0) + 312 | 0;
                        c[C2 >> 2] = g2;
                        c[C2 + 4 >> 2] = z2;
                        if ((kj(I2, 5489, C2) | 0) == 1) {
                          q2 = c[g2 >> 2] | 0;
                          c[e2 >> 2] = (q2 & -32768 | 0) == 0 & true ? q2 & 32767 : 0;
                          c[N2 + (d2 * 320 | 0) + 4 >> 2] = 1;
                          f2 = f2 | 2;
                        } else {
                          if (y2) {
                            e2 = 10;
                            break;
                          }
                          if (!(Qe(J2, a2, 2048, 1) | 0)) {
                            e2 = 12;
                            break;
                          }
                          Cj(J2, I2, 2047 - (Bj(J2) | 0) | 0) | 0;
                          q2 = Ke(b2, J2) | 0;
                          c[e2 >> 2] = q2;
                          if ((q2 | 0) < 0) {
                            e2 = 14;
                            break;
                          }
                          c[N2 + (d2 * 320 | 0) + 4 >> 2] = 0;
                          f2 = f2 | 1;
                        }
                        Kf(I2, T2);
                        e2 = N2 + (d2 * 320 | 0) + 8 | 0;
                        c[D2 >> 2] = e2;
                        if ((kj(I2, 5785, D2) | 0) != 1) {
                          e2 = 18;
                          break;
                        }
                        Kf(I2, T2);
                        o2 = N2 + (d2 * 320 | 0) + 16 | 0;
                        p2 = N2 + (d2 * 320 | 0) + 24 | 0;
                        q2 = N2 + (d2 * 320 | 0) + 40 | 0;
                        c[E2 >> 2] = o2;
                        c[E2 + 4 >> 2] = p2;
                        c[E2 + 8 >> 2] = N2 + (d2 * 320 | 0) + 32;
                        c[E2 + 12 >> 2] = q2;
                        if ((kj(I2, 5894, E2) | 0) != 4) {
                          c[F2 >> 2] = A2;
                          c[F2 + 4 >> 2] = B2;
                          if ((kj(I2, 5910, F2) | 0) == 2)
                            g2 = 0;
                          else {
                            e2 = 21;
                            break;
                          }
                        } else
                          g2 = 1;
                        do {
                          Kf(I2, T2);
                          c[G2 >> 2] = N2 + (d2 * 320 | 0) + 16 + (g2 << 5);
                          c[G2 + 4 >> 2] = N2 + (d2 * 320 | 0) + 16 + (g2 << 5) + 8;
                          c[G2 + 8 >> 2] = N2 + (d2 * 320 | 0) + 16 + (g2 << 5) + 16;
                          c[G2 + 12 >> 2] = N2 + (d2 * 320 | 0) + 16 + (g2 << 5) + 24;
                          if ((kj(I2, 5894, G2) | 0) != 4) {
                            e2 = 23;
                            break c;
                          }
                          g2 = g2 + 1 | 0;
                        } while ((g2 | 0) < 3);
                        Oe(o2, N2 + (d2 * 320 | 0) + 112 | 0) | 0;
                        W2 = +h[e2 >> 3];
                        V2 = W2 * -0.5;
                        h[H2 >> 3] = V2;
                        W2 = W2 * 0.5;
                        h[r2 >> 3] = W2;
                        h[s2 >> 3] = W2;
                        h[t2 >> 3] = W2;
                        h[u2 >> 3] = W2;
                        h[v2 >> 3] = V2;
                        h[w2 >> 3] = V2;
                        h[x2 >> 3] = V2;
                        e2 = N2 + (d2 * 320 | 0) + 48 | 0;
                        g2 = N2 + (d2 * 320 | 0) + 56 | 0;
                        j2 = N2 + (d2 * 320 | 0) + 72 | 0;
                        k2 = N2 + (d2 * 320 | 0) + 80 | 0;
                        l2 = N2 + (d2 * 320 | 0) + 88 | 0;
                        m2 = N2 + (d2 * 320 | 0) + 104 | 0;
                        n2 = 0;
                        do {
                          V2 = +h[H2 + (n2 << 4) >> 3];
                          W2 = +h[H2 + (n2 << 4) + 8 >> 3];
                          h[N2 + (d2 * 320 | 0) + 208 + (n2 * 24 | 0) >> 3] = +h[q2 >> 3] + (+h[o2 >> 3] * V2 + +h[p2 >> 3] * W2);
                          h[N2 + (d2 * 320 | 0) + 208 + (n2 * 24 | 0) + 8 >> 3] = +h[j2 >> 3] + (+h[e2 >> 3] * V2 + +h[g2 >> 3] * W2);
                          h[N2 + (d2 * 320 | 0) + 208 + (n2 * 24 | 0) + 16 >> 3] = +h[m2 >> 3] + (+h[k2 >> 3] * V2 + +h[l2 >> 3] * W2);
                          n2 = n2 + 1 | 0;
                        } while ((n2 | 0) != 4);
                        d2 = d2 + 1 | 0;
                        if ((d2 | 0) >= (c[O2 >> 2] | 0))
                          break b;
                      }
                    if ((e2 | 0) == 10) {
                      c[K2 >> 2] = a2;
                      c[K2 + 4 >> 2] = I2;
                      Me(3, 5496, K2);
                    } else if ((e2 | 0) == 12) {
                      c[L2 >> 2] = a2;
                      Me(3, 5624, L2);
                    } else if ((e2 | 0) == 14) {
                      c[M2 >> 2] = a2;
                      c[M2 + 4 >> 2] = J2;
                      Me(3, 5708, M2);
                    } else if ((e2 | 0) == 18) {
                      c[P2 >> 2] = a2;
                      c[P2 + 4 >> 2] = d2 + 1;
                      Me(3, 5789, P2);
                    } else if ((e2 | 0) == 21) {
                      c[Q2 >> 2] = a2;
                      c[Q2 + 4 >> 2] = d2 + 1;
                      Me(3, 5916, Q2);
                    } else if ((e2 | 0) == 23) {
                      c[R2 >> 2] = a2;
                      c[R2 + 4 >> 2] = d2 + 1;
                      Me(3, 5916, R2);
                    }
                    Wi(T2) | 0;
                    Vj(N2);
                    d2 = 0;
                    break a;
                  } else
                    f2 = 0;
                } while (0);
              Wi(T2) | 0;
              d2 = Uj(136) | 0;
              if (!d2) {
                Me(3, 5472, S2);
                rb(1);
              }
              c[d2 >> 2] = N2;
              c[d2 + 4 >> 2] = c[O2 >> 2];
              c[d2 + 104 >> 2] = 0;
              do {
                if ((f2 & 3 | 0) != 3) {
                  e2 = d2 + 108 | 0;
                  if (!(f2 & 1)) {
                    c[e2 >> 2] = 1;
                    break;
                  } else {
                    c[e2 >> 2] = 0;
                    break;
                  }
                } else
                  c[d2 + 108 >> 2] = 2;
              } while (0);
              h[d2 + 112 >> 3] = 0.5;
              h[d2 + 120 >> 3] = 0.5;
            }
          } while (0);
        i2 = U2;
        return d2 | 0;
      }
      function Kf(b2, c2) {
        b2 = b2 | 0;
        c2 = c2 | 0;
        var d2 = 0, e2 = 0;
        a:
          do {
            if (Zi(b2, 256, c2) | 0)
              while (1) {
                d2 = Bj(b2) | 0;
                b:
                  do {
                    if (d2)
                      while (1) {
                        d2 = d2 + -1 | 0;
                        e2 = b2 + d2 | 0;
                        switch (a[e2 >> 0] | 0) {
                          case 13:
                          case 10:
                            break;
                          default:
                            break b;
                        }
                        a[e2 >> 0] = 0;
                        if (!d2)
                          break b;
                      }
                  } while (0);
                switch (a[b2 >> 0] | 0) {
                  case 0:
                  case 35:
                    break;
                  default:
                    break a;
                }
                if (!(Zi(b2, 256, c2) | 0))
                  break a;
              }
          } while (0);
        return;
      }
      function Lf(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = +b2;
        d2 = +d2;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
        r2 = i2;
        i2 = i2 + 400 | 0;
        n2 = r2 + 296 | 0;
        q2 = r2 + 200 | 0;
        o2 = r2 + 128 | 0;
        p2 = r2;
        k2 = c[a2 >> 2] | 0;
        f2 = c[a2 + 4 >> 2] | 0;
        if ((bf(a2 + 8 | 0, n2, q2) | 0) < 0)
          Me(3, 6025, r2 + 392 | 0);
        else {
          j2 = +(f2 + -1 | 0);
          f2 = n2 + 32 | 0;
          h[f2 >> 3] = j2 * +h[n2 + 64 >> 3] - +h[f2 >> 3];
          f2 = n2 + 40 | 0;
          h[f2 >> 3] = j2 * +h[n2 + 72 >> 3] - +h[f2 >> 3];
          f2 = n2 + 48 | 0;
          h[f2 >> 3] = j2 * +h[n2 + 80 >> 3] - +h[f2 >> 3];
          f2 = n2 + 56 | 0;
          h[f2 >> 3] = j2 * +h[n2 + 88 >> 3] - +h[f2 >> 3];
          g2 = +h[n2 + 80 >> 3];
          f2 = 0;
          do {
            h[o2 + (f2 * 24 | 0) >> 3] = +h[n2 + (f2 << 5) >> 3] / g2;
            h[o2 + (f2 * 24 | 0) + 8 >> 3] = +h[n2 + (f2 << 5) + 8 >> 3] / g2;
            h[o2 + (f2 * 24 | 0) + 16 >> 3] = +h[n2 + (f2 << 5) + 16 >> 3] / g2;
            f2 = f2 + 1 | 0;
          } while ((f2 | 0) != 3);
          g2 = +(k2 + -1 | 0);
          h[p2 >> 3] = +h[o2 >> 3] * 2 / g2;
          h[p2 + 8 >> 3] = +h[o2 + 8 >> 3] * 2 / g2;
          h[p2 + 16 >> 3] = +h[o2 + 16 >> 3] * 2 / g2 + -1;
          k2 = p2 + 24 | 0;
          c[k2 >> 2] = 0;
          c[k2 + 4 >> 2] = 0;
          c[k2 + 8 >> 2] = 0;
          c[k2 + 12 >> 2] = 0;
          h[p2 + 40 >> 3] = +h[o2 + 32 >> 3] * 2 / j2;
          h[p2 + 48 >> 3] = +h[o2 + 40 >> 3] * 2 / j2 + -1;
          k2 = p2 + 56 | 0;
          g2 = d2 - b2;
          c[k2 >> 2] = 0;
          c[k2 + 4 >> 2] = 0;
          c[k2 + 8 >> 2] = 0;
          c[k2 + 12 >> 2] = 0;
          c[k2 + 16 >> 2] = 0;
          c[k2 + 20 >> 2] = 0;
          h[p2 + 80 >> 3] = (b2 + d2) / g2;
          h[p2 + 88 >> 3] = d2 * -2 * b2 / g2;
          k2 = p2 + 96 | 0;
          c[k2 >> 2] = 0;
          c[k2 + 4 >> 2] = 0;
          c[k2 + 8 >> 2] = 0;
          c[k2 + 12 >> 2] = 0;
          h[p2 + 112 >> 3] = 1;
          h[p2 + 120 >> 3] = 0;
          g2 = +h[q2 + 24 >> 3];
          j2 = +h[q2 + 56 >> 3];
          d2 = +h[q2 + 88 >> 3];
          k2 = 0;
          do {
            b2 = +h[p2 + (k2 << 5) >> 3];
            f2 = p2 + (k2 << 5) + 8 | 0;
            a2 = p2 + (k2 << 5) + 16 | 0;
            l2 = +h[f2 >> 3];
            m2 = +h[a2 >> 3];
            n2 = 0;
            do {
              h[e2 + ((n2 << 2) + k2 << 3) >> 3] = b2 * +h[q2 + (n2 << 3) >> 3] + l2 * +h[q2 + 32 + (n2 << 3) >> 3] + m2 * +h[q2 + 64 + (n2 << 3) >> 3];
              n2 = n2 + 1 | 0;
            } while ((n2 | 0) != 3);
            h[e2 + (k2 + 12 << 3) >> 3] = +h[p2 + (k2 << 5) + 24 >> 3] + (b2 * g2 + +h[f2 >> 3] * j2 + +h[a2 >> 3] * d2);
            k2 = k2 + 1 | 0;
          } while ((k2 | 0) != 4);
        }
        i2 = r2;
        return;
      }
      function Mf(a2) {
        a2 = a2 | 0;
        c[496] = a2;
        return;
      }
      function Nf() {
        return c[496] | 0;
      }
      function Of(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0;
        b2 = a2 + 212 | 0;
        d2 = c[b2 >> 2] | 0;
        if (d2) {
          ze(d2) | 0;
          Qd(c[b2 >> 2] | 0) | 0;
          c[b2 >> 2] = 0;
        }
        b2 = a2 + 224 | 0;
        if (c[b2 >> 2] | 0) {
          Ld(b2) | 0;
          c[b2 >> 2] = 0;
        }
        b2 = a2 + 192 | 0;
        if (c[b2 >> 2] | 0) {
          kf(b2) | 0;
          c[b2 >> 2] = 0;
        }
        return;
      }
      function Pf(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0;
        g2 = i2;
        i2 = i2 + 16 | 0;
        d2 = g2;
        c[d2 >> 2] = a2;
        if (!(Cg(2044, d2) | 0))
          a2 = -1;
        else {
          f2 = Dg(2044, d2) | 0;
          a2 = f2 + 196 | 0;
          b2 = c[a2 >> 2] | 0;
          if (b2) {
            Vj(b2);
            c[a2 >> 2] = 0;
            c[f2 + 200 >> 2] = 0;
          }
          Of(f2);
          Ce(c[f2 + 216 >> 2] | 0) | 0;
          Eg(2044, d2) | 0;
          d2 = f2 + 248 | 0;
          e2 = f2 + 252 | 0;
          a2 = c[d2 >> 2] | 0;
          if ((c[e2 >> 2] | 0) != (a2 | 0)) {
            b2 = 0;
            do {
              Ff(c[a2 + (b2 << 3) + 4 >> 2] | 0) | 0;
              b2 = b2 + 1 | 0;
              a2 = c[d2 >> 2] | 0;
            } while (b2 >>> 0 < (c[e2 >> 2] | 0) - a2 >> 3 >>> 0);
          }
          Fg(d2);
          Lh(d2);
          Fg(f2 + 248 | 0);
          Lh(f2);
          a2 = 0;
        }
        i2 = g2;
        return a2 | 0;
      }
      function Qf(b2) {
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
        h2 = i2;
        i2 = i2 + 208 | 0;
        g2 = h2 + 192 | 0;
        f2 = h2;
        e2 = h2 + 196 | 0;
        if (!(a[b2 >> 0] & 1))
          d2 = b2 + 1 | 0;
        else
          d2 = c[b2 + 8 >> 2] | 0;
        if ((ef(d2, 1, f2, h2 + 184 | 0) | 0) < 0) {
          if (!(a[b2 >> 0] & 1))
            d2 = b2 + 1 | 0;
          else
            d2 = c[b2 + 8 >> 2] | 0;
          c[g2 >> 2] = d2;
          Me(3, 6093, g2);
          d2 = -1;
        } else {
          d2 = c[521] | 0;
          c[521] = d2 + 1;
          c[e2 >> 2] = d2;
          ik(Gg(2064, e2) | 0, f2 | 0, 184) | 0;
        }
        i2 = h2;
        return d2 | 0;
      }
      function Rf(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
        n2 = i2;
        i2 = i2 + 48 | 0;
        m2 = n2 + 24 | 0;
        l2 = n2 + 16 | 0;
        j2 = n2 + 8 | 0;
        f2 = n2;
        d2 = n2 + 32 | 0;
        e2 = n2 + 28 | 0;
        c[d2 >> 2] = a2;
        c[e2 >> 2] = b2;
        do {
          if ((Cg(2044, d2) | 0) != 0 ? (k2 = Dg(2044, d2) | 0, (Hg(2064, e2) | 0) != 0) : 0) {
            g2 = k2 + 8 | 0;
            ik(g2 | 0, Gg(2064, e2) | 0, 184) | 0;
            e2 = c[g2 >> 2] | 0;
            d2 = k2 + 204 | 0;
            b2 = c[k2 + 12 >> 2] | 0;
            a2 = k2 + 208 | 0;
            if (!((e2 | 0) == (c[d2 >> 2] | 0) ? (b2 | 0) == (c[a2 >> 2] | 0) : 0)) {
              c[f2 >> 2] = e2;
              c[f2 + 4 >> 2] = b2;
              Me(2, 6152, f2);
              af(g2, c[d2 >> 2] | 0, c[a2 >> 2] | 0, g2) | 0;
            }
            Of(k2);
            d2 = jf(g2, 15) | 0;
            a2 = k2 + 192 | 0;
            c[a2 >> 2] = d2;
            if (!d2) {
              Me(3, 6199, j2);
              d2 = -1;
              break;
            }
            d2 = Md(d2) | 0;
            b2 = k2 + 212 | 0;
            c[b2 >> 2] = d2;
            if (!d2) {
              Me(3, 6237, l2);
              d2 = -1;
              break;
            }
            Nd(d2, 2) | 0;
            l2 = Jd(g2) | 0;
            c[k2 + 224 >> 2] = l2;
            if (!l2) {
              Me(3, 6274, m2);
              d2 = -1;
              break;
            } else {
              ye(c[b2 >> 2] | 0, c[k2 + 216 >> 2] | 0) | 0;
              Lf(c[a2 >> 2] | 0, +h[k2 + 232 >> 3], +h[k2 + 240 >> 3], k2 + 264 | 0);
              d2 = 0;
              break;
            }
          } else
            d2 = -1;
        } while (0);
        i2 = n2;
        return d2 | 0;
      }
      function Sf(b2, d2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0;
        j2 = i2;
        i2 = i2 + 16 | 0;
        h2 = j2 + 8 | 0;
        g2 = j2;
        e2 = j2 + 12 | 0;
        c[e2 >> 2] = b2;
        if (Cg(2044, e2) | 0) {
          f2 = Dg(2044, e2) | 0;
          if (!(a[d2 >> 0] & 1))
            d2 = d2 + 1 | 0;
          else
            d2 = c[d2 + 8 >> 2] | 0;
          b2 = f2 + 216 | 0;
          e2 = Ke(c[b2 >> 2] | 0, d2) | 0;
          c[f2 + 260 >> 2] = e2;
          if ((e2 | 0) < 0) {
            c[g2 >> 2] = d2;
            Me(3, 6312, g2);
            Ce(c[b2 >> 2] | 0) | 0;
            Me(3, 6358, h2);
            e2 = -1;
          }
        } else
          e2 = -1;
        i2 = j2;
        return e2 | 0;
      }
      function Tf(b2, d2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
        l2 = i2;
        i2 = i2 + 32 | 0;
        g2 = l2 + 16 | 0;
        f2 = l2 + 8 | 0;
        e2 = l2 + 20 | 0;
        k2 = l2;
        c[e2 >> 2] = b2;
        do {
          if (Cg(2044, e2) | 0) {
            j2 = Dg(2044, e2) | 0;
            if (!(a[d2 >> 0] & 1))
              e2 = d2 + 1 | 0;
            else
              e2 = c[d2 + 8 >> 2] | 0;
            b2 = c[j2 + 212 >> 2] | 0;
            d2 = j2 + 216 | 0;
            h2 = j2 + 220 | 0;
            e2 = Jf(e2, c[d2 >> 2] | 0) | 0;
            c[h2 >> 2] = e2;
            if (!e2) {
              Me(3, 6402, f2);
              Ce(c[d2 >> 2] | 0) | 0;
              Me(3, 6429, g2);
              e2 = -1;
              break;
            }
            switch (c[e2 + 108 >> 2] | 0) {
              case 0: {
                Zd(b2, 0) | 0;
                break;
              }
              case 1: {
                Zd(b2, 2) | 0;
                break;
              }
              default:
                Zd(b2, 3) | 0;
            }
            b2 = j2 + 248 | 0;
            d2 = j2 + 252 | 0;
            f2 = c[d2 >> 2] | 0;
            e2 = f2 - (c[b2 >> 2] | 0) >> 3;
            g2 = k2;
            c[g2 >> 2] = 0;
            c[g2 + 4 >> 2] = 0;
            c[k2 >> 2] = e2;
            c[k2 + 4 >> 2] = c[h2 >> 2];
            if ((f2 | 0) == (c[j2 + 256 >> 2] | 0)) {
              Ig(b2, k2);
              break;
            } else {
              j2 = k2;
              e2 = c[j2 >> 2] | 0;
              j2 = c[j2 + 4 >> 2] | 0;
              k2 = f2;
              c[k2 >> 2] = e2;
              c[k2 + 4 >> 2] = j2;
              c[d2 >> 2] = (c[d2 >> 2] | 0) + 8;
              break;
            }
          } else
            e2 = -1;
        } while (0);
        i2 = l2;
        return e2 | 0;
      }
      function Uf(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
        g2 = i2;
        i2 = i2 + 16 | 0;
        d2 = g2;
        c[d2 >> 2] = a2;
        if (((Cg(2044, d2) | 0) != 0 ? (e2 = Dg(2044, d2) | 0, (b2 | 0) >= 0) : 0) ? (f2 = c[e2 + 248 >> 2] | 0, (c[e2 + 252 >> 2] | 0) - f2 >> 3 >>> 0 > b2 >>> 0) : 0)
          d2 = c[(c[f2 + (b2 << 3) + 4 >> 2] | 0) + 4 >> 2] | 0;
        else
          d2 = -1;
        i2 = g2;
        return d2 | 0;
      }
      function Vf(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0;
        d2 = i2;
        i2 = i2 + 16 | 0;
        b2 = d2;
        c[b2 >> 2] = a2;
        if (!(Cg(2044, b2) | 0))
          b2 = -1;
        else {
          b2 = Dg(2044, b2) | 0;
          b2 = (c[b2 + 252 >> 2] | 0) - (c[b2 + 248 >> 2] | 0) >> 3;
        }
        i2 = d2;
        return b2 | 0;
      }
      function Wf(a2, b2) {
        a2 = a2 | 0;
        b2 = +b2;
        var d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        d2 = e2;
        c[d2 >> 2] = a2;
        if (Cg(2044, d2) | 0)
          h[(Dg(2044, d2) | 0) + 232 >> 3] = b2;
        i2 = e2;
        return;
      }
      function Xf(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        d2 = e2;
        c[d2 >> 2] = a2;
        if (!(Cg(2044, d2) | 0))
          b2 = -1;
        else
          b2 = +h[(Dg(2044, d2) | 0) + 232 >> 3];
        i2 = e2;
        return +b2;
      }
      function Yf(a2, b2) {
        a2 = a2 | 0;
        b2 = +b2;
        var d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        d2 = e2;
        c[d2 >> 2] = a2;
        if (Cg(2044, d2) | 0)
          h[(Dg(2044, d2) | 0) + 240 >> 3] = b2;
        i2 = e2;
        return;
      }
      function Zf(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        d2 = e2;
        c[d2 >> 2] = a2;
        if (!(Cg(2044, d2) | 0))
          b2 = -1;
        else
          b2 = +h[(Dg(2044, d2) | 0) + 240 >> 3];
        i2 = e2;
        return +b2;
      }
      function _f(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0;
        f2 = i2;
        i2 = i2 + 16 | 0;
        e2 = f2;
        d2 = f2 + 4 | 0;
        c[d2 >> 2] = a2;
        if ((Cg(2044, d2) | 0) != 0 ? (Zd(c[(Dg(2044, d2) | 0) + 212 >> 2] | 0, b2) | 0) == 0 : 0) {
          c[e2 >> 2] = b2;
          Me(1, 6478, e2);
        }
        i2 = f2;
        return;
      }
      function $f(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        b2 = e2 + 4 | 0;
        d2 = e2;
        c[b2 >> 2] = a2;
        if (!(Cg(2044, b2) | 0)) {
          i2 = e2;
          return -1;
        } else {
          a2 = (ae(c[(Dg(2044, b2) | 0) + 212 >> 2] | 0, d2) | 0) == 0;
          i2 = e2;
          return (a2 ? c[d2 >> 2] | 0 : -1) | 0;
        }
        return 0;
      }
      function ag(a2, b2) {
        a2 = a2 | 0;
        b2 = +b2;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, j2 = 0, k2 = 0;
        k2 = i2;
        i2 = i2 + 16 | 0;
        j2 = k2;
        d2 = k2 + 8 | 0;
        c[d2 >> 2] = a2;
        if ((((Cg(2044, d2) | 0) != 0 ? (e2 = Dg(2044, d2) | 0, !(b2 <= 0 | b2 >= 1)) : 0) ? (f2 = b2, g2 = c[e2 + 212 >> 2] | 0, (g2 | 0) != 0) : 0) ? (be(g2, f2) | 0) == 0 : 0) {
          h[j2 >> 3] = f2;
          Me(1, 6513, j2);
        }
        i2 = k2;
        return;
      }
      function bg(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0, f2 = 0;
        f2 = i2;
        i2 = i2 + 16 | 0;
        b2 = f2 + 8 | 0;
        e2 = f2;
        c[b2 >> 2] = a2;
        if ((Cg(2044, b2) | 0) != 0 ? (d2 = c[(Dg(2044, b2) | 0) + 212 >> 2] | 0, (d2 | 0) != 0) : 0) {
          a2 = (ce(d2, e2) | 0) == 0;
          i2 = f2;
          return +(a2 ? +h[e2 >> 3] : -1);
        }
        i2 = f2;
        return -1;
      }
      function cg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        d2 = e2;
        c[d2 >> 2] = a2;
        if (Cg(2044, d2) | 0)
          _d(c[(Dg(2044, d2) | 0) + 212 >> 2] | 0, b2) | 0;
        i2 = e2;
        return;
      }
      function dg(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        b2 = e2 + 4 | 0;
        d2 = e2;
        c[b2 >> 2] = a2;
        if (!(Cg(2044, b2) | 0))
          b2 = -1;
        else {
          $d(c[(Dg(2044, b2) | 0) + 212 >> 2] | 0, d2) | 0;
          b2 = c[d2 >> 2] | 0;
        }
        i2 = e2;
        return b2 | 0;
      }
      function eg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0;
        f2 = i2;
        i2 = i2 + 16 | 0;
        e2 = f2;
        d2 = f2 + 4 | 0;
        c[d2 >> 2] = a2;
        if ((Cg(2044, d2) | 0) != 0 ? (Sd(c[(Dg(2044, d2) | 0) + 212 >> 2] | 0, b2) | 0) == 0 : 0) {
          c[e2 >> 2] = b2;
          Me(1, 6544, e2);
        }
        i2 = f2;
        return;
      }
      function fg(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        b2 = e2 + 4 | 0;
        d2 = e2;
        c[b2 >> 2] = a2;
        if (!(Cg(2044, b2) | 0)) {
          i2 = e2;
          return -1;
        } else {
          a2 = (Td(c[(Dg(2044, b2) | 0) + 212 >> 2] | 0, d2) | 0) == 0;
          i2 = e2;
          return (a2 ? c[d2 >> 2] | 0 : -1) | 0;
        }
        return 0;
      }
      function gg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
        g2 = i2;
        i2 = i2 + 16 | 0;
        f2 = g2;
        d2 = g2 + 4 | 0;
        c[d2 >> 2] = a2;
        if (((Cg(2044, d2) | 0) != 0 ? (e2 = Dg(2044, d2) | 0, b2 >>> 0 <= 255) : 0) ? (Ud(c[e2 + 212 >> 2] | 0, b2) | 0) == 0 : 0) {
          c[f2 >> 2] = b2;
          Me(1, 6569, f2);
        }
        i2 = g2;
        return;
      }
      function hg(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        b2 = e2 + 4 | 0;
        d2 = e2;
        c[b2 >> 2] = a2;
        if (!(Cg(2044, b2) | 0)) {
          i2 = e2;
          return -1;
        } else {
          a2 = (Vd(c[(Dg(2044, b2) | 0) + 212 >> 2] | 0, d2) | 0) == 0;
          i2 = e2;
          return (a2 ? c[d2 >> 2] | 0 : -1) | 0;
        }
        return 0;
      }
      function ig(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0;
        f2 = i2;
        i2 = i2 + 16 | 0;
        e2 = f2;
        d2 = f2 + 4 | 0;
        c[d2 >> 2] = a2;
        if ((Cg(2044, d2) | 0) != 0 ? (Pd(c[(Dg(2044, d2) | 0) + 212 >> 2] | 0, b2) | 0) == 0 : 0) {
          c[e2 >> 2] = b2;
          Me(1, 6590, e2);
        }
        i2 = f2;
        return;
      }
      function jg(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        b2 = e2 + 4 | 0;
        d2 = e2;
        c[b2 >> 2] = a2;
        if (!(Cg(2044, b2) | 0)) {
          i2 = e2;
          return -1;
        } else {
          a2 = (Wd(c[(Dg(2044, b2) | 0) + 212 >> 2] | 0, d2) | 0) == 0;
          i2 = e2;
          return (a2 ? c[d2 >> 2] | 0 : -1) | 0;
        }
        return 0;
      }
      function kg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0;
        f2 = i2;
        i2 = i2 + 16 | 0;
        e2 = f2;
        d2 = f2 + 4 | 0;
        c[d2 >> 2] = a2;
        if (!(Cg(2044, d2) | 0))
          b2 = 0;
        else {
          a2 = (b2 | 0) != 0;
          Od(c[(Dg(2044, d2) | 0) + 212 >> 2] | 0, a2 & 1) | 0;
          c[e2 >> 2] = a2 ? 6616 : 6620;
          Me(1, 6625, e2);
        }
        i2 = f2;
        return b2 | 0;
      }
      function lg(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0;
        d2 = i2;
        i2 = i2 + 16 | 0;
        b2 = d2;
        c[b2 >> 2] = a2;
        if (!(Cg(2044, b2) | 0))
          b2 = 0;
        else
          b2 = c[(c[(Dg(2044, b2) | 0) + 212 >> 2] | 0) + 4834148 >> 2] | 0;
        i2 = d2;
        return b2 | 0;
      }
      function mg(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        b2 = e2 + 4 | 0;
        d2 = e2;
        c[b2 >> 2] = a2;
        if (!(Cg(2044, b2) | 0))
          b2 = 0;
        else {
          Rd(c[(Dg(2044, b2) | 0) + 212 >> 2] | 0, d2) | 0;
          b2 = c[d2 >> 2] | 0;
        }
        i2 = e2;
        return b2 | 0;
      }
      function ng(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0;
        f2 = i2;
        i2 = i2 + 16 | 0;
        e2 = f2;
        d2 = f2 + 4 | 0;
        c[d2 >> 2] = a2;
        if ((Cg(2044, d2) | 0) != 0 ? (Xd(c[(Dg(2044, d2) | 0) + 212 >> 2] | 0, b2) | 0) == 0 : 0) {
          c[e2 >> 2] = b2;
          Me(1, 6647, e2);
        }
        i2 = f2;
        return;
      }
      function og(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        b2 = e2 + 4 | 0;
        d2 = e2;
        c[b2 >> 2] = a2;
        if (!(Cg(2044, b2) | 0)) {
          i2 = e2;
          return -1;
        } else {
          a2 = (Yd(c[(Dg(2044, b2) | 0) + 212 >> 2] | 0, d2) | 0) == 0;
          i2 = e2;
          return (a2 ? c[d2 >> 2] | 0 : -1) | 0;
        }
        return 0;
      }
      function pg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var c2 = 0;
        c2 = 0;
        do {
          h[b2 + (c2 << 5) >> 3] = +h[a2 + (c2 << 5) >> 3];
          h[b2 + (c2 << 5) + 8 >> 3] = +h[a2 + (c2 << 5) + 8 >> 3];
          h[b2 + (c2 << 5) + 16 >> 3] = +h[a2 + (c2 << 5) + 16 >> 3];
          h[b2 + (c2 << 5) + 24 >> 3] = +h[a2 + (c2 << 5) + 24 >> 3];
          c2 = c2 + 1 | 0;
        } while ((c2 | 0) != 3);
        return;
      }
      function qg(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0;
        f2 = i2;
        i2 = i2 + 16 | 0;
        e2 = f2;
        c[e2 >> 2] = a2;
        do {
          if (Cg(2044, e2) | 0) {
            e2 = Dg(2044, e2) | 0;
            a2 = c[e2 + 212 >> 2] | 0;
            if ((c[a2 + 44 >> 2] | 0) > (b2 | 0)) {
              +ke(c[e2 + 224 >> 2] | 0, (b2 | 0) < 0 ? 8 : a2 + 48 + (b2 << 8) | 0, +(d2 | 0), 264);
              e2 = 0;
              break;
            } else {
              e2 = c[523] | 0;
              break;
            }
          } else
            e2 = c[522] | 0;
        } while (0);
        i2 = f2;
        return e2 | 0;
      }
      function rg(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0;
        f2 = i2;
        i2 = i2 + 16 | 0;
        e2 = f2;
        c[e2 >> 2] = a2;
        do {
          if (Cg(2044, e2) | 0) {
            e2 = Dg(2044, e2) | 0;
            a2 = c[e2 + 212 >> 2] | 0;
            if ((c[a2 + 44 >> 2] | 0) > (b2 | 0)) {
              +le(c[e2 + 224 >> 2] | 0, (b2 | 0) < 0 ? 8 : a2 + 48 + (b2 << 8) | 0, 264, +(d2 | 0), 264);
              e2 = 0;
              break;
            } else {
              e2 = c[523] | 0;
              break;
            }
          } else
            e2 = c[522] | 0;
        } while (0);
        i2 = f2;
        return e2 | 0;
      }
      function sg(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0;
        f2 = i2;
        i2 = i2 + 16 | 0;
        e2 = f2;
        c[e2 >> 2] = a2;
        do {
          if (Cg(2044, e2) | 0) {
            e2 = c[(Dg(2044, e2) | 0) + 212 >> 2] | 0;
            if ((c[e2 + 44 >> 2] | 0) > (b2 | 0)) {
              c[((b2 | 0) < 0 ? 8 : e2 + 48 + (b2 << 8) | 0) + 16 >> 2] = d2;
              e2 = 0;
              break;
            } else {
              e2 = c[523] | 0;
              break;
            }
          } else
            e2 = c[522] | 0;
        } while (0);
        i2 = f2;
        return e2 | 0;
      }
      function tg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        d2 = e2;
        c[d2 >> 2] = a2;
        do {
          if (Cg(2044, d2) | 0) {
            d2 = c[(Dg(2044, d2) | 0) + 212 >> 2] | 0;
            if ((c[d2 + 44 >> 2] | 0) > (b2 | 0)) {
              d2 = (b2 | 0) < 0 ? 8 : d2 + 48 + (b2 << 8) | 0;
              o2 = +h[33];
              h[d2 + 168 >> 3] = o2;
              k2 = +h[34];
              h[d2 + 176 >> 3] = k2;
              n2 = +h[35];
              h[d2 + 184 >> 3] = n2;
              j2 = +h[36];
              h[d2 + 192 >> 3] = j2;
              m2 = +h[37];
              h[d2 + 200 >> 3] = m2;
              g2 = +h[38];
              h[d2 + 208 >> 3] = g2;
              l2 = +h[39];
              h[d2 + 216 >> 3] = l2;
              f2 = +h[40];
              h[d2 + 224 >> 3] = f2;
              h[d2 + 56 >> 3] = (o2 + n2 + m2 + l2) * 0.25;
              h[d2 + 64 >> 3] = (k2 + j2 + g2 + f2) * 0.25;
              d2 = 0;
              break;
            } else {
              d2 = c[523] | 0;
              break;
            }
          } else
            d2 = c[522] | 0;
        } while (0);
        i2 = e2;
        return d2 | 0;
      }
      function ug(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        d2 = e2;
        c[d2 >> 2] = a2;
        do {
          if (Cg(2044, d2) | 0) {
            d2 = Dg(2044, d2) | 0;
            a2 = c[d2 + 248 >> 2] | 0;
            if ((b2 | 0) < 0 ? 1 : (c[d2 + 252 >> 2] | 0) - a2 >> 3 >>> 0 <= b2 >>> 0) {
              d2 = c[524] | 0;
              break;
            } else {
              b2 = c[a2 + (b2 << 3) + 4 >> 2] | 0;
              a2 = c[d2 + 212 >> 2] | 0;
              +Hf(c[d2 + 224 >> 2] | 0, a2 + 48 | 0, c[a2 + 44 >> 2] | 0, b2);
              pg(b2 + 8 | 0, 264);
              d2 = 0;
              break;
            }
          } else
            d2 = c[522] | 0;
        } while (0);
        i2 = e2;
        return d2 | 0;
      }
      function vg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        d2 = e2;
        c[d2 >> 2] = a2;
        do {
          if (Cg(2044, d2) | 0) {
            d2 = Dg(2044, d2) | 0;
            a2 = c[d2 + 248 >> 2] | 0;
            if ((b2 | 0) < 0 ? 1 : (c[d2 + 252 >> 2] | 0) - a2 >> 3 >>> 0 <= b2 >>> 0) {
              d2 = c[524] | 0;
              break;
            } else {
              b2 = c[a2 + (b2 << 3) + 4 >> 2] | 0;
              a2 = c[d2 + 212 >> 2] | 0;
              +Gf(c[d2 + 224 >> 2] | 0, a2 + 48 | 0, c[a2 + 44 >> 2] | 0, b2);
              pg(b2 + 8 | 0, 264);
              d2 = 0;
              break;
            }
          } else
            d2 = c[522] | 0;
        } while (0);
        i2 = e2;
        return d2 | 0;
      }
      function wg(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0;
        d2 = i2;
        i2 = i2 + 16 | 0;
        b2 = d2;
        c[b2 >> 2] = a2;
        if (!(Cg(2044, b2) | 0))
          b2 = c[522] | 0;
        else {
          b2 = Dg(2044, b2) | 0;
          b2 = de(c[b2 + 212 >> 2] | 0, c[b2 + 196 >> 2] | 0) | 0;
        }
        i2 = d2;
        return b2 | 0;
      }
      function xg(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0;
        d2 = i2;
        i2 = i2 + 16 | 0;
        b2 = d2;
        c[b2 >> 2] = a2;
        if (!(Cg(2044, b2) | 0))
          b2 = 2088;
        else
          b2 = (c[(Dg(2044, b2) | 0) + 212 >> 2] | 0) + 44 | 0;
        i2 = d2;
        return c[b2 >> 2] | 0;
      }
      function yg(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0;
        f2 = i2;
        i2 = i2 + 16 | 0;
        e2 = f2;
        c[e2 >> 2] = a2;
        do {
          if (Cg(2044, e2) | 0) {
            a2 = Dg(2044, e2) | 0;
            e2 = c[a2 + 248 >> 2] | 0;
            if ((b2 | 0) < 0 ? 1 : (c[a2 + 252 >> 2] | 0) - e2 >> 3 >>> 0 <= b2 >>> 0) {
              e2 = c[524] | 0;
              break;
            }
            e2 = c[e2 + (b2 << 3) + 4 >> 2] | 0;
            if ((d2 | 0) < 0 ? 1 : (c[e2 + 4 >> 2] | 0) <= (d2 | 0)) {
              e2 = c[523] | 0;
              break;
            } else {
              e2 = c[e2 >> 2] | 0;
              pg(e2 + (d2 * 320 | 0) + 16 | 0, 264);
              Lb(0, c[e2 + (d2 * 320 | 0) + 304 >> 2] | 0, c[e2 + (d2 * 320 | 0) >> 2] | 0, c[e2 + (d2 * 320 | 0) + 4 >> 2] | 0, + +h[e2 + (d2 * 320 | 0) + 8 >> 3]) | 0;
              e2 = 0;
              break;
            }
          } else
            e2 = c[522] | 0;
        } while (0);
        i2 = f2;
        return e2 | 0;
      }
      function zg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0;
        e2 = i2;
        i2 = i2 + 16 | 0;
        d2 = e2;
        c[d2 >> 2] = a2;
        do {
          if (Cg(2044, d2) | 0) {
            d2 = c[(Dg(2044, d2) | 0) + 212 >> 2] | 0;
            if ((c[d2 + 44 >> 2] | 0) > (b2 | 0)) {
              d2 = (b2 | 0) < 0 ? 8 : d2 + 48 + (b2 << 8) | 0;
              Qa(1, c[d2 >> 2] | 0, c[d2 + 4 >> 2] | 0, c[d2 + 8 >> 2] | 0, c[d2 + 12 >> 2] | 0, c[d2 + 16 >> 2] | 0, c[d2 + 20 >> 2] | 0, c[d2 + 24 >> 2] | 0, + +h[d2 + 32 >> 3], + +h[d2 + 40 >> 3], + +h[d2 + 48 >> 3], + +h[d2 + 56 >> 3], + +h[d2 + 64 >> 3], + +h[d2 + 72 >> 3], + +h[d2 + 80 >> 3], + +h[d2 + 88 >> 3], + +h[d2 + 96 >> 3], + +h[d2 + 104 >> 3], + +h[d2 + 112 >> 3], + +h[d2 + 120 >> 3], + +h[d2 + 128 >> 3], + +h[d2 + 136 >> 3], + +h[d2 + 144 >> 3], + +h[d2 + 152 >> 3], + +h[d2 + 160 >> 3], + +h[d2 + 168 >> 3], + +h[d2 + 176 >> 3], + +h[d2 + 184 >> 3], + +h[d2 + 192 >> 3], + +h[d2 + 200 >> 3], + +h[d2 + 208 >> 3], + +h[d2 + 216 >> 3], + +h[d2 + 224 >> 3], c[d2 + 240 >> 2] | 0) | 0;
              d2 = 0;
              break;
            } else {
              d2 = c[523] | 0;
              break;
            }
          } else
            d2 = c[522] | 0;
        } while (0);
        i2 = e2;
        return d2 | 0;
      }
      function Ag(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0;
        h2 = i2;
        i2 = i2 + 16 | 0;
        g2 = h2 + 8 | 0;
        f2 = h2 + 12 | 0;
        e2 = c[525] | 0;
        c[525] = e2 + 1;
        c[f2 >> 2] = e2;
        f2 = Dg(2044, f2) | 0;
        c[f2 >> 2] = e2;
        c[f2 + 204 >> 2] = a2;
        c[f2 + 208 >> 2] = b2;
        j2 = $(a2 << 2, b2) | 0;
        b2 = f2 + 200 | 0;
        c[b2 >> 2] = j2;
        a2 = f2 + 196 | 0;
        c[a2 >> 2] = Uj(j2) | 0;
        j2 = Ae() | 0;
        c[f2 + 216 >> 2] = j2;
        if (!j2)
          Me(3, 8285, h2);
        Rf(e2, d2) | 0;
        c[g2 >> 2] = c[b2 >> 2];
        Me(1, 8322, g2);
        Kb(2, c[f2 >> 2] | 0, c[a2 >> 2] | 0, c[b2 >> 2] | 0, f2 + 264 | 0, 264) | 0;
        i2 = h2;
        return c[f2 >> 2] | 0;
      }
      function Bg(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        a2 = i2;
        i2 = i2 + 16 | 0;
        b2 = a2;
        Jg(8591, 7);
        Kg(8597, 3);
        Lg(8606, 2);
        Lg(8617, 3);
        Mg(8633, 4);
        Kg(8651, 4);
        Ng(8671, 5);
        Jg(8683, 8);
        Mg(8700, 5);
        Jg(8720, 9);
        Jg(8738, 10);
        Mg(8760, 6);
        Mg(8783, 7);
        Kg(8812, 6);
        Kg(8825, 7);
        Jg(8838, 11);
        Mg(8857, 8);
        Mg(8867, 9);
        Kg(8880, 8);
        Kg(8893, 9);
        Og(8912, 10);
        Pg(8924, 1);
        Qg(8936, 1);
        Rg(8959, 1);
        Qg(8982, 2);
        Rg(9004, 2);
        Sg(9026, 1);
        Kg(9043, 10);
        Sg(9060, 2);
        Kg(9073, 11);
        Sg(9086, 3);
        Kg(9110, 12);
        Tg(9134, 3);
        Rg(9147, 3);
        Sg(9160, 4);
        Kg(9178, 13);
        Sg(9196, 5);
        Kg(9212, 14);
        Sg(9228, 6);
        Kg(9245, 15);
        Ug(9262, 2088);
        Ug(9291, 2096);
        Ug(9319, 2092);
        Cb(9352, 680, 0);
        Cb(9369, 680, 1);
        Cb(9385, 680, 0);
        Cb(9407, 680, 0);
        Cb(9432, 680, 1);
        Cb(9457, 680, 1);
        Cb(9482, 680, 100);
        Cb(9509, 680, 0);
        Cb(9535, 680, 1);
        Cb(9561, 680, 0);
        Cb(9588, 680, 0);
        Cb(9615, 680, 1);
        Cb(9641, 680, 2);
        Cb(9666, 680, 3);
        Cb(9704, 680, 4);
        Cb(9741, 680, 0);
        Cb(9775, 680, 0);
        Cb(9799, 680, 1);
        Cb(9825, 680, 2);
        Cb(9852, 680, 2);
        Cb(9886, 680, 5);
        h[b2 >> 3] = 0.5;
        Vg(9904, b2);
        Cb(9925, 680, 0);
        Cb(9944, 680, 1);
        Cb(9962, 680, 2);
        Cb(9980, 680, 3);
        Cb(9999, 680, 4);
        Cb(10021, 680, 3);
        Cb(10040, 680, 515);
        Cb(10069, 680, 259);
        Cb(10097, 680, 4);
        Cb(10116, 680, 772);
        Cb(10146, 680, 1028);
        Cb(10176, 680, 0);
        Cb(10207, 680, 1);
        Cb(10243, 680, 2);
        Cb(10277, 680, 3);
        Cb(10315, 680, 0);
        Cb(10348, 680, 1);
        Cb(10395, 680, 2);
        Cb(10437, 680, 3);
        Cb(10480, 680, 4);
        Cb(10532, 680, 5);
        Cb(10583, 680, 6);
        Cb(10628, 680, 7);
        Cb(10667, 680, 8);
        Cb(10712, 680, 9);
        i2 = a2;
        return;
      }
      function Cg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
        d2 = c[b2 >> 2] | 0;
        f2 = c[a2 + 4 >> 2] | 0;
        a:
          do {
            if (f2) {
              g2 = f2 + -1 | 0;
              h2 = (g2 & f2 | 0) == 0;
              if (h2)
                e2 = g2 & d2;
              else
                e2 = (d2 >>> 0) % (f2 >>> 0) | 0;
              b2 = c[(c[a2 >> 2] | 0) + (e2 << 2) >> 2] | 0;
              if (b2)
                do {
                  b2 = c[b2 >> 2] | 0;
                  if (!b2) {
                    b2 = 0;
                    break a;
                  }
                  a2 = c[b2 + 4 >> 2] | 0;
                  if (h2)
                    a2 = a2 & g2;
                  else
                    a2 = (a2 >>> 0) % (f2 >>> 0) | 0;
                  if ((a2 | 0) != (e2 | 0)) {
                    b2 = 0;
                    break a;
                  }
                } while ((c[b2 + 8 >> 2] | 0) != (d2 | 0));
              else
                b2 = 0;
            } else
              b2 = 0;
          } while (0);
        return b2 | 0;
      }
      function Dg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
        g2 = i2;
        i2 = i2 + 32 | 0;
        f2 = g2 + 8 | 0;
        e2 = g2;
        d2 = Cg(a2, b2) | 0;
        if (!d2) {
          wh(f2, a2, b2);
          xh(e2, a2, c[f2 >> 2] | 0);
          d2 = c[e2 >> 2] | 0;
          c[f2 >> 2] = 0;
        }
        i2 = g2;
        return d2 + 16 | 0;
      }
      function Eg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0;
        f2 = i2;
        i2 = i2 + 16 | 0;
        d2 = f2 + 4 | 0;
        e2 = f2;
        b2 = Cg(a2, b2) | 0;
        if (!b2)
          b2 = 0;
        else {
          c[e2 >> 2] = b2;
          c[d2 >> 2] = c[e2 >> 2];
          uh(a2, d2) | 0;
          b2 = 1;
        }
        i2 = f2;
        return b2 | 0;
      }
      function Fg(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0;
        d2 = c[a2 >> 2] | 0;
        if (d2) {
          b2 = a2 + 4 | 0;
          a2 = c[b2 >> 2] | 0;
          if ((a2 | 0) != (d2 | 0)) {
            do {
              a2 = a2 + -8 | 0;
            } while ((a2 | 0) != (d2 | 0));
            c[b2 >> 2] = a2;
          }
          Lh(d2);
        }
        return;
      }
      function Gg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
        g2 = i2;
        i2 = i2 + 32 | 0;
        f2 = g2 + 8 | 0;
        e2 = g2;
        d2 = Hg(a2, b2) | 0;
        if (!d2) {
          qh(f2, a2, b2);
          rh(e2, a2, c[f2 >> 2] | 0);
          d2 = c[e2 >> 2] | 0;
          c[f2 >> 2] = 0;
        }
        i2 = g2;
        return d2 + 16 | 0;
      }
      function Hg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
        d2 = c[b2 >> 2] | 0;
        f2 = c[a2 + 4 >> 2] | 0;
        a:
          do {
            if (f2) {
              g2 = f2 + -1 | 0;
              h2 = (g2 & f2 | 0) == 0;
              if (h2)
                e2 = g2 & d2;
              else
                e2 = (d2 >>> 0) % (f2 >>> 0) | 0;
              b2 = c[(c[a2 >> 2] | 0) + (e2 << 2) >> 2] | 0;
              if (b2)
                do {
                  b2 = c[b2 >> 2] | 0;
                  if (!b2) {
                    b2 = 0;
                    break a;
                  }
                  a2 = c[b2 + 4 >> 2] | 0;
                  if (h2)
                    a2 = a2 & g2;
                  else
                    a2 = (a2 >>> 0) % (f2 >>> 0) | 0;
                  if ((a2 | 0) != (e2 | 0)) {
                    b2 = 0;
                    break a;
                  }
                } while ((c[b2 + 8 >> 2] | 0) != (d2 | 0));
              else
                b2 = 0;
            } else
              b2 = 0;
          } while (0);
        return b2 | 0;
      }
      function Ig(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0;
        j2 = i2;
        i2 = i2 + 32 | 0;
        h2 = j2;
        g2 = a2 + 4 | 0;
        d2 = c[a2 >> 2] | 0;
        f2 = ((c[g2 >> 2] | 0) - d2 >> 3) + 1 | 0;
        if (f2 >>> 0 > 536870911)
          Jh(a2);
        e2 = d2;
        d2 = (c[a2 + 8 >> 2] | 0) - e2 | 0;
        if (d2 >> 3 >>> 0 < 268435455) {
          d2 = d2 >> 2;
          d2 = d2 >>> 0 < f2 >>> 0 ? f2 : d2;
        } else
          d2 = 536870911;
        nh(h2, d2, (c[g2 >> 2] | 0) - e2 >> 3, a2 + 8 | 0);
        g2 = h2 + 8 | 0;
        f2 = c[g2 >> 2] | 0;
        d2 = b2;
        e2 = c[d2 + 4 >> 2] | 0;
        b2 = f2;
        c[b2 >> 2] = c[d2 >> 2];
        c[b2 + 4 >> 2] = e2;
        c[g2 >> 2] = f2 + 8;
        oh(a2, h2);
        ph(h2);
        i2 = j2;
        return;
      }
      function Jg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Oa(a2 | 0, 4, 2200, 10911, 1, b2 | 0);
        return;
      }
      function Kg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Oa(a2 | 0, 2, 2192, 10801, 10, b2 | 0);
        return;
      }
      function Lg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Oa(a2 | 0, 3, 2180, 10906, 12, b2 | 0);
        return;
      }
      function Mg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Oa(a2 | 0, 3, 2168, 10906, 13, b2 | 0);
        return;
      }
      function Ng(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Oa(a2 | 0, 2, 2160, 10801, 11, b2 | 0);
        return;
      }
      function Og(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Oa(a2 | 0, 2, 2152, 10797, 7, b2 | 0);
        return;
      }
      function Pg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Oa(a2 | 0, 1, 2148, 10794, 16, b2 | 0);
        return;
      }
      function Qg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Oa(a2 | 0, 3, 2136, 10789, 1, b2 | 0);
        return;
      }
      function Rg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Oa(a2 | 0, 2, 2128, 10785, 1, b2 | 0);
        return;
      }
      function Sg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Oa(a2 | 0, 3, 2116, 10780, 1, b2 | 0);
        return;
      }
      function Tg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Oa(a2 | 0, 3, 2104, 10775, 2, b2 | 0);
        return;
      }
      function Ug(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Cb(a2 | 0, 680, c[b2 >> 2] | 0);
        return;
      }
      function Vg(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Cb(a2 | 0, 720, ~~+h[b2 >> 3] >>> 0 | 0);
        return;
      }
      function Wg() {
        c[511] = 0;
        c[512] = 0;
        c[513] = 0;
        c[514] = 0;
        g[515] = 1;
        ub(11, 2044, n | 0) | 0;
        c[516] = 0;
        c[517] = 0;
        c[518] = 0;
        c[519] = 0;
        g[520] = 1;
        ub(12, 2064, n | 0) | 0;
        Bg(0);
        return;
      }
      function Xg(a2) {
        a2 = a2 | 0;
        $g(a2);
        return;
      }
      function Yg(a2) {
        a2 = a2 | 0;
        Zg(a2);
        return;
      }
      function Zg(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        _g(a2, c[a2 + 8 >> 2] | 0);
        b2 = c[a2 >> 2] | 0;
        c[a2 >> 2] = 0;
        if (b2)
          Lh(b2);
        return;
      }
      function _g(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if (b2)
          do {
            a2 = b2;
            b2 = c[b2 >> 2] | 0;
            Lh(a2);
          } while ((b2 | 0) != 0);
        return;
      }
      function $g(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        ah(a2, c[a2 + 8 >> 2] | 0);
        b2 = c[a2 >> 2] | 0;
        c[a2 >> 2] = 0;
        if (b2)
          Lh(b2);
        return;
      }
      function ah(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if (b2)
          do {
            a2 = b2;
            b2 = c[b2 >> 2] | 0;
            Fg(a2 + 264 | 0);
            Lh(a2);
          } while ((b2 | 0) != 0);
        return;
      }
      function bh(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = +c2;
        Tb[a2 & 3](b2, c2);
        return;
      }
      function ch(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        Xb[a2 & 7](b2, c2);
        return;
      }
      function dh(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        return + +Ub[a2 & 3](b2);
      }
      function eh(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = +c2;
        Tb[a2 & 3](b2, c2);
        return;
      }
      function fh(a2) {
        a2 = a2 | 0;
        return Vb[a2 & 1]() | 0;
      }
      function gh(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Wb[a2 & 15](b2);
        return;
      }
      function hh(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var c2 = 0, d2 = 0;
        c2 = i2;
        i2 = i2 + 16 | 0;
        d2 = c2;
        ih(d2, b2);
        a2 = Yb[a2 & 31](d2) | 0;
        bk(d2);
        i2 = c2;
        return a2 | 0;
      }
      function ih(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        ak(a2, b2 + 4 | 0, c[b2 >> 2] | 0);
        return;
      }
      function jh(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        return cc[a2 & 15](b2, c2) | 0;
      }
      function kh(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        var d2 = 0, e2 = 0;
        d2 = i2;
        i2 = i2 + 16 | 0;
        e2 = d2;
        ih(e2, c2);
        a2 = cc[a2 & 15](b2, e2) | 0;
        bk(e2);
        i2 = d2;
        return a2 | 0;
      }
      function lh(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        return Yb[a2 & 31](b2) | 0;
      }
      function mh(a2, b2, c2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        return Qb[a2 & 15](b2, c2, d2) | 0;
      }
      function nh(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        c[a2 + 12 >> 2] = 0;
        c[a2 + 16 >> 2] = e2;
        if (!b2)
          e2 = 0;
        else
          e2 = Kh(b2 << 3) | 0;
        c[a2 >> 2] = e2;
        d2 = e2 + (d2 << 3) | 0;
        c[a2 + 8 >> 2] = d2;
        c[a2 + 4 >> 2] = d2;
        c[a2 + 12 >> 2] = e2 + (b2 << 3);
        return;
      }
      function oh(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
        e2 = c[a2 >> 2] | 0;
        g2 = a2 + 4 | 0;
        d2 = b2 + 4 | 0;
        f2 = (c[g2 >> 2] | 0) - e2 | 0;
        h2 = (c[d2 >> 2] | 0) + (0 - (f2 >> 3) << 3) | 0;
        c[d2 >> 2] = h2;
        ik(h2 | 0, e2 | 0, f2 | 0) | 0;
        f2 = c[a2 >> 2] | 0;
        c[a2 >> 2] = c[d2 >> 2];
        c[d2 >> 2] = f2;
        f2 = b2 + 8 | 0;
        e2 = c[g2 >> 2] | 0;
        c[g2 >> 2] = c[f2 >> 2];
        c[f2 >> 2] = e2;
        f2 = a2 + 8 | 0;
        a2 = b2 + 12 | 0;
        e2 = c[f2 >> 2] | 0;
        c[f2 >> 2] = c[a2 >> 2];
        c[a2 >> 2] = e2;
        c[b2 >> 2] = c[d2 >> 2];
        return;
      }
      function ph(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0;
        d2 = c[a2 + 4 >> 2] | 0;
        e2 = a2 + 8 | 0;
        b2 = c[e2 >> 2] | 0;
        if ((b2 | 0) != (d2 | 0)) {
          do {
            b2 = b2 + -8 | 0;
          } while ((b2 | 0) != (d2 | 0));
          c[e2 >> 2] = b2;
        }
        b2 = c[a2 >> 2] | 0;
        if (b2)
          Lh(b2);
        return;
      }
      function qh(a2, b2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        var e2 = 0;
        e2 = Kh(200) | 0;
        c[e2 + 8 >> 2] = c[d2 >> 2];
        ek(e2 + 16 | 0, 0, 184) | 0;
        c[a2 >> 2] = e2;
        a2 = a2 + 4 | 0;
        c[a2 >> 2] = b2 + 8;
        c[a2 + 4 >> 2] = 257;
        return;
      }
      function rh(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
        m2 = c[e2 + 8 >> 2] | 0;
        s2 = e2 + 4 | 0;
        c[s2 >> 2] = m2;
        r2 = d2 + 4 | 0;
        l2 = c[r2 >> 2] | 0;
        q2 = (l2 | 0) == 0;
        a:
          do {
            if (!q2) {
              n2 = l2 + -1 | 0;
              o2 = (n2 & l2 | 0) == 0;
              if (o2)
                h2 = n2 & m2;
              else
                h2 = (m2 >>> 0) % (l2 >>> 0) | 0;
              f2 = c[(c[d2 >> 2] | 0) + (h2 << 2) >> 2] | 0;
              if (!f2)
                p2 = 12;
              else
                while (1) {
                  i3 = c[f2 >> 2] | 0;
                  if (!i3) {
                    p2 = 12;
                    break a;
                  }
                  f2 = c[i3 + 4 >> 2] | 0;
                  if (o2)
                    f2 = f2 & n2;
                  else
                    f2 = (f2 >>> 0) % (l2 >>> 0) | 0;
                  if ((f2 | 0) != (h2 | 0)) {
                    p2 = 12;
                    break a;
                  }
                  if ((c[i3 + 8 >> 2] | 0) == (m2 | 0)) {
                    f2 = 0;
                    e2 = i3;
                    break;
                  } else
                    f2 = i3;
                }
            } else {
              h2 = 0;
              p2 = 12;
            }
          } while (0);
        if ((p2 | 0) == 12) {
          m2 = d2 + 12 | 0;
          j2 = +(((c[m2 >> 2] | 0) + 1 | 0) >>> 0);
          k2 = +g[d2 + 16 >> 2];
          do {
            if (q2 | j2 > +(l2 >>> 0) * k2) {
              if (l2 >>> 0 > 2)
                f2 = (l2 + -1 & l2 | 0) == 0;
              else
                f2 = 0;
              i3 = (f2 & 1 | l2 << 1) ^ 1;
              f2 = ~~+_(+(j2 / k2)) >>> 0;
              sh(d2, i3 >>> 0 < f2 >>> 0 ? f2 : i3);
              i3 = c[r2 >> 2] | 0;
              f2 = c[s2 >> 2] | 0;
              h2 = i3 + -1 | 0;
              if (!(h2 & i3)) {
                l2 = i3;
                h2 = h2 & f2;
                break;
              } else {
                l2 = i3;
                h2 = (f2 >>> 0) % (i3 >>> 0) | 0;
                break;
              }
            }
          } while (0);
          f2 = c[(c[d2 >> 2] | 0) + (h2 << 2) >> 2] | 0;
          if (!f2) {
            f2 = d2 + 8 | 0;
            c[e2 >> 2] = c[f2 >> 2];
            c[f2 >> 2] = e2;
            c[(c[d2 >> 2] | 0) + (h2 << 2) >> 2] = f2;
            f2 = c[e2 >> 2] | 0;
            if (f2) {
              f2 = c[f2 + 4 >> 2] | 0;
              h2 = l2 + -1 | 0;
              if (!(h2 & l2))
                f2 = f2 & h2;
              else
                f2 = (f2 >>> 0) % (l2 >>> 0) | 0;
              c[(c[d2 >> 2] | 0) + (f2 << 2) >> 2] = e2;
            }
          } else {
            c[e2 >> 2] = c[f2 >> 2];
            c[f2 >> 2] = e2;
          }
          c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
          f2 = 1;
        }
        c[b2 >> 2] = e2;
        a[b2 + 4 >> 0] = f2;
        return;
      }
      function zd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        p2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = p2;
          n2 = p2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = j2 * 3 | 0;
        z2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          j2 = p2;
          m2 = p2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              j2 = j2 + (f2 << 1) | 0;
              m2 = m2 + (f2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        w2 = 0 - f2 | 0;
        u2 = 1 - f2 | 0;
        v2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              o2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              y2 = 1;
              n2 = e2 + (l2 * 3 | 0) | 0;
              e2 = p2 + (l2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (x2) {
                    l2 = o2;
                    t2 = 1;
                    s2 = n2;
                    r2 = j2;
                    while (1) {
                      do {
                        if (((d[s2 + 1 >> 0] | 0) + (d[s2 >> 0] | 0) + (d[s2 + 2 >> 0] | 0) | 0) > (A2 | 0)) {
                          a[l2 >> 0] = -1;
                          j2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          o2 = b[e2 + (u2 << 1) >> 1] | 0;
                          p2 = o2 << 16 >> 16;
                          j2 = b[e2 + (v2 << 1) >> 1] | 0;
                          q2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (o2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[e2 >> 1] = j2;
                              j2 = q2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (t2 | 0))
                                c[n2 >> 2] = t2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                              j2 = r2;
                              break;
                            }
                            j2 = b[e2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                              q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                              q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (t2 | 0)) {
                                j2 = r2;
                                break;
                              }
                              c[j2 >> 2] = t2;
                              j2 = r2;
                              break;
                            } else {
                              j2 = r2 + 1 | 0;
                              if ((r2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = j2;
                              c[k2 + 1179664 + (r2 << 2) >> 2] = j2 << 16 >> 16;
                              r2 = r2 * 7 | 0;
                              c[k2 + 1310736 + (r2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (r2 + 1 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 3 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 4 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            p2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (p2 | 0)) {
                              b[e2 >> 1] = p2;
                              if ((r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (j2 | 0))
                                    c[o2 >> 2] = p2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0)) {
                                    j2 = p2;
                                    break;
                                  } else
                                    o2 = o2 + 4 | 0;
                                }
                              } else
                                j2 = p2;
                            } else {
                              b[e2 >> 1] = j2;
                              if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (p2 | 0))
                                    c[o2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0))
                                    break;
                                  else
                                    o2 = o2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          n2 = b[e2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = o2;
                            j2 = p2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (t2 | 0))
                              c[n2 >> 2] = t2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                          p2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (p2 | 0)) {
                            b[e2 >> 1] = p2;
                            if ((r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (j2 | 0))
                                  c[o2 >> 2] = p2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0)) {
                                  j2 = p2;
                                  break;
                                } else
                                  o2 = o2 + 4 | 0;
                              }
                            } else
                              j2 = p2;
                          } else {
                            b[e2 >> 1] = j2;
                            if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (p2 | 0))
                                  c[o2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0))
                                  break;
                                else
                                  o2 = o2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                          q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + y2;
                          j2 = r2;
                        } else {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = r2;
                        }
                      } while (0);
                      t2 = t2 + 1 | 0;
                      n2 = s2 + 3 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((t2 | 0) >= (z2 | 0))
                        break;
                      else {
                        s2 = n2;
                        r2 = j2;
                      }
                    }
                  } else
                    l2 = o2;
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (B2 | 0)) {
                    p2 = j2;
                    D2 = 52;
                    break a;
                  } else {
                    o2 = l2 + 2 | 0;
                    n2 = n2 + 6 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              p2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((p2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (p2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[o2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              e2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                n2 = e2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function Ad(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        p2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = p2;
          n2 = p2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = j2 * 3 | 0;
        z2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          j2 = p2;
          m2 = p2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              j2 = j2 + (f2 << 1) | 0;
              m2 = m2 + (f2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        w2 = 0 - f2 | 0;
        u2 = 1 - f2 | 0;
        v2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              o2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              y2 = 1;
              n2 = e2 + (l2 << 1) | 0;
              e2 = p2 + (l2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (x2) {
                    l2 = o2;
                    t2 = 1;
                    s2 = n2;
                    r2 = j2;
                    while (1) {
                      p2 = d[s2 >> 0] | 0;
                      q2 = d[s2 + 1 >> 0] | 0;
                      do {
                        if (((p2 & 248) + 10 + (p2 << 5 & 224) + (q2 >>> 3 & 28) + (q2 << 3 & 248) | 0) > (A2 | 0)) {
                          a[l2 >> 0] = -1;
                          j2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          o2 = b[e2 + (u2 << 1) >> 1] | 0;
                          p2 = o2 << 16 >> 16;
                          j2 = b[e2 + (v2 << 1) >> 1] | 0;
                          q2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (o2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[e2 >> 1] = j2;
                              j2 = q2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (t2 | 0))
                                c[n2 >> 2] = t2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                              j2 = r2;
                              break;
                            }
                            j2 = b[e2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                              q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                              q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (t2 | 0)) {
                                j2 = r2;
                                break;
                              }
                              c[j2 >> 2] = t2;
                              j2 = r2;
                              break;
                            } else {
                              j2 = r2 + 1 | 0;
                              if ((r2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = j2;
                              c[k2 + 1179664 + (r2 << 2) >> 2] = j2 << 16 >> 16;
                              r2 = r2 * 7 | 0;
                              c[k2 + 1310736 + (r2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (r2 + 1 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 3 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 4 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            p2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (p2 | 0)) {
                              b[e2 >> 1] = p2;
                              if ((r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (j2 | 0))
                                    c[o2 >> 2] = p2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0)) {
                                    j2 = p2;
                                    break;
                                  } else
                                    o2 = o2 + 4 | 0;
                                }
                              } else
                                j2 = p2;
                            } else {
                              b[e2 >> 1] = j2;
                              if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (p2 | 0))
                                    c[o2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0))
                                    break;
                                  else
                                    o2 = o2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          n2 = b[e2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = o2;
                            j2 = p2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (t2 | 0))
                              c[n2 >> 2] = t2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                          p2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (p2 | 0)) {
                            b[e2 >> 1] = p2;
                            if ((r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (j2 | 0))
                                  c[o2 >> 2] = p2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0)) {
                                  j2 = p2;
                                  break;
                                } else
                                  o2 = o2 + 4 | 0;
                              }
                            } else
                              j2 = p2;
                          } else {
                            b[e2 >> 1] = j2;
                            if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (p2 | 0))
                                  c[o2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0))
                                  break;
                                else
                                  o2 = o2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                          q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + y2;
                          j2 = r2;
                        } else {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = r2;
                        }
                      } while (0);
                      t2 = t2 + 1 | 0;
                      n2 = s2 + 2 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((t2 | 0) >= (z2 | 0))
                        break;
                      else {
                        s2 = n2;
                        r2 = j2;
                      }
                    }
                  } else
                    l2 = o2;
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (B2 | 0)) {
                    p2 = j2;
                    D2 = 52;
                    break a;
                  } else {
                    o2 = l2 + 2 | 0;
                    n2 = n2 + 4 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              p2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((p2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (p2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[o2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              e2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                n2 = e2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function Bd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        p2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = p2;
          n2 = p2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = j2 * 3 | 0;
        z2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          j2 = p2;
          m2 = p2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              j2 = j2 + (f2 << 1) | 0;
              m2 = m2 + (f2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        w2 = 0 - f2 | 0;
        u2 = 1 - f2 | 0;
        v2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              o2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              y2 = 1;
              n2 = e2 + (l2 << 2) | 0;
              e2 = p2 + (l2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (x2) {
                    l2 = o2;
                    t2 = 1;
                    s2 = n2;
                    r2 = j2;
                    while (1) {
                      do {
                        if (((d[s2 + 1 >> 0] | 0) + (d[s2 >> 0] | 0) + (d[s2 + 2 >> 0] | 0) | 0) > (A2 | 0)) {
                          a[l2 >> 0] = -1;
                          j2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          o2 = b[e2 + (u2 << 1) >> 1] | 0;
                          p2 = o2 << 16 >> 16;
                          j2 = b[e2 + (v2 << 1) >> 1] | 0;
                          q2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (o2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[e2 >> 1] = j2;
                              j2 = q2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (t2 | 0))
                                c[n2 >> 2] = t2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                              j2 = r2;
                              break;
                            }
                            j2 = b[e2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                              q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                              q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (t2 | 0)) {
                                j2 = r2;
                                break;
                              }
                              c[j2 >> 2] = t2;
                              j2 = r2;
                              break;
                            } else {
                              j2 = r2 + 1 | 0;
                              if ((r2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = j2;
                              c[k2 + 1179664 + (r2 << 2) >> 2] = j2 << 16 >> 16;
                              r2 = r2 * 7 | 0;
                              c[k2 + 1310736 + (r2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (r2 + 1 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 3 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 4 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            p2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (p2 | 0)) {
                              b[e2 >> 1] = p2;
                              if ((r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (j2 | 0))
                                    c[o2 >> 2] = p2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0)) {
                                    j2 = p2;
                                    break;
                                  } else
                                    o2 = o2 + 4 | 0;
                                }
                              } else
                                j2 = p2;
                            } else {
                              b[e2 >> 1] = j2;
                              if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (p2 | 0))
                                    c[o2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0))
                                    break;
                                  else
                                    o2 = o2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          n2 = b[e2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = o2;
                            j2 = p2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (t2 | 0))
                              c[n2 >> 2] = t2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                          p2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (p2 | 0)) {
                            b[e2 >> 1] = p2;
                            if ((r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (j2 | 0))
                                  c[o2 >> 2] = p2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0)) {
                                  j2 = p2;
                                  break;
                                } else
                                  o2 = o2 + 4 | 0;
                              }
                            } else
                              j2 = p2;
                          } else {
                            b[e2 >> 1] = j2;
                            if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (p2 | 0))
                                  c[o2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0))
                                  break;
                                else
                                  o2 = o2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                          q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + y2;
                          j2 = r2;
                        } else {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = r2;
                        }
                      } while (0);
                      t2 = t2 + 1 | 0;
                      n2 = s2 + 4 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((t2 | 0) >= (z2 | 0))
                        break;
                      else {
                        s2 = n2;
                        r2 = j2;
                      }
                    }
                  } else
                    l2 = o2;
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (B2 | 0)) {
                    p2 = j2;
                    D2 = 52;
                    break a;
                  } else {
                    o2 = l2 + 2 | 0;
                    n2 = n2 + 8 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              p2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((p2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (p2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[o2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              e2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                n2 = e2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function Cd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        p2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = p2;
          n2 = p2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = j2 * 3 | 0;
        z2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          j2 = p2;
          m2 = p2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              j2 = j2 + (f2 << 1) | 0;
              m2 = m2 + (f2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        w2 = 0 - f2 | 0;
        u2 = 1 - f2 | 0;
        v2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              o2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              y2 = 1;
              n2 = e2 + (l2 << 1) | 0;
              e2 = p2 + (l2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (x2) {
                    l2 = o2;
                    t2 = 1;
                    s2 = n2;
                    r2 = j2;
                    while (1) {
                      q2 = d[s2 >> 0] | 0;
                      do {
                        if (((q2 & 240) + 24 + (q2 << 4 & 240) + ((d[s2 + 1 >> 0] | 0) & 240) | 0) > (A2 | 0)) {
                          a[l2 >> 0] = -1;
                          j2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          o2 = b[e2 + (u2 << 1) >> 1] | 0;
                          p2 = o2 << 16 >> 16;
                          j2 = b[e2 + (v2 << 1) >> 1] | 0;
                          q2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (o2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[e2 >> 1] = j2;
                              j2 = q2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (t2 | 0))
                                c[n2 >> 2] = t2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                              j2 = r2;
                              break;
                            }
                            j2 = b[e2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                              q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                              q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (t2 | 0)) {
                                j2 = r2;
                                break;
                              }
                              c[j2 >> 2] = t2;
                              j2 = r2;
                              break;
                            } else {
                              j2 = r2 + 1 | 0;
                              if ((r2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = j2;
                              c[k2 + 1179664 + (r2 << 2) >> 2] = j2 << 16 >> 16;
                              r2 = r2 * 7 | 0;
                              c[k2 + 1310736 + (r2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (r2 + 1 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 3 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 4 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            p2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (p2 | 0)) {
                              b[e2 >> 1] = p2;
                              if ((r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (j2 | 0))
                                    c[o2 >> 2] = p2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0)) {
                                    j2 = p2;
                                    break;
                                  } else
                                    o2 = o2 + 4 | 0;
                                }
                              } else
                                j2 = p2;
                            } else {
                              b[e2 >> 1] = j2;
                              if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (p2 | 0))
                                    c[o2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0))
                                    break;
                                  else
                                    o2 = o2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          n2 = b[e2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = o2;
                            j2 = p2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (t2 | 0))
                              c[n2 >> 2] = t2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                          p2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (p2 | 0)) {
                            b[e2 >> 1] = p2;
                            if ((r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (j2 | 0))
                                  c[o2 >> 2] = p2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0)) {
                                  j2 = p2;
                                  break;
                                } else
                                  o2 = o2 + 4 | 0;
                              }
                            } else
                              j2 = p2;
                          } else {
                            b[e2 >> 1] = j2;
                            if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (p2 | 0))
                                  c[o2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0))
                                  break;
                                else
                                  o2 = o2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                          q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + y2;
                          j2 = r2;
                        } else {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = r2;
                        }
                      } while (0);
                      t2 = t2 + 1 | 0;
                      n2 = s2 + 2 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((t2 | 0) >= (z2 | 0))
                        break;
                      else {
                        s2 = n2;
                        r2 = j2;
                      }
                    }
                  } else
                    l2 = o2;
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (B2 | 0)) {
                    p2 = j2;
                    D2 = 52;
                    break a;
                  } else {
                    o2 = l2 + 2 | 0;
                    n2 = n2 + 4 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              p2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((p2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (p2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[o2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              e2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                n2 = e2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function Dd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        p2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = p2;
          n2 = p2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = j2 * 3 | 0;
        z2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          j2 = p2;
          m2 = p2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              j2 = j2 + (f2 << 1) | 0;
              m2 = m2 + (f2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        w2 = 0 - f2 | 0;
        u2 = 1 - f2 | 0;
        v2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              o2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              y2 = 1;
              n2 = e2 + (l2 << 1) | 0;
              e2 = p2 + (l2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (x2) {
                    l2 = o2;
                    t2 = 1;
                    s2 = n2;
                    r2 = j2;
                    while (1) {
                      p2 = d[s2 >> 0] | 0;
                      q2 = d[s2 + 1 >> 0] | 0;
                      do {
                        if (((p2 & 248) + 12 + (p2 << 5 & 224) + (q2 >>> 3 & 24) + (q2 << 2 & 248) | 0) > (A2 | 0)) {
                          a[l2 >> 0] = -1;
                          j2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          o2 = b[e2 + (u2 << 1) >> 1] | 0;
                          p2 = o2 << 16 >> 16;
                          j2 = b[e2 + (v2 << 1) >> 1] | 0;
                          q2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (o2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[e2 >> 1] = j2;
                              j2 = q2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (t2 | 0))
                                c[n2 >> 2] = t2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                              j2 = r2;
                              break;
                            }
                            j2 = b[e2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                              q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                              q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (t2 | 0)) {
                                j2 = r2;
                                break;
                              }
                              c[j2 >> 2] = t2;
                              j2 = r2;
                              break;
                            } else {
                              j2 = r2 + 1 | 0;
                              if ((r2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = j2;
                              c[k2 + 1179664 + (r2 << 2) >> 2] = j2 << 16 >> 16;
                              r2 = r2 * 7 | 0;
                              c[k2 + 1310736 + (r2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (r2 + 1 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 3 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 4 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            p2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (p2 | 0)) {
                              b[e2 >> 1] = p2;
                              if ((r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (j2 | 0))
                                    c[o2 >> 2] = p2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0)) {
                                    j2 = p2;
                                    break;
                                  } else
                                    o2 = o2 + 4 | 0;
                                }
                              } else
                                j2 = p2;
                            } else {
                              b[e2 >> 1] = j2;
                              if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (p2 | 0))
                                    c[o2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0))
                                    break;
                                  else
                                    o2 = o2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          n2 = b[e2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = o2;
                            j2 = p2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (t2 | 0))
                              c[n2 >> 2] = t2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                          p2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (p2 | 0)) {
                            b[e2 >> 1] = p2;
                            if ((r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (j2 | 0))
                                  c[o2 >> 2] = p2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0)) {
                                  j2 = p2;
                                  break;
                                } else
                                  o2 = o2 + 4 | 0;
                              }
                            } else
                              j2 = p2;
                          } else {
                            b[e2 >> 1] = j2;
                            if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (p2 | 0))
                                  c[o2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0))
                                  break;
                                else
                                  o2 = o2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                          q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + y2;
                          j2 = r2;
                        } else {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = r2;
                        }
                      } while (0);
                      t2 = t2 + 1 | 0;
                      n2 = s2 + 2 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((t2 | 0) >= (z2 | 0))
                        break;
                      else {
                        s2 = n2;
                        r2 = j2;
                      }
                    }
                  } else
                    l2 = o2;
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (B2 | 0)) {
                    p2 = j2;
                    D2 = 52;
                    break a;
                  } else {
                    o2 = l2 + 2 | 0;
                    n2 = n2 + 4 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              p2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((p2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (p2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[o2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              e2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                n2 = e2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function Ed(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        p2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = p2;
          n2 = p2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = j2 * 3 | 0;
        z2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          j2 = p2;
          m2 = p2 + (z2 << 1) | 0;
          while (1) {
            b[m2 >> 1] = 0;
            b[j2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              j2 = j2 + (f2 << 1) | 0;
              m2 = m2 + (f2 << 1) | 0;
            }
          }
        }
        m2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        w2 = 0 - f2 | 0;
        u2 = 1 - f2 | 0;
        v2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              x2 = (z2 | 0) > 1;
              o2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              y2 = 1;
              n2 = e2 + (l2 << 2) | 0;
              e2 = p2 + (l2 << 1) | 0;
              j2 = 0;
              b:
                while (1) {
                  if (x2) {
                    l2 = o2;
                    t2 = 1;
                    s2 = n2;
                    r2 = j2;
                    while (1) {
                      do {
                        if (((d[s2 + 2 >> 0] | 0) + (d[s2 + 1 >> 0] | 0) + (d[s2 + 3 >> 0] | 0) | 0) > (A2 | 0)) {
                          a[l2 >> 0] = -1;
                          j2 = b[e2 + (w2 << 1) >> 1] | 0;
                          if (j2 << 16 >> 16 > 0) {
                            b[e2 >> 1] = j2;
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          o2 = b[e2 + (u2 << 1) >> 1] | 0;
                          p2 = o2 << 16 >> 16;
                          j2 = b[e2 + (v2 << 1) >> 1] | 0;
                          q2 = j2 << 16 >> 16;
                          n2 = j2 << 16 >> 16 > 0;
                          if (o2 << 16 >> 16 <= 0) {
                            if (n2) {
                              b[e2 >> 1] = j2;
                              j2 = q2 * 7 | 0;
                              n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                              n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                              n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                              n2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[n2 >> 2] | 0) < (t2 | 0))
                                c[n2 >> 2] = t2;
                              c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                              j2 = r2;
                              break;
                            }
                            j2 = b[e2 + -2 >> 1] | 0;
                            if (j2 << 16 >> 16 > 0) {
                              b[e2 >> 1] = j2;
                              j2 = (j2 << 16 >> 16) * 7 | 0;
                              q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                              q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                              q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                              c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                              j2 = k2 + 1310736 + (j2 + -3 << 2) | 0;
                              if ((c[j2 >> 2] | 0) >= (t2 | 0)) {
                                j2 = r2;
                                break;
                              }
                              c[j2 >> 2] = t2;
                              j2 = r2;
                              break;
                            } else {
                              j2 = r2 + 1 | 0;
                              if ((r2 | 0) > 32767)
                                break b;
                              b[e2 >> 1] = j2;
                              c[k2 + 1179664 + (r2 << 2) >> 2] = j2 << 16 >> 16;
                              r2 = r2 * 7 | 0;
                              c[k2 + 1310736 + (r2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (r2 + 1 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 2 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 3 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 4 << 2) >> 2] = t2;
                              c[k2 + 1310736 + (r2 + 5 << 2) >> 2] = y2;
                              c[k2 + 1310736 + (r2 + 6 << 2) >> 2] = y2;
                              break;
                            }
                          }
                          if (n2) {
                            j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                            p2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            if ((j2 | 0) > (p2 | 0)) {
                              b[e2 >> 1] = p2;
                              if ((r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (j2 | 0))
                                    c[o2 >> 2] = p2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0)) {
                                    j2 = p2;
                                    break;
                                  } else
                                    o2 = o2 + 4 | 0;
                                }
                              } else
                                j2 = p2;
                            } else {
                              b[e2 >> 1] = j2;
                              if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                                n2 = 0;
                                o2 = m2;
                                while (1) {
                                  if ((c[o2 >> 2] | 0) == (p2 | 0))
                                    c[o2 >> 2] = j2;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (r2 | 0))
                                    break;
                                  else
                                    o2 = o2 + 4 | 0;
                                }
                              }
                            }
                            j2 = (j2 << 16 >> 16) * 7 | 0;
                            q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                            q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                            q2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[q2 >> 2] = (c[q2 >> 2] | 0) + y2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          n2 = b[e2 + -2 >> 1] | 0;
                          if (n2 << 16 >> 16 <= 0) {
                            b[e2 >> 1] = o2;
                            j2 = p2 * 7 | 0;
                            n2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + 1;
                            n2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + t2;
                            n2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                            c[n2 >> 2] = (c[n2 >> 2] | 0) + y2;
                            n2 = k2 + 1310736 + (j2 + -4 << 2) | 0;
                            if ((c[n2 >> 2] | 0) > (t2 | 0))
                              c[n2 >> 2] = t2;
                            c[k2 + 1310736 + (j2 + -1 << 2) >> 2] = y2;
                            j2 = r2;
                            break;
                          }
                          j2 = c[k2 + 1179664 + (p2 + -1 << 2) >> 2] | 0;
                          p2 = c[k2 + 1179664 + ((n2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((j2 | 0) > (p2 | 0)) {
                            b[e2 >> 1] = p2;
                            if ((r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (j2 | 0))
                                  c[o2 >> 2] = p2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0)) {
                                  j2 = p2;
                                  break;
                                } else
                                  o2 = o2 + 4 | 0;
                              }
                            } else
                              j2 = p2;
                          } else {
                            b[e2 >> 1] = j2;
                            if ((j2 | 0) < (p2 | 0) & (r2 | 0) > 0) {
                              n2 = 0;
                              o2 = m2;
                              while (1) {
                                if ((c[o2 >> 2] | 0) == (p2 | 0))
                                  c[o2 >> 2] = j2;
                                n2 = n2 + 1 | 0;
                                if ((n2 | 0) >= (r2 | 0))
                                  break;
                                else
                                  o2 = o2 + 4 | 0;
                              }
                            }
                          }
                          j2 = (j2 << 16 >> 16) * 7 | 0;
                          q2 = k2 + 1310736 + (j2 + -7 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                          q2 = k2 + 1310736 + (j2 + -6 << 2) | 0;
                          c[q2 >> 2] = (c[q2 >> 2] | 0) + t2;
                          j2 = k2 + 1310736 + (j2 + -5 << 2) | 0;
                          c[j2 >> 2] = (c[j2 >> 2] | 0) + y2;
                          j2 = r2;
                        } else {
                          b[e2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          j2 = r2;
                        }
                      } while (0);
                      t2 = t2 + 1 | 0;
                      n2 = s2 + 4 | 0;
                      e2 = e2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((t2 | 0) >= (z2 | 0))
                        break;
                      else {
                        s2 = n2;
                        r2 = j2;
                      }
                    }
                  } else
                    l2 = o2;
                  y2 = y2 + 1 | 0;
                  if ((y2 | 0) >= (B2 | 0)) {
                    p2 = j2;
                    D2 = 52;
                    break a;
                  } else {
                    o2 = l2 + 2 | 0;
                    n2 = n2 + 8 | 0;
                    e2 = e2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              p2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          e2 = k2 + 12 | 0;
          if ((p2 | 0) < 1)
            j2 = 1;
          else {
            n2 = 1;
            j2 = 1;
            while (1) {
              l2 = c[m2 >> 2] | 0;
              if ((l2 | 0) == (n2 | 0)) {
                l2 = j2;
                j2 = j2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[m2 >> 2] = l2;
              if ((n2 | 0) < (p2 | 0)) {
                n2 = n2 + 1 | 0;
                m2 = m2 + 4 | 0;
              } else
                break;
            }
          }
          o2 = k2 + 8 | 0;
          l2 = j2 + -1 | 0;
          c[o2 >> 2] = l2;
          if (l2) {
            ek(e2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((j2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              e2 = 0;
              do {
                m2 = (c[k2 + 1179664 + (e2 << 2) >> 2] | 0) + -1 | 0;
                n2 = e2 * 7 | 0;
                l2 = k2 + 12 + (m2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (n2 << 2) >> 2] | 0);
                l2 = m2 << 1;
                j2 = k2 + 655376 + (l2 << 3) | 0;
                h[j2 >> 3] = +h[j2 >> 3] + +(c[k2 + 1310736 + (n2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (n2 + 2 << 2) >> 2] | 0);
                m2 = m2 << 2;
                l2 = k2 + 131084 + (m2 << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 1) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (j2 | 0))
                  c[l2 >> 2] = j2;
                l2 = k2 + 131084 + ((m2 | 2) << 2) | 0;
                j2 = c[k2 + 1310736 + (n2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (j2 | 0))
                  c[l2 >> 2] = j2;
                j2 = k2 + 131084 + ((m2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (n2 + 6 << 2) >> 2] | 0;
                if ((c[j2 >> 2] | 0) < (l2 | 0))
                  c[j2 >> 2] = l2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (p2 | 0));
            }
            if ((c[o2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[o2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function Fd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        o2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (A2 << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              m2 = m2 + (f2 << 1) | 0;
              n2 = n2 + (f2 << 1) | 0;
            }
          }
        }
        n2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        x2 = 0 - f2 | 0;
        v2 = 1 - f2 | 0;
        w2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              y2 = (A2 | 0) > 1;
              p2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              z2 = 1;
              e2 = e2 + l2 | 0;
              o2 = o2 + (l2 << 1) | 0;
              m2 = 0;
              b:
                while (1) {
                  if (y2) {
                    l2 = p2;
                    u2 = 1;
                    t2 = e2;
                    s2 = m2;
                    while (1) {
                      do {
                        if ((d[t2 >> 0] | 0 | 0) > (j2 | 0)) {
                          a[l2 >> 0] = -1;
                          m2 = b[o2 + (x2 << 1) >> 1] | 0;
                          if (m2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = m2;
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          p2 = b[o2 + (v2 << 1) >> 1] | 0;
                          q2 = p2 << 16 >> 16;
                          m2 = b[o2 + (w2 << 1) >> 1] | 0;
                          r2 = m2 << 16 >> 16;
                          e2 = m2 << 16 >> 16 > 0;
                          if (p2 << 16 >> 16 <= 0) {
                            if (e2) {
                              b[o2 >> 1] = m2;
                              m2 = r2 * 7 | 0;
                              e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                              e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                              e2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[e2 >> 2] | 0) < (u2 | 0))
                                c[e2 >> 2] = u2;
                              c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                              m2 = s2;
                              break;
                            }
                            m2 = b[o2 + -2 >> 1] | 0;
                            if (m2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = m2;
                              m2 = (m2 << 16 >> 16) * 7 | 0;
                              r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                              r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                              r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                              m2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) >= (u2 | 0)) {
                                m2 = s2;
                                break;
                              }
                              c[m2 >> 2] = u2;
                              m2 = s2;
                              break;
                            } else {
                              m2 = s2 + 1 | 0;
                              if ((s2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = m2;
                              c[k2 + 1179664 + (s2 << 2) >> 2] = m2 << 16 >> 16;
                              s2 = s2 * 7 | 0;
                              c[k2 + 1310736 + (s2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (s2 + 1 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 2 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 3 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 4 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 5 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 6 << 2) >> 2] = z2;
                              break;
                            }
                          }
                          if (e2) {
                            m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            q2 = c[k2 + 1179664 + (r2 + -1 << 2) >> 2] | 0;
                            if ((m2 | 0) > (q2 | 0)) {
                              b[o2 >> 1] = q2;
                              if ((s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (m2 | 0))
                                    c[p2 >> 2] = q2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0)) {
                                    m2 = q2;
                                    break;
                                  } else
                                    p2 = p2 + 4 | 0;
                                }
                              } else
                                m2 = q2;
                            } else {
                              b[o2 >> 1] = m2;
                              if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (q2 | 0))
                                    c[p2 >> 2] = m2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0))
                                    break;
                                  else
                                    p2 = p2 + 4 | 0;
                                }
                              }
                            }
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          e2 = b[o2 + -2 >> 1] | 0;
                          if (e2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = p2;
                            m2 = q2 * 7 | 0;
                            e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                            e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                            e2 = k2 + 1310736 + (m2 + -4 << 2) | 0;
                            if ((c[e2 >> 2] | 0) > (u2 | 0))
                              c[e2 >> 2] = u2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                          q2 = c[k2 + 1179664 + ((e2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((m2 | 0) > (q2 | 0)) {
                            b[o2 >> 1] = q2;
                            if ((s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (m2 | 0))
                                  c[p2 >> 2] = q2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0)) {
                                  m2 = q2;
                                  break;
                                } else
                                  p2 = p2 + 4 | 0;
                              }
                            } else
                              m2 = q2;
                          } else {
                            b[o2 >> 1] = m2;
                            if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (q2 | 0))
                                  c[p2 >> 2] = m2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0))
                                  break;
                                else
                                  p2 = p2 + 4 | 0;
                              }
                            }
                          }
                          m2 = (m2 << 16 >> 16) * 7 | 0;
                          r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                          r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                          m2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                          c[m2 >> 2] = (c[m2 >> 2] | 0) + z2;
                          m2 = s2;
                        } else {
                          b[o2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          m2 = s2;
                        }
                      } while (0);
                      u2 = u2 + 1 | 0;
                      e2 = t2 + 1 | 0;
                      o2 = o2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((u2 | 0) >= (A2 | 0))
                        break;
                      else {
                        t2 = e2;
                        s2 = m2;
                      }
                    }
                  } else
                    l2 = p2;
                  z2 = z2 + 1 | 0;
                  if ((z2 | 0) >= (B2 | 0)) {
                    q2 = m2;
                    D2 = 52;
                    break a;
                  } else {
                    p2 = l2 + 2 | 0;
                    e2 = e2 + 2 | 0;
                    o2 = o2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              q2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          o2 = k2 + 12 | 0;
          if ((q2 | 0) < 1)
            m2 = 1;
          else {
            e2 = 1;
            m2 = 1;
            while (1) {
              l2 = c[n2 >> 2] | 0;
              if ((l2 | 0) == (e2 | 0)) {
                l2 = m2;
                m2 = m2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[n2 >> 2] = l2;
              if ((e2 | 0) < (q2 | 0)) {
                e2 = e2 + 1 | 0;
                n2 = n2 + 4 | 0;
              } else
                break;
            }
          }
          p2 = k2 + 8 | 0;
          l2 = m2 + -1 | 0;
          c[p2 >> 2] = l2;
          if (l2) {
            ek(o2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((m2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[p2 >> 2] | 0));
            }
            if ((q2 | 0) > 0) {
              o2 = 0;
              do {
                n2 = (c[k2 + 1179664 + (o2 << 2) >> 2] | 0) + -1 | 0;
                e2 = o2 * 7 | 0;
                l2 = k2 + 12 + (n2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (e2 << 2) >> 2] | 0);
                l2 = n2 << 1;
                m2 = k2 + 655376 + (l2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +(c[k2 + 1310736 + (e2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (e2 + 2 << 2) >> 2] | 0);
                n2 = n2 << 2;
                l2 = k2 + 131084 + (n2 << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 1) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 2) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                m2 = k2 + 131084 + ((n2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (e2 + 6 << 2) >> 2] | 0;
                if ((c[m2 >> 2] | 0) < (l2 | 0))
                  c[m2 >> 2] = l2;
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) < (q2 | 0));
            }
            if ((c[p2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[p2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function Gd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        o2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (A2 << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              m2 = m2 + (f2 << 1) | 0;
              n2 = n2 + (f2 << 1) | 0;
            }
          }
        }
        n2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        x2 = 0 - f2 | 0;
        v2 = 1 - f2 | 0;
        w2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              y2 = (A2 | 0) > 1;
              p2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              z2 = 1;
              e2 = e2 + (l2 << 1) | 0;
              o2 = o2 + (l2 << 1) | 0;
              m2 = 0;
              b:
                while (1) {
                  if (y2) {
                    l2 = p2;
                    u2 = 1;
                    t2 = e2;
                    s2 = m2;
                    while (1) {
                      do {
                        if ((d[t2 + 1 >> 0] | 0 | 0) > (j2 | 0)) {
                          a[l2 >> 0] = -1;
                          m2 = b[o2 + (x2 << 1) >> 1] | 0;
                          if (m2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = m2;
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          p2 = b[o2 + (v2 << 1) >> 1] | 0;
                          q2 = p2 << 16 >> 16;
                          m2 = b[o2 + (w2 << 1) >> 1] | 0;
                          r2 = m2 << 16 >> 16;
                          e2 = m2 << 16 >> 16 > 0;
                          if (p2 << 16 >> 16 <= 0) {
                            if (e2) {
                              b[o2 >> 1] = m2;
                              m2 = r2 * 7 | 0;
                              e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                              e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                              e2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[e2 >> 2] | 0) < (u2 | 0))
                                c[e2 >> 2] = u2;
                              c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                              m2 = s2;
                              break;
                            }
                            m2 = b[o2 + -2 >> 1] | 0;
                            if (m2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = m2;
                              m2 = (m2 << 16 >> 16) * 7 | 0;
                              r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                              r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                              r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                              m2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) >= (u2 | 0)) {
                                m2 = s2;
                                break;
                              }
                              c[m2 >> 2] = u2;
                              m2 = s2;
                              break;
                            } else {
                              m2 = s2 + 1 | 0;
                              if ((s2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = m2;
                              c[k2 + 1179664 + (s2 << 2) >> 2] = m2 << 16 >> 16;
                              s2 = s2 * 7 | 0;
                              c[k2 + 1310736 + (s2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (s2 + 1 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 2 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 3 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 4 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 5 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 6 << 2) >> 2] = z2;
                              break;
                            }
                          }
                          if (e2) {
                            m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            q2 = c[k2 + 1179664 + (r2 + -1 << 2) >> 2] | 0;
                            if ((m2 | 0) > (q2 | 0)) {
                              b[o2 >> 1] = q2;
                              if ((s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (m2 | 0))
                                    c[p2 >> 2] = q2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0)) {
                                    m2 = q2;
                                    break;
                                  } else
                                    p2 = p2 + 4 | 0;
                                }
                              } else
                                m2 = q2;
                            } else {
                              b[o2 >> 1] = m2;
                              if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (q2 | 0))
                                    c[p2 >> 2] = m2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0))
                                    break;
                                  else
                                    p2 = p2 + 4 | 0;
                                }
                              }
                            }
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          e2 = b[o2 + -2 >> 1] | 0;
                          if (e2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = p2;
                            m2 = q2 * 7 | 0;
                            e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                            e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                            e2 = k2 + 1310736 + (m2 + -4 << 2) | 0;
                            if ((c[e2 >> 2] | 0) > (u2 | 0))
                              c[e2 >> 2] = u2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                          q2 = c[k2 + 1179664 + ((e2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((m2 | 0) > (q2 | 0)) {
                            b[o2 >> 1] = q2;
                            if ((s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (m2 | 0))
                                  c[p2 >> 2] = q2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0)) {
                                  m2 = q2;
                                  break;
                                } else
                                  p2 = p2 + 4 | 0;
                              }
                            } else
                              m2 = q2;
                          } else {
                            b[o2 >> 1] = m2;
                            if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (q2 | 0))
                                  c[p2 >> 2] = m2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0))
                                  break;
                                else
                                  p2 = p2 + 4 | 0;
                              }
                            }
                          }
                          m2 = (m2 << 16 >> 16) * 7 | 0;
                          r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                          r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                          m2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                          c[m2 >> 2] = (c[m2 >> 2] | 0) + z2;
                          m2 = s2;
                        } else {
                          b[o2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          m2 = s2;
                        }
                      } while (0);
                      u2 = u2 + 1 | 0;
                      e2 = t2 + 2 | 0;
                      o2 = o2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((u2 | 0) >= (A2 | 0))
                        break;
                      else {
                        t2 = e2;
                        s2 = m2;
                      }
                    }
                  } else
                    l2 = p2;
                  z2 = z2 + 1 | 0;
                  if ((z2 | 0) >= (B2 | 0)) {
                    q2 = m2;
                    D2 = 52;
                    break a;
                  } else {
                    p2 = l2 + 2 | 0;
                    e2 = e2 + 4 | 0;
                    o2 = o2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              q2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          o2 = k2 + 12 | 0;
          if ((q2 | 0) < 1)
            m2 = 1;
          else {
            e2 = 1;
            m2 = 1;
            while (1) {
              l2 = c[n2 >> 2] | 0;
              if ((l2 | 0) == (e2 | 0)) {
                l2 = m2;
                m2 = m2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[n2 >> 2] = l2;
              if ((e2 | 0) < (q2 | 0)) {
                e2 = e2 + 1 | 0;
                n2 = n2 + 4 | 0;
              } else
                break;
            }
          }
          p2 = k2 + 8 | 0;
          l2 = m2 + -1 | 0;
          c[p2 >> 2] = l2;
          if (l2) {
            ek(o2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((m2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[p2 >> 2] | 0));
            }
            if ((q2 | 0) > 0) {
              o2 = 0;
              do {
                n2 = (c[k2 + 1179664 + (o2 << 2) >> 2] | 0) + -1 | 0;
                e2 = o2 * 7 | 0;
                l2 = k2 + 12 + (n2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (e2 << 2) >> 2] | 0);
                l2 = n2 << 1;
                m2 = k2 + 655376 + (l2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +(c[k2 + 1310736 + (e2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (e2 + 2 << 2) >> 2] | 0);
                n2 = n2 << 2;
                l2 = k2 + 131084 + (n2 << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 1) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 2) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                m2 = k2 + 131084 + ((n2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (e2 + 6 << 2) >> 2] | 0;
                if ((c[m2 >> 2] | 0) < (l2 | 0))
                  c[m2 >> 2] = l2;
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) < (q2 | 0));
            }
            if ((c[p2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[p2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function Hd(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        o2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (A2 << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              m2 = m2 + (f2 << 1) | 0;
              n2 = n2 + (f2 << 1) | 0;
            }
          }
        }
        n2 = k2 + 1179664 | 0;
        l2 = f2 + 1 | 0;
        x2 = 0 - f2 | 0;
        v2 = 1 - f2 | 0;
        w2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              y2 = (A2 | 0) > 1;
              p2 = (c[k2 + 4 >> 2] | 0) + l2 | 0;
              z2 = 1;
              e2 = e2 + (l2 << 1) | 0;
              o2 = o2 + (l2 << 1) | 0;
              m2 = 0;
              b:
                while (1) {
                  if (y2) {
                    l2 = p2;
                    u2 = 1;
                    t2 = e2;
                    s2 = m2;
                    while (1) {
                      do {
                        if ((d[t2 >> 0] | 0 | 0) > (j2 | 0)) {
                          a[l2 >> 0] = -1;
                          m2 = b[o2 + (x2 << 1) >> 1] | 0;
                          if (m2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = m2;
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          p2 = b[o2 + (v2 << 1) >> 1] | 0;
                          q2 = p2 << 16 >> 16;
                          m2 = b[o2 + (w2 << 1) >> 1] | 0;
                          r2 = m2 << 16 >> 16;
                          e2 = m2 << 16 >> 16 > 0;
                          if (p2 << 16 >> 16 <= 0) {
                            if (e2) {
                              b[o2 >> 1] = m2;
                              m2 = r2 * 7 | 0;
                              e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                              e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                              e2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[e2 >> 2] | 0) < (u2 | 0))
                                c[e2 >> 2] = u2;
                              c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                              m2 = s2;
                              break;
                            }
                            m2 = b[o2 + -2 >> 1] | 0;
                            if (m2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = m2;
                              m2 = (m2 << 16 >> 16) * 7 | 0;
                              r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                              r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                              r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                              m2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) >= (u2 | 0)) {
                                m2 = s2;
                                break;
                              }
                              c[m2 >> 2] = u2;
                              m2 = s2;
                              break;
                            } else {
                              m2 = s2 + 1 | 0;
                              if ((s2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = m2;
                              c[k2 + 1179664 + (s2 << 2) >> 2] = m2 << 16 >> 16;
                              s2 = s2 * 7 | 0;
                              c[k2 + 1310736 + (s2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (s2 + 1 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 2 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 3 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 4 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 5 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 6 << 2) >> 2] = z2;
                              break;
                            }
                          }
                          if (e2) {
                            m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            q2 = c[k2 + 1179664 + (r2 + -1 << 2) >> 2] | 0;
                            if ((m2 | 0) > (q2 | 0)) {
                              b[o2 >> 1] = q2;
                              if ((s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (m2 | 0))
                                    c[p2 >> 2] = q2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0)) {
                                    m2 = q2;
                                    break;
                                  } else
                                    p2 = p2 + 4 | 0;
                                }
                              } else
                                m2 = q2;
                            } else {
                              b[o2 >> 1] = m2;
                              if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (q2 | 0))
                                    c[p2 >> 2] = m2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0))
                                    break;
                                  else
                                    p2 = p2 + 4 | 0;
                                }
                              }
                            }
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          e2 = b[o2 + -2 >> 1] | 0;
                          if (e2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = p2;
                            m2 = q2 * 7 | 0;
                            e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                            e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                            e2 = k2 + 1310736 + (m2 + -4 << 2) | 0;
                            if ((c[e2 >> 2] | 0) > (u2 | 0))
                              c[e2 >> 2] = u2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                          q2 = c[k2 + 1179664 + ((e2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((m2 | 0) > (q2 | 0)) {
                            b[o2 >> 1] = q2;
                            if ((s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (m2 | 0))
                                  c[p2 >> 2] = q2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0)) {
                                  m2 = q2;
                                  break;
                                } else
                                  p2 = p2 + 4 | 0;
                              }
                            } else
                              m2 = q2;
                          } else {
                            b[o2 >> 1] = m2;
                            if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (q2 | 0))
                                  c[p2 >> 2] = m2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0))
                                  break;
                                else
                                  p2 = p2 + 4 | 0;
                              }
                            }
                          }
                          m2 = (m2 << 16 >> 16) * 7 | 0;
                          r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                          r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                          m2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                          c[m2 >> 2] = (c[m2 >> 2] | 0) + z2;
                          m2 = s2;
                        } else {
                          b[o2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          m2 = s2;
                        }
                      } while (0);
                      u2 = u2 + 1 | 0;
                      e2 = t2 + 2 | 0;
                      o2 = o2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((u2 | 0) >= (A2 | 0))
                        break;
                      else {
                        t2 = e2;
                        s2 = m2;
                      }
                    }
                  } else
                    l2 = p2;
                  z2 = z2 + 1 | 0;
                  if ((z2 | 0) >= (B2 | 0)) {
                    q2 = m2;
                    D2 = 52;
                    break a;
                  } else {
                    p2 = l2 + 2 | 0;
                    e2 = e2 + 4 | 0;
                    o2 = o2 + 4 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              q2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          o2 = k2 + 12 | 0;
          if ((q2 | 0) < 1)
            m2 = 1;
          else {
            e2 = 1;
            m2 = 1;
            while (1) {
              l2 = c[n2 >> 2] | 0;
              if ((l2 | 0) == (e2 | 0)) {
                l2 = m2;
                m2 = m2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[n2 >> 2] = l2;
              if ((e2 | 0) < (q2 | 0)) {
                e2 = e2 + 1 | 0;
                n2 = n2 + 4 | 0;
              } else
                break;
            }
          }
          p2 = k2 + 8 | 0;
          l2 = m2 + -1 | 0;
          c[p2 >> 2] = l2;
          if (l2) {
            ek(o2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((m2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[p2 >> 2] | 0));
            }
            if ((q2 | 0) > 0) {
              o2 = 0;
              do {
                n2 = (c[k2 + 1179664 + (o2 << 2) >> 2] | 0) + -1 | 0;
                e2 = o2 * 7 | 0;
                l2 = k2 + 12 + (n2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (e2 << 2) >> 2] | 0);
                l2 = n2 << 1;
                m2 = k2 + 655376 + (l2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +(c[k2 + 1310736 + (e2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (e2 + 2 << 2) >> 2] | 0);
                n2 = n2 << 2;
                l2 = k2 + 131084 + (n2 << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 1) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 2) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                m2 = k2 + 131084 + ((n2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (e2 + 6 << 2) >> 2] | 0;
                if ((c[m2 >> 2] | 0) < (l2 | 0))
                  c[m2 >> 2] = l2;
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) < (q2 | 0));
            }
            if ((c[p2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[p2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function Id(e2, f2, g2, j2, k2) {
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
        E2 = i2;
        i2 = i2 + 16 | 0;
        C2 = E2;
        o2 = c[k2 >> 2] | 0;
        B2 = g2 + -1 | 0;
        if ((f2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (($(B2, f2) | 0) << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (f2 | 0))
              break;
            else {
              m2 = m2 + 2 | 0;
              n2 = n2 + 2 | 0;
            }
          }
        }
        A2 = f2 + -1 | 0;
        if ((g2 | 0) > 0) {
          l2 = 0;
          m2 = o2;
          n2 = o2 + (A2 << 1) | 0;
          while (1) {
            b[n2 >> 1] = 0;
            b[m2 >> 1] = 0;
            l2 = l2 + 1 | 0;
            if ((l2 | 0) >= (g2 | 0))
              break;
            else {
              m2 = m2 + (f2 << 1) | 0;
              n2 = n2 + (f2 << 1) | 0;
            }
          }
        }
        n2 = k2 + 1179664 | 0;
        m2 = f2 + 1 | 0;
        x2 = 0 - f2 | 0;
        v2 = 1 - f2 | 0;
        w2 = ~f2;
        a:
          do {
            if ((B2 | 0) > 1) {
              y2 = (A2 | 0) > 1;
              l2 = (c[k2 + 4 >> 2] | 0) + m2 | 0;
              z2 = 1;
              e2 = e2 + m2 | 0;
              o2 = o2 + (m2 << 1) | 0;
              j2 = j2 + m2 | 0;
              m2 = 0;
              b:
                while (1) {
                  if (y2) {
                    u2 = 1;
                    t2 = e2;
                    s2 = m2;
                    while (1) {
                      do {
                        if ((d[t2 >> 0] | 0) > (d[j2 >> 0] | 0)) {
                          a[l2 >> 0] = -1;
                          m2 = b[o2 + (x2 << 1) >> 1] | 0;
                          if (m2 << 16 >> 16 > 0) {
                            b[o2 >> 1] = m2;
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          p2 = b[o2 + (v2 << 1) >> 1] | 0;
                          q2 = p2 << 16 >> 16;
                          m2 = b[o2 + (w2 << 1) >> 1] | 0;
                          r2 = m2 << 16 >> 16;
                          e2 = m2 << 16 >> 16 > 0;
                          if (p2 << 16 >> 16 <= 0) {
                            if (e2) {
                              b[o2 >> 1] = m2;
                              m2 = r2 * 7 | 0;
                              e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                              e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                              e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                              e2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[e2 >> 2] | 0) < (u2 | 0))
                                c[e2 >> 2] = u2;
                              c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                              m2 = s2;
                              break;
                            }
                            m2 = b[o2 + -2 >> 1] | 0;
                            if (m2 << 16 >> 16 > 0) {
                              b[o2 >> 1] = m2;
                              m2 = (m2 << 16 >> 16) * 7 | 0;
                              r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                              r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                              r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                              c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                              m2 = k2 + 1310736 + (m2 + -3 << 2) | 0;
                              if ((c[m2 >> 2] | 0) >= (u2 | 0)) {
                                m2 = s2;
                                break;
                              }
                              c[m2 >> 2] = u2;
                              m2 = s2;
                              break;
                            } else {
                              m2 = s2 + 1 | 0;
                              if ((s2 | 0) > 32767)
                                break b;
                              b[o2 >> 1] = m2;
                              c[k2 + 1179664 + (s2 << 2) >> 2] = m2 << 16 >> 16;
                              s2 = s2 * 7 | 0;
                              c[k2 + 1310736 + (s2 << 2) >> 2] = 1;
                              c[k2 + 1310736 + (s2 + 1 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 2 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 3 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 4 << 2) >> 2] = u2;
                              c[k2 + 1310736 + (s2 + 5 << 2) >> 2] = z2;
                              c[k2 + 1310736 + (s2 + 6 << 2) >> 2] = z2;
                              break;
                            }
                          }
                          if (e2) {
                            m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                            q2 = c[k2 + 1179664 + (r2 + -1 << 2) >> 2] | 0;
                            if ((m2 | 0) > (q2 | 0)) {
                              b[o2 >> 1] = q2;
                              if ((s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (m2 | 0))
                                    c[p2 >> 2] = q2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0)) {
                                    m2 = q2;
                                    break;
                                  } else
                                    p2 = p2 + 4 | 0;
                                }
                              } else
                                m2 = q2;
                            } else {
                              b[o2 >> 1] = m2;
                              if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                                e2 = 0;
                                p2 = n2;
                                while (1) {
                                  if ((c[p2 >> 2] | 0) == (q2 | 0))
                                    c[p2 >> 2] = m2;
                                  e2 = e2 + 1 | 0;
                                  if ((e2 | 0) >= (s2 | 0))
                                    break;
                                  else
                                    p2 = p2 + 4 | 0;
                                }
                              }
                            }
                            m2 = (m2 << 16 >> 16) * 7 | 0;
                            r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                            r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                            r2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[r2 >> 2] = (c[r2 >> 2] | 0) + z2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          e2 = b[o2 + -2 >> 1] | 0;
                          if (e2 << 16 >> 16 <= 0) {
                            b[o2 >> 1] = p2;
                            m2 = q2 * 7 | 0;
                            e2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + 1;
                            e2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + u2;
                            e2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                            c[e2 >> 2] = (c[e2 >> 2] | 0) + z2;
                            e2 = k2 + 1310736 + (m2 + -4 << 2) | 0;
                            if ((c[e2 >> 2] | 0) > (u2 | 0))
                              c[e2 >> 2] = u2;
                            c[k2 + 1310736 + (m2 + -1 << 2) >> 2] = z2;
                            m2 = s2;
                            break;
                          }
                          m2 = c[k2 + 1179664 + (q2 + -1 << 2) >> 2] | 0;
                          q2 = c[k2 + 1179664 + ((e2 << 16 >> 16) + -1 << 2) >> 2] | 0;
                          if ((m2 | 0) > (q2 | 0)) {
                            b[o2 >> 1] = q2;
                            if ((s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (m2 | 0))
                                  c[p2 >> 2] = q2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0)) {
                                  m2 = q2;
                                  break;
                                } else
                                  p2 = p2 + 4 | 0;
                              }
                            } else
                              m2 = q2;
                          } else {
                            b[o2 >> 1] = m2;
                            if ((m2 | 0) < (q2 | 0) & (s2 | 0) > 0) {
                              e2 = 0;
                              p2 = n2;
                              while (1) {
                                if ((c[p2 >> 2] | 0) == (q2 | 0))
                                  c[p2 >> 2] = m2;
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) >= (s2 | 0))
                                  break;
                                else
                                  p2 = p2 + 4 | 0;
                              }
                            }
                          }
                          m2 = (m2 << 16 >> 16) * 7 | 0;
                          r2 = k2 + 1310736 + (m2 + -7 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + 1;
                          r2 = k2 + 1310736 + (m2 + -6 << 2) | 0;
                          c[r2 >> 2] = (c[r2 >> 2] | 0) + u2;
                          m2 = k2 + 1310736 + (m2 + -5 << 2) | 0;
                          c[m2 >> 2] = (c[m2 >> 2] | 0) + z2;
                          m2 = s2;
                        } else {
                          b[o2 >> 1] = 0;
                          a[l2 >> 0] = 0;
                          m2 = s2;
                        }
                      } while (0);
                      u2 = u2 + 1 | 0;
                      e2 = t2 + 1 | 0;
                      j2 = j2 + 1 | 0;
                      o2 = o2 + 2 | 0;
                      l2 = l2 + 1 | 0;
                      if ((u2 | 0) >= (A2 | 0))
                        break;
                      else {
                        t2 = e2;
                        s2 = m2;
                      }
                    }
                  }
                  z2 = z2 + 1 | 0;
                  if ((z2 | 0) >= (B2 | 0)) {
                    p2 = m2;
                    D2 = 52;
                    break a;
                  } else {
                    l2 = l2 + 2 | 0;
                    e2 = e2 + 2 | 0;
                    o2 = o2 + 4 | 0;
                    j2 = j2 + 2 | 0;
                  }
                }
              Me(3, 3904, C2);
              l2 = -1;
            } else {
              p2 = 0;
              D2 = 52;
            }
          } while (0);
        if ((D2 | 0) == 52) {
          o2 = k2 + 12 | 0;
          if ((p2 | 0) < 1)
            m2 = 1;
          else {
            e2 = 1;
            m2 = 1;
            while (1) {
              l2 = c[n2 >> 2] | 0;
              if ((l2 | 0) == (e2 | 0)) {
                l2 = m2;
                m2 = m2 + 1 | 0;
              } else
                l2 = c[k2 + 1179664 + (l2 + -1 << 2) >> 2] | 0;
              c[n2 >> 2] = l2;
              if ((e2 | 0) < (p2 | 0)) {
                e2 = e2 + 1 | 0;
                n2 = n2 + 4 | 0;
              } else
                break;
            }
          }
          j2 = k2 + 8 | 0;
          l2 = m2 + -1 | 0;
          c[j2 >> 2] = l2;
          if (l2) {
            ek(o2 | 0, 0, l2 << 2 | 0) | 0;
            ek(k2 + 655376 | 0, 0, l2 << 4 | 0) | 0;
            if ((m2 | 0) > 1) {
              l2 = 0;
              do {
                D2 = l2 << 2;
                c[k2 + 131084 + (D2 << 2) >> 2] = f2;
                c[k2 + 131084 + ((D2 | 1) << 2) >> 2] = 0;
                c[k2 + 131084 + ((D2 | 2) << 2) >> 2] = g2;
                c[k2 + 131084 + ((D2 | 3) << 2) >> 2] = 0;
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[j2 >> 2] | 0));
            }
            if ((p2 | 0) > 0) {
              o2 = 0;
              do {
                n2 = (c[k2 + 1179664 + (o2 << 2) >> 2] | 0) + -1 | 0;
                e2 = o2 * 7 | 0;
                l2 = k2 + 12 + (n2 << 2) | 0;
                c[l2 >> 2] = (c[l2 >> 2] | 0) + (c[k2 + 1310736 + (e2 << 2) >> 2] | 0);
                l2 = n2 << 1;
                m2 = k2 + 655376 + (l2 << 3) | 0;
                h[m2 >> 3] = +h[m2 >> 3] + +(c[k2 + 1310736 + (e2 + 1 << 2) >> 2] | 0);
                l2 = k2 + 655376 + ((l2 | 1) << 3) | 0;
                h[l2 >> 3] = +h[l2 >> 3] + +(c[k2 + 1310736 + (e2 + 2 << 2) >> 2] | 0);
                n2 = n2 << 2;
                l2 = k2 + 131084 + (n2 << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 3 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 1) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 4 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) < (m2 | 0))
                  c[l2 >> 2] = m2;
                l2 = k2 + 131084 + ((n2 | 2) << 2) | 0;
                m2 = c[k2 + 1310736 + (e2 + 5 << 2) >> 2] | 0;
                if ((c[l2 >> 2] | 0) > (m2 | 0))
                  c[l2 >> 2] = m2;
                m2 = k2 + 131084 + ((n2 | 3) << 2) | 0;
                l2 = c[k2 + 1310736 + (e2 + 6 << 2) >> 2] | 0;
                if ((c[m2 >> 2] | 0) < (l2 | 0))
                  c[m2 >> 2] = l2;
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) < (p2 | 0));
            }
            if ((c[j2 >> 2] | 0) > 0) {
              l2 = 0;
              do {
                f2 = k2 + 12 + (l2 << 2) | 0;
                g2 = l2 << 1;
                D2 = k2 + 655376 + (g2 << 3) | 0;
                h[D2 >> 3] = +h[D2 >> 3] / +(c[f2 >> 2] | 0);
                g2 = k2 + 655376 + ((g2 | 1) << 3) | 0;
                h[g2 >> 3] = +h[g2 >> 3] / +(c[f2 >> 2] | 0);
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) < (c[j2 >> 2] | 0));
              l2 = 0;
            } else
              l2 = 0;
          } else
            l2 = 0;
        }
        i2 = E2;
        return l2 | 0;
      }
      function Jd(a2) {
        a2 = a2 | 0;
        return Kd(a2 + 8 | 0) | 0;
      }
      function Kd(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0;
        d2 = i2;
        i2 = i2 + 16 | 0;
        b2 = Uj(4) | 0;
        if (!b2) {
          Me(3, 5472, d2);
          rb(1);
        }
        a2 = wf(a2) | 0;
        c[b2 >> 2] = a2;
        if (!a2) {
          Vj(b2);
          b2 = 0;
        }
        i2 = d2;
        return b2 | 0;
      }
      function Ld(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        b2 = c[a2 >> 2] | 0;
        if (!b2)
          b2 = -1;
        else {
          xf(b2) | 0;
          Vj(c[a2 >> 2] | 0);
          c[a2 >> 2] = 0;
          b2 = 0;
        }
        return b2 | 0;
      }
      function Md(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0;
        d2 = i2;
        i2 = i2 + 16 | 0;
        b2 = Uj(7062432) | 0;
        if (!b2) {
          Me(3, 5472, d2);
          rb(1);
        }
        c[b2 >> 2] = 0;
        c[b2 + 4834148 >> 2] = 0;
        c[b2 + 7062408 >> 2] = 0;
        c[b2 + 4 >> 2] = -1;
        c[b2 + 8 >> 2] = 0;
        c[b2 + 12 >> 2] = 1;
        c[b2 + 16 >> 2] = 100;
        c[b2 + 20 >> 2] = 0;
        c[b2 + 24 >> 2] = 0;
        c[b2 + 28 >> 2] = 2;
        h[b2 + 7062416 >> 3] = 0.5;
        c[b2 + 7062424 >> 2] = 3;
        c[b2 + 32 >> 2] = a2;
        e2 = c[a2 >> 2] | 0;
        c[b2 + 36 >> 2] = e2;
        a2 = c[a2 + 4 >> 2] | 0;
        c[b2 + 40 >> 2] = a2;
        c[b2 + 44 >> 2] = 0;
        c[b2 + 15408 >> 2] = 0;
        c[b2 + 4834152 >> 2] = 0;
        c[b2 + 4818296 >> 2] = 0;
        a2 = Uj($(e2 << 1, a2) | 0) | 0;
        c[b2 + 4834144 >> 2] = a2;
        if (!a2) {
          Me(3, 5472, d2 + 8 | 0);
          rb(1);
        } else {
          c[b2 + 7062384 >> 2] = 0;
          Nd(b2, 2) | 0;
          Od(b2, 0) | 0;
          c[b2 + 7062388 >> 2] = -1;
          Pd(b2, 0) | 0;
          c[b2 + 7062392 >> 2] = 7;
          c[b2 + 7062396 >> 2] = 0;
          i2 = d2;
          return b2 | 0;
        }
        return 0;
      }
      function Nd(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
        g2 = i2;
        i2 = i2 + 16 | 0;
        d2 = g2;
        a:
          do {
            if (a2) {
              e2 = a2 + 4 | 0;
              if ((c[e2 >> 2] | 0) != (b2 | 0)) {
                switch (b2 | 0) {
                  case 11:
                  case 10:
                  case 9:
                  case 8:
                  case 7:
                  case 6:
                  case 4:
                  case 3:
                  case 2:
                  case 1:
                  case 0: {
                    f2 = 0;
                    break;
                  }
                  case 14:
                  case 13:
                  case 12:
                  case 5: {
                    f2 = 1;
                    break;
                  }
                  default: {
                    c[d2 >> 2] = b2;
                    Me(3, 3936, d2);
                    d2 = -1;
                    break a;
                  }
                }
                c[e2 >> 2] = b2;
                c[a2 + 8 >> 2] = Pe(b2) | 0;
                d2 = a2 + 7062408 | 0;
                b2 = c[d2 >> 2] | 0;
                if (b2) {
                  pe(b2);
                  c[d2 >> 2] = oe(c[a2 + 36 >> 2] | 0, c[a2 + 40 >> 2] | 0, c[e2 >> 2] | 0, 0) | 0;
                }
                d2 = a2 + 24 | 0;
                b2 = c[d2 >> 2] | 0;
                if (!f2)
                  switch (b2 | 0) {
                    case 1: {
                      c[d2 >> 2] = 4;
                      d2 = 0;
                      break a;
                    }
                    case 4: {
                      c[d2 >> 2] = 3;
                      d2 = 0;
                      break a;
                    }
                    default: {
                      d2 = 0;
                      break a;
                    }
                  }
                else
                  switch (b2 | 0) {
                    case 0: {
                      c[d2 >> 2] = 1;
                      d2 = 0;
                      break a;
                    }
                    case 3: {
                      c[d2 >> 2] = 4;
                      d2 = 0;
                      break a;
                    }
                    default: {
                      d2 = 0;
                      break a;
                    }
                  }
              } else
                d2 = 0;
            } else
              d2 = -1;
          } while (0);
        i2 = g2;
        return d2 | 0;
      }
      function Od(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0;
        f2 = i2;
        i2 = i2 + 16 | 0;
        e2 = f2;
        do {
          if (a2)
            if ((c[a2 >> 2] | 0) != (b2 | 0)) {
              c[a2 >> 2] = b2;
              if (!b2) {
                d2 = a2 + 4834148 | 0;
                Vj(c[d2 >> 2] | 0);
                c[d2 >> 2] = 0;
                d2 = 0;
                break;
              }
              b2 = Uj($(c[a2 + 40 >> 2] | 0, c[a2 + 36 >> 2] | 0) | 0) | 0;
              c[a2 + 4834148 >> 2] = b2;
              if (!b2) {
                Me(3, 5472, e2);
                rb(1);
              } else
                d2 = 0;
            } else
              d2 = 0;
          else
            d2 = -1;
        } while (0);
        i2 = f2;
        return d2 | 0;
      }
      function Pd(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0;
        j2 = i2;
        i2 = i2 + 16 | 0;
        h2 = j2 + 8 | 0;
        f2 = j2;
        if (a2) {
          g2 = a2 + 7062388 | 0;
          if ((c[g2 >> 2] | 0) != (b2 | 0)) {
            d2 = a2 + 7062408 | 0;
            e2 = c[d2 >> 2] | 0;
            if (e2) {
              pe(e2);
              c[d2 >> 2] = 0;
            }
            switch (b2 | 0) {
              case 3:
              case 2:
              case 1: {
                c[d2 >> 2] = oe(c[a2 + 36 >> 2] | 0, c[a2 + 40 >> 2] | 0, c[a2 + 4 >> 2] | 0, 0) | 0;
                break;
              }
              case 4: {
                c[a2 + 7062404 >> 2] = 1;
                c[a2 + 7062400 >> 2] = 1;
                b2 = 4;
                break;
              }
              case 0: {
                b2 = 0;
                break;
              }
              default: {
                Me(3, 3985, f2);
                b2 = 0;
              }
            }
            c[g2 >> 2] = b2;
            if ((c[a2 >> 2] | 0) == 1) {
              c[h2 >> 2] = c[760 + (b2 << 2) >> 2];
              Me(3, 4059, h2);
              b2 = 0;
            } else
              b2 = 0;
          } else
            b2 = 0;
        } else
          b2 = -1;
        i2 = j2;
        return b2 | 0;
      }
      function Qd(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0;
        if (!a2)
          b2 = -1;
        else {
          b2 = a2 + 7062408 | 0;
          d2 = c[b2 >> 2] | 0;
          if (d2) {
            pe(d2);
            c[b2 >> 2] = 0;
          }
          Vj(c[a2 + 4834144 >> 2] | 0);
          Vj(c[a2 + 4834148 >> 2] | 0);
          Vj(a2);
          b2 = 0;
        }
        return b2 | 0;
      }
      function Rd(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if ((a2 | 0) != 0 & (b2 | 0) != 0) {
          c[b2 >> 2] = c[a2 >> 2];
          a2 = 0;
        } else
          a2 = -1;
        return a2 | 0;
      }
      function Sd(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if ((a2 | 0) != 0 & b2 >>> 0 < 2) {
          c[a2 + 12 >> 2] = b2;
          a2 = 0;
        } else
          a2 = -1;
        return a2 | 0;
      }
      function Td(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if ((a2 | 0) != 0 & (b2 | 0) != 0) {
          c[b2 >> 2] = c[a2 + 12 >> 2];
          a2 = 0;
        } else
          a2 = -1;
        return a2 | 0;
      }
      function Ud(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if ((a2 | 0) == 0 | b2 >>> 0 > 255)
          a2 = -1;
        else {
          c[a2 + 16 >> 2] = b2;
          a2 = 0;
        }
        return a2 | 0;
      }
      function Vd(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if ((a2 | 0) != 0 & (b2 | 0) != 0) {
          c[b2 >> 2] = c[a2 + 16 >> 2];
          a2 = 0;
        } else
          a2 = -1;
        return a2 | 0;
      }
      function Wd(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if ((a2 | 0) != 0 & (b2 | 0) != 0) {
          c[b2 >> 2] = c[a2 + 7062388 >> 2];
          a2 = 0;
        } else
          a2 = -1;
        return a2 | 0;
      }
      function Xd(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if ((a2 | 0) != 0 & b2 >>> 0 < 2) {
          c[a2 + 20 >> 2] = b2;
          a2 = 0;
        } else
          a2 = -1;
        return a2 | 0;
      }
      function Yd(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if (!a2)
          a2 = -1;
        else {
          c[b2 >> 2] = c[a2 + 20 >> 2];
          a2 = 0;
        }
        return a2 | 0;
      }
      function Zd(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if ((a2 | 0) != 0 & b2 >>> 0 < 5) {
          c[a2 + 24 >> 2] = b2;
          a2 = 0;
        } else
          a2 = -1;
        return a2 | 0;
      }
      function _d(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if (!a2)
          a2 = -1;
        else {
          c[a2 + 7062424 >> 2] = b2;
          a2 = 0;
        }
        return a2 | 0;
      }
      function $d(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if ((a2 | 0) != 0 & (b2 | 0) != 0) {
          c[b2 >> 2] = c[a2 + 7062424 >> 2];
          a2 = 0;
        } else
          a2 = -1;
        return a2 | 0;
      }
      function ae(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if (!a2)
          a2 = -1;
        else {
          c[b2 >> 2] = c[a2 + 24 >> 2];
          a2 = 0;
        }
        return a2 | 0;
      }
      function be(a2, b2) {
        a2 = a2 | 0;
        b2 = +b2;
        if ((a2 | 0) != 0 ? !(b2 <= 0 | b2 >= 1) : 0) {
          h[a2 + 7062416 >> 3] = b2;
          a2 = 0;
        } else
          a2 = -1;
        return a2 | 0;
      }
      function ce(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        if (!a2)
          a2 = -1;
        else {
          h[b2 >> 3] = +h[a2 + 7062416 >> 3];
          a2 = 0;
        }
        return a2 | 0;
      }
      function de(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0;
        Q2 = i2;
        i2 = i2 + 80 | 0;
        M2 = Q2 + 32 | 0;
        G2 = Q2 + 24 | 0;
        z2 = Q2;
        y2 = Q2 + 52 | 0;
        D2 = Q2 + 40 | 0;
        L2 = Q2 + 64 | 0;
        P2 = a2 + 44 | 0;
        c[P2 >> 2] = 0;
        J2 = a2 + 7062388 | 0;
        f2 = c[J2 >> 2] | 0;
        a:
          do {
            if ((f2 | 0) == 4) {
              I2 = a2 + 7062396 | 0;
              e2 = c[I2 >> 2] | 0;
              do {
                if ((e2 | 0) > 0) {
                  f2 = 4;
                  e2 = e2 + -1 | 0;
                } else {
                  C2 = a2 + 16 | 0;
                  F2 = c[C2 >> 2] | 0;
                  E2 = a2 + 7062400 | 0;
                  A2 = (c[E2 >> 2] | 0) + F2 | 0;
                  A2 = (A2 | 0) > 255 ? 255 : A2;
                  c[y2 >> 2] = A2;
                  H2 = a2 + 7062404 | 0;
                  B2 = F2 - (c[H2 >> 2] | 0) | 0;
                  B2 = (B2 | 0) < 0 ? 0 : B2;
                  c[y2 + 4 >> 2] = B2;
                  c[y2 + 8 >> 2] = F2;
                  e2 = a2 + 36 | 0;
                  f2 = a2 + 40 | 0;
                  g2 = a2 + 4 | 0;
                  k2 = a2 + 12 | 0;
                  l2 = a2 + 20 | 0;
                  m2 = a2 + 4834144 | 0;
                  p2 = a2 + 15416 | 0;
                  q2 = a2 + 15408 | 0;
                  r2 = a2 + 7062384 | 0;
                  s2 = a2 + 24 | 0;
                  t2 = a2 + 32 | 0;
                  u2 = a2 + 7062416 | 0;
                  v2 = a2 + 48 | 0;
                  w2 = a2 + 7062424 | 0;
                  x2 = 0;
                  do {
                    if ((xe(b2, c[e2 >> 2] | 0, c[f2 >> 2] | 0, c[g2 >> 2] | 0, c[a2 >> 2] | 0, c[k2 >> 2] | 0, c[y2 + (x2 << 2) >> 2] | 0, c[l2 >> 2] | 0, m2, 0) | 0) < 0) {
                      e2 = -1;
                      break a;
                    }
                    if ((fe(c[e2 >> 2] | 0, c[f2 >> 2] | 0, m2, c[l2 >> 2] | 0, 1e6, 70, 1, p2, q2) | 0) < 0) {
                      e2 = -1;
                      break a;
                    }
                    if ((je(b2, c[e2 >> 2] | 0, c[f2 >> 2] | 0, c[g2 >> 2] | 0, p2, c[q2 >> 2] | 0, c[r2 >> 2] | 0, c[l2 >> 2] | 0, c[s2 >> 2] | 0, (c[t2 >> 2] | 0) + 184 | 0, +h[u2 >> 3], v2, P2, c[w2 >> 2] | 0) | 0) < 0) {
                      e2 = -1;
                      break a;
                    }
                    c[D2 + (x2 << 2) >> 2] = c[P2 >> 2];
                    x2 = x2 + 1 | 0;
                  } while ((x2 | 0) < 3);
                  if ((c[a2 >> 2] | 0) == 1) {
                    N2 = c[D2 + 4 >> 2] | 0;
                    g2 = c[D2 + 8 >> 2] | 0;
                    f2 = c[D2 >> 2] | 0;
                    c[z2 >> 2] = B2;
                    c[z2 + 4 >> 2] = N2;
                    c[z2 + 8 >> 2] = F2;
                    c[z2 + 12 >> 2] = g2;
                    c[z2 + 16 >> 2] = A2;
                    c[z2 + 20 >> 2] = f2;
                    Me(3, 4153, z2);
                  } else {
                    f2 = c[D2 >> 2] | 0;
                    g2 = c[D2 + 8 >> 2] | 0;
                  }
                  e2 = c[D2 + 4 >> 2] | 0;
                  if ((f2 | 0) > (g2 | 0) | (e2 | 0) > (g2 | 0)) {
                    f2 = (f2 | 0) >= (e2 | 0) ? A2 : B2;
                    c[C2 >> 2] = f2;
                    e2 = f2 - F2 | 0;
                    if ((e2 | 0) > 0) {
                      c[E2 >> 2] = e2;
                      e2 = 1;
                    } else {
                      c[E2 >> 2] = 1;
                      e2 = 0 - e2 | 0;
                    }
                    c[H2 >> 2] = e2;
                    if ((c[a2 >> 2] | 0) == 1) {
                      c[G2 >> 2] = f2;
                      Me(3, 4229, G2);
                    }
                    f2 = c[J2 >> 2] | 0;
                    e2 = c[a2 + 7062392 >> 2] | 0;
                    break;
                  }
                  e2 = c[E2 >> 2] | 0;
                  f2 = c[H2 >> 2] | 0;
                  do {
                    if ((e2 | 0) >= (f2 | 0))
                      if ((e2 | 0) > (f2 | 0)) {
                        c[H2 >> 2] = f2 + 1;
                        break;
                      } else {
                        e2 = e2 + 1 | 0;
                        c[E2 >> 2] = e2;
                        c[H2 >> 2] = f2 + 1;
                        break;
                      }
                    else {
                      e2 = e2 + 1 | 0;
                      c[E2 >> 2] = e2;
                    }
                  } while (0);
                  if ((e2 + F2 | 0) > 254) {
                    c[E2 >> 2] = 1;
                    e2 = 1;
                  }
                  if ((F2 | 0) <= (e2 | 0))
                    c[H2 >> 2] = 1;
                  c[I2 >> 2] = c[a2 + 7062392 >> 2];
                  N2 = 47;
                  break a;
                }
              } while (0);
              c[I2 >> 2] = e2;
              N2 = 30;
            } else
              N2 = 30;
          } while (0);
        b:
          do {
            if ((N2 | 0) == 30) {
              c:
                do {
                  switch (f2 | 0) {
                    case 3: {
                      f2 = a2 + 7062408 | 0;
                      e2 = we(c[f2 >> 2] | 0, b2, 9, -7) | 0;
                      if ((e2 | 0) < 0)
                        break b;
                      e2 = c[f2 >> 2] | 0;
                      f2 = a2 + 4834144 | 0;
                      e2 = xe(c[e2 >> 2] | 0, c[e2 + 8 >> 2] | 0, c[e2 + 12 >> 2] | 0, 5, c[a2 >> 2] | 0, c[a2 + 12 >> 2] | 0, 0, 0, f2, c[e2 + 4 >> 2] | 0) | 0;
                      if ((e2 | 0) < 0)
                        break b;
                      e2 = a2 + 36 | 0;
                      g2 = a2 + 40 | 0;
                      k2 = a2 + 20 | 0;
                      break;
                    }
                    case 2:
                    case 1: {
                      g2 = a2 + 7062396 | 0;
                      e2 = c[g2 >> 2] | 0;
                      if ((e2 | 0) > 0) {
                        c[g2 >> 2] = e2 + -1;
                        N2 = 44;
                        break c;
                      }
                      e2 = c[a2 + 7062408 >> 2] | 0;
                      if ((f2 | 0) == 1)
                        e2 = ue(e2, b2, L2) | 0;
                      else
                        e2 = ve(e2, b2, L2) | 0;
                      if ((e2 | 0) < 0)
                        break b;
                      e2 = a2 + 16 | 0;
                      if ((c[a2 >> 2] | 0) == 1 ? (K2 = d[L2 >> 0] | 0, (c[e2 >> 2] | 0) != (K2 | 0)) : 0) {
                        c[M2 >> 2] = (c[J2 >> 2] | 0) == 1 ? 4281 : 4288;
                        c[M2 + 4 >> 2] = K2;
                        Me(3, 4293, M2);
                      }
                      c[e2 >> 2] = d[L2 >> 0];
                      c[g2 >> 2] = c[a2 + 7062392 >> 2];
                      N2 = 44;
                      break;
                    }
                    default:
                      N2 = 44;
                  }
                } while (0);
              if ((N2 | 0) == 44) {
                e2 = a2 + 36 | 0;
                g2 = a2 + 40 | 0;
                k2 = a2 + 20 | 0;
                f2 = a2 + 4834144 | 0;
                if ((xe(b2, c[e2 >> 2] | 0, c[g2 >> 2] | 0, c[a2 + 4 >> 2] | 0, c[a2 >> 2] | 0, c[a2 + 12 >> 2] | 0, c[a2 + 16 >> 2] | 0, c[k2 >> 2] | 0, f2, 0) | 0) < 0) {
                  e2 = -1;
                  break;
                }
              }
              l2 = a2 + 15416 | 0;
              m2 = a2 + 15408 | 0;
              if ((fe(c[e2 >> 2] | 0, c[g2 >> 2] | 0, f2, c[k2 >> 2] | 0, 1e6, 70, 1, l2, m2) | 0) >= 0 ? (je(b2, c[e2 >> 2] | 0, c[g2 >> 2] | 0, c[a2 + 4 >> 2] | 0, l2, c[m2 >> 2] | 0, c[a2 + 7062384 >> 2] | 0, c[k2 >> 2] | 0, c[a2 + 24 >> 2] | 0, (c[a2 + 32 >> 2] | 0) + 184 | 0, +h[a2 + 7062416 >> 3], a2 + 48 | 0, P2, c[a2 + 7062424 >> 2] | 0) | 0) >= 0 : 0)
                N2 = 47;
              else
                e2 = -1;
            }
          } while (0);
        d:
          do {
            if ((N2 | 0) == 47) {
              t2 = a2 + 28 | 0;
              if ((c[t2 >> 2] | 0) == 1) {
                ee(a2);
                e2 = 0;
                break;
              }
              u2 = a2 + 4818296 | 0;
              r2 = a2 + 24 | 0;
              q2 = c[u2 >> 2] | 0;
              if ((q2 | 0) > 0) {
                s2 = 0;
                do {
                  f2 = c[P2 >> 2] | 0;
                  g2 = a2 + 4818304 + (s2 * 264 | 0) + 56 | 0;
                  k2 = a2 + 4818304 + (s2 * 264 | 0) + 64 | 0;
                  if ((f2 | 0) > 0) {
                    o2 = +(c[a2 + 4818304 + (s2 * 264 | 0) >> 2] | 0);
                    e2 = -1;
                    l2 = 0;
                    n2 = 0.5;
                    while (1) {
                      j2 = +(c[a2 + 48 + (l2 << 8) >> 2] | 0);
                      R2 = o2 / j2;
                      if (!(R2 < 0.7 | R2 > 1.43) ? (R2 = +h[a2 + 48 + (l2 << 8) + 56 >> 3] - +h[g2 >> 3], O2 = +h[a2 + 48 + (l2 << 8) + 64 >> 3] - +h[k2 >> 3], O2 = (R2 * R2 + O2 * O2) / j2, O2 < n2) : 0) {
                        e2 = l2;
                        j2 = O2;
                      } else
                        j2 = n2;
                      l2 = l2 + 1 | 0;
                      if ((l2 | 0) >= (f2 | 0)) {
                        p2 = e2;
                        break;
                      } else
                        n2 = j2;
                    }
                  } else
                    p2 = -1;
                  e:
                    do {
                      if ((p2 | 0) > -1) {
                        m2 = c[r2 >> 2] | 0;
                        switch (m2 | 0) {
                          case 2:
                          case 1:
                          case 0:
                            break;
                          case 4:
                          case 3: {
                            g2 = a2 + 48 + (p2 << 8) + 40 | 0;
                            j2 = +h[a2 + 4818304 + (s2 * 264 | 0) + 40 >> 3];
                            if (!(+h[g2 >> 3] < j2)) {
                              e2 = a2 + 48 + (p2 << 8) + 48 | 0;
                              f2 = a2 + 4818304 + (s2 * 264 | 0) + 48 | 0;
                              if (!(+h[e2 >> 3] < +h[f2 >> 3]))
                                break e;
                            } else {
                              f2 = a2 + 4818304 + (s2 * 264 | 0) + 48 | 0;
                              e2 = a2 + 48 + (p2 << 8) + 48 | 0;
                            }
                            h[g2 >> 3] = j2;
                            c[a2 + 48 + (p2 << 8) + 8 >> 2] = c[a2 + 4818304 + (s2 * 264 | 0) + 8 >> 2];
                            h[e2 >> 3] = +h[f2 >> 3];
                            c[a2 + 48 + (p2 << 8) + 12 >> 2] = c[a2 + 4818304 + (s2 * 264 | 0) + 12 >> 2];
                            e2 = -1;
                            n2 = 1e8;
                            g2 = 0;
                            while (1) {
                              j2 = 0;
                              f2 = 0;
                              do {
                                b2 = (f2 + g2 | 0) % 4 | 0;
                                o2 = +h[a2 + 4818304 + (s2 * 264 | 0) + 168 + (f2 << 4) >> 3] - +h[a2 + 48 + (p2 << 8) + 168 + (b2 << 4) >> 3];
                                R2 = +h[a2 + 4818304 + (s2 * 264 | 0) + 168 + (f2 << 4) + 8 >> 3] - +h[a2 + 48 + (p2 << 8) + 168 + (b2 << 4) + 8 >> 3];
                                j2 = j2 + (o2 * o2 + R2 * R2);
                                f2 = f2 + 1 | 0;
                              } while ((f2 | 0) != 4);
                              f2 = j2 < n2;
                              e2 = f2 ? g2 : e2;
                              g2 = g2 + 1 | 0;
                              if ((g2 | 0) == 4)
                                break;
                              else
                                n2 = f2 ? j2 : n2;
                            }
                            b2 = 4 - e2 | 0;
                            c[a2 + 48 + (p2 << 8) + 20 >> 2] = (b2 + (c[a2 + 4818304 + (s2 * 264 | 0) + 20 >> 2] | 0) | 0) % 4 | 0;
                            c[a2 + 48 + (p2 << 8) + 24 >> 2] = (b2 + (c[a2 + 4818304 + (s2 * 264 | 0) + 24 >> 2] | 0) | 0) % 4 | 0;
                            break e;
                          }
                          default: {
                            e2 = -1;
                            break d;
                          }
                        }
                        e2 = a2 + 48 + (p2 << 8) + 32 | 0;
                        o2 = +h[a2 + 4818304 + (s2 * 264 | 0) + 32 >> 3];
                        if (+h[e2 >> 3] < o2) {
                          h[e2 >> 3] = o2;
                          l2 = c[a2 + 4818304 + (s2 * 264 | 0) + 4 >> 2] | 0;
                          c[a2 + 48 + (p2 << 8) + 4 >> 2] = l2;
                          g2 = a2 + 4818304 + (s2 * 264 | 0) + 16 | 0;
                          e2 = -1;
                          n2 = 1e8;
                          k2 = 0;
                          while (1) {
                            j2 = 0;
                            f2 = 0;
                            do {
                              b2 = (f2 + k2 | 0) % 4 | 0;
                              S2 = +h[a2 + 4818304 + (s2 * 264 | 0) + 168 + (f2 << 4) >> 3] - +h[a2 + 48 + (p2 << 8) + 168 + (b2 << 4) >> 3];
                              R2 = +h[a2 + 4818304 + (s2 * 264 | 0) + 168 + (f2 << 4) + 8 >> 3] - +h[a2 + 48 + (p2 << 8) + 168 + (b2 << 4) + 8 >> 3];
                              j2 = j2 + (S2 * S2 + R2 * R2);
                              f2 = f2 + 1 | 0;
                            } while ((f2 | 0) != 4);
                            if (j2 < n2)
                              e2 = (4 - k2 + (c[g2 >> 2] | 0) | 0) % 4 | 0;
                            else
                              j2 = n2;
                            k2 = k2 + 1 | 0;
                            if ((k2 | 0) == 4)
                              break;
                            else
                              n2 = j2;
                          }
                          c[a2 + 48 + (p2 << 8) + 16 >> 2] = e2;
                          if (m2 >>> 0 < 2) {
                            c[a2 + 48 + (p2 << 8) + 8 >> 2] = l2;
                            h[a2 + 48 + (p2 << 8) + 40 >> 3] = o2;
                            c[a2 + 48 + (p2 << 8) + 20 >> 2] = e2;
                            break;
                          } else {
                            c[a2 + 48 + (p2 << 8) + 12 >> 2] = l2;
                            h[a2 + 48 + (p2 << 8) + 48 >> 3] = o2;
                            c[a2 + 48 + (p2 << 8) + 24 >> 2] = e2;
                            break;
                          }
                        }
                      }
                    } while (0);
                  s2 = s2 + 1 | 0;
                } while ((s2 | 0) < (q2 | 0));
              }
              ee(a2);
              if ((c[u2 >> 2] | 0) > 0) {
                g2 = 0;
                e2 = 0;
                do {
                  f2 = a2 + 4818304 + (g2 * 264 | 0) | 0;
                  N2 = a2 + 4818304 + (g2 * 264 | 0) + 256 | 0;
                  b2 = (c[N2 >> 2] | 0) + 1 | 0;
                  c[N2 >> 2] = b2;
                  if ((b2 | 0) < 4) {
                    if ((g2 | 0) != (e2 | 0))
                      ik(a2 + 4818304 + (e2 * 264 | 0) | 0, f2 | 0, 264) | 0;
                    e2 = e2 + 1 | 0;
                  }
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) < (c[u2 >> 2] | 0));
              } else
                e2 = 0;
              c[u2 >> 2] = e2;
              e2 = c[P2 >> 2] | 0;
              f:
                do {
                  if ((e2 | 0) > 0) {
                    m2 = 0;
                    do {
                      k2 = a2 + 48 + (m2 << 8) | 0;
                      g2 = c[a2 + 48 + (m2 << 8) + 4 >> 2] | 0;
                      if ((g2 | 0) >= 0) {
                        l2 = c[u2 >> 2] | 0;
                        g:
                          do {
                            if ((l2 | 0) > 0) {
                              f2 = 0;
                              do {
                                if ((c[a2 + 4818304 + (f2 * 264 | 0) + 4 >> 2] | 0) == (g2 | 0))
                                  break g;
                                f2 = f2 + 1 | 0;
                              } while ((f2 | 0) < (l2 | 0));
                            } else
                              f2 = 0;
                          } while (0);
                        if ((f2 | 0) == (l2 | 0)) {
                          if ((l2 | 0) == 60)
                            break f;
                          c[u2 >> 2] = l2 + 1;
                        }
                        ik(a2 + 4818304 + (f2 * 264 | 0) | 0, k2 | 0, 256) | 0;
                        c[a2 + 4818304 + (f2 * 264 | 0) + 256 >> 2] = 1;
                      }
                      m2 = m2 + 1 | 0;
                      e2 = c[P2 >> 2] | 0;
                    } while ((m2 | 0) < (e2 | 0));
                  }
                } while (0);
              if ((c[t2 >> 2] | 0) != 2 ? (c[u2 >> 2] | 0) > 0 : 0) {
                l2 = 0;
                while (1) {
                  g2 = a2 + 4818304 + (l2 * 264 | 0) + 56 | 0;
                  k2 = a2 + 4818304 + (l2 * 264 | 0) + 64 | 0;
                  h:
                    do {
                      if ((e2 | 0) > 0) {
                        n2 = +(c[a2 + 4818304 + (l2 * 264 | 0) >> 2] | 0);
                        f2 = 0;
                        do {
                          j2 = +(c[a2 + 48 + (f2 << 8) >> 2] | 0);
                          S2 = n2 / j2;
                          if (!(S2 < 0.7 | S2 > 1.43) ? (R2 = +h[a2 + 48 + (f2 << 8) + 56 >> 3] - +h[g2 >> 3], S2 = +h[a2 + 48 + (f2 << 8) + 64 >> 3] - +h[k2 >> 3], (R2 * R2 + S2 * S2) / j2 < 0.5) : 0)
                            break h;
                          f2 = f2 + 1 | 0;
                        } while ((f2 | 0) < (e2 | 0));
                      } else
                        f2 = 0;
                    } while (0);
                  if ((f2 | 0) == (e2 | 0)) {
                    ik(a2 + 48 + (e2 << 8) | 0, a2 + 4818304 + (l2 * 264 | 0) | 0, 256) | 0;
                    e2 = (c[P2 >> 2] | 0) + 1 | 0;
                    c[P2 >> 2] = e2;
                  }
                  l2 = l2 + 1 | 0;
                  if ((l2 | 0) >= (c[u2 >> 2] | 0)) {
                    e2 = 0;
                    break;
                  }
                }
              } else
                e2 = 0;
            }
          } while (0);
        i2 = Q2;
        return e2 | 0;
      }
      function ee(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0, f2 = 0;
        switch (c[a2 + 24 >> 2] | 0) {
          case 1:
          case 0: {
            d2 = c[a2 + 44 >> 2] | 0;
            if ((d2 | 0) > 0) {
              e2 = 0;
              do {
                b2 = a2 + 48 + (e2 << 8) + 4 | 0;
                if ((c[b2 >> 2] | 0) > -1 ? +h[a2 + 48 + (e2 << 8) + 32 >> 3] < 0.5 : 0) {
                  c[a2 + 48 + (e2 << 8) + 8 >> 2] = -1;
                  c[b2 >> 2] = -1;
                  c[a2 + 48 + (e2 << 8) + 236 >> 2] = 6;
                }
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (d2 | 0));
            }
            break;
          }
          case 2: {
            d2 = c[a2 + 44 >> 2] | 0;
            if ((d2 | 0) > 0) {
              e2 = 0;
              do {
                b2 = a2 + 48 + (e2 << 8) + 4 | 0;
                if ((c[b2 >> 2] | 0) > -1 ? +h[a2 + 48 + (e2 << 8) + 32 >> 3] < 0.5 : 0) {
                  c[a2 + 48 + (e2 << 8) + 12 >> 2] = -1;
                  c[b2 >> 2] = -1;
                  c[a2 + 48 + (e2 << 8) + 236 >> 2] = 6;
                }
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < (d2 | 0));
            }
            break;
          }
          default: {
            e2 = c[a2 + 44 >> 2] | 0;
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                b2 = a2 + 48 + (f2 << 8) + 8 | 0;
                if ((c[b2 >> 2] | 0) > -1 ? +h[a2 + 48 + (f2 << 8) + 40 >> 3] < 0.5 : 0) {
                  c[b2 >> 2] = -1;
                  d2 = 0;
                } else
                  d2 = 1;
                b2 = a2 + 48 + (f2 << 8) + 12 | 0;
                if (((c[b2 >> 2] | 0) > -1 ? +h[a2 + 48 + (f2 << 8) + 48 >> 3] < 0.5 : 0) ? (c[b2 >> 2] = -1, (d2 | 0) == 0) : 0)
                  c[a2 + 48 + (f2 << 8) + 236 >> 2] = 6;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
          }
        }
        return;
      }
      function fe(a2, b2, d2, e2, f2, g2, j2, k2, l2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = +j2;
        k2 = k2 | 0;
        l2 = l2 | 0;
        var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0;
        L2 = i2;
        i2 = i2 + 96 | 0;
        F2 = L2 + 56 | 0;
        H2 = L2 + 48 | 0;
        G2 = L2 + 8 | 0;
        I2 = L2;
        K2 = (e2 | 0) == 1;
        if (K2) {
          a2 = (a2 | 0) / 2 | 0;
          b2 = (b2 | 0) / 2 | 0;
          f2 = (f2 | 0) / 4 | 0;
          g2 = (g2 | 0) / 4 | 0;
        }
        c[l2 >> 2] = 0;
        C2 = d2 + 8 | 0;
        D2 = a2 + -2 | 0;
        z2 = b2 + -2 | 0;
        A2 = d2 + 1179664 | 0;
        a:
          do {
            if ((c[C2 >> 2] | 0) > 0) {
              B2 = 0;
              while (1) {
                w2 = d2 + 12 + (B2 << 2) | 0;
                y2 = c[w2 >> 2] | 0;
                b:
                  do {
                    if (((((!((y2 | 0) < (g2 | 0) | (y2 | 0) > (f2 | 0)) ? (E2 = d2 + 131084 + (B2 << 4) | 0, (c[E2 >> 2] | 0) != 1) : 0) ? (c[d2 + 131084 + (B2 << 4) + 4 >> 2] | 0) != (D2 | 0) : 0) ? (c[d2 + 131084 + (B2 << 4) + 8 >> 2] | 0) != 1 : 0) ? (c[d2 + 131084 + (B2 << 4) + 12 >> 2] | 0) != (z2 | 0) : 0) ? (ge(c[d2 >> 2] | 0, a2, 0, A2, B2 + 1 | 0, E2, k2 + ((c[l2 >> 2] | 0) * 80048 | 0) | 0) | 0) >= 0 : 0) {
                      t2 = c[w2 >> 2] | 0;
                      x2 = c[l2 >> 2] | 0;
                      u2 = k2 + (x2 * 80048 | 0) + 28 | 0;
                      b2 = c[u2 >> 2] | 0;
                      v2 = k2 + (x2 * 80048 | 0) + 40028 | 0;
                      n2 = c[v2 >> 2] | 0;
                      y2 = k2 + (x2 * 80048 | 0) + 24 | 0;
                      o2 = (c[y2 >> 2] | 0) + -1 | 0;
                      if ((o2 | 0) > 1) {
                        r2 = 0;
                        s2 = 1;
                        e2 = 0;
                        while (1) {
                          p2 = (c[k2 + (x2 * 80048 | 0) + 28 + (s2 << 2) >> 2] | 0) - b2 | 0;
                          p2 = $(p2, p2) | 0;
                          q2 = (c[k2 + (x2 * 80048 | 0) + 40028 + (s2 << 2) >> 2] | 0) - n2 | 0;
                          p2 = ($(q2, q2) | 0) + p2 | 0;
                          q2 = (p2 | 0) > (r2 | 0);
                          e2 = q2 ? s2 : e2;
                          s2 = s2 + 1 | 0;
                          if ((s2 | 0) >= (o2 | 0))
                            break;
                          else
                            r2 = q2 ? p2 : r2;
                        }
                      } else
                        e2 = 0;
                      m2 = +(t2 | 0) / 0.75 * 0.01 * j2;
                      c[H2 >> 2] = 0;
                      c[I2 >> 2] = 0;
                      c:
                        do {
                          if ((he(u2, v2, 0, e2, m2, F2, H2) | 0) >= 0 ? (he(u2, v2, e2, (c[y2 >> 2] | 0) + -1 | 0, m2, G2, I2) | 0) >= 0 : 0) {
                            b2 = c[H2 >> 2] | 0;
                            n2 = c[I2 >> 2] | 0;
                            do {
                              if ((b2 | 0) == 1 & (n2 | 0) == 1) {
                                b2 = c[G2 >> 2] | 0;
                                n2 = c[F2 >> 2] | 0;
                              } else {
                                if ((b2 | 0) > 1 & (n2 | 0) == 0) {
                                  b2 = (e2 | 0) / 2 | 0;
                                  c[I2 >> 2] = 0;
                                  c[H2 >> 2] = 0;
                                  if ((he(u2, v2, 0, b2, m2, F2, H2) | 0) < 0)
                                    break c;
                                  if ((he(u2, v2, b2, e2, m2, G2, I2) | 0) < 0)
                                    break c;
                                  if (!((c[H2 >> 2] | 0) == 1 & (c[I2 >> 2] | 0) == 1))
                                    break c;
                                  b2 = e2;
                                  n2 = c[F2 >> 2] | 0;
                                  e2 = c[G2 >> 2] | 0;
                                  break;
                                }
                                if (!((b2 | 0) == 0 & (n2 | 0) > 1))
                                  break c;
                                b2 = (e2 + -1 + (c[y2 >> 2] | 0) | 0) / 2 | 0;
                                c[I2 >> 2] = 0;
                                c[H2 >> 2] = 0;
                                if ((he(u2, v2, e2, b2, m2, F2, H2) | 0) < 0)
                                  break c;
                                if ((he(u2, v2, b2, (c[y2 >> 2] | 0) + -1 | 0, m2, G2, I2) | 0) < 0)
                                  break c;
                                if (!((c[H2 >> 2] | 0) == 1 & (c[I2 >> 2] | 0) == 1))
                                  break c;
                                b2 = c[G2 >> 2] | 0;
                                n2 = e2;
                                e2 = c[F2 >> 2] | 0;
                              }
                            } while (0);
                            c[k2 + (x2 * 80048 | 0) + 80028 >> 2] = 0;
                            c[k2 + (x2 * 80048 | 0) + 80032 >> 2] = n2;
                            c[k2 + (x2 * 80048 | 0) + 80036 >> 2] = e2;
                            c[k2 + (x2 * 80048 | 0) + 80040 >> 2] = b2;
                            c[k2 + (x2 * 80048 | 0) + 80044 >> 2] = (c[y2 >> 2] | 0) + -1;
                            c[k2 + ((c[l2 >> 2] | 0) * 80048 | 0) >> 2] = c[w2 >> 2];
                            y2 = c[l2 >> 2] | 0;
                            h[k2 + (y2 * 80048 | 0) + 8 >> 3] = +h[d2 + 655376 + (B2 << 4) >> 3];
                            h[k2 + (y2 * 80048 | 0) + 16 >> 3] = +h[d2 + 655376 + (B2 << 4) + 8 >> 3];
                            y2 = y2 + 1 | 0;
                            c[l2 >> 2] = y2;
                            if ((y2 | 0) == 60) {
                              e2 = 60;
                              break a;
                            } else
                              break b;
                          }
                        } while (0);
                    }
                  } while (0);
                B2 = B2 + 1 | 0;
                if ((B2 | 0) >= (c[C2 >> 2] | 0)) {
                  J2 = 4;
                  break;
                }
              }
            } else
              J2 = 4;
          } while (0);
        if ((J2 | 0) == 4)
          e2 = c[l2 >> 2] | 0;
        if ((e2 | 0) > 0) {
          o2 = 0;
          do {
            a2 = o2;
            o2 = o2 + 1 | 0;
            g2 = k2 + (a2 * 80048 | 0) + 16 | 0;
            n2 = k2 + (a2 * 80048 | 0) | 0;
            if ((o2 | 0) < (e2 | 0)) {
              j2 = +h[k2 + (a2 * 80048 | 0) + 8 >> 3];
              f2 = o2;
              do {
                M2 = j2 - +h[k2 + (f2 * 80048 | 0) + 8 >> 3];
                m2 = +h[g2 >> 3] - +h[k2 + (f2 * 80048 | 0) + 16 >> 3];
                m2 = M2 * M2 + m2 * m2;
                e2 = c[n2 >> 2] | 0;
                a2 = k2 + (f2 * 80048 | 0) | 0;
                b2 = c[a2 >> 2] | 0;
                if ((e2 | 0) > (b2 | 0)) {
                  if (m2 < +((e2 | 0) / 4 | 0 | 0))
                    c[a2 >> 2] = 0;
                } else if (m2 < +((b2 | 0) / 4 | 0 | 0))
                  c[n2 >> 2] = 0;
                f2 = f2 + 1 | 0;
                e2 = c[l2 >> 2] | 0;
              } while ((f2 | 0) < (e2 | 0));
            }
          } while ((o2 | 0) < (e2 | 0));
        }
        if ((e2 | 0) > 0) {
          f2 = 0;
          do {
            if (!(c[k2 + (f2 * 80048 | 0) >> 2] | 0)) {
              a2 = f2 + 1 | 0;
              if ((a2 | 0) < (e2 | 0)) {
                e2 = f2;
                b2 = a2;
                while (1) {
                  ik(k2 + (e2 * 80048 | 0) | 0, k2 + (b2 * 80048 | 0) | 0, 80048) | 0;
                  e2 = c[l2 >> 2] | 0;
                  a2 = b2 + 1 | 0;
                  if ((a2 | 0) < (e2 | 0)) {
                    e2 = b2;
                    b2 = a2;
                  } else
                    break;
                }
              }
              e2 = e2 + -1 | 0;
              c[l2 >> 2] = e2;
            }
            f2 = f2 + 1 | 0;
          } while ((f2 | 0) < (e2 | 0));
        }
        if (K2 & (e2 | 0) > 0) {
          b2 = 0;
          while (1) {
            c[k2 >> 2] = c[k2 >> 2] << 2;
            e2 = k2 + 8 | 0;
            h[e2 >> 3] = +h[e2 >> 3] * 2;
            e2 = k2 + 16 | 0;
            h[e2 >> 3] = +h[e2 >> 3] * 2;
            e2 = k2 + 24 | 0;
            if ((c[e2 >> 2] | 0) > 0) {
              a2 = 0;
              do {
                K2 = k2 + 28 + (a2 << 2) | 0;
                c[K2 >> 2] = c[K2 >> 2] << 1;
                K2 = k2 + 40028 + (a2 << 2) | 0;
                c[K2 >> 2] = c[K2 >> 2] << 1;
                a2 = a2 + 1 | 0;
              } while ((a2 | 0) < (c[e2 >> 2] | 0));
            }
            b2 = b2 + 1 | 0;
            if ((b2 | 0) >= (c[l2 >> 2] | 0))
              break;
            else
              k2 = k2 + 80048 | 0;
          }
        }
        i2 = L2;
        return 0;
      }
      function ge(a2, d2, e2, f2, g2, h2, j2) {
        a2 = a2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        h2 = h2 | 0;
        j2 = j2 | 0;
        var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
        w2 = i2;
        i2 = i2 + 80032 | 0;
        p2 = w2 + 16 | 0;
        o2 = w2 + 8 | 0;
        l2 = w2;
        u2 = w2 + 40024 | 0;
        v2 = w2 + 24 | 0;
        t2 = c[h2 + 8 >> 2] | 0;
        e2 = c[h2 >> 2] | 0;
        h2 = c[h2 + 4 >> 2] | 0;
        a:
          do {
            if ((e2 | 0) <= (h2 | 0)) {
              k2 = e2;
              e2 = a2 + (($(t2, d2) | 0) + e2 << 1) | 0;
              while (1) {
                s2 = b[e2 >> 1] | 0;
                if (s2 << 16 >> 16 > 0 ? (c[f2 + ((s2 << 16 >> 16) + -1 << 2) >> 2] | 0) == (g2 | 0) : 0) {
                  n2 = k2;
                  break;
                }
                if ((k2 | 0) < (h2 | 0)) {
                  k2 = k2 + 1 | 0;
                  e2 = e2 + 2 | 0;
                } else {
                  x2 = 6;
                  break a;
                }
              }
              q2 = j2 + 24 | 0;
              c[q2 >> 2] = 1;
              r2 = j2 + 28 | 0;
              c[r2 >> 2] = n2;
              s2 = j2 + 40028 | 0;
              c[s2 >> 2] = t2;
              f2 = t2;
              m2 = n2;
              k2 = 1;
              e2 = 5;
              while (1) {
                h2 = (e2 + 5 | 0) % 8 | 0;
                e2 = 0;
                while (1) {
                  g2 = c[776 + (h2 << 2) >> 2] | 0;
                  l2 = c[808 + (h2 << 2) >> 2] | 0;
                  if ((b[a2 + (l2 + m2 + ($(g2 + f2 | 0, d2) | 0) << 1) >> 1] | 0) > 0) {
                    e2 = g2;
                    g2 = h2;
                    break;
                  }
                  e2 = e2 + 1 | 0;
                  h2 = (h2 + 1 | 0) % 8 | 0;
                  if ((e2 | 0) >= 8) {
                    x2 = 11;
                    break;
                  }
                }
                if ((x2 | 0) == 11) {
                  x2 = 0;
                  if ((e2 | 0) == 8) {
                    x2 = 13;
                    break;
                  }
                  l2 = c[808 + (h2 << 2) >> 2] | 0;
                  e2 = c[776 + (h2 << 2) >> 2] | 0;
                  g2 = h2;
                }
                c[j2 + 28 + (k2 << 2) >> 2] = l2 + m2;
                h2 = c[q2 >> 2] | 0;
                c[j2 + 40028 + (h2 << 2) >> 2] = e2 + (c[j2 + 40028 + (h2 + -1 << 2) >> 2] | 0);
                e2 = c[q2 >> 2] | 0;
                h2 = j2 + 28 + (e2 << 2) | 0;
                if ((c[h2 >> 2] | 0) == (n2 | 0) ? (c[j2 + 40028 + (e2 << 2) >> 2] | 0) == (t2 | 0) : 0) {
                  f2 = e2;
                  x2 = 16;
                  break;
                }
                k2 = e2 + 1 | 0;
                c[q2 >> 2] = k2;
                if ((k2 | 0) == 9999) {
                  x2 = 19;
                  break;
                }
                f2 = c[j2 + 40028 + (e2 << 2) >> 2] | 0;
                m2 = c[h2 >> 2] | 0;
                e2 = g2;
              }
              if ((x2 | 0) == 13) {
                Me(3, 4347, o2);
                e2 = -1;
                break;
              } else if ((x2 | 0) == 16) {
                if ((f2 | 0) > 1) {
                  l2 = 0;
                  g2 = 1;
                  h2 = 0;
                  while (1) {
                    e2 = (c[j2 + 28 + (g2 << 2) >> 2] | 0) - n2 | 0;
                    e2 = $(e2, e2) | 0;
                    k2 = (c[j2 + 40028 + (g2 << 2) >> 2] | 0) - t2 | 0;
                    e2 = ($(k2, k2) | 0) + e2 | 0;
                    k2 = (e2 | 0) > (l2 | 0);
                    h2 = k2 ? g2 : h2;
                    g2 = g2 + 1 | 0;
                    if ((g2 | 0) >= (f2 | 0))
                      break;
                    else
                      l2 = k2 ? e2 : l2;
                  }
                } else
                  h2 = 0;
                if ((h2 | 0) > 0) {
                  e2 = 0;
                  do {
                    c[u2 + (e2 << 2) >> 2] = c[j2 + 28 + (e2 << 2) >> 2];
                    c[v2 + (e2 << 2) >> 2] = c[j2 + 40028 + (e2 << 2) >> 2];
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) < (h2 | 0));
                }
                if ((h2 | 0) < (f2 | 0)) {
                  e2 = h2;
                  do {
                    t2 = e2 - h2 | 0;
                    c[j2 + 28 + (t2 << 2) >> 2] = c[j2 + 28 + (e2 << 2) >> 2];
                    c[j2 + 40028 + (t2 << 2) >> 2] = c[j2 + 40028 + (e2 << 2) >> 2];
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) < (c[q2 >> 2] | 0));
                }
                if ((h2 | 0) > 0) {
                  e2 = 0;
                  do {
                    t2 = e2 - h2 | 0;
                    c[j2 + 28 + ((c[q2 >> 2] | 0) + t2 << 2) >> 2] = c[u2 + (e2 << 2) >> 2];
                    c[j2 + 40028 + ((c[q2 >> 2] | 0) + t2 << 2) >> 2] = c[v2 + (e2 << 2) >> 2];
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) < (h2 | 0));
                }
                c[j2 + 28 + (c[q2 >> 2] << 2) >> 2] = c[r2 >> 2];
                c[j2 + 40028 + (c[q2 >> 2] << 2) >> 2] = c[s2 >> 2];
                c[q2 >> 2] = (c[q2 >> 2] | 0) + 1;
                e2 = 0;
                break;
              } else if ((x2 | 0) == 19) {
                Me(3, 4354, p2);
                e2 = -1;
                break;
              }
            } else
              x2 = 6;
          } while (0);
        if ((x2 | 0) == 6) {
          Me(3, 4340, l2);
          e2 = -1;
        }
        i2 = w2;
        return e2 | 0;
      }
      function he(a2, b2, d2, e2, f2, g2, h2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = +f2;
        g2 = g2 | 0;
        h2 = h2 | 0;
        var i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
        i3 = c[b2 + (e2 << 2) >> 2] | 0;
        q2 = c[b2 + (d2 << 2) >> 2] | 0;
        o2 = +(i3 - q2 | 0);
        l2 = c[a2 + (d2 << 2) >> 2] | 0;
        r2 = c[a2 + (e2 << 2) >> 2] | 0;
        m2 = +(l2 - r2 | 0);
        k2 = +(($(r2, q2) | 0) - ($(l2, i3) | 0) | 0);
        i3 = d2 + 1 | 0;
        if ((i3 | 0) < (e2 | 0)) {
          j2 = 0;
          l2 = i3;
          do {
            s2 = k2 + (o2 * +(c[a2 + (l2 << 2) >> 2] | 0) + m2 * +(c[b2 + (l2 << 2) >> 2] | 0));
            s2 = s2 * s2;
            r2 = s2 > j2;
            j2 = r2 ? s2 : j2;
            i3 = r2 ? l2 : i3;
            l2 = l2 + 1 | 0;
          } while ((l2 | 0) < (e2 | 0));
        } else
          j2 = 0;
        if (j2 / (o2 * o2 + m2 * m2) > f2)
          if (((he(a2, b2, d2, i3, f2, g2, h2) | 0) >= 0 ? (n2 = c[h2 >> 2] | 0, (n2 | 0) <= 5) : 0) ? (c[g2 + (n2 << 2) >> 2] = i3, c[h2 >> 2] = (c[h2 >> 2] | 0) + 1, (he(a2, b2, i3, e2, f2, g2, h2) | 0) >= 0) : 0)
            p2 = 7;
          else
            i3 = -1;
        else
          p2 = 7;
        if ((p2 | 0) == 7)
          i3 = 0;
        return i3 | 0;
      }
      function ie(a2, b2, d2, e2, f2, j2, k2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0;
        y2 = i2;
        i2 = i2 + 16 | 0;
        t2 = y2 + 4 | 0;
        u2 = y2;
        v2 = nf(2) | 0;
        w2 = nf(2) | 0;
        x2 = Re(2, 2) | 0;
        q2 = 0;
        a:
          while (1) {
            r2 = q2;
            q2 = q2 + 1 | 0;
            s2 = c[e2 + (q2 << 2) >> 2] | 0;
            l2 = c[e2 + (r2 << 2) >> 2] | 0;
            p2 = +(s2 + 1 - l2 | 0) * 0.05 + 0.5;
            l2 = ~~(+(l2 | 0) + p2);
            s2 = ~~(+(s2 | 0) - p2) - l2 | 0;
            n2 = s2 + 1 | 0;
            d2 = Re(n2, 2) | 0;
            if ((s2 | 0) > -1) {
              s2 = 0;
              do {
                z2 = s2 + l2 | 0;
                if ((mf(f2, +(c[a2 + (z2 << 2) >> 2] | 0), +(c[b2 + (z2 << 2) >> 2] | 0), t2, u2) | 0) < 0) {
                  l2 = 10;
                  break a;
                }
                z2 = s2 << 1;
                A2 = c[d2 >> 2] | 0;
                h[A2 + (z2 << 3) >> 3] = +g[t2 >> 2];
                h[A2 + ((z2 | 1) << 3) >> 3] = +g[u2 >> 2];
                s2 = s2 + 1 | 0;
              } while ((s2 | 0) < (n2 | 0));
            }
            if ((Ye(d2, x2, v2, w2) | 0) < 0) {
              l2 = 10;
              break;
            }
            A2 = c[x2 >> 2] | 0;
            o2 = +h[A2 + 8 >> 3];
            h[j2 + (r2 * 24 | 0) >> 3] = o2;
            p2 = -+h[A2 >> 3];
            h[j2 + (r2 * 24 | 0) + 8 >> 3] = p2;
            A2 = c[w2 >> 2] | 0;
            h[j2 + (r2 * 24 | 0) + 16 >> 3] = -(o2 * +h[A2 >> 3] + +h[A2 + 8 >> 3] * p2);
            We(d2) | 0;
            if ((q2 | 0) >= 4) {
              l2 = 7;
              break;
            }
          }
        b:
          do {
            if ((l2 | 0) == 7) {
              We(x2) | 0;
              of(w2) | 0;
              of(v2) | 0;
              q2 = 0;
              while (1) {
                d2 = (q2 + 3 | 0) % 4 | 0;
                l2 = j2 + (d2 * 24 | 0) | 0;
                m2 = +h[j2 + (q2 * 24 | 0) + 8 >> 3];
                n2 = j2 + (q2 * 24 | 0) | 0;
                o2 = +h[j2 + (d2 * 24 | 0) + 8 >> 3];
                p2 = +h[l2 >> 3] * m2 - +h[n2 >> 3] * o2;
                if (+O(+p2) < 1e-4) {
                  d2 = -1;
                  break b;
                }
                A2 = j2 + (q2 * 24 | 0) + 16 | 0;
                z2 = j2 + (d2 * 24 | 0) + 16 | 0;
                h[k2 + (q2 << 4) >> 3] = (o2 * +h[A2 >> 3] - m2 * +h[z2 >> 3]) / p2;
                h[k2 + (q2 << 4) + 8 >> 3] = (+h[n2 >> 3] * +h[z2 >> 3] - +h[l2 >> 3] * +h[A2 >> 3]) / p2;
                q2 = q2 + 1 | 0;
                if ((q2 | 0) >= 4) {
                  d2 = 0;
                  break;
                }
              }
            } else if ((l2 | 0) == 10) {
              We(d2) | 0;
              We(x2) | 0;
              of(w2) | 0;
              of(v2) | 0;
              d2 = -1;
            }
          } while (0);
        i2 = y2;
        return d2 | 0;
      }
      function je(a2, b2, d2, e2, f2, j2, k2, l2, m2, n2, o2, p2, q2, r2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        l2 = l2 | 0;
        m2 = m2 | 0;
        n2 = n2 | 0;
        o2 = +o2;
        p2 = p2 | 0;
        q2 = q2 | 0;
        r2 = r2 | 0;
        var s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
        F2 = i2;
        i2 = i2 + 16 | 0;
        D2 = F2 + 4 | 0;
        E2 = F2;
        z2 = m2 >>> 0 < 2;
        A2 = (m2 | 0) == 2;
        if ((j2 | 0) > 0) {
          C2 = 0;
          s2 = 0;
          do {
            c[p2 + (s2 << 8) >> 2] = c[f2 + (C2 * 80048 | 0) >> 2];
            if ((mf(n2, +h[f2 + (C2 * 80048 | 0) + 8 >> 3], +h[f2 + (C2 * 80048 | 0) + 16 >> 3], D2, E2) | 0) >= 0 ? (h[p2 + (s2 << 8) + 56 >> 3] = +g[D2 >> 2], h[p2 + (s2 << 8) + 64 >> 3] = +g[E2 >> 2], B2 = p2 + (s2 << 8) + 168 | 0, (ie(f2 + (C2 * 80048 | 0) + 28 | 0, f2 + (C2 * 80048 | 0) + 40028 | 0, c[f2 + (C2 * 80048 | 0) + 24 >> 2] | 0, f2 + (C2 * 80048 | 0) + 80028 | 0, n2, p2 + (s2 << 8) + 72 | 0, B2) | 0) >= 0) : 0) {
              t2 = p2 + (s2 << 8) + 8 | 0;
              u2 = p2 + (s2 << 8) + 20 | 0;
              v2 = p2 + (s2 << 8) + 40 | 0;
              w2 = p2 + (s2 << 8) + 12 | 0;
              x2 = p2 + (s2 << 8) + 24 | 0;
              y2 = p2 + (s2 << 8) + 48 | 0;
              switch (De(k2, l2, m2, a2, b2, d2, e2, n2, B2, o2, t2, u2, v2, w2, x2, y2, r2, p2 + (s2 << 8) + 240 | 0, p2 + (s2 << 8) + 248 | 0) | 0) {
                case 0: {
                  c[p2 + (s2 << 8) + 236 >> 2] = 0;
                  break;
                }
                case -1: {
                  c[p2 + (s2 << 8) + 236 >> 2] = 2;
                  break;
                }
                case -2: {
                  c[p2 + (s2 << 8) + 236 >> 2] = 3;
                  break;
                }
                case -3: {
                  c[p2 + (s2 << 8) + 236 >> 2] = 4;
                  break;
                }
                case -4: {
                  c[p2 + (s2 << 8) + 236 >> 2] = 5;
                  break;
                }
                case -5: {
                  c[p2 + (s2 << 8) + 236 >> 2] = 9;
                  break;
                }
                case -6: {
                  c[p2 + (s2 << 8) + 236 >> 2] = 1;
                  break;
                }
                default: {
                }
              }
              if (!z2) {
                if (A2) {
                  c[p2 + (s2 << 8) + 4 >> 2] = c[w2 >> 2];
                  c[p2 + (s2 << 8) + 16 >> 2] = c[x2 >> 2];
                  h[p2 + (s2 << 8) + 32 >> 3] = +h[y2 >> 3];
                }
              } else {
                c[p2 + (s2 << 8) + 4 >> 2] = c[t2 >> 2];
                c[p2 + (s2 << 8) + 16 >> 2] = c[u2 >> 2];
                h[p2 + (s2 << 8) + 32 >> 3] = +h[v2 >> 3];
              }
              s2 = s2 + 1 | 0;
            }
            C2 = C2 + 1 | 0;
          } while ((C2 | 0) < (j2 | 0));
        } else
          s2 = 0;
        c[q2 >> 2] = s2;
        i2 = F2;
        return 0;
      }
      function ke(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = +d2;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
        k2 = i2;
        i2 = i2 + 288 | 0;
        m2 = k2 + 200 | 0;
        l2 = k2 + 104 | 0;
        f2 = k2 + 264 | 0;
        j2 = k2 + 8 | 0;
        g2 = k2;
        o2 = c[b2 + 16 >> 2] | 0;
        p2 = (4 - o2 | 0) % 4 | 0;
        h[m2 >> 3] = +h[b2 + 168 + (p2 << 4) >> 3];
        h[m2 + 8 >> 3] = +h[b2 + 168 + (p2 << 4) + 8 >> 3];
        p2 = (5 - o2 | 0) % 4 | 0;
        h[m2 + 16 >> 3] = +h[b2 + 168 + (p2 << 4) >> 3];
        h[m2 + 24 >> 3] = +h[b2 + 168 + (p2 << 4) + 8 >> 3];
        p2 = (6 - o2 | 0) % 4 | 0;
        h[m2 + 32 >> 3] = +h[b2 + 168 + (p2 << 4) >> 3];
        h[m2 + 40 >> 3] = +h[b2 + 168 + (p2 << 4) + 8 >> 3];
        o2 = (7 - o2 | 0) % 4 | 0;
        h[m2 + 48 >> 3] = +h[b2 + 168 + (o2 << 4) >> 3];
        h[m2 + 56 >> 3] = +h[b2 + 168 + (o2 << 4) + 8 >> 3];
        n2 = d2 * -0.5;
        h[l2 >> 3] = n2;
        d2 = d2 * 0.5;
        h[l2 + 8 >> 3] = d2;
        h[l2 + 16 >> 3] = 0;
        h[l2 + 24 >> 3] = d2;
        h[l2 + 32 >> 3] = d2;
        h[l2 + 40 >> 3] = 0;
        h[l2 + 48 >> 3] = d2;
        h[l2 + 56 >> 3] = n2;
        h[l2 + 64 >> 3] = 0;
        h[l2 + 72 >> 3] = n2;
        h[l2 + 80 >> 3] = n2;
        h[l2 + 88 >> 3] = 0;
        c[f2 >> 2] = m2;
        c[f2 + 4 >> 2] = l2;
        c[f2 + 8 >> 2] = 4;
        if ((Ef(c[a2 >> 2] | 0, m2, l2, 4, j2) | 0) < 0)
          d2 = 1e8;
        else {
          p2 = (zf(c[a2 >> 2] | 0, f2, j2, e2, g2) | 0) < 0;
          d2 = p2 ? 1e8 : +h[g2 >> 3];
        }
        i2 = k2;
        return +d2;
      }
      function le(a2, b2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = +e2;
        f2 = f2 | 0;
        var g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
        j2 = i2;
        i2 = i2 + 192 | 0;
        m2 = j2 + 104 | 0;
        l2 = j2 + 8 | 0;
        k2 = j2 + 168 | 0;
        g2 = j2;
        o2 = c[b2 + 16 >> 2] | 0;
        p2 = (4 - o2 | 0) % 4 | 0;
        h[m2 >> 3] = +h[b2 + 168 + (p2 << 4) >> 3];
        h[m2 + 8 >> 3] = +h[b2 + 168 + (p2 << 4) + 8 >> 3];
        p2 = (5 - o2 | 0) % 4 | 0;
        h[m2 + 16 >> 3] = +h[b2 + 168 + (p2 << 4) >> 3];
        h[m2 + 24 >> 3] = +h[b2 + 168 + (p2 << 4) + 8 >> 3];
        p2 = (6 - o2 | 0) % 4 | 0;
        h[m2 + 32 >> 3] = +h[b2 + 168 + (p2 << 4) >> 3];
        h[m2 + 40 >> 3] = +h[b2 + 168 + (p2 << 4) + 8 >> 3];
        o2 = (7 - o2 | 0) % 4 | 0;
        h[m2 + 48 >> 3] = +h[b2 + 168 + (o2 << 4) >> 3];
        h[m2 + 56 >> 3] = +h[b2 + 168 + (o2 << 4) + 8 >> 3];
        n2 = e2 * -0.5;
        h[l2 >> 3] = n2;
        e2 = e2 * 0.5;
        h[l2 + 8 >> 3] = e2;
        h[l2 + 16 >> 3] = 0;
        h[l2 + 24 >> 3] = e2;
        h[l2 + 32 >> 3] = e2;
        h[l2 + 40 >> 3] = 0;
        h[l2 + 48 >> 3] = e2;
        h[l2 + 56 >> 3] = n2;
        h[l2 + 64 >> 3] = 0;
        h[l2 + 72 >> 3] = n2;
        h[l2 + 80 >> 3] = n2;
        h[l2 + 88 >> 3] = 0;
        c[k2 >> 2] = m2;
        c[k2 + 4 >> 2] = l2;
        c[k2 + 8 >> 2] = 4;
        b2 = (zf(c[a2 >> 2] | 0, k2, d2, f2, g2) | 0) < 0;
        i2 = j2;
        return +(b2 ? 1e8 : +h[g2 >> 3]);
      }
      function me(a2, b2, d2, e2, f2, g2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
        p2 = i2;
        i2 = i2 + 32 | 0;
        m2 = p2 + 20 | 0;
        n2 = p2;
        j2 = Uj(f2 << 4) | 0;
        c[m2 >> 2] = j2;
        if (!j2) {
          Me(3, 5472, p2 + 8 | 0);
          rb(1);
        }
        k2 = Uj(f2 * 24 | 0) | 0;
        l2 = m2 + 4 | 0;
        c[l2 >> 2] = k2;
        if (!k2) {
          Me(3, 5472, p2 + 16 | 0);
          rb(1);
        }
        if ((f2 | 0) > 0) {
          o2 = 0;
          do {
            h[j2 + (o2 << 4) >> 3] = +h[d2 + (o2 << 4) >> 3];
            h[j2 + (o2 << 4) + 8 >> 3] = +h[d2 + (o2 << 4) + 8 >> 3];
            h[k2 + (o2 * 24 | 0) >> 3] = +h[e2 + (o2 * 24 | 0) >> 3];
            h[k2 + (o2 * 24 | 0) + 8 >> 3] = +h[e2 + (o2 * 24 | 0) + 8 >> 3];
            h[k2 + (o2 * 24 | 0) + 16 >> 3] = +h[e2 + (o2 * 24 | 0) + 16 >> 3];
            o2 = o2 + 1 | 0;
          } while ((o2 | 0) < (f2 | 0));
        }
        c[m2 + 8 >> 2] = f2;
        if ((zf(c[a2 >> 2] | 0, m2, b2, g2, n2) | 0) < 0)
          h[n2 >> 3] = 1e8;
        Vj(c[m2 >> 2] | 0);
        Vj(c[l2 >> 2] | 0);
        i2 = p2;
        return + +h[n2 >> 3];
      }
      function ne(a2, b2, d2, e2, f2, g2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
        p2 = i2;
        i2 = i2 + 32 | 0;
        m2 = p2 + 20 | 0;
        n2 = p2;
        j2 = Uj(f2 << 4) | 0;
        c[m2 >> 2] = j2;
        if (!j2) {
          Me(3, 5472, p2 + 8 | 0);
          rb(1);
        }
        k2 = Uj(f2 * 24 | 0) | 0;
        l2 = m2 + 4 | 0;
        c[l2 >> 2] = k2;
        if (!k2) {
          Me(3, 5472, p2 + 16 | 0);
          rb(1);
        }
        if ((f2 | 0) > 0) {
          o2 = 0;
          do {
            h[j2 + (o2 << 4) >> 3] = +h[d2 + (o2 << 4) >> 3];
            h[j2 + (o2 << 4) + 8 >> 3] = +h[d2 + (o2 << 4) + 8 >> 3];
            h[k2 + (o2 * 24 | 0) >> 3] = +h[e2 + (o2 * 24 | 0) >> 3];
            h[k2 + (o2 * 24 | 0) + 8 >> 3] = +h[e2 + (o2 * 24 | 0) + 8 >> 3];
            h[k2 + (o2 * 24 | 0) + 16 >> 3] = +h[e2 + (o2 * 24 | 0) + 16 >> 3];
            o2 = o2 + 1 | 0;
          } while ((o2 | 0) < (f2 | 0));
        }
        c[m2 + 8 >> 2] = f2;
        if ((Bf(c[a2 >> 2] | 0, m2, b2, g2, n2) | 0) < 0)
          h[n2 >> 3] = 1e8;
        Vj(c[m2 >> 2] | 0);
        Vj(c[l2 >> 2] | 0);
        i2 = p2;
        return + +h[n2 >> 3];
      }
      function oe(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0;
        f2 = Uj(2080) | 0;
        a:
          do {
            if (f2) {
              c[f2 + 2068 >> 2] = d2;
              b:
                do {
                  if (!e2) {
                    switch (d2 | 0) {
                      case 5:
                      case 12:
                      case 13:
                      case 14:
                        break;
                      default: {
                        g2 = 4;
                        break b;
                      }
                    }
                    c[f2 + 2076 >> 2] = 0;
                  } else
                    g2 = 4;
                } while (0);
              do {
                if ((g2 | 0) == 4) {
                  g2 = Uj($(b2, a2) | 0) | 0;
                  c[f2 >> 2] = g2;
                  if (!g2) {
                    Vj(f2);
                    f2 = 0;
                    break a;
                  } else {
                    c[f2 + 2076 >> 2] = 1;
                    break;
                  }
                }
              } while (0);
              c[f2 + 2072 >> 2] = e2;
              c[f2 + 4 >> 2] = 0;
              c[f2 + 8 >> 2] = a2;
              c[f2 + 12 >> 2] = b2;
            }
          } while (0);
        return f2 | 0;
      }
      function pe(a2) {
        a2 = a2 | 0;
        if (a2) {
          if (c[a2 + 2076 >> 2] | 0)
            Vj(c[a2 >> 2] | 0);
          Vj(c[a2 + 4 >> 2] | 0);
          Vj(a2);
        }
        return;
      }
      function qe(b2, e2) {
        b2 = b2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
        k2 = i2;
        i2 = i2 + 16 | 0;
        g2 = k2;
        f2 = c[b2 + 2068 >> 2] | 0;
        a:
          do {
            switch (f2 | 0) {
              case 5:
              case 12:
              case 13:
              case 14:
                if (!(c[b2 + 2072 >> 2] | 0)) {
                  c[b2 >> 2] = e2;
                  f2 = 0;
                  break a;
                } else {
                  ik(c[b2 >> 2] | 0, e2 | 0, $(c[b2 + 12 >> 2] | 0, c[b2 + 8 >> 2] | 0) | 0) | 0;
                  f2 = 0;
                  break a;
                }
              default: {
                if ((f2 & -2 | 0) == 2) {
                  f2 = b2 + 8 | 0;
                  g2 = b2 + 12 | 0;
                  if (!($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0)) {
                    f2 = 0;
                    break a;
                  } else {
                    h2 = 0;
                    j2 = 0;
                  }
                  while (1) {
                    a[(c[b2 >> 2] | 0) + h2 >> 0] = (((d[e2 + (j2 | 1) >> 0] | 0) + (d[e2 + j2 >> 0] | 0) + (d[e2 + (j2 | 2) >> 0] | 0) | 0) >>> 0) / 3 | 0;
                    h2 = h2 + 1 | 0;
                    if (h2 >>> 0 >= ($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0) >>> 0) {
                      f2 = 0;
                      break a;
                    } else
                      j2 = j2 + 4 | 0;
                  }
                }
                if ((f2 & -3 | 0) == 4) {
                  f2 = b2 + 8 | 0;
                  g2 = b2 + 12 | 0;
                  if (!($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0)) {
                    f2 = 0;
                    break a;
                  } else {
                    h2 = 0;
                    j2 = 0;
                  }
                  while (1) {
                    a[(c[b2 >> 2] | 0) + h2 >> 0] = (((d[e2 + (j2 | 2) >> 0] | 0) + (d[e2 + (j2 | 1) >> 0] | 0) + (d[e2 + (j2 | 3) >> 0] | 0) | 0) >>> 0) / 3 | 0;
                    h2 = h2 + 1 | 0;
                    if (h2 >>> 0 >= ($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0) >>> 0) {
                      f2 = 0;
                      break a;
                    } else
                      j2 = j2 + 4 | 0;
                  }
                }
                if (f2 >>> 0 < 2) {
                  f2 = b2 + 8 | 0;
                  g2 = b2 + 12 | 0;
                  if (!($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0)) {
                    f2 = 0;
                    break a;
                  } else {
                    h2 = 0;
                    j2 = 0;
                  }
                  while (1) {
                    a[(c[b2 >> 2] | 0) + h2 >> 0] = (((d[e2 + (j2 + 1) >> 0] | 0) + (d[e2 + j2 >> 0] | 0) + (d[e2 + (j2 + 2) >> 0] | 0) | 0) >>> 0) / 3 | 0;
                    h2 = h2 + 1 | 0;
                    if (h2 >>> 0 >= ($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0) >>> 0) {
                      f2 = 0;
                      break a;
                    } else
                      j2 = j2 + 3 | 0;
                  }
                }
                switch (f2 | 0) {
                  case 8: {
                    f2 = b2 + 8 | 0;
                    g2 = b2 + 12 | 0;
                    if (!($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0)) {
                      f2 = 0;
                      break a;
                    } else {
                      h2 = 0;
                      j2 = 0;
                    }
                    while (1) {
                      a[(c[b2 >> 2] | 0) + h2 >> 0] = a[e2 + j2 >> 0] | 0;
                      h2 = h2 + 1 | 0;
                      if (h2 >>> 0 >= ($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0) >>> 0) {
                        f2 = 0;
                        break;
                      } else
                        j2 = j2 + 2 | 0;
                    }
                    break;
                  }
                  case 7: {
                    f2 = b2 + 8 | 0;
                    g2 = b2 + 12 | 0;
                    if (!($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0)) {
                      f2 = 0;
                      break a;
                    } else {
                      h2 = 0;
                      j2 = 0;
                    }
                    while (1) {
                      a[(c[b2 >> 2] | 0) + h2 >> 0] = a[e2 + (j2 | 1) >> 0] | 0;
                      h2 = h2 + 1 | 0;
                      if (h2 >>> 0 >= ($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0) >>> 0) {
                        f2 = 0;
                        break;
                      } else
                        j2 = j2 + 2 | 0;
                    }
                    break;
                  }
                  case 9: {
                    f2 = b2 + 8 | 0;
                    g2 = b2 + 12 | 0;
                    if (!($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0)) {
                      f2 = 0;
                      break a;
                    } else {
                      h2 = 0;
                      j2 = 0;
                    }
                    while (1) {
                      m2 = d[e2 + j2 >> 0] | 0;
                      l2 = d[e2 + (j2 | 1) >> 0] | 0;
                      a[(c[b2 >> 2] | 0) + h2 >> 0] = (((m2 & 248) + 10 + (m2 << 5 & 224) + (l2 >>> 3 & 28) + (l2 << 3 & 248) | 0) >>> 0) / 3 | 0;
                      h2 = h2 + 1 | 0;
                      if (h2 >>> 0 >= ($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0) >>> 0) {
                        f2 = 0;
                        break;
                      } else
                        j2 = j2 + 2 | 0;
                    }
                    break;
                  }
                  case 10: {
                    f2 = b2 + 8 | 0;
                    g2 = b2 + 12 | 0;
                    if (!($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0)) {
                      f2 = 0;
                      break a;
                    } else {
                      h2 = 0;
                      j2 = 0;
                    }
                    while (1) {
                      l2 = d[e2 + j2 >> 0] | 0;
                      m2 = d[e2 + (j2 | 1) >> 0] | 0;
                      a[(c[b2 >> 2] | 0) + h2 >> 0] = (((l2 & 248) + 12 + (l2 << 5 & 224) + (m2 >>> 3 & 24) + (m2 << 2 & 248) | 0) >>> 0) / 3 | 0;
                      h2 = h2 + 1 | 0;
                      if (h2 >>> 0 >= ($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0) >>> 0) {
                        f2 = 0;
                        break;
                      } else
                        j2 = j2 + 2 | 0;
                    }
                    break;
                  }
                  case 11: {
                    f2 = b2 + 8 | 0;
                    g2 = b2 + 12 | 0;
                    if (!($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0)) {
                      f2 = 0;
                      break a;
                    } else {
                      h2 = 0;
                      j2 = 0;
                    }
                    while (1) {
                      m2 = d[e2 + j2 >> 0] | 0;
                      a[(c[b2 >> 2] | 0) + h2 >> 0] = (((m2 & 240) + 24 + (m2 << 4 & 240) + ((d[e2 + (j2 | 1) >> 0] | 0) & 240) | 0) >>> 0) / 3 | 0;
                      h2 = h2 + 1 | 0;
                      if (h2 >>> 0 >= ($(c[g2 >> 2] | 0, c[f2 >> 2] | 0) | 0) >>> 0) {
                        f2 = 0;
                        break;
                      } else
                        j2 = j2 + 2 | 0;
                    }
                    break;
                  }
                  default: {
                    Me(3, 4361, g2);
                    f2 = -1;
                    break a;
                  }
                }
              }
            }
          } while (0);
        i2 = k2;
        return f2 | 0;
      }
      function re(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var e2 = 0, f2 = 0;
        if ((a2 | 0) != 0 & (b2 | 0) != 0 ? (qe(a2, b2) | 0) >= 0 : 0) {
          ek(a2 + 16 | 0, 0, 1024) | 0;
          b2 = c[a2 >> 2] | 0;
          f2 = $(c[a2 + 12 >> 2] | 0, c[a2 + 8 >> 2] | 0) | 0;
          e2 = b2 + f2 | 0;
          if ((f2 | 0) > 0) {
            do {
              f2 = a2 + 16 + ((d[b2 >> 0] | 0) << 2) | 0;
              c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
              b2 = b2 + 1 | 0;
            } while (b2 >>> 0 < e2 >>> 0);
            b2 = 0;
          } else
            b2 = 0;
        } else
          b2 = -1;
        return b2 | 0;
      }
      function se(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0;
        b2 = re(a2, b2) | 0;
        if ((b2 | 0) >= 0) {
          b2 = 0;
          d2 = 0;
          do {
            b2 = (c[a2 + 16 + (d2 << 2) >> 2] | 0) + b2 | 0;
            c[a2 + 1040 + (d2 << 2) >> 2] = b2;
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != 256);
          b2 = 0;
        }
        return b2 | 0;
      }
      function te(b2, d2, e2, f2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = +e2;
        f2 = f2 | 0;
        var g2 = 0, h2 = 0, i3 = 0;
        if (!(e2 < 0 | e2 > 1)) {
          d2 = se(b2, d2) | 0;
          if ((d2 | 0) >= 0) {
            i3 = ~~(+($(c[b2 + 12 >> 2] | 0, c[b2 + 8 >> 2] | 0) | 0) * e2) >>> 0;
            d2 = 0;
            while (1) {
              h2 = d2 & 255;
              g2 = c[b2 + 1040 + (h2 << 2) >> 2] | 0;
              if (g2 >>> 0 < i3 >>> 0)
                d2 = d2 + 1 << 24 >> 24;
              else
                break;
            }
            if ((g2 | 0) == (i3 | 0))
              do {
                d2 = d2 + 1 << 24 >> 24;
              } while ((c[b2 + 1040 + ((d2 & 255) << 2) >> 2] | 0) == (i3 | 0));
            a[f2 >> 0] = ((d2 & 255) + h2 | 0) >>> 1;
            d2 = 0;
          }
        } else
          d2 = -1;
        return d2 | 0;
      }
      function ue(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        return te(a2, b2, 0.5, c2) | 0;
      }
      function ve(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
        d2 = re(b2, d2) | 0;
        if ((d2 | 0) >= 0) {
          d2 = 1;
          f2 = 0;
          do {
            f2 = f2 + +(($(c[b2 + 16 + (d2 << 2) >> 2] | 0, d2) | 0) >>> 0);
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != 256);
          k2 = +($(c[b2 + 12 >> 2] | 0, c[b2 + 8 >> 2] | 0) | 0);
          l2 = 0;
          h2 = 0;
          d2 = 0;
          j2 = 0;
          m2 = 0;
          while (1) {
            g2 = c[b2 + 16 + (l2 << 2) >> 2] | 0;
            m2 = m2 + +(g2 >>> 0);
            if (m2 != 0) {
              i3 = k2 - m2;
              if (i3 == 0)
                break;
              h2 = h2 + +(($(l2, g2) | 0) >>> 0);
              n2 = h2 / m2 - (f2 - h2) / i3;
              i3 = n2 * (m2 * i3 * n2);
              if (i3 > j2)
                d2 = l2 & 255;
              else
                i3 = j2;
            } else
              i3 = j2;
            if ((l2 & 255) << 24 >> 24 == -1)
              break;
            else {
              l2 = l2 + 1 | 0;
              j2 = i3;
            }
          }
          a[e2 >> 0] = d2;
          d2 = 0;
        }
        return d2 | 0;
      }
      function we(b2, e2, f2, g2) {
        b2 = b2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        var h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
        e2 = re(b2, e2) | 0;
        do {
          if ((e2 | 0) >= 0) {
            t2 = b2 + 4 | 0;
            if (!(c[t2 >> 2] | 0)) {
              e2 = b2 + 8 | 0;
              h2 = b2 + 12 | 0;
              s2 = Uj($(c[h2 >> 2] | 0, c[e2 >> 2] | 0) | 0) | 0;
              c[t2 >> 2] = s2;
              if (!s2) {
                e2 = -1;
                break;
              } else
                s2 = e2;
            } else {
              s2 = b2 + 8 | 0;
              h2 = b2 + 12 | 0;
            }
            q2 = f2 >> 1;
            r2 = 0 - q2 | 0;
            e2 = c[h2 >> 2] | 0;
            if ((e2 | 0) > 0) {
              n2 = (q2 | 0) < (r2 | 0);
              o2 = (q2 | 0) < (r2 | 0);
              p2 = 0;
              do {
                e2 = c[s2 >> 2] | 0;
                if ((e2 | 0) > 0) {
                  m2 = 0;
                  do {
                    if (n2) {
                      i3 = 0;
                      f2 = 0;
                    } else {
                      i3 = 0;
                      l2 = r2;
                      f2 = 0;
                      while (1) {
                        j2 = l2 + p2 | 0;
                        if (((j2 | 0) >= 0 ? (j2 | 0) < (c[h2 >> 2] | 0) : 0) ? (u2 = $(e2, j2) | 0, !o2) : 0) {
                          k2 = r2;
                          while (1) {
                            j2 = k2 + m2 | 0;
                            if ((j2 | 0) > -1 & (j2 | 0) < (e2 | 0)) {
                              i3 = i3 + 1 | 0;
                              f2 = (d[(c[b2 >> 2] | 0) + (u2 + j2) >> 0] | 0) + f2 | 0;
                            }
                            if ((k2 | 0) < (q2 | 0))
                              k2 = k2 + 1 | 0;
                            else
                              break;
                          }
                        }
                        if ((l2 | 0) < (q2 | 0))
                          l2 = l2 + 1 | 0;
                        else
                          break;
                      }
                    }
                    l2 = ($(e2, p2) | 0) + m2 | 0;
                    a[(c[t2 >> 2] | 0) + l2 >> 0] = (f2 | 0) / (i3 | 0) | 0;
                    m2 = m2 + 1 | 0;
                    e2 = c[s2 >> 2] | 0;
                  } while ((m2 | 0) < (e2 | 0));
                }
                p2 = p2 + 1 | 0;
                e2 = c[h2 >> 2] | 0;
              } while ((p2 | 0) < (e2 | 0));
            }
            if ((g2 | 0) != 0 ? ($(e2, c[s2 >> 2] | 0) | 0) > 0 : 0) {
              e2 = 0;
              do {
                b2 = (c[t2 >> 2] | 0) + e2 | 0;
                a[b2 >> 0] = (d[b2 >> 0] | 0) + g2;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) < ($(c[h2 >> 2] | 0, c[s2 >> 2] | 0) | 0));
              e2 = 0;
            } else
              e2 = 0;
          }
        } while (0);
        return e2 | 0;
      }
      function xe(a2, b2, c2, d2, e2, f2, g2, h2, i3, j2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        h2 = h2 | 0;
        i3 = i3 | 0;
        j2 = j2 | 0;
        var k2 = 0;
        a:
          do {
            switch (e2 | 0) {
              case 0: {
                switch (f2 | 0) {
                  case 1: {
                    if (j2) {
                      k2 = Fc(a2, b2, c2, j2, i3) | 0;
                      break a;
                    }
                    switch (h2 | 0) {
                      case 0: {
                        if (d2 >>> 0 < 2) {
                          k2 = wc(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -2 | 0) == 2) {
                          k2 = yc(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -3 | 0) == 4) {
                          k2 = Bc(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        switch (d2 | 0) {
                          case 5:
                          case 12:
                          case 13:
                          case 14: {
                            k2 = Cc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 8: {
                            k2 = Ec(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 7: {
                            k2 = Dc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 9: {
                            k2 = xc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 10: {
                            k2 = Ac(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 11: {
                            k2 = zc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          default:
                            rb(0);
                        }
                        break;
                      }
                      case 1: {
                        if (d2 >>> 0 < 2) {
                          k2 = nc(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -2 | 0) == 2) {
                          k2 = pc(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -3 | 0) == 4) {
                          k2 = sc(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        switch (d2 | 0) {
                          case 5:
                          case 12:
                          case 13:
                          case 14: {
                            k2 = tc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 8: {
                            k2 = vc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 7: {
                            k2 = uc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 9: {
                            k2 = oc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 10: {
                            k2 = rc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 11: {
                            k2 = qc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          default:
                            rb(0);
                        }
                        break;
                      }
                      default:
                        rb(0);
                    }
                    break;
                  }
                  case 0: {
                    if (j2) {
                      k2 = Yc(a2, b2, c2, j2, i3) | 0;
                      break a;
                    }
                    switch (h2 | 0) {
                      case 0: {
                        if (d2 >>> 0 < 2) {
                          k2 = Pc(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -2 | 0) == 2) {
                          k2 = Rc(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -3 | 0) == 4) {
                          k2 = Uc(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        switch (d2 | 0) {
                          case 5:
                          case 12:
                          case 13:
                          case 14: {
                            k2 = Vc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 8: {
                            k2 = Xc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 7: {
                            k2 = Wc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 9: {
                            k2 = Qc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 10: {
                            k2 = Tc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 11: {
                            k2 = Sc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          default:
                            rb(0);
                        }
                        break;
                      }
                      case 1: {
                        if (d2 >>> 0 < 2) {
                          k2 = Gc(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -2 | 0) == 2) {
                          k2 = Ic(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -3 | 0) == 4) {
                          k2 = Lc(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        switch (d2 | 0) {
                          case 5:
                          case 12:
                          case 13:
                          case 14: {
                            k2 = Mc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 8: {
                            k2 = Oc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 7: {
                            k2 = Nc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 9: {
                            k2 = Hc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 10: {
                            k2 = Kc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 11: {
                            k2 = Jc(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          default:
                            rb(0);
                        }
                        break;
                      }
                      default:
                        rb(0);
                    }
                    break;
                  }
                  default:
                    rb(0);
                }
                break;
              }
              case 1: {
                switch (f2 | 0) {
                  case 1: {
                    if (j2) {
                      k2 = pd(a2, b2, c2, j2, i3) | 0;
                      break a;
                    }
                    switch (h2 | 0) {
                      case 0: {
                        if (d2 >>> 0 < 2) {
                          k2 = gd(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -2 | 0) == 2) {
                          k2 = id(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -3 | 0) == 4) {
                          k2 = ld(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        switch (d2 | 0) {
                          case 5:
                          case 12:
                          case 13:
                          case 14: {
                            k2 = md(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 8: {
                            k2 = od(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 7: {
                            k2 = nd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 9: {
                            k2 = hd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 10: {
                            k2 = kd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 11: {
                            k2 = jd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          default:
                            rb(0);
                        }
                        break;
                      }
                      case 1: {
                        if (d2 >>> 0 < 2) {
                          k2 = Zc(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -2 | 0) == 2) {
                          k2 = $c(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -3 | 0) == 4) {
                          k2 = cd(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        switch (d2 | 0) {
                          case 5:
                          case 12:
                          case 13:
                          case 14: {
                            k2 = dd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 8: {
                            k2 = fd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 7: {
                            k2 = ed(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 9: {
                            k2 = _c(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 10: {
                            k2 = bd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 11: {
                            k2 = ad(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          default:
                            rb(0);
                        }
                        break;
                      }
                      default:
                        rb(0);
                    }
                    break;
                  }
                  case 0: {
                    if (j2) {
                      k2 = Id(a2, b2, c2, j2, i3) | 0;
                      break a;
                    }
                    switch (h2 | 0) {
                      case 0: {
                        if (d2 >>> 0 < 2) {
                          k2 = zd(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -2 | 0) == 2) {
                          k2 = Bd(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -3 | 0) == 4) {
                          k2 = Ed(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        switch (d2 | 0) {
                          case 5:
                          case 12:
                          case 13:
                          case 14: {
                            k2 = Fd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 8: {
                            k2 = Hd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 7: {
                            k2 = Gd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 9: {
                            k2 = Ad(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 10: {
                            k2 = Dd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 11: {
                            k2 = Cd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          default:
                            rb(0);
                        }
                        break;
                      }
                      case 1: {
                        if (d2 >>> 0 < 2) {
                          k2 = qd(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -2 | 0) == 2) {
                          k2 = sd(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        if ((d2 & -3 | 0) == 4) {
                          k2 = vd(a2, b2, c2, g2, i3) | 0;
                          break a;
                        }
                        switch (d2 | 0) {
                          case 5:
                          case 12:
                          case 13:
                          case 14: {
                            k2 = wd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 8: {
                            k2 = yd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 7: {
                            k2 = xd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 9: {
                            k2 = rd(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 10: {
                            k2 = ud(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          case 11: {
                            k2 = td(a2, b2, c2, g2, i3) | 0;
                            break a;
                          }
                          default:
                            rb(0);
                        }
                        break;
                      }
                      default:
                        rb(0);
                    }
                    break;
                  }
                  default:
                    rb(0);
                }
                break;
              }
              default:
                rb(0);
            }
          } while (0);
        return k2 | 0;
      }
      function ye(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0;
        if ((a2 | 0) != 0 ? (d2 = a2 + 7062384 | 0, (c[d2 >> 2] | 0) == 0) : 0) {
          c[d2 >> 2] = b2;
          d2 = 0;
        } else
          d2 = -1;
        return d2 | 0;
      }
      function ze(a2) {
        a2 = a2 | 0;
        var b2 = 0;
        if ((a2 | 0) != 0 ? (b2 = a2 + 7062384 | 0, (c[b2 >> 2] | 0) != 0) : 0) {
          c[b2 >> 2] = 0;
          b2 = 0;
        } else
          b2 = -1;
        return b2 | 0;
      }
      function Ae() {
        return Be(16, 50) | 0;
      }
      function Be(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
        r2 = i2;
        i2 = i2 + 64 | 0;
        q2 = r2 + 56 | 0;
        p2 = r2 + 48 | 0;
        j2 = r2 + 40 | 0;
        h2 = r2 + 32 | 0;
        g2 = r2 + 24 | 0;
        f2 = r2 + 16 | 0;
        e2 = r2 + 8 | 0;
        d2 = r2;
        a:
          do {
            if (!((a2 + -16 | 0) >>> 0 > 48 | (b2 | 0) < 1)) {
              n2 = Uj(32) | 0;
              if (!n2) {
                Me(3, 5472, d2);
                rb(1);
              }
              c[n2 >> 2] = 0;
              c[n2 + 4 >> 2] = b2;
              c[n2 + 28 >> 2] = a2;
              m2 = Uj(b2 << 2) | 0;
              c[n2 + 8 >> 2] = m2;
              if (!m2) {
                Me(3, 5472, e2);
                rb(1);
              }
              d2 = b2 << 4;
              l2 = Uj(d2) | 0;
              c[n2 + 12 >> 2] = l2;
              if (!l2) {
                Me(3, 5472, f2);
                rb(1);
              }
              f2 = Uj(d2) | 0;
              k2 = n2 + 20 | 0;
              c[k2 >> 2] = f2;
              if (!f2) {
                Me(3, 5472, g2);
                rb(1);
              }
              d2 = b2 << 5;
              g2 = Uj(d2) | 0;
              c[n2 + 16 >> 2] = g2;
              if (!g2) {
                Me(3, 5472, h2);
                rb(1);
              }
              h2 = Uj(d2) | 0;
              c[n2 + 24 >> 2] = h2;
              if (!h2) {
                Me(3, 5472, j2);
                rb(1);
              }
              e2 = $(a2, a2) | 0;
              d2 = e2 * 12 | 0;
              e2 = e2 << 2;
              if ((b2 | 0) > 0) {
                a2 = 0;
                b:
                  while (1) {
                    c[m2 + (a2 << 2) >> 2] = 0;
                    f2 = a2 << 2;
                    h2 = 0;
                    while (1) {
                      if ((h2 | 0) >= 4)
                        break;
                      j2 = Uj(d2) | 0;
                      g2 = h2 + f2 | 0;
                      c[l2 + (g2 << 2) >> 2] = j2;
                      if (!j2) {
                        d2 = 18;
                        break b;
                      }
                      j2 = Uj(e2) | 0;
                      c[(c[k2 >> 2] | 0) + (g2 << 2) >> 2] = j2;
                      if (!j2) {
                        d2 = 20;
                        break b;
                      } else
                        h2 = h2 + 1 | 0;
                    }
                    a2 = a2 + 1 | 0;
                    if ((a2 | 0) >= (b2 | 0)) {
                      o2 = n2;
                      break a;
                    }
                  }
                if ((d2 | 0) == 18) {
                  Me(3, 5472, p2);
                  rb(1);
                } else if ((d2 | 0) == 20) {
                  Me(3, 5472, q2);
                  rb(1);
                }
              } else
                o2 = n2;
            } else
              o2 = 0;
          } while (0);
        i2 = r2;
        return o2 | 0;
      }
      function Ce(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0;
        if (!a2)
          b2 = -1;
        else {
          b2 = a2 + 4 | 0;
          d2 = a2 + 8 | 0;
          e2 = a2 + 12 | 0;
          f2 = a2 + 20 | 0;
          if ((c[b2 >> 2] | 0) > 0) {
            g2 = 0;
            do {
              if (c[(c[d2 >> 2] | 0) + (g2 << 2) >> 2] | 0)
                Le(a2, g2) | 0;
              h2 = g2 << 2;
              Vj(c[(c[e2 >> 2] | 0) + (h2 << 2) >> 2] | 0);
              Vj(c[(c[f2 >> 2] | 0) + (h2 << 2) >> 2] | 0);
              i3 = 1 + h2 | 0;
              Vj(c[(c[e2 >> 2] | 0) + (i3 << 2) >> 2] | 0);
              Vj(c[(c[f2 >> 2] | 0) + (i3 << 2) >> 2] | 0);
              i3 = 2 + h2 | 0;
              Vj(c[(c[e2 >> 2] | 0) + (i3 << 2) >> 2] | 0);
              Vj(c[(c[f2 >> 2] | 0) + (i3 << 2) >> 2] | 0);
              h2 = 3 + h2 | 0;
              Vj(c[(c[e2 >> 2] | 0) + (h2 << 2) >> 2] | 0);
              Vj(c[(c[f2 >> 2] | 0) + (h2 << 2) >> 2] | 0);
              g2 = g2 + 1 | 0;
            } while ((g2 | 0) < (c[b2 >> 2] | 0));
          }
          Vj(a2);
          b2 = 0;
        }
        return b2 | 0;
      }
      function De(b2, e2, f2, g2, j2, k2, l2, m2, n2, o2, p2, q2, r2, s2, t2, u2, v2, w2, x2) {
        b2 = b2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        j2 = j2 | 0;
        k2 = k2 | 0;
        l2 = l2 | 0;
        m2 = m2 | 0;
        n2 = n2 | 0;
        o2 = +o2;
        p2 = p2 | 0;
        q2 = q2 | 0;
        r2 = r2 | 0;
        s2 = s2 | 0;
        t2 = t2 | 0;
        u2 = u2 | 0;
        v2 = v2 | 0;
        w2 = w2 | 0;
        x2 = x2 | 0;
        var y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0;
        L2 = i2;
        i2 = i2 + 12448 | 0;
        A2 = L2 + 12440 | 0;
        z2 = L2 + 8 | 0;
        J2 = L2;
        I2 = L2 + 12312 | 0;
        K2 = L2 + 24 | 0;
        do {
          if ((f2 + -2 | 0) >>> 0 < 3) {
            if ((v2 | 0) != 2830) {
              y2 = v2 & 255;
              if ((Ee(e2, 2, y2, y2 * 3 | 0, g2, j2, k2, l2, m2, n2, o2, K2) | 0) < 0) {
                c[s2 >> 2] = -1;
                y2 = -6;
                break;
              }
              y2 = Fe(K2, y2, s2, t2, u2, v2, w2) | 0;
              if (!x2)
                break;
              c[x2 >> 2] = 0;
              c[x2 + 4 >> 2] = 0;
              break;
            }
            if ((Ee(e2, 2, 14, 42, g2, j2, k2, l2, m2, n2, 0.875, K2) | 0) < 0) {
              c[s2 >> 2] = -1;
              y2 = -6;
              break;
            }
            c[z2 >> 2] = 0;
            c[z2 + 4 >> 2] = 182;
            c[z2 + 8 >> 2] = 195;
            c[z2 + 12 >> 2] = 13;
            v2 = a[K2 + (c[z2 >> 2] | 0) >> 0] | 0;
            y2 = (v2 & 255) > 0 ? v2 : 0;
            v2 = (v2 & 255) < 255 ? v2 : -1;
            H2 = a[K2 + (c[z2 + 4 >> 2] | 0) >> 0] | 0;
            y2 = (H2 & 255) > (y2 & 255) ? H2 : y2;
            v2 = (H2 & 255) < (v2 & 255) ? H2 : v2;
            H2 = a[K2 + (c[z2 + 8 >> 2] | 0) >> 0] | 0;
            y2 = (H2 & 255) > (y2 & 255) ? H2 : y2;
            v2 = (H2 & 255) < (v2 & 255) ? H2 : v2;
            H2 = a[K2 + (c[z2 + 12 >> 2] | 0) >> 0] | 0;
            y2 = ((H2 & 255) > (y2 & 255) ? H2 : y2) & 255;
            v2 = ((H2 & 255) < (v2 & 255) ? H2 : v2) & 255;
            a:
              do {
                if ((y2 - v2 | 0) >= 30) {
                  H2 = (y2 + v2 | 0) >>> 1;
                  a[A2 >> 0] = (d[K2 + (c[z2 >> 2] | 0) >> 0] | 0) >>> 0 < H2 >>> 0 & 1;
                  a[A2 + 1 >> 0] = (d[K2 + (c[z2 + 4 >> 2] | 0) >> 0] | 0) >>> 0 < H2 >>> 0 & 1;
                  a[A2 + 2 >> 0] = (d[K2 + (c[z2 + 8 >> 2] | 0) >> 0] | 0) >>> 0 < H2 >>> 0 & 1;
                  a[A2 + 3 >> 0] = (d[K2 + (c[z2 + 12 >> 2] | 0) >> 0] | 0) >>> 0 < H2 >>> 0 & 1;
                  v2 = 0;
                  while (1) {
                    y2 = v2 + 1 | 0;
                    if (((a[A2 + v2 >> 0] | 0) == 1 ? (a[A2 + ((y2 | 0) % 4 | 0) >> 0] | 0) == 1 : 0) ? (a[A2 + ((v2 + 2 | 0) % 4 | 0) >> 0] | 0) == 0 : 0) {
                      G2 = v2;
                      break;
                    }
                    if ((y2 | 0) < 4)
                      v2 = y2;
                    else {
                      G2 = y2;
                      break;
                    }
                  }
                  switch (G2 | 0) {
                    case 4: {
                      c[t2 >> 2] = 0;
                      h[u2 >> 3] = -1;
                      y2 = -3;
                      v2 = 0;
                      z2 = 0;
                      break a;
                    }
                    case 0: {
                      z2 = 119;
                      y2 = 255;
                      v2 = 0;
                      do {
                        D2 = v2 + -3 | 0;
                        B2 = (v2 & -2 | 0) == 12;
                        C2 = v2 * 14 | 0;
                        A2 = 0;
                        do {
                          if (((A2 + -3 | D2) >>> 0 >= 8 ? (F2 = A2 & -2, (A2 | v2) >>> 0 >= 2) : 0) ? !(B2 & ((F2 | 0) == 0 | (F2 | 0) == 12)) : 0) {
                            E2 = (d[K2 + (A2 + C2) >> 0] | 0) - H2 | 0;
                            a[I2 + z2 >> 0] = E2 >>> 31;
                            E2 = (E2 | 0) > -1 ? E2 : 0 - E2 | 0;
                            z2 = z2 + -1 | 0;
                            y2 = (E2 | 0) < (y2 | 0) ? E2 : y2;
                          }
                          A2 = A2 + 1 | 0;
                        } while ((A2 | 0) != 14);
                        v2 = v2 + 1 | 0;
                      } while ((v2 | 0) != 14);
                      break;
                    }
                    case 1: {
                      z2 = 119;
                      y2 = 255;
                      v2 = 0;
                      do {
                        D2 = v2 + -3 | 0;
                        C2 = v2 & -2;
                        B2 = (C2 | 0) == 0;
                        C2 = (C2 | 0) == 12;
                        A2 = 13;
                        while (1) {
                          if (((A2 + -3 | D2) >>> 0 >= 8 ? (E2 = (A2 & -2 | 0) == 12, !(B2 & E2)) : 0) ? !(C2 & (A2 >>> 0 < 2 | E2)) : 0) {
                            F2 = (d[K2 + ((A2 * 14 | 0) + v2) >> 0] | 0) - H2 | 0;
                            a[I2 + z2 >> 0] = F2 >>> 31;
                            F2 = (F2 | 0) > -1 ? F2 : 0 - F2 | 0;
                            z2 = z2 + -1 | 0;
                            y2 = (F2 | 0) < (y2 | 0) ? F2 : y2;
                          }
                          if ((A2 | 0) > 0)
                            A2 = A2 + -1 | 0;
                          else
                            break;
                        }
                        v2 = v2 + 1 | 0;
                      } while ((v2 | 0) != 14);
                      break;
                    }
                    case 2: {
                      v2 = 119;
                      y2 = 255;
                      D2 = 13;
                      while (1) {
                        B2 = D2 + -3 | 0;
                        C2 = D2 >>> 0 < 2 | (D2 & -2 | 0) == 12;
                        A2 = D2 * 14 | 0;
                        z2 = 13;
                        while (1) {
                          if ((z2 + -3 | B2) >>> 0 >= 8 ? !((z2 | D2) >>> 0 < 2 | C2 & (z2 & -2 | 0) == 12) : 0) {
                            F2 = (d[K2 + (z2 + A2) >> 0] | 0) - H2 | 0;
                            a[I2 + v2 >> 0] = F2 >>> 31;
                            F2 = (F2 | 0) > -1 ? F2 : 0 - F2 | 0;
                            v2 = v2 + -1 | 0;
                            y2 = (F2 | 0) < (y2 | 0) ? F2 : y2;
                          }
                          if ((z2 | 0) > 0)
                            z2 = z2 + -1 | 0;
                          else
                            break;
                        }
                        if ((D2 | 0) > 0)
                          D2 = D2 + -1 | 0;
                        else
                          break;
                      }
                      break;
                    }
                    case 3: {
                      v2 = 119;
                      y2 = 255;
                      D2 = 13;
                      while (1) {
                        C2 = D2 + -3 | 0;
                        B2 = D2 & -2;
                        A2 = (B2 | 0) == 12;
                        B2 = (B2 | 0) == 0;
                        z2 = 0;
                        do {
                          if (((z2 + -3 | C2) >>> 0 >= 8 ? !(A2 & z2 >>> 0 < 2 | (z2 | D2) >>> 0 < 2) : 0) ? !(B2 & (z2 & -2 | 0) == 12) : 0) {
                            F2 = (d[K2 + ((z2 * 14 | 0) + D2) >> 0] | 0) - H2 | 0;
                            a[I2 + v2 >> 0] = F2 >>> 31;
                            F2 = (F2 | 0) > -1 ? F2 : 0 - F2 | 0;
                            v2 = v2 + -1 | 0;
                            y2 = (F2 | 0) < (y2 | 0) ? F2 : y2;
                          }
                          z2 = z2 + 1 | 0;
                        } while ((z2 | 0) != 14);
                        if ((D2 | 0) > 0)
                          D2 = D2 + -1 | 0;
                        else
                          break;
                      }
                      break;
                    }
                    default:
                      y2 = 255;
                  }
                  c[t2 >> 2] = G2;
                  h[u2 >> 3] = (y2 | 0) > 30 ? 1 : +(y2 | 0) / 30;
                  y2 = Ie(2830, 0, 0, I2, J2) | 0;
                  if ((y2 | 0) < 0) {
                    y2 = -4;
                    v2 = 0;
                    z2 = 0;
                  } else {
                    if (w2)
                      c[w2 >> 2] = y2;
                    z2 = J2;
                    y2 = 0;
                    v2 = c[z2 >> 2] | 0;
                    z2 = c[z2 + 4 >> 2] | 0;
                  }
                } else {
                  c[t2 >> 2] = 0;
                  h[u2 >> 3] = -1;
                  y2 = -2;
                  v2 = 0;
                  z2 = 0;
                }
              } while (0);
            if ((y2 | 0) < 0) {
              c[s2 >> 2] = -1;
              break;
            }
            if ((v2 | 0) == -1 & (z2 | 0) == -1) {
              c[s2 >> 2] = -1;
              y2 = -5;
              break;
            }
            c[s2 >> 2] = (v2 & -32768 | 0) == 0 & true ? v2 & 32767 : 0;
            if (!x2)
              y2 = 0;
            else {
              y2 = x2;
              c[y2 >> 2] = v2;
              c[y2 + 4 >> 2] = z2;
              y2 = 0;
            }
          } else
            y2 = 1;
        } while (0);
        b:
          do {
            switch (f2 | 0) {
              case 0:
              case 1:
              case 3:
              case 4: {
                if (!b2) {
                  c[p2 >> 2] = -1;
                  v2 = -1;
                  break b;
                }
                v2 = b2 + 28 | 0;
                z2 = c[v2 >> 2] | 0;
                A2 = z2 << 2;
                switch (f2 | 0) {
                  case 0:
                  case 3:
                    if ((Ee(e2, 0, z2, A2, g2, j2, k2, l2, m2, n2, o2, K2) | 0) < 0) {
                      c[p2 >> 2] = -1;
                      v2 = -6;
                      break b;
                    } else {
                      v2 = Ge(b2, 0, K2, c[v2 >> 2] | 0, p2, q2, r2) | 0;
                      break b;
                    }
                  default:
                    if ((Ee(e2, 1, z2, A2, g2, j2, k2, l2, m2, n2, o2, K2) | 0) < 0) {
                      c[p2 >> 2] = -1;
                      v2 = -6;
                      break b;
                    } else {
                      v2 = Ge(b2, 1, K2, c[v2 >> 2] | 0, p2, q2, r2) | 0;
                      break b;
                    }
                }
              }
              default:
                v2 = 1;
            }
          } while (0);
        if ((y2 | 0) != 1) {
          if ((v2 | 0) != 1)
            y2 = (v2 & y2 | 0) < 0 ? v2 : 0;
        } else
          y2 = v2;
        i2 = L2;
        return y2 | 0;
      }
      function _j(a2) {
        a2 = a2 | 0;
        var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0;
        k2 = i2;
        i2 = i2 + 16 | 0;
        b2 = k2 + 8 | 0;
        h2 = k2 + 4 | 0;
        d2 = k2;
        c[h2 >> 2] = a2;
        do {
          if (a2 >>> 0 >= 212) {
            g2 = (a2 >>> 0) / 210 | 0;
            e2 = g2 * 210 | 0;
            c[d2 >> 2] = a2 - e2;
            b2 = ($j(3712, 3904, d2, b2) | 0) - 3712 >> 2;
            f2 = b2;
            b2 = (c[3712 + (b2 << 2) >> 2] | 0) + e2 | 0;
            a:
              while (1) {
                e2 = 5;
                while (1) {
                  if (e2 >>> 0 >= 47) {
                    e2 = 211;
                    j2 = 8;
                    break;
                  }
                  d2 = c[3520 + (e2 << 2) >> 2] | 0;
                  a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                  if (a2 >>> 0 < d2 >>> 0) {
                    j2 = 106;
                    break a;
                  }
                  if ((b2 | 0) == ($(a2, d2) | 0))
                    break;
                  else
                    e2 = e2 + 1 | 0;
                }
                b:
                  do {
                    if ((j2 | 0) == 8)
                      while (1) {
                        j2 = 0;
                        d2 = (b2 >>> 0) / (e2 >>> 0) | 0;
                        if (d2 >>> 0 < e2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(d2, e2) | 0))
                          break b;
                        d2 = e2 + 10 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 12 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 16 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 18 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 22 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 28 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 30 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 36 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 40 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 42 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 46 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 52 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 58 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 60 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 66 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 70 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 72 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 78 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 82 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 88 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 96 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 100 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 102 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 106 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 108 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 112 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 120 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 126 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 130 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 136 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 138 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 142 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 148 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 150 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 156 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 162 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 166 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 168 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 172 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 178 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 180 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 186 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 190 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 192 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 196 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 198 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break b;
                        d2 = e2 + 208 | 0;
                        a2 = (b2 >>> 0) / (d2 >>> 0) | 0;
                        if (a2 >>> 0 < d2 >>> 0) {
                          j2 = 105;
                          break a;
                        }
                        if ((b2 | 0) == ($(a2, d2) | 0))
                          break;
                        else {
                          e2 = e2 + 210 | 0;
                          j2 = 8;
                        }
                      }
                  } while (0);
                e2 = f2 + 1 | 0;
                b2 = (e2 | 0) == 48;
                e2 = b2 ? 0 : e2;
                b2 = (b2 & 1) + g2 | 0;
                f2 = e2;
                g2 = b2;
                b2 = (c[3712 + (e2 << 2) >> 2] | 0) + (b2 * 210 | 0) | 0;
              }
            if ((j2 | 0) == 105) {
              c[h2 >> 2] = b2;
              break;
            } else if ((j2 | 0) == 106) {
              c[h2 >> 2] = b2;
              break;
            }
          } else
            b2 = c[($j(3520, 3712, h2, b2) | 0) >> 2] | 0;
        } while (0);
        i2 = k2;
        return b2 | 0;
      }
      function $j(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0;
        f2 = c[d2 >> 2] | 0;
        e2 = a2;
        d2 = b2 - a2 >> 2;
        a:
          while (1) {
            while (1) {
              if (!d2)
                break a;
              a2 = (d2 | 0) / 2 | 0;
              if ((c[e2 + (a2 << 2) >> 2] | 0) >>> 0 < f2 >>> 0)
                break;
              else
                d2 = a2;
            }
            e2 = e2 + (a2 + 1 << 2) | 0;
            d2 = d2 + -1 - a2 | 0;
          }
        return e2 | 0;
      }
      function ak(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0;
        if (e2 >>> 0 > 4294967279)
          oi(b2);
        if (e2 >>> 0 < 11) {
          a[b2 >> 0] = e2 << 1;
          b2 = b2 + 1 | 0;
        } else {
          g2 = e2 + 16 & -16;
          f2 = Kh(g2) | 0;
          c[b2 + 8 >> 2] = f2;
          c[b2 >> 2] = g2 | 1;
          c[b2 + 4 >> 2] = e2;
          b2 = f2;
        }
        ik(b2 | 0, d2 | 0, e2 | 0) | 0;
        a[b2 + e2 >> 0] = 0;
        return;
      }
      function bk(b2) {
        b2 = b2 | 0;
        if (a[b2 >> 0] & 1)
          Lh(c[b2 + 8 >> 2] | 0);
        return;
      }
      function ck() {
      }
      function dk(a2, b2, c2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        d2 = b2 - d2 - (c2 >>> 0 > a2 >>> 0 | 0) >>> 0;
        return (D = d2, a2 - c2 >>> 0 | 0) | 0;
      }
      function ek(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, h2 = 0, i3 = 0;
        f2 = b2 + e2 | 0;
        if ((e2 | 0) >= 20) {
          d2 = d2 & 255;
          h2 = b2 & 3;
          i3 = d2 | d2 << 8 | d2 << 16 | d2 << 24;
          g2 = f2 & ~3;
          if (h2) {
            h2 = b2 + 4 - h2 | 0;
            while ((b2 | 0) < (h2 | 0)) {
              a[b2 >> 0] = d2;
              b2 = b2 + 1 | 0;
            }
          }
          while ((b2 | 0) < (g2 | 0)) {
            c[b2 >> 2] = i3;
            b2 = b2 + 4 | 0;
          }
        }
        while ((b2 | 0) < (f2 | 0)) {
          a[b2 >> 0] = d2;
          b2 = b2 + 1 | 0;
        }
        return b2 - e2 | 0;
      }
      function fk(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        if ((c2 | 0) < 32) {
          D = b2 << c2 | (a2 & (1 << c2) - 1 << 32 - c2) >>> 32 - c2;
          return a2 << c2;
        }
        D = a2 << c2 - 32;
        return 0;
      }
      function gk(a2, b2, c2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        c2 = a2 + c2 >>> 0;
        return (D = b2 + d2 + (c2 >>> 0 < a2 >>> 0 | 0) >>> 0, c2 | 0) | 0;
      }
      function hk(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        if ((c2 | 0) < 32) {
          D = b2 >>> c2;
          return a2 >>> c2 | (b2 & (1 << c2) - 1) << 32 - c2;
        }
        D = 0;
        return b2 >>> c2 - 32 | 0;
      }
      function ik(b2, d2, e2) {
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0;
        if ((e2 | 0) >= 4096)
          return Xa(b2 | 0, d2 | 0, e2 | 0) | 0;
        f2 = b2 | 0;
        if ((b2 & 3) == (d2 & 3)) {
          while (b2 & 3) {
            if (!e2)
              return f2 | 0;
            a[b2 >> 0] = a[d2 >> 0] | 0;
            b2 = b2 + 1 | 0;
            d2 = d2 + 1 | 0;
            e2 = e2 - 1 | 0;
          }
          while ((e2 | 0) >= 4) {
            c[b2 >> 2] = c[d2 >> 2];
            b2 = b2 + 4 | 0;
            d2 = d2 + 4 | 0;
            e2 = e2 - 4 | 0;
          }
        }
        while ((e2 | 0) > 0) {
          a[b2 >> 0] = a[d2 >> 0] | 0;
          b2 = b2 + 1 | 0;
          d2 = d2 + 1 | 0;
          e2 = e2 - 1 | 0;
        }
        return f2 | 0;
      }
      function jk(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        if ((c2 | 0) < 32) {
          D = b2 >> c2;
          return a2 >>> c2 | (b2 & (1 << c2) - 1) << 32 - c2;
        }
        D = (b2 | 0) < 0 ? -1 : 0;
        return b2 >> c2 - 32 | 0;
      }
      function kk(b2) {
        b2 = b2 | 0;
        var c2 = 0;
        c2 = a[m + (b2 & 255) >> 0] | 0;
        if ((c2 | 0) < 8)
          return c2 | 0;
        c2 = a[m + (b2 >> 8 & 255) >> 0] | 0;
        if ((c2 | 0) < 8)
          return c2 + 8 | 0;
        c2 = a[m + (b2 >> 16 & 255) >> 0] | 0;
        if ((c2 | 0) < 8)
          return c2 + 16 | 0;
        return (a[m + (b2 >>> 24) >> 0] | 0) + 24 | 0;
      }
      function lk(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        var c2 = 0, d2 = 0, e2 = 0, f2 = 0;
        f2 = a2 & 65535;
        e2 = b2 & 65535;
        c2 = $(e2, f2) | 0;
        d2 = a2 >>> 16;
        a2 = (c2 >>> 16) + ($(e2, d2) | 0) | 0;
        e2 = b2 >>> 16;
        b2 = $(e2, f2) | 0;
        return (D = (a2 >>> 16) + ($(e2, d2) | 0) + (((a2 & 65535) + b2 | 0) >>> 16) | 0, a2 + b2 << 16 | c2 & 65535 | 0) | 0;
      }
      function mk(a2, b2, c2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i3 = 0, j2 = 0;
        j2 = b2 >> 31 | ((b2 | 0) < 0 ? -1 : 0) << 1;
        i3 = ((b2 | 0) < 0 ? -1 : 0) >> 31 | ((b2 | 0) < 0 ? -1 : 0) << 1;
        f2 = d2 >> 31 | ((d2 | 0) < 0 ? -1 : 0) << 1;
        e2 = ((d2 | 0) < 0 ? -1 : 0) >> 31 | ((d2 | 0) < 0 ? -1 : 0) << 1;
        h2 = dk(j2 ^ a2, i3 ^ b2, j2, i3) | 0;
        g2 = D;
        a2 = f2 ^ j2;
        b2 = e2 ^ i3;
        return dk((rk(h2, g2, dk(f2 ^ c2, e2 ^ d2, f2, e2) | 0, D, 0) | 0) ^ a2, D ^ b2, a2, b2) | 0;
      }
      function nk(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
        f2 = i2;
        i2 = i2 + 16 | 0;
        j2 = f2 | 0;
        h2 = b2 >> 31 | ((b2 | 0) < 0 ? -1 : 0) << 1;
        g2 = ((b2 | 0) < 0 ? -1 : 0) >> 31 | ((b2 | 0) < 0 ? -1 : 0) << 1;
        l2 = e2 >> 31 | ((e2 | 0) < 0 ? -1 : 0) << 1;
        k2 = ((e2 | 0) < 0 ? -1 : 0) >> 31 | ((e2 | 0) < 0 ? -1 : 0) << 1;
        a2 = dk(h2 ^ a2, g2 ^ b2, h2, g2) | 0;
        b2 = D;
        rk(a2, b2, dk(l2 ^ d2, k2 ^ e2, l2, k2) | 0, D, j2) | 0;
        e2 = dk(c[j2 >> 2] ^ h2, c[j2 + 4 >> 2] ^ g2, h2, g2) | 0;
        d2 = D;
        i2 = f2;
        return (D = d2, e2) | 0;
      }
      function ok(a2, b2, c2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        var e2 = 0, f2 = 0;
        e2 = a2;
        f2 = c2;
        c2 = lk(e2, f2) | 0;
        a2 = D;
        return (D = ($(b2, f2) | 0) + ($(d2, e2) | 0) + a2 | a2 & 0, c2 | 0 | 0) | 0;
      }
      function pk(a2, b2, c2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        return rk(a2, b2, c2, d2, 0) | 0;
      }
      function qk(a2, b2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        var f2 = 0, g2 = 0;
        g2 = i2;
        i2 = i2 + 16 | 0;
        f2 = g2 | 0;
        rk(a2, b2, d2, e2, f2) | 0;
        i2 = g2;
        return (D = c[f2 + 4 >> 2] | 0, c[f2 >> 2] | 0) | 0;
      }
      function rk(a2, b2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        var g2 = 0, h2 = 0, i3 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
        l2 = a2;
        j2 = b2;
        k2 = j2;
        h2 = d2;
        n2 = e2;
        i3 = n2;
        if (!k2) {
          g2 = (f2 | 0) != 0;
          if (!i3) {
            if (g2) {
              c[f2 >> 2] = (l2 >>> 0) % (h2 >>> 0);
              c[f2 + 4 >> 2] = 0;
            }
            n2 = 0;
            f2 = (l2 >>> 0) / (h2 >>> 0) >>> 0;
            return (D = n2, f2) | 0;
          } else {
            if (!g2) {
              n2 = 0;
              f2 = 0;
              return (D = n2, f2) | 0;
            }
            c[f2 >> 2] = a2 | 0;
            c[f2 + 4 >> 2] = b2 & 0;
            n2 = 0;
            f2 = 0;
            return (D = n2, f2) | 0;
          }
        }
        g2 = (i3 | 0) == 0;
        do {
          if (h2) {
            if (!g2) {
              g2 = (ba(i3 | 0) | 0) - (ba(k2 | 0) | 0) | 0;
              if (g2 >>> 0 <= 31) {
                m2 = g2 + 1 | 0;
                i3 = 31 - g2 | 0;
                b2 = g2 - 31 >> 31;
                h2 = m2;
                a2 = l2 >>> (m2 >>> 0) & b2 | k2 << i3;
                b2 = k2 >>> (m2 >>> 0) & b2;
                g2 = 0;
                i3 = l2 << i3;
                break;
              }
              if (!f2) {
                n2 = 0;
                f2 = 0;
                return (D = n2, f2) | 0;
              }
              c[f2 >> 2] = a2 | 0;
              c[f2 + 4 >> 2] = j2 | b2 & 0;
              n2 = 0;
              f2 = 0;
              return (D = n2, f2) | 0;
            }
            g2 = h2 - 1 | 0;
            if (g2 & h2) {
              i3 = (ba(h2 | 0) | 0) + 33 - (ba(k2 | 0) | 0) | 0;
              p2 = 64 - i3 | 0;
              m2 = 32 - i3 | 0;
              j2 = m2 >> 31;
              o2 = i3 - 32 | 0;
              b2 = o2 >> 31;
              h2 = i3;
              a2 = m2 - 1 >> 31 & k2 >>> (o2 >>> 0) | (k2 << m2 | l2 >>> (i3 >>> 0)) & b2;
              b2 = b2 & k2 >>> (i3 >>> 0);
              g2 = l2 << p2 & j2;
              i3 = (k2 << p2 | l2 >>> (o2 >>> 0)) & j2 | l2 << m2 & i3 - 33 >> 31;
              break;
            }
            if (f2) {
              c[f2 >> 2] = g2 & l2;
              c[f2 + 4 >> 2] = 0;
            }
            if ((h2 | 0) == 1) {
              o2 = j2 | b2 & 0;
              p2 = a2 | 0 | 0;
              return (D = o2, p2) | 0;
            } else {
              p2 = kk(h2 | 0) | 0;
              o2 = k2 >>> (p2 >>> 0) | 0;
              p2 = k2 << 32 - p2 | l2 >>> (p2 >>> 0) | 0;
              return (D = o2, p2) | 0;
            }
          } else {
            if (g2) {
              if (f2) {
                c[f2 >> 2] = (k2 >>> 0) % (h2 >>> 0);
                c[f2 + 4 >> 2] = 0;
              }
              o2 = 0;
              p2 = (k2 >>> 0) / (h2 >>> 0) >>> 0;
              return (D = o2, p2) | 0;
            }
            if (!l2) {
              if (f2) {
                c[f2 >> 2] = 0;
                c[f2 + 4 >> 2] = (k2 >>> 0) % (i3 >>> 0);
              }
              o2 = 0;
              p2 = (k2 >>> 0) / (i3 >>> 0) >>> 0;
              return (D = o2, p2) | 0;
            }
            g2 = i3 - 1 | 0;
            if (!(g2 & i3)) {
              if (f2) {
                c[f2 >> 2] = a2 | 0;
                c[f2 + 4 >> 2] = g2 & k2 | b2 & 0;
              }
              o2 = 0;
              p2 = k2 >>> ((kk(i3 | 0) | 0) >>> 0);
              return (D = o2, p2) | 0;
            }
            g2 = (ba(i3 | 0) | 0) - (ba(k2 | 0) | 0) | 0;
            if (g2 >>> 0 <= 30) {
              b2 = g2 + 1 | 0;
              i3 = 31 - g2 | 0;
              h2 = b2;
              a2 = k2 << i3 | l2 >>> (b2 >>> 0);
              b2 = k2 >>> (b2 >>> 0);
              g2 = 0;
              i3 = l2 << i3;
              break;
            }
            if (!f2) {
              o2 = 0;
              p2 = 0;
              return (D = o2, p2) | 0;
            }
            c[f2 >> 2] = a2 | 0;
            c[f2 + 4 >> 2] = j2 | b2 & 0;
            o2 = 0;
            p2 = 0;
            return (D = o2, p2) | 0;
          }
        } while (0);
        if (!h2) {
          k2 = i3;
          j2 = 0;
          i3 = 0;
        } else {
          m2 = d2 | 0 | 0;
          l2 = n2 | e2 & 0;
          k2 = gk(m2 | 0, l2 | 0, -1, -1) | 0;
          d2 = D;
          j2 = i3;
          i3 = 0;
          do {
            e2 = j2;
            j2 = g2 >>> 31 | j2 << 1;
            g2 = i3 | g2 << 1;
            e2 = a2 << 1 | e2 >>> 31 | 0;
            n2 = a2 >>> 31 | b2 << 1 | 0;
            dk(k2, d2, e2, n2) | 0;
            p2 = D;
            o2 = p2 >> 31 | ((p2 | 0) < 0 ? -1 : 0) << 1;
            i3 = o2 & 1;
            a2 = dk(e2, n2, o2 & m2, (((p2 | 0) < 0 ? -1 : 0) >> 31 | ((p2 | 0) < 0 ? -1 : 0) << 1) & l2) | 0;
            b2 = D;
            h2 = h2 - 1 | 0;
          } while ((h2 | 0) != 0);
          k2 = j2;
          j2 = 0;
        }
        h2 = 0;
        if (f2) {
          c[f2 >> 2] = a2;
          c[f2 + 4 >> 2] = b2;
        }
        o2 = (g2 | 0) >>> 31 | (k2 | h2) << 1 | (h2 << 1 | g2 >>> 31) & 0 | j2;
        p2 = (g2 << 1 | 0 >>> 31) & -2 | i3;
        return (D = o2, p2) | 0;
      }
      function sk(a2, b2, c2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        return Qb[a2 & 15](b2 | 0, c2 | 0, d2 | 0) | 0;
      }
      function tk(a2, b2, c2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        Rb[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0);
      }
      function uk(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        return +Sb[a2 & 1](b2 | 0, c2 | 0);
      }
      function vk(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = +c2;
        Tb[a2 & 3](b2 | 0, +c2);
      }
      function wk(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        return +Ub[a2 & 3](b2 | 0);
      }
      function xk(a2) {
        a2 = a2 | 0;
        return Vb[a2 & 1]() | 0;
      }
      function yk(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        Wb[a2 & 15](b2 | 0);
      }
      function zk(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        Xb[a2 & 7](b2 | 0, c2 | 0);
      }
      function Ak(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        return Yb[a2 & 31](b2 | 0) | 0;
      }
      function Bk(a2, b2, c2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        Zb[a2 & 1](b2 | 0, c2 | 0, d2 | 0);
      }
      function Ck(a2) {
        a2 = a2 | 0;
        _b[a2 & 0]();
      }
      function Dk(a2, b2, c2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = +d2;
        $b[a2 & 3](b2 | 0, c2 | 0, +d2);
      }
      function Ek(a2, b2, c2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        return ac[a2 & 1](b2 | 0, c2 | 0, d2 | 0, e2 | 0) | 0;
      }
      function Fk(a2, b2, c2, d2, e2, f2, g2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        g2 = g2 | 0;
        bc[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0);
      }
      function Gk(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        return cc[a2 & 15](b2 | 0, c2 | 0) | 0;
      }
      function Hk(a2, b2, c2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        dc[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0);
      }
      function Ik(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        ca(0);
        return 0;
      }
      function Jk(a2, b2, c2, d2, e2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        ca(1);
      }
      function Kk(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        ca(2);
        return 0;
      }
      function Lk(a2, b2) {
        a2 = a2 | 0;
        b2 = +b2;
        ca(3);
      }
      function Mk(a2) {
        a2 = a2 | 0;
        ca(4);
        return 0;
      }
      function Nk() {
        ca(5);
        return 0;
      }
      function Ok(a2) {
        a2 = a2 | 0;
        ca(6);
      }
      function Pk(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        ca(7);
      }
      function Qk(a2) {
        a2 = a2 | 0;
        ca(8);
        return 0;
      }
      function Rk(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        ca(9);
      }
      function Sk() {
        ca(10);
      }
      function Tk(a2, b2, c2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = +c2;
        ca(11);
      }
      function Uk(a2, b2, c2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        ca(12);
        return 0;
      }
      function Vk(a2, b2, c2, d2, e2, f2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        e2 = e2 | 0;
        f2 = f2 | 0;
        ca(13);
      }
      function Wk(a2, b2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        ca(14);
        return 0;
      }
      function Xk(a2, b2, c2, d2) {
        a2 = a2 | 0;
        b2 = b2 | 0;
        c2 = c2 | 0;
        d2 = d2 | 0;
        ca(15);
      }
      var Qb = [Ik, Zh, _h, Qj, Qi, Pi, Ri, Ag, sg, qg, rg, yg, kh, jh, Oi, Mj];
      var Rb = [Jk, ki, ji, gi];
      var Sb = [Kk, dh];
      var Tb = [Lk, Wf, Yf, ag];
      var Ub = [Mk, Xf, Zf, bg];
      var Vb = [Nk, Nf];
      var Wb = [Ok, Mh, Nh, Sh, Vh, Th, Uh, Wh, Xh, Yh, Mf, Xg, Yg, Ij, Jj, Ok];
      var Xb = [Pk, ig, gg, _f, cg, eg, ng, gh];
      var Yb = [Qk, Oh, Ni, Pf, Vf, Qf, wg, xg, mg, lg, jg, hg, $f, dg, fg, og, fh, Qk, Qk, Qk, Qk, Qk, Qk, Qk, Qk, Qk, Qk, Qk, Qk, Qk, Qk, Qk];
      var Zb = [Rk, ch];
      var _b = [Sk];
      var $b = [Tk, eh, bh, Tk];
      var ac = [Uk, mh];
      var bc = [Vk, ni, mi, li];
      var cc = [Wk, Df, Sf, Tf, Uf, tg, vg, ug, zg, kg, lh, hh, Wk, Wk, Wk, Wk];
      var dc = [Xk, ai, bi, di];
      return { _i64Subtract: dk, _fflush: Yi, _i64Add: gk, _memset: ek, _malloc: Uj, _memcpy: ik, ___getTypeName: Ah, _bitshift64Lshr: hk, _free: Vj, ___errno_location: qi, _bitshift64Shl: fk, __GLOBAL__sub_I_ARToolKitJS_cpp: Wg, __GLOBAL__sub_I_bind_cpp: Ch, runPostSets: ck, stackAlloc: ec, stackSave: fc, stackRestore: gc, establishStackSpace: hc, setThrew: ic, setTempRet0: lc, getTempRet0: mc, dynCall_iiii: sk, dynCall_viiiii: tk, dynCall_dii: uk, dynCall_vid: vk, dynCall_di: wk, dynCall_i: xk, dynCall_vi: yk, dynCall_vii: zk, dynCall_ii: Ak, dynCall_viii: Bk, dynCall_v: Ck, dynCall_viid: Dk, dynCall_iiiii: Ek, dynCall_viiiiii: Fk, dynCall_iii: Gk, dynCall_viiii: Hk };
    }(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
    var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
    var __GLOBAL__sub_I_bind_cpp = Module["__GLOBAL__sub_I_bind_cpp"] = asm["__GLOBAL__sub_I_bind_cpp"];
    var _fflush = Module["_fflush"] = asm["_fflush"];
    var __GLOBAL__sub_I_ARToolKitJS_cpp = Module["__GLOBAL__sub_I_ARToolKitJS_cpp"] = asm["__GLOBAL__sub_I_ARToolKitJS_cpp"];
    var _i64Add = Module["_i64Add"] = asm["_i64Add"];
    var _memset = Module["_memset"] = asm["_memset"];
    var runPostSets = Module["runPostSets"] = asm["runPostSets"];
    var _malloc = Module["_malloc"] = asm["_malloc"];
    var _memcpy = Module["_memcpy"] = asm["_memcpy"];
    var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];
    var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
    var _free = Module["_free"] = asm["_free"];
    var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
    var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
    var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
    var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
    var dynCall_dii = Module["dynCall_dii"] = asm["dynCall_dii"];
    var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
    var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
    var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
    var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
    var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
    var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
    var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
    var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
    var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
    var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
    var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
    var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
    var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
    Runtime.stackAlloc = asm["stackAlloc"];
    Runtime.stackSave = asm["stackSave"];
    Runtime.stackRestore = asm["stackRestore"];
    Runtime.establishStackSpace = asm["establishStackSpace"];
    Runtime.setTempRet0 = asm["setTempRet0"];
    Runtime.getTempRet0 = asm["getTempRet0"];
    function ExitStatus(status) {
      this.name = "ExitStatus";
      this.message = "Program terminated with exit(" + status + ")";
      this.status = status;
    }
    ExitStatus.prototype = new Error();
    ExitStatus.prototype.constructor = ExitStatus;
    var initialStackTop;
    var preloadStartTime = null;
    var calledMain = false;
    dependenciesFulfilled = function runCaller() {
      if (!Module["calledRun"])
        run();
      if (!Module["calledRun"])
        dependenciesFulfilled = runCaller;
    };
    Module["callMain"] = Module.callMain = function callMain(args) {
      assert(runDependencies == 0, "cannot call main when async dependencies remain! (listen on __ATMAIN__)");
      assert(__ATPRERUN__.length == 0, "cannot call main when preRun functions remain to be called");
      args = args || [];
      ensureInitRuntime();
      var argc = args.length + 1;
      function pad() {
        for (var i3 = 0; i3 < 4 - 1; i3++) {
          argv.push(0);
        }
      }
      var argv = [allocate(intArrayFromString(Module["thisProgram"]), "i8", ALLOC_NORMAL)];
      pad();
      for (var i2 = 0; i2 < argc - 1; i2 = i2 + 1) {
        argv.push(allocate(intArrayFromString(args[i2]), "i8", ALLOC_NORMAL));
        pad();
      }
      argv.push(0);
      argv = allocate(argv, "i32", ALLOC_NORMAL);
      try {
        var ret = Module["_main"](argc, argv, 0);
        exit(ret, true);
      } catch (e) {
        if (e instanceof ExitStatus) {
          return;
        } else if (e == "SimulateInfiniteLoop") {
          Module["noExitRuntime"] = true;
          return;
        } else {
          if (e && typeof e === "object" && e.stack)
            Module.printErr("exception thrown: " + [e, e.stack]);
          throw e;
        }
      } finally {
        calledMain = true;
      }
    };
    function run(args) {
      args = args || Module["arguments"];
      if (preloadStartTime === null)
        preloadStartTime = Date.now();
      if (runDependencies > 0) {
        return;
      }
      preRun();
      if (runDependencies > 0)
        return;
      if (Module["calledRun"])
        return;
      function doRun() {
        if (Module["calledRun"])
          return;
        Module["calledRun"] = true;
        if (ABORT)
          return;
        ensureInitRuntime();
        preMain();
        if (Module["onRuntimeInitialized"])
          Module["onRuntimeInitialized"]();
        if (Module["_main"] && shouldRunNow)
          Module["callMain"](args);
        postRun();
      }
      if (Module["setStatus"]) {
        Module["setStatus"]("Running...");
        setTimeout(function() {
          setTimeout(function() {
            Module["setStatus"]("");
          }, 1);
          doRun();
        }, 1);
      } else {
        doRun();
      }
    }
    Module["run"] = Module.run = run;
    function exit(status, implicit) {
      if (implicit && Module["noExitRuntime"]) {
        return;
      }
      if (Module["noExitRuntime"]) {
      } else {
        ABORT = true;
        EXITSTATUS = status;
        STACKTOP = initialStackTop;
        exitRuntime();
        if (Module["onExit"])
          Module["onExit"](status);
      }
      if (ENVIRONMENT_IS_NODE) {
        process["stdout"]["once"]("drain", function() {
          process["exit"](status);
        });
        console.log(" ");
        setTimeout(function() {
          process["exit"](status);
        }, 500);
      } else if (ENVIRONMENT_IS_SHELL && typeof quit === "function") {
        quit(status);
      }
      throw new ExitStatus(status);
    }
    Module["exit"] = Module.exit = exit;
    var abortDecorators = [];
    function abort(what) {
      if (what !== void 0) {
        Module.print(what);
        Module.printErr(what);
        what = JSON.stringify(what);
      } else {
        what = "";
      }
      ABORT = true;
      EXITSTATUS = 1;
      var extra = "\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";
      var output = "abort(" + what + ") at " + stackTrace() + extra;
      if (abortDecorators) {
        abortDecorators.forEach(function(decorator) {
          output = decorator(output, what);
        });
      }
      throw output;
    }
    Module["abort"] = Module.abort = abort;
    if (Module["preInit"]) {
      if (typeof Module["preInit"] == "function")
        Module["preInit"] = [Module["preInit"]];
      while (Module["preInit"].length > 0) {
        Module["preInit"].pop()();
      }
    }
    var shouldRunNow = true;
    if (Module["noInitialRun"]) {
      shouldRunNow = false;
    }
    run();
    (function() {
      "use strict";
      var ARController2 = function(width, height, camera) {
        var id;
        var w = width, h = height;
        this.orientation = "landscape";
        this.listeners = {};
        if (typeof width !== "number") {
          var image = width;
          camera = height;
          w = image.videoWidth || image.width;
          h = image.videoHeight || image.height;
          this.image = image;
        }
        this.defaultMarkerWidth = 1;
        this.patternMarkers = {};
        this.barcodeMarkers = {};
        this.transform_mat = new Float32Array(16);
        this.canvas = document.createElement("canvas");
        this.canvas.width = w;
        this.canvas.height = h;
        this.ctx = this.canvas.getContext("2d");
        this.videoWidth = w;
        this.videoHeight = h;
        if (typeof camera === "string") {
          var self = this;
          this.cameraParam = new ARCameraParam2(camera, function() {
            self._initialize();
          }, function(err) {
            console.error("ARController: Failed to load ARCameraParam", err);
          });
        } else {
          this.cameraParam = camera;
          this._initialize();
        }
      };
      ARController2.prototype.dispose = function() {
        artoolkit2.teardown(this.id);
        for (var t in this) {
          this[t] = null;
        }
      };
      ARController2.prototype.process = function(image) {
        this.detectMarker(image);
        var markerNum = this.getMarkerNum();
        var k, o;
        for (k in this.patternMarkers) {
          o = this.patternMarkers[k];
          o.inPrevious = o.inCurrent;
          o.inCurrent = false;
        }
        for (k in this.barcodeMarkers) {
          o = this.barcodeMarkers[k];
          o.inPrevious = o.inCurrent;
          o.inCurrent = false;
        }
        for (var i2 = 0; i2 < markerNum; i2++) {
          var markerInfo = this.getMarker(i2);
          var markerType = artoolkit2.UNKNOWN_MARKER;
          var visible = this.trackPatternMarkerId(-1);
          if (markerInfo.idPatt > -1 && (markerInfo.id === markerInfo.idPatt || markerInfo.idMatrix === -1)) {
            visible = this.trackPatternMarkerId(markerInfo.idPatt);
            markerType = artoolkit2.PATTERN_MARKER;
            if (markerInfo.dir !== markerInfo.dirPatt) {
              this.setMarkerInfoDir(i2, markerInfo.dirPatt);
            }
          } else if (markerInfo.idMatrix > -1) {
            visible = this.trackBarcodeMarkerId(markerInfo.idMatrix);
            markerType = artoolkit2.BARCODE_MARKER;
            if (markerInfo.dir !== markerInfo.dirMatrix) {
              this.setMarkerInfoDir(i2, markerInfo.dirMatrix);
            }
          }
          if (markerType !== artoolkit2.UNKNOWN_MARKER && visible.inPrevious) {
            this.getTransMatSquareCont(i2, visible.markerWidth, visible.matrix, visible.matrix);
          } else {
            this.getTransMatSquare(i2, visible.markerWidth, visible.matrix);
          }
          visible.inCurrent = true;
          this.transMatToGLMat(visible.matrix, this.transform_mat);
          this.dispatchEvent({ name: "getMarker", target: this, data: { index: i2, type: markerType, marker: markerInfo, matrix: this.transform_mat } });
        }
        var multiMarkerCount = this.getMultiMarkerCount();
        for (var i2 = 0; i2 < multiMarkerCount; i2++) {
          var subMarkerCount = this.getMultiMarkerPatternCount(i2);
          var visible = false;
          artoolkit2.getTransMatMultiSquareRobust(this.id, i2);
          this.transMatToGLMat(this.marker_transform_mat, this.transform_mat);
          for (var j = 0; j < subMarkerCount; j++) {
            var multiEachMarkerInfo = this.getMultiEachMarker(i2, j);
            if (multiEachMarkerInfo.visible >= 0) {
              visible = true;
              this.dispatchEvent({ name: "getMultiMarker", target: this, data: { multiMarkerId: i2, matrix: this.transform_mat } });
              break;
            }
          }
          if (visible) {
            for (var j = 0; j < subMarkerCount; j++) {
              var multiEachMarkerInfo = this.getMultiEachMarker(i2, j);
              this.transMatToGLMat(this.marker_transform_mat, this.transform_mat);
              this.dispatchEvent({ name: "getMultiMarkerSub", target: this, data: { multiMarkerId: i2, markerIndex: j, marker: multiEachMarkerInfo, matrix: this.transform_mat } });
            }
          }
        }
        if (this._bwpointer) {
          this.debugDraw();
        }
      };
      ARController2.prototype.trackPatternMarkerId = function(id, markerWidth) {
        var obj = this.patternMarkers[id];
        if (!obj) {
          this.patternMarkers[id] = obj = { inPrevious: false, inCurrent: false, matrix: new Float32Array(12), markerWidth: markerWidth || this.defaultMarkerWidth };
        }
        if (markerWidth) {
          obj.markerWidth = markerWidth;
        }
        return obj;
      };
      ARController2.prototype.trackBarcodeMarkerId = function(id, markerWidth) {
        var obj = this.barcodeMarkers[id];
        if (!obj) {
          this.barcodeMarkers[id] = obj = { inPrevious: false, inCurrent: false, matrix: new Float32Array(12), markerWidth: markerWidth || this.defaultMarkerWidth };
        }
        if (markerWidth) {
          obj.markerWidth = markerWidth;
        }
        return obj;
      };
      ARController2.prototype.getMultiMarkerCount = function() {
        return artoolkit2.getMultiMarkerCount(this.id);
      };
      ARController2.prototype.getMultiMarkerPatternCount = function(multiMarkerId) {
        return artoolkit2.getMultiMarkerNum(this.id, multiMarkerId);
      };
      ARController2.prototype.addEventListener = function(name, callback) {
        if (!this.listeners[name]) {
          this.listeners[name] = [];
        }
        this.listeners[name].push(callback);
      };
      ARController2.prototype.removeEventListener = function(name, callback) {
        if (this.listeners[name]) {
          var index = this.listeners[name].indexOf(callback);
          if (index > -1) {
            this.listeners[name].splice(index, 1);
          }
        }
      };
      ARController2.prototype.dispatchEvent = function(event) {
        var listeners = this.listeners[event.name];
        if (listeners) {
          for (var i2 = 0; i2 < listeners.length; i2++) {
            listeners[i2].call(this, event);
          }
        }
      };
      ARController2.prototype.debugSetup = function() {
        document.body.appendChild(this.canvas);
        this.setDebugMode(1);
        this._bwpointer = this.getProcessingImage();
      };
      ARController2.prototype.loadMarker = function(markerURL, onSuccess, onError) {
        return artoolkit2.addMarker(this.id, markerURL, onSuccess, onError);
      };
      ARController2.prototype.loadMultiMarker = function(markerURL, onSuccess, onError) {
        return artoolkit2.addMultiMarker(this.id, markerURL, onSuccess, onError);
      };
      ARController2.prototype.getTransMatSquare = function(markerIndex, markerWidth, dst) {
        artoolkit2.getTransMatSquare(this.id, markerIndex, markerWidth);
        dst.set(this.marker_transform_mat);
        return dst;
      };
      ARController2.prototype.getTransMatSquareCont = function(markerIndex, markerWidth, previousMarkerTransform, dst) {
        this.marker_transform_mat.set(previousMarkerTransform);
        artoolkit2.getTransMatSquareCont(this.id, markerIndex, markerWidth);
        dst.set(this.marker_transform_mat);
        return dst;
      };
      ARController2.prototype.getTransMatMultiSquare = function(multiMarkerId, dst) {
        artoolkit2.getTransMatMultiSquare(this.id, multiMarkerId);
        dst.set(this.marker_transform_mat);
        return dst;
      };
      ARController2.prototype.getTransMatMultiSquareRobust = function(multiMarkerId, dst) {
        artoolkit2.getTransMatMultiSquare(this.id, multiMarkerId);
        dst.set(this.marker_transform_mat);
        return dst;
      };
      ARController2.prototype.transMatToGLMat = function(transMat, glMat, scale) {
        glMat[0 + 0 * 4] = transMat[0];
        glMat[0 + 1 * 4] = transMat[1];
        glMat[0 + 2 * 4] = transMat[2];
        glMat[0 + 3 * 4] = transMat[3];
        glMat[1 + 0 * 4] = transMat[4];
        glMat[1 + 1 * 4] = transMat[5];
        glMat[1 + 2 * 4] = transMat[6];
        glMat[1 + 3 * 4] = transMat[7];
        glMat[2 + 0 * 4] = transMat[8];
        glMat[2 + 1 * 4] = transMat[9];
        glMat[2 + 2 * 4] = transMat[10];
        glMat[2 + 3 * 4] = transMat[11];
        glMat[3 + 0 * 4] = 0;
        glMat[3 + 1 * 4] = 0;
        glMat[3 + 2 * 4] = 0;
        glMat[3 + 3 * 4] = 1;
        if (scale != void 0 && scale !== 0) {
          glMat[12] *= scale;
          glMat[13] *= scale;
          glMat[14] *= scale;
        }
        return glMat;
      };
      ARController2.prototype.detectMarker = function(image) {
        if (this._copyImageToHeap(image)) {
          return artoolkit2.detectMarker(this.id);
        }
        return -99;
      };
      ARController2.prototype.getMarkerNum = function() {
        return artoolkit2.getMarkerNum(this.id);
      };
      ARController2.prototype.getMarker = function(markerIndex) {
        if (0 === artoolkit2.getMarker(this.id, markerIndex)) {
          return artoolkit2.markerInfo;
        }
      };
      ARController2.prototype.setMarkerInfoVertex = function(markerIndex, vertexData) {
        for (var i2 = 0; i2 < vertexData.length; i2++) {
          this.marker_transform_mat[i2 * 2 + 0] = vertexData[i2][0];
          this.marker_transform_mat[i2 * 2 + 1] = vertexData[i2][1];
        }
        return artoolkit2.setMarkerInfoVertex(this.id, markerIndex);
      };
      ARController2.prototype.cloneMarkerInfo = function(markerInfo) {
        return JSON.parse(JSON.stringify(markerInfo));
      };
      ARController2.prototype.getMultiEachMarker = function(multiMarkerId, markerIndex) {
        if (0 === artoolkit2.getMultiEachMarker(this.id, multiMarkerId, markerIndex)) {
          return artoolkit2.multiEachMarkerInfo;
        }
      };
      ARController2.prototype.getTransformationMatrix = function() {
        return this.transform_mat;
      };
      ARController2.prototype.getCameraMatrix = function() {
        return this.camera_mat;
      };
      ARController2.prototype.getMarkerTransformationMatrix = function() {
        return this.marker_transform_mat;
      };
      ARController2.prototype.setDebugMode = function(mode) {
        return artoolkit2.setDebugMode(this.id, mode);
      };
      ARController2.prototype.getDebugMode = function() {
        return artoolkit2.getDebugMode(this.id);
      };
      ARController2.prototype.getProcessingImage = function() {
        return artoolkit2.getProcessingImage(this.id);
      };
      ARController2.prototype.setLogLevel = function(mode) {
        return artoolkit2.setLogLevel(mode);
      };
      ARController2.prototype.getLogLevel = function() {
        return artoolkit2.getLogLevel();
      };
      ARController2.prototype.setMarkerInfoDir = function(markerIndex, dir) {
        return artoolkit2.setMarkerInfoDir(this.id, markerIndex, dir);
      };
      ARController2.prototype.setProjectionNearPlane = function(value) {
        return artoolkit2.setProjectionNearPlane(this.id, value);
      };
      ARController2.prototype.getProjectionNearPlane = function() {
        return artoolkit2.getProjectionNearPlane(this.id);
      };
      ARController2.prototype.setProjectionFarPlane = function(value) {
        return artoolkit2.setProjectionFarPlane(this.id, value);
      };
      ARController2.prototype.getProjectionFarPlane = function() {
        return artoolkit2.getProjectionFarPlane(this.id);
      };
      ARController2.prototype.setThresholdMode = function(mode) {
        return artoolkit2.setThresholdMode(this.id, mode);
      };
      ARController2.prototype.getThresholdMode = function() {
        return artoolkit2.getThresholdMode(this.id);
      };
      ARController2.prototype.setThreshold = function(threshold) {
        return artoolkit2.setThreshold(this.id, threshold);
      };
      ARController2.prototype.getThreshold = function() {
        return artoolkit2.getThreshold(this.id);
      };
      ARController2.prototype.setPatternDetectionMode = function(value) {
        return artoolkit2.setPatternDetectionMode(this.id, value);
      };
      ARController2.prototype.getPatternDetectionMode = function() {
        return artoolkit2.getPatternDetectionMode(this.id);
      };
      ARController2.prototype.setMatrixCodeType = function(value) {
        return artoolkit2.setMatrixCodeType(this.id, value);
      };
      ARController2.prototype.getMatrixCodeType = function() {
        return artoolkit2.getMatrixCodeType(this.id);
      };
      ARController2.prototype.setLabelingMode = function(value) {
        return artoolkit2.setLabelingMode(this.id, value);
      };
      ARController2.prototype.getLabelingMode = function() {
        return artoolkit2.getLabelingMode(this.id);
      };
      ARController2.prototype.setPattRatio = function(value) {
        return artoolkit2.setPattRatio(this.id, value);
      };
      ARController2.prototype.getPattRatio = function() {
        return artoolkit2.getPattRatio(this.id);
      };
      ARController2.prototype.setImageProcMode = function(value) {
        return artoolkit2.setImageProcMode(this.id, value);
      };
      ARController2.prototype.getImageProcMode = function() {
        return artoolkit2.getImageProcMode(this.id);
      };
      ARController2.prototype.debugDraw = function() {
        var debugBuffer = new Uint8ClampedArray(Module.HEAPU8.buffer, this._bwpointer, this.framesize);
        var id = new ImageData(debugBuffer, this.canvas.width, this.canvas.height);
        this.ctx.putImageData(id, 0, 0);
        var marker_num = this.getMarkerNum();
        for (var i2 = 0; i2 < marker_num; i2++) {
          this._debugMarker(this.getMarker(i2));
        }
      };
      ARController2.prototype._initialize = function() {
        this.id = artoolkit2.setup(this.canvas.width, this.canvas.height, this.cameraParam.id);
        var params = artoolkit2.frameMalloc;
        this.framepointer = params.framepointer;
        this.framesize = params.framesize;
        this.dataHeap = new Uint8Array(Module.HEAPU8.buffer, this.framepointer, this.framesize);
        this.camera_mat = new Float64Array(Module.HEAPU8.buffer, params.camera, 16);
        this.marker_transform_mat = new Float64Array(Module.HEAPU8.buffer, params.transform, 12);
        this.setProjectionNearPlane(0.1);
        this.setProjectionFarPlane(1e3);
        var self = this;
        setTimeout(function() {
          if (self.onload) {
            self.onload();
          }
          self.dispatchEvent({ name: "load", target: self });
        }, 1);
      };
      ARController2.prototype._copyImageToHeap = function(image) {
        if (!image) {
          image = this.image;
        }
        if (image.nodeName === "IMG" && image.width > image.height || image.nodeName === "VIDEO" && image.videoWidth > image.videoHeight) {
          this.ctx.drawImage(image, 0, 0, this.canvas.width, this.canvas.height);
        } else {
          this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
          var scale = this.canvas.height / this.canvas.width;
          var scaledHeight = this.canvas.width * scale;
          var scaledWidth = this.canvas.height * scale;
          var marginLeft = (this.canvas.width - scaledWidth) / 2;
          this.ctx.drawImage(image, marginLeft, 0, scaledWidth, scaledHeight);
        }
        var imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);
        var data = imageData.data;
        if (this.dataHeap) {
          this.dataHeap.set(data);
          return true;
        }
        return false;
      };
      ARController2.prototype._debugMarker = function(marker) {
        var vertex, pos;
        vertex = marker.vertex;
        var ctx = this.ctx;
        ctx.strokeStyle = "red";
        ctx.beginPath();
        ctx.moveTo(vertex[0][0], vertex[0][1]);
        ctx.lineTo(vertex[1][0], vertex[1][1]);
        ctx.stroke();
        ctx.beginPath();
        ctx.moveTo(vertex[2][0], vertex[2][1]);
        ctx.lineTo(vertex[3][0], vertex[3][1]);
        ctx.stroke();
        ctx.strokeStyle = "green";
        ctx.beginPath();
        ctx.lineTo(vertex[1][0], vertex[1][1]);
        ctx.lineTo(vertex[2][0], vertex[2][1]);
        ctx.stroke();
        ctx.beginPath();
        ctx.moveTo(vertex[3][0], vertex[3][1]);
        ctx.lineTo(vertex[0][0], vertex[0][1]);
        ctx.stroke();
        pos = marker.pos;
        ctx.beginPath();
        ctx.arc(pos[0], pos[1], 8, 0, Math.PI * 2);
        ctx.fillStyle = "red";
        ctx.fill();
      };
      ARController2.getUserMedia = function(configuration) {
        var facing = configuration.facingMode || "environment";
        var onSuccess = configuration.onSuccess;
        var onError = configuration.onError || function(err) {
          console.error("ARController.getUserMedia", err);
        };
        var video = document.createElement("video");
        var initProgress = function() {
          if (this.videoWidth !== 0) {
            onSuccess(video);
          }
        };
        var readyToPlay = false;
        var eventNames = ["touchstart", "touchend", "touchmove", "touchcancel", "click", "mousedown", "mouseup", "mousemove", "keydown", "keyup", "keypress", "scroll"];
        var play = function(ev) {
          if (readyToPlay) {
            video.play();
            if (!video.paused) {
              eventNames.forEach(function(eventName) {
                window.removeEventListener(eventName, play, true);
              });
            }
          }
        };
        eventNames.forEach(function(eventName) {
          window.addEventListener(eventName, play, true);
        });
        var success = function(stream) {
          video.addEventListener("loadedmetadata", initProgress, false);
          video.src = window.URL.createObjectURL(stream);
          readyToPlay = true;
          play();
        };
        var constraints = {};
        var mediaDevicesConstraints = {};
        if (configuration.width) {
          mediaDevicesConstraints.width = configuration.width;
          if (typeof configuration.width === "object") {
            if (configuration.width.max) {
              constraints.maxWidth = configuration.width.max;
            }
            if (configuration.width.min) {
              constraints.minWidth = configuration.width.max;
            }
          } else {
            constraints.maxWidth = configuration.width;
          }
        }
        if (configuration.height) {
          mediaDevicesConstraints.height = configuration.height;
          if (typeof configuration.height === "object") {
            if (configuration.height.max) {
              constraints.maxHeight = configuration.height.max;
            }
            if (configuration.height.min) {
              constraints.minHeight = configuration.height.max;
            }
          } else {
            constraints.maxHeight = configuration.height;
          }
        }
        mediaDevicesConstraints.facingMode = facing;
        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;
        var hdConstraints = { audio: false, video: { mandatory: constraints } };
        if (false) {
          if (navigator.mediaDevices) {
            navigator.mediaDevices.getUserMedia({ audio: false, video: mediaDevicesConstraints }).then(success, onError);
          } else {
            MediaStreamTrack.getSources(function(sources) {
              var facingDir = mediaDevicesConstraints.facingMode;
              if (facing && facing.exact) {
                facingDir = facing.exact;
              }
              for (var i2 = 0; i2 < sources.length; i2++) {
                if (sources[i2].kind === "video" && sources[i2].facing === facingDir) {
                  hdConstraints.video.mandatory.sourceId = sources[i2].id;
                  break;
                }
              }
              if (facing && facing.exact && !hdConstraints.video.mandatory.sourceId) {
                onError("Failed to get camera facing the wanted direction");
              } else {
                if (navigator.getUserMedia) {
                  navigator.getUserMedia(hdConstraints, success, onError);
                } else {
                  onError("navigator.getUserMedia is not supported on your browser");
                }
              }
            });
          }
        } else {
          if (navigator.getUserMedia) {
            navigator.getUserMedia(hdConstraints, success, onError);
          } else {
            onError("navigator.getUserMedia is not supported on your browser");
          }
        }
        return video;
      };
      ARController2.getUserMediaARController = function(configuration) {
        var obj = {};
        for (var i2 in configuration) {
          obj[i2] = configuration[i2];
        }
        var onSuccess = configuration.onSuccess;
        var cameraParamURL = configuration.cameraParam;
        obj.onSuccess = function() {
          new ARCameraParam2(cameraParamURL, function() {
            var arCameraParam = this;
            var maxSize = configuration.maxARVideoSize || Math.max(video.videoWidth, video.videoHeight);
            var f = maxSize / Math.max(video.videoWidth, video.videoHeight);
            var w = f * video.videoWidth;
            var h = f * video.videoHeight;
            if (video.videoWidth < video.videoHeight) {
              var tmp = w;
              w = h;
              h = tmp;
            }
            var arController = new ARController2(w, h, arCameraParam);
            arController.image = video;
            if (video.videoWidth < video.videoHeight) {
              arController.orientation = "portrait";
              arController.videoWidth = video.videoHeight;
              arController.videoHeight = video.videoWidth;
            } else {
              arController.orientation = "landscape";
              arController.videoWidth = video.videoWidth;
              arController.videoHeight = video.videoHeight;
            }
            onSuccess(arController, arCameraParam);
          }, function(err) {
            console.error("ARController: Failed to load ARCameraParam", err);
          });
        };
        var video = this.getUserMedia(obj);
        return video;
      };
      var ARCameraParam2 = function(src, onload, onerror) {
        this.id = -1;
        this._src = "";
        this.complete = false;
        this.onload = onload;
        this.onerror = onerror;
        if (src) {
          this.load(src);
        }
      };
      ARCameraParam2.prototype.load = function(src) {
        if (this._src !== "") {
          throw "ARCameraParam: Trying to load camera parameters twice.";
        }
        this._src = src;
        if (src) {
          var self = this;
          artoolkit2.loadCamera(src, function(id) {
            self.id = id;
            self.complete = true;
            self.onload();
          }, function(err) {
            self.onerror(err);
          });
        }
      };
      Object.defineProperty(ARCameraParam2.prototype, "src", { set: function(src) {
        this.load(src);
      }, get: function() {
        return this._src;
      } });
      ARCameraParam2.prototype.dispose = function() {
        if (this.id !== -1) {
          artoolkit2.deleteCamera(this.id);
        }
        this.id = -1;
        this._src = "";
        this.complete = false;
      };
      var artoolkit2 = { UNKNOWN_MARKER: -1, PATTERN_MARKER: 0, BARCODE_MARKER: 1, loadCamera, addMarker, addMultiMarker };
      var FUNCTIONS = ["setup", "teardown", "setLogLevel", "getLogLevel", "setDebugMode", "getDebugMode", "getProcessingImage", "setMarkerInfoDir", "setMarkerInfoVertex", "getTransMatSquare", "getTransMatSquareCont", "getTransMatMultiSquare", "getTransMatMultiSquareRobust", "getMultiMarkerNum", "getMultiMarkerCount", "detectMarker", "getMarkerNum", "getMarker", "getMultiEachMarker", "setProjectionNearPlane", "getProjectionNearPlane", "setProjectionFarPlane", "getProjectionFarPlane", "setThresholdMode", "getThresholdMode", "setThreshold", "getThreshold", "setPatternDetectionMode", "getPatternDetectionMode", "setMatrixCodeType", "getMatrixCodeType", "setLabelingMode", "getLabelingMode", "setPattRatio", "getPattRatio", "setImageProcMode", "getImageProcMode"];
      function runWhenLoaded() {
        FUNCTIONS.forEach(function(n) {
          artoolkit2[n] = Module[n];
        });
        for (var m in Module) {
          if (m.match(/^AR/))
            artoolkit2[m] = Module[m];
        }
      }
      var marker_count = 0;
      function addMarker(arId, url, callback) {
        var filename = "/marker_" + marker_count++;
        ajax(url, filename, function() {
          var id = Module._addMarker(arId, filename);
          if (callback)
            callback(id);
        });
      }
      function bytesToString(array) {
        return String.fromCharCode.apply(String, array);
      }
      function parseMultiFile(bytes) {
        var str = bytesToString(bytes);
        var lines = str.split("\n");
        var files = [];
        var state = 0;
        var markers = 0;
        lines.forEach(function(line) {
          line = line.trim();
          if (!line || line.startsWith("#"))
            return;
          switch (state) {
            case 0:
              markers = +line;
              state = 1;
              return;
            case 1:
              if (!line.match(/^\d+$/)) {
                files.push(line);
              }
            case 2:
            case 3:
            case 4:
              state++;
              return;
            case 5:
              state = 1;
              return;
          }
        });
        return files;
      }
      var multi_marker_count = 0;
      function addMultiMarker(arId, url, callback) {
        var filename = "/multi_marker_" + multi_marker_count++;
        ajax(url, filename, function(bytes) {
          var files = parseMultiFile(bytes);
          function ok() {
            var markerID = Module._addMultiMarker(arId, filename);
            var markerNum = Module.getMultiMarkerNum(arId, markerID);
            if (callback)
              callback(markerID, markerNum);
          }
          if (!files.length)
            return ok();
          var path2 = url.split("/").slice(0, -1).join("/");
          files = files.map(function(file) {
            if (file === "patt.hiro" || file === "patt.kanji" || file === "patt2.hiro" || file === "patt2.kanji") {
              return ["http://127.0.0.1:8080/data/data/" + file, file];
            }
            return [path2 + "/" + file, file];
          });
          ajaxDependencies(files, ok);
        });
      }
      var camera_count = 0;
      function loadCamera(url, callback) {
        var filename = "/camera_param_" + camera_count++;
        var writeCallback = function() {
          var id = Module._loadCamera(filename);
          if (callback)
            callback(id);
        };
        if (typeof url === "object") {
          writeByteArrayToFS(filename, url, writeCallback);
        } else if (url.indexOf("\n") > -1) {
          writeStringToFS(filename, url, writeCallback);
        } else {
          ajax(url, filename, writeCallback);
        }
      }
      function writeStringToFS(target, string, callback) {
        var byteArray = new Uint8Array(string.length);
        for (var i2 = 0; i2 < byteArray.length; i2++) {
          byteArray[i2] = string.charCodeAt(i2) & 255;
        }
        writeByteArrayToFS(target, byteArray, callback);
      }
      function writeByteArrayToFS(target, byteArray, callback) {
        FS.writeFile(target, byteArray, { encoding: "binary" });
        callback(byteArray);
      }
      function ajax(url, target, callback) {
        var oReq = new XMLHttpRequest();
        oReq.open("GET", url, true);
        oReq.responseType = "arraybuffer";
        oReq.onload = function(oEvent) {
          var arrayBuffer = oReq.response;
          var byteArray = new Uint8Array(arrayBuffer);
          writeByteArrayToFS(target, byteArray, callback);
        };
        oReq.send();
      }
      function ajaxDependencies(files, callback) {
        var next = files.pop();
        if (next) {
          ajax(next[0], next[1], function() {
            ajaxDependencies(files, callback);
          });
        } else {
          callback();
        }
      }
      window.artoolkit = artoolkit2;
      window.ARController = ARController2;
      window.ARCameraParam = ARCameraParam2;
      if (window.Module) {
        runWhenLoaded();
      } else {
        window.Module = { onRuntimeInitialized: function() {
          runWhenLoaded();
        } };
      }
    })();
    var THREEx = THREEx || {};
    THREEx.ArBaseControls = function(object3d) {
      this.id = THREEx.ArBaseControls.id++;
      this.object3d = object3d;
      this.object3d.matrixAutoUpdate = false;
      this.object3d.visible = false;
    };
    THREEx.ArBaseControls.id = 0;
    Object.assign(THREEx.ArBaseControls.prototype, THREE.EventDispatcher.prototype);
    THREEx.ArBaseControls.prototype.update = function() {
      console.assert(false, "you need to implement your own update");
    };
    THREEx.ArBaseControls.prototype.name = function() {
      console.assert(false, "you need to implement your own .name()");
      return "Not yet implemented - name()";
    };
    var THREEx = THREEx || {};
    THREEx.ARClickability = function(sourceElement) {
      this._sourceElement = sourceElement;
      var fullWidth = parseInt(sourceElement.style.width);
      var fullHeight = parseInt(sourceElement.style.height);
      this._cameraPicking = new THREE.PerspectiveCamera(42, fullWidth / fullHeight, 0.1, 100);
      console.warn("THREEx.ARClickability works only in modelViewMatrix");
      console.warn("OBSOLETE OBSOLETE! instead use THREEx.HitTestingPlane or THREEx.HitTestingTango");
    };
    THREEx.ARClickability.prototype.onResize = function() {
      var sourceElement = this._sourceElement;
      var cameraPicking = this._cameraPicking;
      var fullWidth = parseInt(sourceElement.style.width);
      var fullHeight = parseInt(sourceElement.style.height);
      cameraPicking.aspect = fullWidth / fullHeight;
      cameraPicking.updateProjectionMatrix();
    };
    THREEx.ARClickability.prototype.computeIntersects = function(domEvent, objects) {
      var sourceElement = this._sourceElement;
      var cameraPicking = this._cameraPicking;
      var eventCoords = new THREE.Vector3();
      eventCoords.x = domEvent.layerX / parseInt(sourceElement.style.width) * 2 - 1;
      eventCoords.y = -(domEvent.layerY / parseInt(sourceElement.style.height)) * 2 + 1;
      var raycaster = new THREE.Raycaster();
      raycaster.setFromCamera(eventCoords, cameraPicking);
      var intersects = raycaster.intersectObjects(objects);
      return intersects;
    };
    THREEx.ARClickability.prototype.update = function() {
    };
    var THREEx = THREEx || {};
    THREEx.ArMarkerCloak = function(videoTexture) {
      var updateInShaderEnabled = true;
      var geometry = new THREE.PlaneGeometry(1.3 + 0.25, 1.85 + 0.25, 1, 8).translate(0, -0.3, 0);
      var material = new THREE.ShaderMaterial({ vertexShader: THREEx.ArMarkerCloak.vertexShader, fragmentShader: THREEx.ArMarkerCloak.fragmentShader, transparent: true, uniforms: { texture: { value: videoTexture }, opacity: { value: 0.5 } }, defines: { updateInShaderEnabled: updateInShaderEnabled ? 1 : 0 } });
      var cloakMesh = new THREE.Mesh(geometry, material);
      cloakMesh.rotation.x = -Math.PI / 2;
      this.object3d = cloakMesh;
      var xMin = -0.65;
      var xMax = 0.65;
      var yMin = 0.65 + 0.1;
      var yMax = 0.95 + 0.1;
      var originalsFaceVertexUvs = [[]];
      for (var faceIndex = 0; faceIndex < cloakMesh.geometry.faces.length; faceIndex++) {
        originalsFaceVertexUvs[0][faceIndex] = [];
        originalsFaceVertexUvs[0][faceIndex][0] = new THREE.Vector2();
        originalsFaceVertexUvs[0][faceIndex][1] = new THREE.Vector2();
        originalsFaceVertexUvs[0][faceIndex][2] = new THREE.Vector2();
      }
      for (var i2 = 0; i2 < cloakMesh.geometry.parameters.heightSegments / 2; i2++) {
        originalsFaceVertexUvs[0][i2 * 4 + 0][0].set(xMin / 2 + 0.5, yMax / 2 + 0.5);
        originalsFaceVertexUvs[0][i2 * 4 + 0][1].set(xMin / 2 + 0.5, yMin / 2 + 0.5);
        originalsFaceVertexUvs[0][i2 * 4 + 0][2].set(xMax / 2 + 0.5, yMax / 2 + 0.5);
        originalsFaceVertexUvs[0][i2 * 4 + 1][0].set(xMin / 2 + 0.5, yMin / 2 + 0.5);
        originalsFaceVertexUvs[0][i2 * 4 + 1][1].set(xMax / 2 + 0.5, yMin / 2 + 0.5);
        originalsFaceVertexUvs[0][i2 * 4 + 1][2].set(xMax / 2 + 0.5, yMax / 2 + 0.5);
        originalsFaceVertexUvs[0][i2 * 4 + 2][0].set(xMin / 2 + 0.5, yMin / 2 + 0.5);
        originalsFaceVertexUvs[0][i2 * 4 + 2][1].set(xMin / 2 + 0.5, yMax / 2 + 0.5);
        originalsFaceVertexUvs[0][i2 * 4 + 2][2].set(xMax / 2 + 0.5, yMin / 2 + 0.5);
        originalsFaceVertexUvs[0][i2 * 4 + 3][0].set(xMin / 2 + 0.5, yMax / 2 + 0.5);
        originalsFaceVertexUvs[0][i2 * 4 + 3][1].set(xMax / 2 + 0.5, yMax / 2 + 0.5);
        originalsFaceVertexUvs[0][i2 * 4 + 3][2].set(xMax / 2 + 0.5, yMin / 2 + 0.5);
      }
      if (updateInShaderEnabled === true) {
        cloakMesh.geometry.faceVertexUvs = originalsFaceVertexUvs;
        cloakMesh.geometry.uvsNeedUpdate = true;
      }
      var originalOrthoVertices = [];
      originalOrthoVertices.push(new THREE.Vector3(xMin, yMax, 0));
      originalOrthoVertices.push(new THREE.Vector3(xMax, yMax, 0));
      originalOrthoVertices.push(new THREE.Vector3(xMin, yMin, 0));
      originalOrthoVertices.push(new THREE.Vector3(xMax, yMin, 0));
      var material = new THREE.MeshNormalMaterial({ transparent: true, opacity: 0.5, side: THREE.DoubleSide });
      var geometry = new THREE.PlaneGeometry(1, 1);
      var orthoMesh = new THREE.Mesh(geometry, material);
      this.orthoMesh = orthoMesh;
      this.update = function(modelViewMatrix, cameraProjectionMatrix) {
        updateOrtho(modelViewMatrix, cameraProjectionMatrix);
        if (updateInShaderEnabled === false) {
          updateUvs(modelViewMatrix, cameraProjectionMatrix);
        }
      };
      return;
      function updateUvs(modelViewMatrix, cameraProjectionMatrix) {
        var transformedUv = new THREE.Vector3();
        originalsFaceVertexUvs[0].forEach(function(faceVertexUvs, faceIndex2) {
          faceVertexUvs.forEach(function(originalUv, uvIndex) {
            transformedUv.x = originalUv.x * 2 - 1;
            transformedUv.y = originalUv.y * 2 - 1;
            transformedUv.z = 0;
            transformedUv.applyMatrix4(modelViewMatrix);
            transformedUv.applyMatrix4(cameraProjectionMatrix);
            transformedUv.x /= transformedUv.z;
            transformedUv.y /= transformedUv.z;
            transformedUv.x = transformedUv.x / 2 + 0.5;
            transformedUv.y = transformedUv.y / 2 + 0.5;
            cloakMesh.geometry.faceVertexUvs[0][faceIndex2][uvIndex].set(transformedUv.x, transformedUv.y);
          });
        });
        cloakMesh.geometry.uvsNeedUpdate = true;
      }
      function updateOrtho(modelViewMatrix, cameraProjectionMatrix) {
        var transformedUvs = [];
        originalOrthoVertices.forEach(function(originalOrthoVertices2, index) {
          var transformedUv = originalOrthoVertices2.clone();
          transformedUv.applyMatrix4(modelViewMatrix);
          transformedUv.applyMatrix4(cameraProjectionMatrix);
          transformedUv.x /= transformedUv.z;
          transformedUv.y /= transformedUv.z;
          transformedUvs.push(transformedUv);
        });
        for (var i3 = 0; i3 < transformedUvs.length; i3++) {
          orthoMesh.geometry.vertices[i3].copy(transformedUvs[i3]);
        }
        orthoMesh.geometry.computeBoundingSphere();
        orthoMesh.geometry.verticesNeedUpdate = true;
      }
    };
    THREEx.ArMarkerCloak.markerSpaceShaderFunction = "\n        vec2 transformUvToMarkerSpace(vec2 originalUv){\n                vec3 transformedUv;\n                // set transformedUv - from UV coord to clip coord\n                transformedUv.x = originalUv.x * 2.0 - 1.0;\n                transformedUv.y = originalUv.y * 2.0 - 1.0;\n                transformedUv.z = 0.0;\n\n		// apply modelViewMatrix and projectionMatrix\n                transformedUv = (projectionMatrix * modelViewMatrix * vec4( transformedUv, 1.0 ) ).xyz;\n\n		// apply perspective\n		transformedUv.x /= transformedUv.z;\n		transformedUv.y /= transformedUv.z;\n\n                // set back from clip coord to Uv coord\n                transformedUv.x = transformedUv.x / 2.0 + 0.5;\n                transformedUv.y = transformedUv.y / 2.0 + 0.5;\n\n                // return the result\n                return transformedUv.xy;\n        }";
    THREEx.ArMarkerCloak.vertexShader = THREEx.ArMarkerCloak.markerSpaceShaderFunction + "	varying vec2 vUv;\n\n	void main(){\n                // pass the UV to the fragment\n                #if (updateInShaderEnabled == 1)\n		        vUv = transformUvToMarkerSpace(uv);\n                #else\n		        vUv = uv;\n                #endif\n\n                // compute gl_Position\n		vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n		gl_Position = projectionMatrix * mvPosition;\n	}";
    THREEx.ArMarkerCloak.fragmentShader = "\n	varying vec2 vUv;\n	uniform sampler2D texture;\n	uniform float opacity;\n\n	void main(void){\n		vec3 color = texture2D( texture, vUv ).rgb;\n\n		gl_FragColor = vec4( color, opacity);\n	}";
    var ARjs = ARjs || {};
    var THREEx = THREEx || {};
    ARjs.MarkerControls = THREEx.ArMarkerControls = function(context, object3d, parameters) {
      var _this2 = this;
      THREEx.ArBaseControls.call(this, object3d);
      this.context = context;
      this.parameters = { size: 1, type: "unknown", patternUrl: null, barcodeValue: null, changeMatrixMode: "modelViewMatrix", minConfidence: 0.6, smooth: false, smoothCount: 5, smoothTolerance: 0.01, smoothThreshold: 2 };
      var possibleValues = ["pattern", "barcode", "unknown"];
      console.assert(possibleValues.indexOf(this.parameters.type) !== -1, "illegal value", this.parameters.type);
      var possibleValues = ["modelViewMatrix", "cameraTransformMatrix"];
      console.assert(possibleValues.indexOf(this.parameters.changeMatrixMode) !== -1, "illegal value", this.parameters.changeMatrixMode);
      this.object3d = object3d;
      this.object3d.matrixAutoUpdate = false;
      this.object3d.visible = false;
      setParameters(parameters);
      function setParameters(parameters2) {
        if (parameters2 === void 0)
          return;
        for (var key2 in parameters2) {
          var newValue = parameters2[key2];
          if (newValue === void 0) {
            console.warn("THREEx.ArMarkerControls: '" + key2 + "' parameter is undefined.");
            continue;
          }
          var currentValue = _this2.parameters[key2];
          if (currentValue === void 0) {
            console.warn("THREEx.ArMarkerControls: '" + key2 + "' is not a property of this material.");
            continue;
          }
          _this2.parameters[key2] = newValue;
        }
      }
      if (this.parameters.smooth) {
        this.smoothMatrices = [];
      }
      context.addMarker(this);
      if (_this2.context.parameters.trackingBackend === "artoolkit") {
        this._initArtoolkit();
      } else if (_this2.context.parameters.trackingBackend === "aruco") {
        this._arucoPosit = new POS.Posit(this.parameters.size, _this2.context.arucoContext.canvas.width);
      } else if (_this2.context.parameters.trackingBackend === "tango") {
        this._initTango();
      } else
        console.assert(false);
    };
    ARjs.MarkerControls.prototype = Object.create(THREEx.ArBaseControls.prototype);
    ARjs.MarkerControls.prototype.constructor = THREEx.ArMarkerControls;
    ARjs.MarkerControls.prototype.dispose = function() {
      this.context.removeMarker(this);
    };
    ARjs.MarkerControls.prototype.updateWithModelViewMatrix = function(modelViewMatrix) {
      var markerObject3D = this.object3d;
      markerObject3D.visible = true;
      if (this.context.parameters.trackingBackend === "artoolkit") {
        var tmpMatrix = new THREE.Matrix4().copy(this.context._artoolkitProjectionAxisTransformMatrix);
        tmpMatrix.multiply(modelViewMatrix);
        modelViewMatrix.copy(tmpMatrix);
      } else if (this.context.parameters.trackingBackend === "aruco") {
      } else if (this.context.parameters.trackingBackend === "tango") {
      } else
        console.assert(false);
      if (this.context.parameters.trackingBackend !== "tango") {
        var markerAxisTransformMatrix = new THREE.Matrix4().makeRotationX(Math.PI / 2);
        modelViewMatrix.multiply(markerAxisTransformMatrix);
      }
      var renderReqd = false;
      if (this.parameters.changeMatrixMode === "modelViewMatrix") {
        if (this.parameters.smooth) {
          var sum, i2, j, averages, exceedsAverageTolerance = 0;
          this.smoothMatrices.push(modelViewMatrix.elements.slice());
          if (this.smoothMatrices.length < this.parameters.smoothCount + 1) {
            markerObject3D.matrix.copy(modelViewMatrix);
          } else {
            this.smoothMatrices.shift();
            averages = [];
            for (i2 in modelViewMatrix.elements) {
              sum = 0;
              for (j in this.smoothMatrices) {
                sum += this.smoothMatrices[j][i2];
              }
              averages[i2] = sum / this.parameters.smoothCount;
              if (Math.abs(averages[i2] - modelViewMatrix.elements[i2]) >= this.parameters.smoothTolerance) {
                exceedsAverageTolerance++;
              }
            }
            if (exceedsAverageTolerance >= this.parameters.smoothThreshold) {
              for (i2 in modelViewMatrix.elements) {
                modelViewMatrix.elements[i2] = averages[i2];
              }
              markerObject3D.matrix.copy(modelViewMatrix);
              renderReqd = true;
            }
          }
        } else {
          markerObject3D.matrix.copy(modelViewMatrix);
        }
      } else if (this.parameters.changeMatrixMode === "cameraTransformMatrix") {
        markerObject3D.matrix.getInverse(modelViewMatrix);
      } else {
        console.assert(false);
      }
      markerObject3D.matrix.decompose(markerObject3D.position, markerObject3D.quaternion, markerObject3D.scale);
      this.dispatchEvent({ type: "markerFound" });
      return renderReqd;
    };
    ARjs.MarkerControls.prototype.name = function() {
      var name = "";
      name += this.parameters.type;
      if (this.parameters.type === "pattern") {
        var url = this.parameters.patternUrl;
        var basename = url.replace(/^.*\//g, "");
        name += " - " + basename;
      } else if (this.parameters.type === "barcode") {
        name += " - " + this.parameters.barcodeValue;
      } else {
        console.assert(false, "no .name() implemented for this marker controls");
      }
      return name;
    };
    ARjs.MarkerControls.prototype._initArtoolkit = function() {
      var _this2 = this;
      var artoolkitMarkerId = null;
      var delayedInitTimerId = setInterval(function() {
        var arController = _this2.context.arController;
        if (arController === null)
          return;
        clearInterval(delayedInitTimerId);
        delayedInitTimerId = null;
        postInit();
      }, 1e3 / 50);
      return;
      function postInit() {
        var arController = _this2.context.arController;
        console.assert(arController !== null);
        if (_this2.parameters.type === "pattern") {
          arController.loadMarker(_this2.parameters.patternUrl, function(markerId) {
            artoolkitMarkerId = markerId;
            arController.trackPatternMarkerId(artoolkitMarkerId, _this2.parameters.size);
          });
        } else if (_this2.parameters.type === "barcode") {
          artoolkitMarkerId = _this2.parameters.barcodeValue;
          arController.trackBarcodeMarkerId(artoolkitMarkerId, _this2.parameters.size);
        } else if (_this2.parameters.type === "unknown") {
          artoolkitMarkerId = null;
        } else {
          console.log(false, "invalid marker type", _this2.parameters.type);
        }
        arController.addEventListener("getMarker", function(event) {
          if (event.data.type === artoolkit.PATTERN_MARKER && _this2.parameters.type === "pattern") {
            if (artoolkitMarkerId === null)
              return;
            if (event.data.marker.idPatt === artoolkitMarkerId)
              onMarkerFound(event);
          } else if (event.data.type === artoolkit.BARCODE_MARKER && _this2.parameters.type === "barcode") {
            if (artoolkitMarkerId === null)
              return;
            if (event.data.marker.idMatrix === artoolkitMarkerId)
              onMarkerFound(event);
          } else if (event.data.type === artoolkit.UNKNOWN_MARKER && _this2.parameters.type === "unknown") {
            onMarkerFound(event);
          }
        });
      }
      function onMarkerFound(event) {
        if (event.data.type === artoolkit.PATTERN_MARKER && event.data.marker.cfPatt < _this2.parameters.minConfidence)
          return;
        if (event.data.type === artoolkit.BARCODE_MARKER && event.data.marker.cfMatt < _this2.parameters.minConfidence)
          return;
        var modelViewMatrix = new THREE.Matrix4().fromArray(event.data.matrix);
        _this2.updateWithModelViewMatrix(modelViewMatrix);
      }
    };
    ARjs.MarkerControls.prototype._initAruco = function() {
      this._arucoPosit = new POS.Posit(this.parameters.size, _this.context.arucoContext.canvas.width);
    };
    ARjs.MarkerControls.prototype._initTango = function() {
      var _this2 = this;
      console.log("init tango ArMarkerControls");
    };
    var THREEx = THREEx || {};
    THREEx.ArMarkerHelper = function(markerControls) {
      this.object3d = new THREE.Group();
      var mesh = new THREE.AxesHelper();
      this.object3d.add(mesh);
      var text = markerControls.id;
      var canvas = document.createElement("canvas");
      canvas.width = 64;
      canvas.height = 64;
      var context = canvas.getContext("2d");
      var texture = new THREE.CanvasTexture(canvas);
      context.font = "48px monospace";
      context.fillStyle = "rgba(192,192,255, 0.5)";
      context.fillRect(0, 0, canvas.width, canvas.height);
      context.fillStyle = "darkblue";
      context.fillText(text, canvas.width / 4, 3 * canvas.height / 4);
      texture.needsUpdate = true;
      var geometry = new THREE.PlaneGeometry(1, 1);
      var material = new THREE.MeshBasicMaterial({ map: texture, transparent: true });
      var mesh = new THREE.Mesh(geometry, material);
      mesh.rotation.x = -Math.PI / 2;
      this.object3d.add(mesh);
    };
    var THREEx = THREEx || {};
    THREEx.ArSmoothedControls = function(object3d, parameters) {
      var _this2 = this;
      THREEx.ArBaseControls.call(this, object3d);
      this.object3d.visible = false;
      this._lastLerpStepAt = null;
      this._visibleStartedAt = null;
      this._unvisibleStartedAt = null;
      parameters = parameters || {};
      this.parameters = { lerpPosition: 0.8, lerpQuaternion: 0.2, lerpScale: 0.7, lerpStepDelay: 1 / 60, minVisibleDelay: 0, minUnvisibleDelay: 0.2 };
      setParameters(parameters);
      function setParameters(parameters2) {
        if (parameters2 === void 0)
          return;
        for (var key2 in parameters2) {
          var newValue = parameters2[key2];
          if (newValue === void 0) {
            console.warn("THREEx.ArSmoothedControls: '" + key2 + "' parameter is undefined.");
            continue;
          }
          var currentValue = _this2.parameters[key2];
          if (currentValue === void 0) {
            console.warn("THREEx.ArSmoothedControls: '" + key2 + "' is not a property of this material.");
            continue;
          }
          _this2.parameters[key2] = newValue;
        }
      }
    };
    THREEx.ArSmoothedControls.prototype = Object.create(THREEx.ArBaseControls.prototype);
    THREEx.ArSmoothedControls.prototype.constructor = THREEx.ArSmoothedControls;
    THREEx.ArSmoothedControls.prototype.update = function(targetObject3d) {
      var object3d = this.object3d;
      var parameters = this.parameters;
      var wasVisible = object3d.visible;
      var present = performance.now() / 1e3;
      if (targetObject3d.visible === false)
        this._visibleStartedAt = null;
      if (targetObject3d.visible === true)
        this._unvisibleStartedAt = null;
      if (targetObject3d.visible === true && this._visibleStartedAt === null)
        this._visibleStartedAt = present;
      if (targetObject3d.visible === false && this._unvisibleStartedAt === null)
        this._unvisibleStartedAt = present;
      if (wasVisible === false && targetObject3d.visible === true) {
        var visibleFor = present - this._visibleStartedAt;
        if (visibleFor >= this.parameters.minVisibleDelay) {
          object3d.visible = true;
          snapDirectlyToTarget();
        }
      }
      if (wasVisible === true && targetObject3d.visible === false) {
        var unvisibleFor = present - this._unvisibleStartedAt;
        if (unvisibleFor >= this.parameters.minUnvisibleDelay) {
          object3d.visible = false;
        }
      }
      if (this._lastLerpStepAt === null) {
        applyOneSlerpStep();
        this._lastLerpStepAt = present;
      } else {
        var nStepsToDo = Math.floor((present - this._lastLerpStepAt) / this.parameters.lerpStepDelay);
        for (var i2 = 0; i2 < nStepsToDo; i2++) {
          applyOneSlerpStep();
          this._lastLerpStepAt += this.parameters.lerpStepDelay;
        }
      }
      if (false) {
        snapDirectlyToTarget();
      }
      this.object3d.updateMatrix();
      if (wasVisible === false && object3d.visible === true) {
        this.dispatchEvent({ type: "becameVisible" });
      }
      if (wasVisible === true && object3d.visible === false) {
        this.dispatchEvent({ type: "becameUnVisible" });
      }
      return;
      function snapDirectlyToTarget() {
        object3d.position.copy(targetObject3d.position);
        object3d.quaternion.copy(targetObject3d.quaternion);
        object3d.scale.copy(targetObject3d.scale);
      }
      function applyOneSlerpStep() {
        object3d.position.lerp(targetObject3d.position, parameters.lerpPosition);
        object3d.quaternion.slerp(targetObject3d.quaternion, parameters.lerpQuaternion);
        object3d.scale.lerp(targetObject3d.scale, parameters.lerpScale);
      }
    };
    var ARjs = ARjs || {};
    var THREEx = THREEx || {};
    ARjs.Context = THREEx.ArToolkitContext = function(parameters) {
      var _this2 = this;
      _this2._updatedAt = null;
      this.parameters = { trackingBackend: "artoolkit", debug: false, detectionMode: "mono", matrixCodeType: "3x3", cameraParametersUrl: ARjs.Context.baseURL + "parameters/camera_para.dat", maxDetectionRate: 60, canvasWidth: 640, canvasHeight: 480, patternRatio: 0.5, labelingMode: "black_region", imageSmoothingEnabled: false };
      console.assert(["artoolkit", "aruco"].indexOf(this.parameters.trackingBackend) !== -1, "invalid parameter trackingBackend", this.parameters.trackingBackend);
      console.assert(["color", "color_and_matrix", "mono", "mono_and_matrix"].indexOf(this.parameters.detectionMode) !== -1, "invalid parameter detectionMode", this.parameters.detectionMode);
      console.assert(["black_region", "white_region"].indexOf(this.parameters.labelingMode) !== -1, "invalid parameter labelingMode", this.parameters.labelingMode);
      this.arController = null;
      this.arucoContext = null;
      _this2.initialized = false;
      this._arMarkersControls = [];
      setParameters(parameters);
      function setParameters(parameters2) {
        if (parameters2 === void 0)
          return;
        for (var key2 in parameters2) {
          var newValue = parameters2[key2];
          if (newValue === void 0) {
            console.warn("THREEx.ArToolkitContext: '" + key2 + "' parameter is undefined.");
            continue;
          }
          var currentValue = _this2.parameters[key2];
          if (currentValue === void 0) {
            console.warn("THREEx.ArToolkitContext: '" + key2 + "' is not a property of this material.");
            continue;
          }
          _this2.parameters[key2] = newValue;
        }
      }
    };
    Object.assign(ARjs.Context.prototype, THREE.EventDispatcher.prototype);
    ARjs.Context.baseURL = "https://jeromeetienne.github.io/AR.js/three.js/";
    ARjs.Context.REVISION = "2.2.2";
    ARjs.Context.createDefaultCamera = function(trackingBackend) {
      console.assert(false, "use ARjs.Utils.createDefaultCamera instead");
      if (trackingBackend === "artoolkit") {
        var camera = new THREE.Camera();
      } else if (trackingBackend === "aruco") {
        var camera = new THREE.PerspectiveCamera(42, renderer.domElement.width / renderer.domElement.height, 0.01, 100);
      } else
        console.assert(false);
      return camera;
    };
    ARjs.Context.prototype.init = function(onCompleted) {
      var _this2 = this;
      if (this.parameters.trackingBackend === "artoolkit") {
        this._initArtoolkit(done);
      } else if (this.parameters.trackingBackend === "aruco") {
        this._initAruco(done);
      } else
        console.assert(false);
      return;
      function done() {
        _this2.dispatchEvent({ type: "initialized" });
        _this2.initialized = true;
        onCompleted && onCompleted();
      }
    };
    ARjs.Context.prototype.update = function(srcElement) {
      if (this.parameters.trackingBackend === "artoolkit" && this.arController === null)
        return false;
      var present = performance.now();
      if (this._updatedAt !== null && present - this._updatedAt < 1e3 / this.parameters.maxDetectionRate) {
        return false;
      }
      this._updatedAt = present;
      this._arMarkersControls.forEach(function(markerControls) {
        markerControls.object3d.visible = false;
      });
      if (this.parameters.trackingBackend === "artoolkit") {
        this._updateArtoolkit(srcElement);
      } else if (this.parameters.trackingBackend === "aruco") {
        this._updateAruco(srcElement);
      } else {
        console.assert(false);
      }
      this.dispatchEvent({ type: "sourceProcessed" });
      return true;
    };
    ARjs.Context.prototype.addMarker = function(arMarkerControls) {
      console.assert(arMarkerControls instanceof THREEx.ArMarkerControls);
      this._arMarkersControls.push(arMarkerControls);
    };
    ARjs.Context.prototype.removeMarker = function(arMarkerControls) {
      console.assert(arMarkerControls instanceof THREEx.ArMarkerControls);
      var index = this.arMarkerControlss.indexOf(artoolkitMarker);
      console.assert(index !== index);
      this._arMarkersControls.splice(index, 1);
    };
    ARjs.Context.prototype._initArtoolkit = function(onCompleted) {
      var _this2 = this;
      this._artoolkitProjectionAxisTransformMatrix = new THREE.Matrix4();
      this._artoolkitProjectionAxisTransformMatrix.multiply(new THREE.Matrix4().makeRotationY(Math.PI));
      this._artoolkitProjectionAxisTransformMatrix.multiply(new THREE.Matrix4().makeRotationZ(Math.PI));
      var cameraParameters = new ARCameraParam(_this2.parameters.cameraParametersUrl, function() {
        var arController = new ARController(_this2.parameters.canvasWidth, _this2.parameters.canvasHeight, cameraParameters);
        _this2.arController = arController;
        arController.ctx.mozImageSmoothingEnabled = _this2.parameters.imageSmoothingEnabled;
        arController.ctx.webkitImageSmoothingEnabled = _this2.parameters.imageSmoothingEnabled;
        arController.ctx.msImageSmoothingEnabled = _this2.parameters.imageSmoothingEnabled;
        arController.ctx.imageSmoothingEnabled = _this2.parameters.imageSmoothingEnabled;
        if (_this2.parameters.debug === true) {
          arController.debugSetup();
          arController.canvas.style.position = "absolute";
          arController.canvas.style.top = "0px";
          arController.canvas.style.opacity = "0.6";
          arController.canvas.style.pointerEvents = "none";
          arController.canvas.style.zIndex = "-1";
        }
        var detectionModes = { color: artoolkit.AR_TEMPLATE_MATCHING_COLOR, color_and_matrix: artoolkit.AR_TEMPLATE_MATCHING_COLOR_AND_MATRIX, mono: artoolkit.AR_TEMPLATE_MATCHING_MONO, mono_and_matrix: artoolkit.AR_TEMPLATE_MATCHING_MONO_AND_MATRIX };
        var detectionMode = detectionModes[_this2.parameters.detectionMode];
        console.assert(detectionMode !== void 0);
        arController.setPatternDetectionMode(detectionMode);
        var matrixCodeTypes = { "3x3": artoolkit.AR_MATRIX_CODE_3x3, "3x3_HAMMING63": artoolkit.AR_MATRIX_CODE_3x3_HAMMING63, "3x3_PARITY65": artoolkit.AR_MATRIX_CODE_3x3_PARITY65, "4x4": artoolkit.AR_MATRIX_CODE_4x4, "4x4_BCH_13_9_3": artoolkit.AR_MATRIX_CODE_4x4_BCH_13_9_3, "4x4_BCH_13_5_5": artoolkit.AR_MATRIX_CODE_4x4_BCH_13_5_5 };
        var matrixCodeType = matrixCodeTypes[_this2.parameters.matrixCodeType];
        console.assert(matrixCodeType !== void 0);
        arController.setMatrixCodeType(matrixCodeType);
        arController.setPattRatio(_this2.parameters.patternRatio);
        var labelingModeTypes = { black_region: artoolkit.AR_LABELING_BLACK_REGION, white_region: artoolkit.AR_LABELING_WHITE_REGION };
        var labelingModeType = labelingModeTypes[_this2.parameters.labelingMode];
        console.assert(labelingModeType !== void 0);
        arController.setLabelingMode(labelingModeType);
        onCompleted();
      });
      return this;
    };
    ARjs.Context.prototype.getProjectionMatrix = function(srcElement) {
      console.assert(this.parameters.trackingBackend === "artoolkit");
      console.assert(this.arController, "arController MUST be initialized to call this function");
      var projectionMatrixArr = this.arController.getCameraMatrix();
      var projectionMatrix = new THREE.Matrix4().fromArray(projectionMatrixArr);
      projectionMatrix.multiply(this._artoolkitProjectionAxisTransformMatrix);
      return projectionMatrix;
    };
    ARjs.Context.prototype._updateArtoolkit = function(srcElement) {
      this.arController.process(srcElement);
    };
    ARjs.Context.prototype._initAruco = function(onCompleted) {
      this.arucoContext = new THREEx.ArucoContext();
      this.arucoContext.canvas.width = this.parameters.canvasWidth;
      this.arucoContext.canvas.height = this.parameters.canvasHeight;
      var context = this.arucoContext.canvas.getContext("2d");
      context.webkitImageSmoothingEnabled = this.parameters.imageSmoothingEnabled;
      context.msImageSmoothingEnabled = this.parameters.imageSmoothingEnabled;
      context.imageSmoothingEnabled = this.parameters.imageSmoothingEnabled;
      setTimeout(function() {
        onCompleted();
      }, 0);
    };
    ARjs.Context.prototype._updateAruco = function(srcElement) {
      var _this2 = this;
      var arMarkersControls = this._arMarkersControls;
      var detectedMarkers = this.arucoContext.detect(srcElement);
      detectedMarkers.forEach(function(detectedMarker) {
        var foundControls = null;
        for (var i2 = 0; i2 < arMarkersControls.length; i2++) {
          console.assert(arMarkersControls[i2].parameters.type === "barcode");
          if (arMarkersControls[i2].parameters.barcodeValue === detectedMarker.id) {
            foundControls = arMarkersControls[i2];
            break;
          }
        }
        if (foundControls === null)
          return;
        var tmpObject3d = new THREE.Object3D();
        _this2.arucoContext.updateObject3D(tmpObject3d, foundControls._arucoPosit, foundControls.parameters.size, detectedMarker);
        tmpObject3d.updateMatrix();
        foundControls.updateWithModelViewMatrix(tmpObject3d.matrix);
      });
    };
    var ARjs = ARjs || {};
    var THREEx = THREEx || {};
    ARjs.Profile = THREEx.ArToolkitProfile = function() {
      this.reset();
      this.performance("default");
    };
    ARjs.Profile.prototype._guessPerformanceLabel = function() {
      var isMobile = navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/Windows Phone/i) ? true : false;
      if (isMobile === true) {
        return "phone-normal";
      }
      return "desktop-normal";
    };
    ARjs.Profile.prototype.reset = function() {
      this.sourceParameters = { sourceType: "webcam" };
      this.contextParameters = { cameraParametersUrl: THREEx.ArToolkitContext.baseURL + "../data/data/camera_para.dat", detectionMode: "mono", labelingMode: "black_region" };
      this.defaultMarkerParameters = { type: "pattern", patternUrl: THREEx.ArToolkitContext.baseURL + "../data/data/patt.hiro", changeMatrixMode: "modelViewMatrix" };
      return this;
    };
    ARjs.Profile.prototype.performance = function(label) {
      if (label === "default") {
        label = this._guessPerformanceLabel();
      }
      if (label === "desktop-fast") {
        this.contextParameters.canvasWidth = 640 * 3;
        this.contextParameters.canvasHeight = 480 * 3;
        this.contextParameters.maxDetectionRate = 30;
      } else if (label === "desktop-normal") {
        this.contextParameters.canvasWidth = 640;
        this.contextParameters.canvasHeight = 480;
        this.contextParameters.maxDetectionRate = 60;
      } else if (label === "phone-normal") {
        this.contextParameters.canvasWidth = 80 * 4;
        this.contextParameters.canvasHeight = 60 * 4;
        this.contextParameters.maxDetectionRate = 30;
      } else if (label === "phone-slow") {
        this.contextParameters.canvasWidth = 80 * 3;
        this.contextParameters.canvasHeight = 60 * 3;
        this.contextParameters.maxDetectionRate = 30;
      } else {
        console.assert(false, "unknonwn label " + label);
      }
      return this;
    };
    ARjs.Profile.prototype.defaultMarker = function(trackingBackend) {
      trackingBackend = trackingBackend || this.contextParameters.trackingBackend;
      if (trackingBackend === "artoolkit") {
        this.contextParameters.detectionMode = "mono";
        this.defaultMarkerParameters.type = "pattern";
        this.defaultMarkerParameters.patternUrl = THREEx.ArToolkitContext.baseURL + "../data/data/patt.hiro";
        this.contextParameters.labelingMode = "black_region";
      } else if (trackingBackend === "aruco") {
        this.contextParameters.detectionMode = "mono";
        this.defaultMarkerParameters.type = "barcode";
        this.defaultMarkerParameters.barcodeValue = 1001;
        this.contextParameters.labelingMode = "black_region";
      } else
        console.assert(false);
      return this;
    };
    ARjs.Profile.prototype.sourceWebcam = function() {
      this.sourceParameters.sourceType = "webcam";
      delete this.sourceParameters.sourceUrl;
      return this;
    };
    ARjs.Profile.prototype.sourceVideo = function(url) {
      this.sourceParameters.sourceType = "video";
      this.sourceParameters.sourceUrl = url;
      return this;
    };
    ARjs.Profile.prototype.sourceImage = function(url) {
      this.sourceParameters.sourceType = "image";
      this.sourceParameters.sourceUrl = url;
      return this;
    };
    ARjs.Profile.prototype.trackingBackend = function(trackingBackend) {
      console.warn("stop profile.trackingBackend() obsolete function. use .trackingMethod instead");
      this.contextParameters.trackingBackend = trackingBackend;
      return this;
    };
    ARjs.Profile.prototype.changeMatrixMode = function(changeMatrixMode) {
      this.defaultMarkerParameters.changeMatrixMode = changeMatrixMode;
      return this;
    };
    ARjs.Profile.prototype.trackingMethod = function(trackingMethod) {
      var data = ARjs.Utils.parseTrackingMethod(trackingMethod);
      this.defaultMarkerParameters.markersAreaEnabled = data.markersAreaEnabled;
      this.contextParameters.trackingBackend = data.trackingBackend;
      return this;
    };
    ARjs.Profile.prototype.checkIfValid = function() {
      return this;
    };
    var ARjs = ARjs || {};
    var THREEx = THREEx || {};
    ARjs.Source = THREEx.ArToolkitSource = function(parameters) {
      var _this2 = this;
      this.ready = false;
      this.domElement = null;
      this.parameters = { sourceType: "webcam", sourceUrl: null, deviceId: null, sourceWidth: 640, sourceHeight: 480, displayWidth: 640, displayHeight: 480 };
      setParameters(parameters);
      function setParameters(parameters2) {
        if (parameters2 === void 0)
          return;
        for (var key2 in parameters2) {
          var newValue = parameters2[key2];
          if (newValue === void 0) {
            console.warn("THREEx.ArToolkitSource: '" + key2 + "' parameter is undefined.");
            continue;
          }
          var currentValue = _this2.parameters[key2];
          if (currentValue === void 0) {
            console.warn("THREEx.ArToolkitSource: '" + key2 + "' is not a property of this material.");
            continue;
          }
          _this2.parameters[key2] = newValue;
        }
      }
    };
    ARjs.Source.prototype.init = function(onReady, onError) {
      var _this2 = this;
      if (this.parameters.sourceType === "image") {
        var domElement = this._initSourceImage(onSourceReady, onError);
      } else if (this.parameters.sourceType === "video") {
        var domElement = this._initSourceVideo(onSourceReady, onError);
      } else if (this.parameters.sourceType === "webcam") {
        var domElement = this._initSourceWebcam(onSourceReady, onError);
      } else {
        console.assert(false);
      }
      this.domElement = domElement;
      this.domElement.style.position = "absolute";
      this.domElement.style.top = "0px";
      this.domElement.style.left = "0px";
      this.domElement.style.zIndex = "-2";
      this.domElement.setAttribute("id", "arjs-video");
      return this;
      function onSourceReady() {
        document.body.appendChild(_this2.domElement);
        window.dispatchEvent(new CustomEvent("arjs-video-loaded", { detail: { component: document.querySelector("#arjs-video") } }));
        _this2.ready = true;
        onReady && onReady();
      }
    };
    ARjs.Source.prototype._initSourceImage = function(onReady) {
      var domElement = document.createElement("img");
      domElement.src = this.parameters.sourceUrl;
      domElement.width = this.parameters.sourceWidth;
      domElement.height = this.parameters.sourceHeight;
      domElement.style.width = this.parameters.displayWidth + "px";
      domElement.style.height = this.parameters.displayHeight + "px";
      domElement.onload = onReady;
      return domElement;
    };
    ARjs.Source.prototype._initSourceVideo = function(onReady) {
      var domElement = document.createElement("video");
      domElement.src = this.parameters.sourceUrl;
      domElement.style.objectFit = "initial";
      domElement.autoplay = true;
      domElement.webkitPlaysinline = true;
      domElement.controls = false;
      domElement.loop = true;
      domElement.muted = true;
      document.body.addEventListener("click", function onClick() {
        document.body.removeEventListener("click", onClick);
        domElement.play();
      });
      domElement.width = this.parameters.sourceWidth;
      domElement.height = this.parameters.sourceHeight;
      domElement.style.width = this.parameters.displayWidth + "px";
      domElement.style.height = this.parameters.displayHeight + "px";
      domElement.onloadeddata = onReady;
      return domElement;
    };
    ARjs.Source.prototype._initSourceWebcam = function(onReady, onError) {
      var _this2 = this;
      onError = onError || function(error) {
        alert("Webcam Error\nName: " + error.name + "\nMessage: " + error.message);
        var event = new CustomEvent("camera-error", { error });
        window.dispatchEvent(event);
      };
      var domElement = document.createElement("video");
      domElement.setAttribute("autoplay", "");
      domElement.setAttribute("muted", "");
      domElement.setAttribute("playsinline", "");
      domElement.style.width = this.parameters.displayWidth + "px";
      domElement.style.height = this.parameters.displayHeight + "px";
      if (navigator.mediaDevices === void 0 || navigator.mediaDevices.enumerateDevices === void 0 || navigator.mediaDevices.getUserMedia === void 0) {
        if (navigator.mediaDevices === void 0)
          var fctName = "navigator.mediaDevices";
        else if (navigator.mediaDevices.enumerateDevices === void 0)
          var fctName = "navigator.mediaDevices.enumerateDevices";
        else if (navigator.mediaDevices.getUserMedia === void 0)
          var fctName = "navigator.mediaDevices.getUserMedia";
        else
          console.assert(false);
        onError({ name: "", message: "WebRTC issue-! " + fctName + " not present in your browser" });
        return null;
      }
      navigator.mediaDevices.enumerateDevices().then(function(devices) {
        var userMediaConstraints = { audio: false, video: { facingMode: "environment", width: { ideal: _this2.parameters.sourceWidth }, height: { ideal: _this2.parameters.sourceHeight } } };
        if (null !== _this2.parameters.deviceId) {
          userMediaConstraints.video.deviceId = { exact: _this2.parameters.deviceId };
        }
        navigator.mediaDevices.getUserMedia(userMediaConstraints).then(function success(stream) {
          domElement.srcObject = stream;
          var event = new CustomEvent("camera-init", { stream });
          window.dispatchEvent(event);
          document.body.addEventListener("click", function() {
            domElement.play();
          });
          onReady();
        }).catch(function(error) {
          onError({ name: error.name, message: error.message });
        });
      }).catch(function(error) {
        onError({ message: error.message });
      });
      return domElement;
    };
    ARjs.Source.prototype.hasMobileTorch = function() {
      var stream = arToolkitSource.domElement.srcObject;
      if (stream instanceof MediaStream === false)
        return false;
      if (this._currentTorchStatus === void 0) {
        this._currentTorchStatus = false;
      }
      var videoTrack = stream.getVideoTracks()[0];
      if (videoTrack.getCapabilities === void 0)
        return false;
      var capabilities = videoTrack.getCapabilities();
      return capabilities.torch ? true : false;
    };
    ARjs.Source.prototype.toggleMobileTorch = function() {
      console.assert(this.hasMobileTorch() === true);
      var stream = arToolkitSource.domElement.srcObject;
      if (stream instanceof MediaStream === false) {
        alert("enabling mobile torch is available only on webcam");
        return;
      }
      if (this._currentTorchStatus === void 0) {
        this._currentTorchStatus = false;
      }
      var videoTrack = stream.getVideoTracks()[0];
      var capabilities = videoTrack.getCapabilities();
      if (!capabilities.torch) {
        alert("no mobile torch is available on your camera");
        return;
      }
      this._currentTorchStatus = this._currentTorchStatus === false ? true : false;
      videoTrack.applyConstraints({ advanced: [{ torch: this._currentTorchStatus }] }).catch(function(error) {
        console.log(error);
      });
    };
    ARjs.Source.prototype.domElementWidth = function() {
      return parseInt(this.domElement.style.width);
    };
    ARjs.Source.prototype.domElementHeight = function() {
      return parseInt(this.domElement.style.height);
    };
    ARjs.Source.prototype.onResizeElement = function() {
      var _this2 = this;
      var screenWidth = window.innerWidth;
      var screenHeight = window.innerHeight;
      console.assert(arguments.length === 0);
      if (this.domElement.nodeName === "IMG") {
        var sourceWidth = this.domElement.naturalWidth;
        var sourceHeight = this.domElement.naturalHeight;
      } else if (this.domElement.nodeName === "VIDEO") {
        var sourceWidth = this.domElement.videoWidth;
        var sourceHeight = this.domElement.videoHeight;
      } else {
        console.assert(false);
      }
      var sourceAspect = sourceWidth / sourceHeight;
      var screenAspect = screenWidth / screenHeight;
      if (screenAspect < sourceAspect) {
        var newWidth = sourceAspect * screenHeight;
        this.domElement.style.width = newWidth + "px";
        this.domElement.style.marginLeft = -(newWidth - screenWidth) / 2 + "px";
        this.domElement.style.height = screenHeight + "px";
        this.domElement.style.marginTop = "0px";
      } else {
        var newHeight = 1 / (sourceAspect / screenWidth);
        this.domElement.style.height = newHeight + "px";
        this.domElement.style.marginTop = -(newHeight - screenHeight) / 2 + "px";
        this.domElement.style.width = screenWidth + "px";
        this.domElement.style.marginLeft = "0px";
      }
    };
    ARjs.Source.prototype.copyElementSizeTo = function(otherElement) {
      if (window.innerWidth > window.innerHeight) {
        otherElement.style.width = this.domElement.style.width;
        otherElement.style.height = this.domElement.style.height;
        otherElement.style.marginLeft = this.domElement.style.marginLeft;
        otherElement.style.marginTop = this.domElement.style.marginTop;
      } else {
        otherElement.style.height = this.domElement.style.height;
        otherElement.style.width = parseInt(otherElement.style.height) * 4 / 3 + "px";
        otherElement.style.marginLeft = (window.innerWidth - parseInt(otherElement.style.width)) / 2 + "px";
        otherElement.style.marginTop = 0;
      }
    };
    ARjs.Source.prototype.copySizeTo = function() {
      console.warn("obsolete function arToolkitSource.copySizeTo. Use arToolkitSource.copyElementSizeTo");
      this.copyElementSizeTo.apply(this, arguments);
    };
    ARjs.Source.prototype.onResize = function(arToolkitContext, renderer2, camera) {
      if (arguments.length !== 3) {
        console.warn("obsolete function arToolkitSource.onResize. Use arToolkitSource.onResizeElement");
        return this.onResizeElement.apply(this, arguments);
      }
      var trackingBackend = arToolkitContext.parameters.trackingBackend;
      if (trackingBackend === "artoolkit") {
        this.onResizeElement();
        var isAframe = renderer2.domElement.dataset.aframeCanvas ? true : false;
        if (isAframe === false) {
          this.copyElementSizeTo(renderer2.domElement);
        } else {
        }
        if (arToolkitContext.arController !== null) {
          this.copyElementSizeTo(arToolkitContext.arController.canvas);
        }
      } else if (trackingBackend === "aruco") {
        this.onResizeElement();
        this.copyElementSizeTo(renderer2.domElement);
        this.copyElementSizeTo(arToolkitContext.arucoContext.canvas);
      } else
        console.assert(false, "unhandled trackingBackend " + trackingBackend);
      if (trackingBackend === "artoolkit") {
        if (arToolkitContext.arController !== null) {
          camera.projectionMatrix.copy(arToolkitContext.getProjectionMatrix());
        }
      } else if (trackingBackend === "aruco") {
        camera.aspect = renderer2.domElement.width / renderer2.domElement.height;
        camera.updateProjectionMatrix();
      } else
        console.assert(false, "unhandled trackingBackend " + trackingBackend);
    };
    var THREEx = THREEx || {};
    THREEx.ArVideoInWebgl = function(videoTexture) {
      var _this2 = this;
      var geometry = new THREE.PlaneGeometry(2, 2);
      var material = new THREE.MeshBasicMaterial({ map: videoTexture });
      var seethruPlane = new THREE.Mesh(geometry, material);
      this.object3d = seethruPlane;
      this.update = function(camera) {
        camera.updateMatrixWorld(true);
        var position = new THREE.Vector3(-0, 0, -20);
        var position = new THREE.Vector3(-0, 0, -20);
        seethruPlane.position.copy(position);
        camera.localToWorld(seethruPlane.position);
        camera.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);
        seethruPlane.quaternion.copy(camera.quaternion);
        var fov = THREE.Math.radToDeg(Math.atan(1 / camera.projectionMatrix.elements[5])) * 2;
        var elementWidth = parseFloat(arToolkitSource.domElement.style.width.replace(/px$/, ""), 10);
        var elementHeight = parseFloat(arToolkitSource.domElement.style.height.replace(/px$/, ""), 10);
        var aspect = elementWidth / elementHeight;
        seethruPlane.scale.y = Math.tan(THREE.Math.DEG2RAD * fov / 2) * position.length();
        seethruPlane.scale.x = seethruPlane.scale.y * aspect;
      };
    };
    var THREEx = THREEx || {};
    THREEx.HitTestingPlane = function(sourceElement) {
      this._sourceElement = sourceElement;
      this._pickingScene = new THREE.Scene();
      var geometry = new THREE.PlaneGeometry(20, 20, 19, 19).rotateX(-Math.PI / 2);
      var material = new THREE.MeshBasicMaterial({ wireframe: true });
      this._pickingPlane = new THREE.Mesh(geometry, material);
      this._pickingScene.add(this._pickingPlane);
      var fullWidth = parseInt(sourceElement.style.width);
      var fullHeight = parseInt(sourceElement.style.height);
      this._pickingCamera = new THREE.PerspectiveCamera(42, fullWidth / fullHeight, 0.1, 30);
    };
    THREEx.HitTestingPlane.prototype.update = function(camera, pickingRoot, changeMatrixMode) {
      this.onResize();
      if (changeMatrixMode === "modelViewMatrix") {
        var pickingPlane = this._pickingPlane;
        pickingRoot.parent.updateMatrixWorld();
        pickingPlane.matrix.copy(pickingRoot.parent.matrixWorld);
        pickingPlane.matrix.decompose(pickingPlane.position, pickingPlane.quaternion, pickingPlane.scale);
      } else if (changeMatrixMode === "cameraTransformMatrix") {
        var pickingCamera = this._pickingCamera;
        camera.updateMatrixWorld();
        pickingCamera.matrix.copy(camera.matrixWorld);
        pickingCamera.matrix.decompose(pickingCamera.position, pickingCamera.quaternion, pickingCamera.scale);
      } else
        console.assert(false);
    };
    THREEx.HitTestingPlane.prototype.onResize = function() {
      var sourceElement = this._sourceElement;
      var pickingCamera = this._pickingCamera;
      var fullWidth = parseInt(sourceElement.style.width);
      var fullHeight = parseInt(sourceElement.style.height);
      pickingCamera.aspect = fullWidth / fullHeight;
      pickingCamera.updateProjectionMatrix();
    };
    THREEx.HitTestingPlane.prototype.test = function(mouseX, mouseY) {
      mouseX = (mouseX - 0.5) * 2;
      mouseY = -(mouseY - 0.5) * 2;
      this._pickingScene.updateMatrixWorld(true);
      var raycaster = new THREE.Raycaster();
      var mouseVector3 = new THREE.Vector3(mouseX, mouseY, 1);
      raycaster.setFromCamera(mouseVector3, this._pickingCamera);
      var intersects = raycaster.intersectObjects([this._pickingPlane]);
      if (intersects.length === 0)
        return null;
      var position = this._pickingPlane.worldToLocal(intersects[0].point.clone());
      var quaternion = new THREE.Quaternion();
      var scale = new THREE.Vector3(1, 1, 1);
      return { position, quaternion, scale };
    };
    THREEx.HitTestingPlane.prototype.renderDebug = function(renderer2) {
      renderer2.render(this._pickingScene, this._pickingCamera);
    };
    var ARjs = ARjs || {};
    ARjs.Anchor = function(arSession, markerParameters) {
      var _this2 = this;
      var arContext = arSession.arContext;
      var scene = arSession.parameters.scene;
      var camera = arSession.parameters.camera;
      this.arSession = arSession;
      this.parameters = markerParameters;
      console.log("ARjs.Anchor -", "changeMatrixMode:", this.parameters.changeMatrixMode, "/ markersAreaEnabled:", markerParameters.markersAreaEnabled);
      var markerRoot = new THREE.Group();
      scene.add(markerRoot);
      if (markerParameters.changeMatrixMode === "modelViewMatrix") {
        var controlledObject = markerRoot;
      } else if (markerParameters.changeMatrixMode === "cameraTransformMatrix") {
        var controlledObject = camera;
      } else
        console.assert(false);
      if (markerParameters.markersAreaEnabled === false) {
        var markerControls = new THREEx.ArMarkerControls(arContext, controlledObject, markerParameters);
        this.controls = markerControls;
      } else {
        console.assert(arContext.parameters.trackingBackend === "artoolkit" || arContext.parameters.trackingBackend === "aruco");
        if (location.hash.substring(1).startsWith("markers-page-resolution=") === true) {
          var markerPageResolution = location.hash.substring(1);
          var matches = markerPageResolution.match(/markers-page-resolution=(\d+)x(\d+)/);
          console.assert(matches.length === 3);
          var resolutionW = parseInt(matches[1]);
          var resolutionH = parseInt(matches[2]);
          var arContext = arSession.arContext;
          ARjs.MarkersAreaUtils.storeMarkersAreaFileFromResolution(arContext.parameters.trackingBackend, resolutionW, resolutionH);
        }
        if (localStorage.getItem("ARjsMultiMarkerFile") === null) {
          ARjs.MarkersAreaUtils.storeDefaultMultiMarkerFile(arContext.parameters.trackingBackend);
        }
        console.assert(localStorage.getItem("ARjsMultiMarkerFile") !== null);
        var multiMarkerFile = localStorage.getItem("ARjsMultiMarkerFile");
        if (markerParameters.changeMatrixMode === "modelViewMatrix") {
          var parent3D = scene;
        } else if (markerParameters.changeMatrixMode === "cameraTransformMatrix") {
          var parent3D = camera;
        } else
          console.assert(false);
        var multiMarkerControls = ARjs.MarkersAreaControls.fromJSON(arContext, parent3D, controlledObject, multiMarkerFile);
        this.controls = multiMarkerControls;
        multiMarkerControls.parameters.changeMatrixMode = markerParameters.changeMatrixMode;
        var markerHelpers = [];
        multiMarkerControls.subMarkersControls.forEach(function(subMarkerControls) {
          var markerHelper = new THREEx.ArMarkerHelper(subMarkerControls);
          markerHelper.object3d.visible = false;
          subMarkerControls.object3d.add(markerHelper.object3d);
          markerHelpers.push(markerHelper);
        });
        this.markersArea = {};
        this.markersArea.setSubMarkersVisibility = function(visible) {
          markerHelpers.forEach(function(markerHelper) {
            markerHelper.object3d.visible = visible;
          });
        };
      }
      this.object3d = new THREE.Group();
      var shouldBeSmoothed = true;
      if (shouldBeSmoothed === true) {
        var smoothedRoot = new THREE.Group();
        scene.add(smoothedRoot);
        var smoothedControls = new THREEx.ArSmoothedControls(smoothedRoot);
        smoothedRoot.add(this.object3d);
      } else {
        markerRoot.add(this.object3d);
      }
      this.update = function() {
        _this2.object3d.visible = _this2.object3d.parent.visible;
        if (smoothedControls !== void 0) {
          if (multiMarkerControls !== void 0) {
            multiMarkerControls.updateSmoothedControls(smoothedControls);
          }
          smoothedControls.update(markerRoot);
        }
      };
    };
    var ARjs = ARjs || {};
    ARjs.SessionDebugUI = function(arSession) {
      var trackingBackend = arSession.arContext.parameters.trackingBackend;
      this.domElement = document.createElement("div");
      this.domElement.style.color = "rgba(0,0,0,0.9)";
      this.domElement.style.backgroundColor = "rgba(127,127,127,0.5)";
      this.domElement.style.display = "block";
      this.domElement.style.padding = "0.5em";
      this.domElement.style.position = "fixed";
      this.domElement.style.left = "5px";
      this.domElement.style.bottom = "10px";
      this.domElement.style.textAlign = "right";
      var domElement = document.createElement("span");
      domElement.style.display = "block";
      domElement.innerHTML = "<b>trackingBackend</b> : " + trackingBackend;
      this.domElement.appendChild(domElement);
    };
    ARjs.SessionDebugUI.AugmentedWebsiteURL = "https://webxr.io/augmented-website";
    ARjs.AnchorDebugUI = function(arAnchor) {
      var arSession = arAnchor.arSession;
      var trackingBackend = arSession.arContext.parameters.trackingBackend;
      this.domElement = document.createElement("div");
      this.domElement.style.color = "rgba(0,0,0,0.9)";
      this.domElement.style.backgroundColor = "rgba(127,127,127,0.5)";
      this.domElement.style.display = "inline-block";
      this.domElement.style.padding = "0.5em";
      this.domElement.style.margin = "0.5em";
      this.domElement.style.textAlign = "left";
      var domElement = document.createElement("span");
      domElement.style.display = "block";
      domElement.style.padding = "0.5em";
      domElement.style.color = "rgba(0,0,0,0.9)";
      domElement.style.backgroundColor = "rgba(127,127,127,0.5)";
      domElement.style.position = "fixed";
      domElement.style.left = "5px";
      domElement.style.bottom = "40px";
      this.domElement.appendChild(domElement);
      domElement.innerHTML = "<b>markersAreaEnabled</b> :" + arAnchor.parameters.markersAreaEnabled;
      if (arAnchor.parameters.markersAreaEnabled) {
        var domElement = document.createElement("button");
        domElement.style.display = "block";
        this.domElement.style.padding = "0.5em";
        this.domElement.style.position = "fixed";
        this.domElement.style.textAlign = "left";
        this.domElement.appendChild(domElement);
        domElement.id = "buttonToggleMarkerHelpers";
        domElement.innerHTML = "toggle-marker-helper";
        domElement.href = "javascript:void(0)";
        var subMarkerHelpersVisible = false;
        domElement.addEventListener("click", function() {
          subMarkerHelpersVisible = subMarkerHelpersVisible ? false : true;
          arAnchor.markersArea.setSubMarkersVisibility(subMarkerHelpersVisible);
        });
      }
      if (arAnchor.parameters.markersAreaEnabled) {
        var domElement = document.createElement("button");
        domElement.style.display = "block";
        this.domElement.appendChild(domElement);
        domElement.id = "buttonMarkersAreaLearner";
        domElement.innerHTML = "Learn-new-marker-area";
        domElement.href = "javascript:void(0)";
        domElement.addEventListener("click", function() {
          if (ARjs.AnchorDebugUI.MarkersAreaLearnerURL !== null) {
            var learnerURL = ARjs.AnchorDebugUI.MarkersAreaLearnerURL;
          } else {
            var learnerURL = ARjs.Context.baseURL + "examples/multi-markers/examples/learner.html";
          }
          ARjs.MarkersAreaUtils.navigateToLearnerPage(learnerURL, trackingBackend);
        });
      }
      if (arAnchor.parameters.markersAreaEnabled) {
        var domElement = document.createElement("button");
        domElement.style.display = "block";
        this.domElement.appendChild(domElement);
        domElement.id = "buttonMarkersAreaReset";
        domElement.innerHTML = "Reset-marker-area";
        domElement.href = "javascript:void(0)";
        domElement.addEventListener("click", function() {
          ARjs.MarkersAreaUtils.storeDefaultMultiMarkerFile(trackingBackend);
          location.reload();
        });
      }
    };
    ARjs.AnchorDebugUI.MarkersAreaLearnerURL = null;
    var ARjs = ARjs || {};
    ARjs.HitTesting = function(arSession) {
      var _this2 = this;
      var arContext = arSession.arContext;
      var trackingBackend = arContext.parameters.trackingBackend;
      this.enabled = true;
      this._arSession = arSession;
      this._hitTestingPlane = null;
      _this2._hitTestingPlane = new THREEx.HitTestingPlane(arSession.arSource.domElement);
    };
    ARjs.HitTesting.prototype.update = function(camera, pickingRoot, changeMatrixMode) {
      if (this.enabled === false)
        return;
      if (this._hitTestingPlane !== null) {
        this._hitTestingPlane.update(camera, pickingRoot, changeMatrixMode);
      } else
        console.assert(false);
    };
    ARjs.HitTesting.prototype.testDomEvent = function(domEvent) {
      var trackingBackend = this._arSession.arContext.parameters.trackingBackend;
      var arSource = this._arSession.arSource;
      if (this.enabled === false)
        return [];
      var mouseX = domEvent.clientX / arSource.domElementWidth();
      var mouseY = domEvent.clientY / arSource.domElementHeight();
      return this.test(mouseX, mouseY);
    };
    ARjs.HitTesting.prototype.test = function(mouseX, mouseY) {
      var arContext = this._arSession.arContext;
      var trackingBackend = arContext.parameters.trackingBackend;
      var hitTestResults = [];
      if (this.enabled === false)
        return [];
      var result = this._hitTestingPlane.test(mouseX, mouseY);
      if (result === null)
        return hitTestResults;
      var hitTestResult = new ARjs.HitTesting.Result(result.position, result.quaternion, result.scale);
      hitTestResults.push(hitTestResult);
      return hitTestResults;
    };
    ARjs.HitTesting.Result = function(position, quaternion, scale) {
      this.position = position;
      this.quaternion = quaternion;
      this.scale = scale;
    };
    ARjs.HitTesting.Result.prototype.apply = function(object3d) {
      object3d.position.copy(this.position);
      object3d.quaternion.copy(this.quaternion);
      object3d.scale.copy(this.scale);
      object3d.updateMatrix();
    };
    ARjs.HitTesting.Result.prototype.applyPosition = function(object3d) {
      object3d.position.copy(this.position);
      object3d.updateMatrix();
      return this;
    };
    ARjs.HitTesting.Result.prototype.applyQuaternion = function(object3d) {
      object3d.quaternion.copy(this.quaternion);
      object3d.updateMatrix();
      return this;
    };
    var ARjs = ARjs || {};
    ARjs.Session = function(parameters) {
      var _this2 = this;
      this.parameters = { renderer: null, camera: null, scene: null, sourceParameters: {}, contextParameters: {} };
      setParameters(parameters);
      function setParameters(parameters2) {
        if (parameters2 === void 0)
          return;
        for (var key2 in parameters2) {
          var newValue = parameters2[key2];
          if (newValue === void 0) {
            console.warn("THREEx.Session: '" + key2 + "' parameter is undefined.");
            continue;
          }
          var currentValue = _this2.parameters[key2];
          if (currentValue === void 0) {
            console.warn("THREEx.Session: '" + key2 + "' is not a property of this material.");
            continue;
          }
          _this2.parameters[key2] = newValue;
        }
      }
      console.assert(this.parameters.renderer instanceof THREE.WebGLRenderer);
      console.assert(this.parameters.camera instanceof THREE.Camera);
      console.assert(this.parameters.scene instanceof THREE.Scene);
      Object.defineProperty(this, "renderer", { get: function() {
        console.warn("use .parameters.renderer renderer");
        return this.parameters.renderer;
      } });
      Object.defineProperty(this, "camera", { get: function() {
        console.warn("use .parameters.camera instead");
        return this.parameters.camera;
      } });
      Object.defineProperty(this, "scene", { get: function() {
        console.warn("use .parameters.scene instead");
        return this.parameters.scene;
      } });
      console.log("AR.js", ARjs.Context.REVISION, "- trackingBackend:", parameters.contextParameters.trackingBackend);
      var arSource = _this2.arSource = new ARjs.Source(parameters.sourceParameters);
      arSource.init(function onReady() {
        arSource.onResize(arContext, _this2.parameters.renderer, _this2.parameters.camera);
      });
      window.addEventListener("resize", function() {
        arSource.onResize(arContext, _this2.parameters.renderer, _this2.parameters.camera);
      });
      var arContext = _this2.arContext = new ARjs.Context(parameters.contextParameters);
      _this2.arContext.init();
      arContext.addEventListener("initialized", function(event) {
        arSource.onResize(arContext, _this2.parameters.renderer, _this2.parameters.camera);
      });
      this.update = function() {
        if (arSource.ready === false)
          return;
        arContext.update(arSource.domElement);
      };
    };
    ARjs.Session.prototype.onResize = function() {
      this.arSource.onResize(this.arContext, this.parameters.renderer, this.parameters.camera);
    };
    var ARjs = ARjs || {};
    ARjs.Utils = {};
    ARjs.Utils.createDefaultCamera = function(trackingMethod) {
      var trackingBackend = this.parseTrackingMethod(trackingMethod).trackingBackend;
      if (trackingBackend === "artoolkit") {
        var camera = new THREE.Camera();
      } else if (trackingBackend === "aruco") {
        var camera = new THREE.PerspectiveCamera(42, window.innerWidth / window.innerHeight, 0.01, 100);
      } else
        console.assert(false, "unknown trackingBackend: " + trackingBackend);
      return camera;
    };
    ARjs.Utils.parseTrackingMethod = function(trackingMethod) {
      if (trackingMethod === "best") {
        trackingMethod = "area-artoolkit";
      }
      if (trackingMethod.startsWith("area-")) {
        return { trackingBackend: trackingMethod.replace("area-", ""), markersAreaEnabled: true };
      } else {
        return { trackingBackend: trackingMethod, markersAreaEnabled: false };
      }
    };
    var ARjs = ARjs || {};
    var THREEx = THREEx || {};
    ARjs.MarkersAreaControls = THREEx.ArMultiMarkerControls = function(arToolkitContext, object3d, parameters) {
      var _this2 = this;
      THREEx.ArBaseControls.call(this, object3d);
      if (arguments.length > 3)
        console.assert("wrong api for", THREEx.ArMultiMarkerControls);
      this.parameters = { subMarkersControls: parameters.subMarkersControls, subMarkerPoses: parameters.subMarkerPoses, changeMatrixMode: parameters.changeMatrixMode !== void 0 ? parameters.changeMatrixMode : "modelViewMatrix" };
      this.object3d.visible = false;
      this.subMarkersControls = this.parameters.subMarkersControls;
      this.subMarkerPoses = this.parameters.subMarkerPoses;
      arToolkitContext.addEventListener("sourceProcessed", function() {
        _this2._onSourceProcessed();
      });
    };
    ARjs.MarkersAreaControls.prototype = Object.create(THREEx.ArBaseControls.prototype);
    ARjs.MarkersAreaControls.prototype.constructor = ARjs.MarkersAreaControls;
    ARjs.MarkersAreaControls.prototype._onSourceProcessed = function() {
      var _this2 = this;
      var stats = { count: 0, position: { sum: new THREE.Vector3(0, 0, 0), average: new THREE.Vector3(0, 0, 0) }, quaternion: { sum: new THREE.Quaternion(0, 0, 0, 0), average: new THREE.Quaternion(0, 0, 0, 0) }, scale: { sum: new THREE.Vector3(0, 0, 0), average: new THREE.Vector3(0, 0, 0) } };
      var firstQuaternion = _this2.parameters.subMarkersControls[0].object3d.quaternion;
      this.parameters.subMarkersControls.forEach(function(markerControls, markerIndex) {
        var markerObject3d = markerControls.object3d;
        if (markerObject3d.visible === false)
          return;
        var matrix = markerObject3d.matrix.clone();
        var markerPose = _this2.parameters.subMarkerPoses[markerIndex];
        matrix.multiply(new THREE.Matrix4().getInverse(markerPose));
        var position = new THREE.Vector3();
        var quaternion = new THREE.Quaternion();
        var scale = new THREE.Vector3();
        matrix.decompose(position, quaternion, scale);
        stats.count++;
        ARjs.MarkersAreaControls.averageVector3(stats.position.sum, position, stats.count, stats.position.average);
        ARjs.MarkersAreaControls.averageQuaternion(stats.quaternion.sum, quaternion, firstQuaternion, stats.count, stats.quaternion.average);
        ARjs.MarkersAreaControls.averageVector3(stats.scale.sum, scale, stats.count, stats.scale.average);
      });
      if (stats.count > 0) {
        _this2.object3d.visible = true;
      } else {
        _this2.object3d.visible = false;
      }
      if (stats.count > 0) {
        var modelViewMatrix = new THREE.Matrix4();
        modelViewMatrix.compose(stats.position.average, stats.quaternion.average, stats.scale.average);
        if (this.parameters.changeMatrixMode === "modelViewMatrix") {
          _this2.object3d.matrix.copy(modelViewMatrix);
        } else if (this.parameters.changeMatrixMode === "cameraTransformMatrix") {
          _this2.object3d.matrix.getInverse(modelViewMatrix);
        } else {
          console.assert(false);
        }
        _this2.object3d.matrix.decompose(_this2.object3d.position, _this2.object3d.quaternion, _this2.object3d.scale);
      }
    };
    ARjs.MarkersAreaControls.averageQuaternion = function(quaternionSum, newQuaternion, firstQuaternion, count, quaternionAverage) {
      quaternionAverage = quaternionAverage || new THREE.Quaternion();
      console.assert(firstQuaternion instanceof THREE.Quaternion === true);
      if (newQuaternion.dot(firstQuaternion) > 0) {
        newQuaternion = new THREE.Quaternion(-newQuaternion.x, -newQuaternion.y, -newQuaternion.z, -newQuaternion.w);
      }
      quaternionSum.x += newQuaternion.x;
      quaternionSum.y += newQuaternion.y;
      quaternionSum.z += newQuaternion.z;
      quaternionSum.w += newQuaternion.w;
      quaternionAverage.x = quaternionSum.x / count;
      quaternionAverage.y = quaternionSum.y / count;
      quaternionAverage.z = quaternionSum.z / count;
      quaternionAverage.w = quaternionSum.w / count;
      quaternionAverage.normalize();
      return quaternionAverage;
    };
    ARjs.MarkersAreaControls.averageVector3 = function(vector3Sum, vector3, count, vector3Average) {
      vector3Average = vector3Average || new THREE.Vector3();
      vector3Sum.x += vector3.x;
      vector3Sum.y += vector3.y;
      vector3Sum.z += vector3.z;
      vector3Average.x = vector3Sum.x / count;
      vector3Average.y = vector3Sum.y / count;
      vector3Average.z = vector3Sum.z / count;
      return vector3Average;
    };
    ARjs.MarkersAreaControls.computeCenter = function(jsonData) {
      var multiMarkerFile = JSON.parse(jsonData);
      var stats = { count: 0, position: { sum: new THREE.Vector3(0, 0, 0), average: new THREE.Vector3(0, 0, 0) }, quaternion: { sum: new THREE.Quaternion(0, 0, 0, 0), average: new THREE.Quaternion(0, 0, 0, 0) }, scale: { sum: new THREE.Vector3(0, 0, 0), average: new THREE.Vector3(0, 0, 0) } };
      var firstQuaternion = new THREE.Quaternion();
      multiMarkerFile.subMarkersControls.forEach(function(item) {
        var poseMatrix = new THREE.Matrix4().fromArray(item.poseMatrix);
        var position = new THREE.Vector3();
        var quaternion = new THREE.Quaternion();
        var scale = new THREE.Vector3();
        poseMatrix.decompose(position, quaternion, scale);
        stats.count++;
        ARjs.MarkersAreaControls.averageVector3(stats.position.sum, position, stats.count, stats.position.average);
        ARjs.MarkersAreaControls.averageQuaternion(stats.quaternion.sum, quaternion, firstQuaternion, stats.count, stats.quaternion.average);
        ARjs.MarkersAreaControls.averageVector3(stats.scale.sum, scale, stats.count, stats.scale.average);
      });
      var averageMatrix = new THREE.Matrix4();
      averageMatrix.compose(stats.position.average, stats.quaternion.average, stats.scale.average);
      return averageMatrix;
    };
    ARjs.MarkersAreaControls.computeBoundingBox = function(jsonData) {
      var multiMarkerFile = JSON.parse(jsonData);
      var boundingBox = new THREE.Box3();
      multiMarkerFile.subMarkersControls.forEach(function(item) {
        var poseMatrix = new THREE.Matrix4().fromArray(item.poseMatrix);
        var position = new THREE.Vector3();
        var quaternion = new THREE.Quaternion();
        var scale = new THREE.Vector3();
        poseMatrix.decompose(position, quaternion, scale);
        boundingBox.expandByPoint(position);
      });
      return boundingBox;
    };
    ARjs.MarkersAreaControls.prototype.updateSmoothedControls = function(smoothedControls, lerpsValues) {
      if (lerpsValues === void 0) {
        lerpsValues = [[0.3 + 0.1, 0.1, 0.3], [0.4 + 0.1, 0.1, 0.4], [0.4 + 0.1, 0.2, 0.5], [0.5 + 0.1, 0.2, 0.7], [0.5 + 0.1, 0.2, 0.7]];
      }
      var nVisible = 0;
      this.parameters.subMarkersControls.forEach(function(markerControls, markerIndex) {
        var markerObject3d = markerControls.object3d;
        if (markerObject3d.visible === true)
          nVisible++;
      });
      if (lerpsValues[nVisible - 1] !== void 0) {
        var lerpValues = lerpsValues[nVisible - 1];
      } else {
        var lerpValues = lerpsValues[lerpsValues.length - 1];
      }
      smoothedControls.parameters.lerpPosition = lerpValues[0];
      smoothedControls.parameters.lerpQuaternion = lerpValues[1];
      smoothedControls.parameters.lerpScale = lerpValues[2];
    };
    ARjs.MarkersAreaControls.fromJSON = function(arToolkitContext, parent3D, markerRoot, jsonData, parameters) {
      var multiMarkerFile = JSON.parse(jsonData);
      var subMarkersControls = [];
      var subMarkerPoses = [];
      parameters = parameters || {};
      multiMarkerFile.subMarkersControls.forEach(function(item) {
        var markerRoot2 = new THREE.Object3D();
        parent3D.add(markerRoot2);
        var subMarkerControls = new THREEx.ArMarkerControls(arToolkitContext, markerRoot2, item.parameters);
        subMarkersControls.push(subMarkerControls);
        subMarkerPoses.push(new THREE.Matrix4().fromArray(item.poseMatrix));
      });
      parameters.subMarkersControls = subMarkersControls;
      parameters.subMarkerPoses = subMarkerPoses;
      var multiMarkerControls = new THREEx.ArMultiMarkerControls(arToolkitContext, markerRoot, parameters);
      return multiMarkerControls;
    };
    var ARjs = ARjs || {};
    var THREEx = THREEx || {};
    ARjs.MarkersAreaLearning = THREEx.ArMultiMakersLearning = function(arToolkitContext, subMarkersControls) {
      var _this2 = this;
      this._arToolkitContext = arToolkitContext;
      this.subMarkersControls = subMarkersControls;
      this.enabled = true;
      arToolkitContext.addEventListener("sourceProcessed", function() {
        _this2._onSourceProcessed();
      });
    };
    ARjs.MarkersAreaLearning.prototype._onSourceProcessed = function() {
      var originQuaternion = this.subMarkersControls[0].object3d.quaternion;
      if (this.enabled === false)
        return;
      var visibleMarkerControls = this.subMarkersControls.filter(function(markerControls) {
        return markerControls.object3d.visible === true;
      });
      var count = Object.keys(visibleMarkerControls).length;
      var positionDelta = new THREE.Vector3();
      var quaternionDelta = new THREE.Quaternion();
      var scaleDelta = new THREE.Vector3();
      var tmpMatrix = new THREE.Matrix4();
      for (var i2 = 0; i2 < count; i2++) {
        var markerControls1 = visibleMarkerControls[i2];
        for (var j = 0; j < count; j++) {
          var markerControls2 = visibleMarkerControls[j];
          if (i2 === j)
            continue;
          if (markerControls1.object3d.userData.seenCouples === void 0) {
            markerControls1.object3d.userData.seenCouples = {};
          }
          var seenCouples = markerControls1.object3d.userData.seenCouples;
          if (seenCouples[markerControls2.id] === void 0) {
            seenCouples[markerControls2.id] = { count: 0, position: { sum: new THREE.Vector3(0, 0, 0), average: new THREE.Vector3(0, 0, 0) }, quaternion: { sum: new THREE.Quaternion(0, 0, 0, 0), average: new THREE.Quaternion(0, 0, 0, 0) }, scale: { sum: new THREE.Vector3(0, 0, 0), average: new THREE.Vector3(0, 0, 0) } };
          }
          tmpMatrix.getInverse(markerControls1.object3d.matrix);
          tmpMatrix.multiply(markerControls2.object3d.matrix);
          tmpMatrix.decompose(positionDelta, quaternionDelta, scaleDelta);
          var stats = seenCouples[markerControls2.id];
          stats.count++;
          THREEx.ArMultiMarkerControls.averageVector3(stats.position.sum, positionDelta, stats.count, stats.position.average);
          THREEx.ArMultiMarkerControls.averageQuaternion(stats.quaternion.sum, quaternionDelta, originQuaternion, stats.count, stats.quaternion.average);
          THREEx.ArMultiMarkerControls.averageVector3(stats.scale.sum, scaleDelta, stats.count, stats.scale.average);
        }
      }
    };
    ARjs.MarkersAreaLearning.prototype.computeResult = function() {
      var _this2 = this;
      var originSubControls = this.subMarkersControls[0];
      this.deleteResult();
      originSubControls.object3d.userData.result = { averageMatrix: new THREE.Matrix4(), confidenceFactor: 1 };
      do {
        var resultChanged = false;
        this.subMarkersControls.forEach(function(subMarkerControls) {
          var result = subMarkerControls.object3d.userData.result;
          var isLearned = result !== void 0 && result.confidenceFactor >= 1 ? true : false;
          if (isLearned === true)
            return;
          var otherSubControlsID = _this2._getLearnedCoupleStats(subMarkerControls);
          if (otherSubControlsID === null) {
            return;
          }
          var otherSubControls = _this2._getSubMarkerControlsByID(otherSubControlsID);
          var seenCoupleStats = subMarkerControls.object3d.userData.seenCouples[otherSubControlsID];
          var averageMatrix = new THREE.Matrix4();
          averageMatrix.compose(seenCoupleStats.position.average, seenCoupleStats.quaternion.average, seenCoupleStats.scale.average);
          var otherAverageMatrix = otherSubControls.object3d.userData.result.averageMatrix;
          var matrix = new THREE.Matrix4().getInverse(otherAverageMatrix).multiply(averageMatrix);
          matrix = new THREE.Matrix4().getInverse(matrix);
          console.assert(subMarkerControls.object3d.userData.result === void 0);
          subMarkerControls.object3d.userData.result = { averageMatrix: matrix, confidenceFactor: 1 };
          resultChanged = true;
        });
      } while (resultChanged === true);
    };
    ARjs.MarkersAreaLearning.prototype._getLearnedCoupleStats = function(subMarkerControls) {
      if (subMarkerControls.object3d.userData.seenCouples === void 0)
        return null;
      var seenCouples = subMarkerControls.object3d.userData.seenCouples;
      var coupleControlsIDs = Object.keys(seenCouples).map(Number);
      for (var i2 = 0; i2 < coupleControlsIDs.length; i2++) {
        var otherSubControlsID = coupleControlsIDs[i2];
        var otherSubControls = this._getSubMarkerControlsByID(otherSubControlsID);
        var result = otherSubControls.object3d.userData.result;
        var isLearned = result !== void 0 && result.confidenceFactor >= 1 ? true : false;
        if (isLearned === false)
          continue;
        return otherSubControlsID;
      }
      return null;
    };
    ARjs.MarkersAreaLearning.prototype._getSubMarkerControlsByID = function(controlsID) {
      for (var i2 = 0; i2 < this.subMarkersControls.length; i2++) {
        var subMarkerControls = this.subMarkersControls[i2];
        if (subMarkerControls.id === controlsID) {
          return subMarkerControls;
        }
      }
      return null;
    };
    ARjs.MarkersAreaLearning.prototype.toJSON = function() {
      this.computeResult();
      var data = { meta: { createdBy: "Area Learning - AR.js " + THREEx.ArToolkitContext.REVISION, createdAt: (/* @__PURE__ */ new Date()).toJSON() }, trackingBackend: this._arToolkitContext.parameters.trackingBackend, subMarkersControls: [] };
      var originSubControls = this.subMarkersControls[0];
      var originMatrixInverse = new THREE.Matrix4().getInverse(originSubControls.object3d.matrix);
      this.subMarkersControls.forEach(function(subMarkerControls, index) {
        if (subMarkerControls.object3d.userData.result === void 0)
          return;
        var poseMatrix = subMarkerControls.object3d.userData.result.averageMatrix;
        console.assert(poseMatrix instanceof THREE.Matrix4);
        var info = { parameters: {}, poseMatrix: poseMatrix.toArray() };
        if (subMarkerControls.parameters.type === "pattern") {
          info.parameters.type = subMarkerControls.parameters.type;
          info.parameters.patternUrl = subMarkerControls.parameters.patternUrl;
        } else if (subMarkerControls.parameters.type === "barcode") {
          info.parameters.type = subMarkerControls.parameters.type;
          info.parameters.barcodeValue = subMarkerControls.parameters.barcodeValue;
        } else
          console.assert(false);
        data.subMarkersControls.push(info);
      });
      var strJSON = JSON.stringify(data, null, "	");
      var humanReadable = false;
      if (humanReadable === true) {
        var tmp = JSON.parse(strJSON);
        tmp.subMarkersControls.forEach(function(markerControls) {
          markerControls.poseMatrix = markerControls.poseMatrix.map(function(value) {
            var roundingFactor = 100;
            return Math.round(value * roundingFactor) / roundingFactor;
          });
        });
        strJSON = JSON.stringify(tmp, null, "	");
      }
      return strJSON;
    };
    ARjs.MarkersAreaLearning.prototype.resetStats = function() {
      this.deleteResult();
      this.subMarkersControls.forEach(function(markerControls) {
        delete markerControls.object3d.userData.seenCouples;
      });
    };
    ARjs.MarkersAreaLearning.prototype.deleteResult = function() {
      this.subMarkersControls.forEach(function(markerControls) {
        delete markerControls.object3d.userData.result;
      });
    };
    var THREEx = THREEx || {};
    var ARjs = ARjs || {};
    var THREEx = THREEx || {};
    ARjs.MarkersAreaUtils = THREEx.ArMultiMarkerUtils = {};
    ARjs.MarkersAreaUtils.navigateToLearnerPage = function(learnerBaseURL, trackingBackend) {
      var learnerParameters = { backURL: location.href, trackingBackend, markersControlsParameters: ARjs.MarkersAreaUtils.createDefaultMarkersControlsParameters(trackingBackend) };
      location.href = learnerBaseURL + "?" + encodeURIComponent(JSON.stringify(learnerParameters));
    };
    ARjs.MarkersAreaUtils.storeDefaultMultiMarkerFile = function(trackingBackend) {
      var file = ARjs.MarkersAreaUtils.createDefaultMultiMarkerFile(trackingBackend);
      localStorage.setItem("ARjsMultiMarkerFile", JSON.stringify(file));
    };
    ARjs.MarkersAreaUtils.createDefaultMultiMarkerFile = function(trackingBackend) {
      console.assert(trackingBackend);
      if (trackingBackend === void 0)
        debugger;
      var link = document.createElement("a");
      link.href = ARjs.Context.baseURL;
      var absoluteBaseURL = link.href;
      var file = { meta: { createdBy: "AR.js " + ARjs.Context.REVISION + " - Default Marker", createdAt: (/* @__PURE__ */ new Date()).toJSON() }, trackingBackend, subMarkersControls: [] };
      file.subMarkersControls[0] = { parameters: {}, poseMatrix: new THREE.Matrix4().makeTranslation(0, 0, 0).toArray() };
      if (trackingBackend === "artoolkit") {
        file.subMarkersControls[0].parameters.type = "pattern";
        file.subMarkersControls[0].parameters.patternUrl = absoluteBaseURL + "examples/marker-training/examples/pattern-files/pattern-hiro.patt";
      } else if (trackingBackend === "aruco") {
        file.subMarkersControls[0].parameters.type = "barcode";
        file.subMarkersControls[0].parameters.barcodeValue = 1001;
      } else
        console.assert(false);
      return file;
    };
    ARjs.MarkersAreaUtils.createDefaultMarkersControlsParameters = function(trackingBackend) {
      var link = document.createElement("a");
      link.href = ARjs.Context.baseURL;
      var absoluteBaseURL = link.href;
      if (trackingBackend === "artoolkit") {
        var markersControlsParameters = [{ type: "pattern", patternUrl: absoluteBaseURL + "examples/marker-training/examples/pattern-files/pattern-hiro.patt" }, { type: "pattern", patternUrl: absoluteBaseURL + "examples/marker-training/examples/pattern-files/pattern-kanji.patt" }, { type: "pattern", patternUrl: absoluteBaseURL + "examples/marker-training/examples/pattern-files/pattern-letterA.patt" }, { type: "pattern", patternUrl: absoluteBaseURL + "examples/marker-training/examples/pattern-files/pattern-letterB.patt" }, { type: "pattern", patternUrl: absoluteBaseURL + "examples/marker-training/examples/pattern-files/pattern-letterC.patt" }, { type: "pattern", patternUrl: absoluteBaseURL + "examples/marker-training/examples/pattern-files/pattern-letterF.patt" }];
      } else if (trackingBackend === "aruco") {
        var markersControlsParameters = [{ type: "barcode", barcodeValue: 1001 }, { type: "barcode", barcodeValue: 1002 }, { type: "barcode", barcodeValue: 1003 }, { type: "barcode", barcodeValue: 1004 }, { type: "barcode", barcodeValue: 1005 }, { type: "barcode", barcodeValue: 1006 }];
      } else
        console.assert(false);
      return markersControlsParameters;
    };
    ARjs.MarkersAreaUtils.storeMarkersAreaFileFromResolution = function(trackingBackend, resolutionW, resolutionH) {
      var areaFile = this.buildMarkersAreaFileFromResolution(trackingBackend, resolutionW, resolutionH);
      localStorage.setItem("ARjsMultiMarkerFile", JSON.stringify(areaFile));
    };
    ARjs.MarkersAreaUtils.buildMarkersAreaFileFromResolution = function(trackingBackend, resolutionW, resolutionH) {
      var file = { meta: { createdBy: "AR.js - Augmented Website", createdAt: (/* @__PURE__ */ new Date()).toJSON() }, trackingBackend, subMarkersControls: [] };
      var whiteMargin = 0.1;
      if (resolutionW > resolutionH) {
        var markerImageSize = 0.4 * resolutionH;
      } else if (resolutionW < resolutionH) {
        var markerImageSize = 0.4 * resolutionW;
      } else if (resolutionW === resolutionH) {
        var markerImageSize = 0.33 * resolutionW;
      } else
        console.assert(false);
      var actualMarkerSize = markerImageSize * (1 - 2 * whiteMargin);
      var deltaX = (resolutionW - markerImageSize) / 2 / actualMarkerSize;
      var deltaZ = (resolutionH - markerImageSize) / 2 / actualMarkerSize;
      var subMarkerControls = buildSubMarkerControls("center", 0, 0);
      file.subMarkersControls.push(subMarkerControls);
      var subMarkerControls = buildSubMarkerControls("topleft", -deltaX, -deltaZ);
      file.subMarkersControls.push(subMarkerControls);
      var subMarkerControls = buildSubMarkerControls("topright", +deltaX, -deltaZ);
      file.subMarkersControls.push(subMarkerControls);
      var subMarkerControls = buildSubMarkerControls("bottomleft", -deltaX, +deltaZ);
      file.subMarkersControls.push(subMarkerControls);
      var subMarkerControls = buildSubMarkerControls("bottomright", +deltaX, +deltaZ);
      file.subMarkersControls.push(subMarkerControls);
      return file;
      function buildSubMarkerControls(layout, positionX, positionZ) {
        console.log("buildSubMarkerControls", layout, positionX, positionZ);
        var subMarkersControls = { parameters: {}, poseMatrix: new THREE.Matrix4().makeTranslation(positionX, 0, positionZ).toArray() };
        if (trackingBackend === "artoolkit") {
          layout2MarkerParametersArtoolkit(subMarkersControls.parameters, layout);
        } else if (trackingBackend === "aruco") {
          layout2MarkerParametersAruco(subMarkersControls.parameters, layout);
        } else
          console.assert(false);
        return subMarkersControls;
      }
      function layout2MarkerParametersArtoolkit(parameters, layout) {
        var link = document.createElement("a");
        link.href = ARjs.Context.baseURL;
        var absoluteBaseURL = link.href;
        var layout2PatternUrl = { center: convertRelativeUrlToAbsolute(absoluteBaseURL + "examples/marker-training/examples/pattern-files/pattern-hiro.patt"), topleft: convertRelativeUrlToAbsolute(absoluteBaseURL + "examples/marker-training/examples/pattern-files/pattern-letterA.patt"), topright: convertRelativeUrlToAbsolute(absoluteBaseURL + "examples/marker-training/examples/pattern-files/pattern-letterB.patt"), bottomleft: convertRelativeUrlToAbsolute(absoluteBaseURL + "examples/marker-training/examples/pattern-files/pattern-letterC.patt"), bottomright: convertRelativeUrlToAbsolute(absoluteBaseURL + "examples/marker-training/examples/pattern-files/pattern-letterF.patt") };
        console.assert(layout2PatternUrl[layout] !== void 0);
        parameters.type = "pattern";
        parameters.patternUrl = layout2PatternUrl[layout];
        return;
        function convertRelativeUrlToAbsolute(relativeUrl) {
          var tmpLink = document.createElement("a");
          tmpLink.href = relativeUrl;
          return tmpLink.href;
        }
      }
      function layout2MarkerParametersAruco(parameters, layout) {
        var layout2Barcode = { center: 1001, topleft: 1002, topright: 1003, bottomleft: 1004, bottomright: 1005 };
        console.assert(layout2Barcode[layout]);
        parameters.type = "barcode";
        parameters.barcodeValue = layout2Barcode[layout];
      }
    };
    AFRAME.registerComponent("arjs-anchor", { dependencies: ["arjs", "artoolkit"], schema: { preset: { type: "string" }, markerhelpers: { type: "boolean", default: false }, size: { type: "number", default: 1 }, type: { type: "string" }, patternUrl: { type: "string" }, barcodeValue: { type: "number" }, changeMatrixMode: { type: "string", default: "modelViewMatrix" }, minConfidence: { type: "number", default: 0.6 }, smooth: { type: "boolean", default: false }, smoothCount: { type: "number", default: 5 }, smoothTolerance: { type: "number", default: 0.01 }, smoothThreshold: { type: "number", default: 2 } }, init: function() {
      var _this2 = this;
      var arjsSystem = this.el.sceneEl.systems.arjs || this.el.sceneEl.systems.artoolkit;
      _this2.isReady = false;
      _this2._arAnchor = null;
      if (_this2.data.changeMatrixMode === "modelViewMatrix") {
        _this2.el.object3D.visible = false;
      } else if (_this2.data.changeMatrixMode === "cameraTransformMatrix") {
        _this2.el.sceneEl.object3D.visible = false;
      } else
        console.assert(false);
      var startedAt = Date.now();
      var timerId = setInterval(function() {
        if (arjsSystem.isReady === false)
          return;
        clearInterval(timerId);
        var arProfile = arjsSystem._arProfile;
        arProfile.changeMatrixMode(_this2.data.changeMatrixMode);
        var markerParameters = Object.assign({}, arProfile.defaultMarkerParameters);
        if (_this2.data.preset === "hiro") {
          markerParameters.type = "pattern";
          markerParameters.patternUrl = THREEx.ArToolkitContext.baseURL + "examples/marker-training/examples/pattern-files/pattern-hiro.patt";
          markerParameters.markersAreaEnabled = false;
        } else if (_this2.data.preset === "kanji") {
          markerParameters.type = "pattern";
          markerParameters.patternUrl = THREEx.ArToolkitContext.baseURL + "examples/marker-training/examples/pattern-files/pattern-kanji.patt";
          markerParameters.markersAreaEnabled = false;
        } else if (_this2.data.preset === "area") {
          markerParameters.type = "barcode";
          markerParameters.barcodeValue = 1001;
          markerParameters.markersAreaEnabled = true;
        } else if (_this2.data.type === "barcode") {
          markerParameters = { type: _this2.data.type, changeMatrixMode: "modelViewMatrix", barcodeValue: _this2.data.barcodeValue, markersAreaEnabled: false };
        } else if (_this2.data.type === "pattern") {
          markerParameters.type = _this2.data.type;
          markerParameters.patternUrl = _this2.data.patternUrl;
          markerParameters.markersAreaEnabled = false;
        } else {
        }
        markerParameters.smooth = _this2.data.smooth;
        markerParameters.smoothCount = _this2.data.smoothCount;
        markerParameters.smoothTolerance = _this2.data.smoothTolerance;
        markerParameters.smoothThreshold = _this2.data.smoothThreshold;
        var arSession = arjsSystem._arSession;
        var arAnchor = _this2._arAnchor = new ARjs.Anchor(arSession, markerParameters);
        _this2.isReady = true;
        if (arjsSystem.data.debugUIEnabled) {
          var containerElement = document.querySelector("#arjsDebugUIContainer");
          if (containerElement === null) {
            containerElement = document.createElement("div");
            containerElement.id = "arjsDebugUIContainer";
            containerElement.setAttribute("style", "position: fixed; bottom: 10px; width:100%; text-align: center; z-index: 1; color: grey;");
            document.body.appendChild(containerElement);
          }
          var anchorDebugUI = new ARjs.AnchorDebugUI(arAnchor);
          containerElement.appendChild(anchorDebugUI.domElement);
        }
      }, 1e3 / 60);
    }, remove: function() {
    }, update: function() {
    }, tick: function() {
      var _this2 = this;
      if (this.isReady === false)
        return;
      var arjsSystem = this.el.sceneEl.systems.arjs || this.el.sceneEl.systems.artoolkit;
      this._arAnchor.update();
      var arWorldRoot = this._arAnchor.object3d;
      arWorldRoot.updateMatrixWorld(true);
      arWorldRoot.matrixWorld.decompose(this.el.object3D.position, this.el.object3D.quaternion, this.el.object3D.scale);
      if (_this2._arAnchor.parameters.changeMatrixMode === "modelViewMatrix") {
        var wasVisible = _this2.el.object3D.visible;
        _this2.el.object3D.visible = this._arAnchor.object3d.visible;
      } else if (_this2._arAnchor.parameters.changeMatrixMode === "cameraTransformMatrix") {
        var wasVisible = _this2.el.sceneEl.object3D.visible;
        _this2.el.sceneEl.object3D.visible = this._arAnchor.object3d.visible;
      } else
        console.assert(false);
      if (_this2._arAnchor.object3d.visible === true && wasVisible === false) {
        _this2.el.emit("markerFound");
      } else if (_this2._arAnchor.object3d.visible === false && wasVisible === true) {
        _this2.el.emit("markerLost");
      }
    } });
    AFRAME.registerPrimitive("a-anchor", AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), { defaultComponents: { "arjs-anchor": {}, "arjs-hit-testing": {} }, mappings: { type: "arjs-anchor.type", size: "arjs-anchor.size", url: "arjs-anchor.patternUrl", value: "arjs-anchor.barcodeValue", preset: "arjs-anchor.preset", "min-confidence": "arjs-anchor.minConfidence", "marker-helpers": "arjs-anchor.markerhelpers", smooth: "arjs-anchor.smooth", "smooth-count": "arjs-anchor.smoothCount", "smooth-tolerance": "arjs-anchor.smoothTolerance", "smooth-threshold": "arjs-anchor.smoothThreshold", "hit-testing-render-debug": "arjs-hit-testing.renderDebug", "hit-testing-enabled": "arjs-hit-testing.enabled" } }));
    AFRAME.registerPrimitive("a-camera-static", AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), { defaultComponents: { camera: {} }, mappings: {} }));
    AFRAME.registerPrimitive("a-marker", AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), { defaultComponents: { "arjs-anchor": {}, "arjs-hit-testing": {} }, mappings: { type: "arjs-anchor.type", size: "arjs-anchor.size", url: "arjs-anchor.patternUrl", value: "arjs-anchor.barcodeValue", preset: "arjs-anchor.preset", "min-confidence": "arjs-anchor.minConfidence", "marker-helpers": "arjs-anchor.markerhelpers", smooth: "arjs-anchor.smooth", "smooth-count": "arjs-anchor.smoothCount", "smooth-tolerance": "arjs-anchor.smoothTolerance", "smooth-threshold": "arjs-anchor.smoothThreshold", "hit-testing-render-debug": "arjs-hit-testing.renderDebug", "hit-testing-enabled": "arjs-hit-testing.enabled" } }));
    AFRAME.registerPrimitive("a-marker-camera", AFRAME.utils.extendDeep({}, AFRAME.primitives.getMeshMixin(), { defaultComponents: { "arjs-anchor": { changeMatrixMode: "cameraTransformMatrix" }, camera: {} }, mappings: { type: "arjs-anchor.type", size: "arjs-anchor.size", url: "arjs-anchor.patternUrl", value: "arjs-anchor.barcodeValue", preset: "arjs-anchor.preset", "min-confidence": "arjs-anchor.minConfidence", "marker-helpers": "arjs-anchor.markerhelpers" } }));
    AFRAME.registerComponent("arjs-hit-testing", { dependencies: ["arjs", "artoolkit"], schema: { enabled: { type: "boolean", default: false }, renderDebug: { type: "boolean", default: false } }, init: function() {
      var _this2 = this;
      var arjsSystem = this.el.sceneEl.systems.arjs || this.el.sceneEl.systems.artoolkit;
      _this2.isReady = false;
      _this2._arAnchor = null;
      _this2._arHitTesting = null;
      var startedAt = Date.now();
      var timerId = setInterval(function() {
        var anchorEl = _this2.el;
        var anchorComponent = anchorEl.components["arjs-anchor"];
        if (anchorComponent === void 0 || anchorComponent.isReady === false)
          return;
        clearInterval(timerId);
        var arAnchor = anchorComponent._arAnchor;
        var arSession = arjsSystem._arSession;
        var renderer2 = arSession.parameters.renderer;
        var hitTesting = _this2._arHitTesting = new ARjs.HitTesting(arSession);
        hitTesting.enabled = _this2.data.enabled;
        _this2.isReady = true;
      }, 1e3 / 60);
    }, remove: function() {
    }, update: function() {
    }, tick: function() {
      var _this2 = this;
      if (this.isReady === false)
        return;
      var arjsSystem = this.el.sceneEl.systems.arjs || this.el.sceneEl.systems.artoolkit;
      var arSession = arjsSystem._arSession;
      var anchorEl = _this2.el;
      var anchorComponent = anchorEl.components["arjs-anchor"];
      var arAnchor = anchorComponent._arAnchor;
      var hitTesting = this._arHitTesting;
      var camera = arSession.parameters.camera;
      hitTesting.update(camera, arAnchor.object3d, arAnchor.parameters.changeMatrixMode);
    } });
    AFRAME.registerComponent("gps-camera-debug", { init: function() {
      this.current_coords_latitude;
      this.current_coords_longitude;
      this.origin_coords_latitude;
      this.origin_coords_longitude;
      this.camera_p_x;
      this.camera_p_z;
      this.entities = 0;
      this._buildCameraDebugUI(document.body);
      this.current_coords_latitude = document.querySelector("#current_coords_latitude");
      this.current_coords_longitude = document.querySelector("#current_coords_longitude");
      this.origin_coords_latitude = document.querySelector("#origin_coords_latitude");
      this.origin_coords_longitude = document.querySelector("#origin_coords_longitude");
      this.camera_p_x = document.querySelector("#camera_p_x");
      this.camera_p_z = document.querySelector("#camera_p_z");
      this.placesLoadedEventHandler = function() {
        this.entities++;
        var entities = document.querySelectorAll("[gps-entity-place]") && document.querySelectorAll("[gps-entity-place]").length || 0;
        if (entities === this.entities) {
          this._buildDistancesDebugUI();
          window.removeEventListener("gps-entity-place-loaded", this.placesLoadedEventHandler.bind(this));
          window.dispatchEvent(new CustomEvent("debug-ui-added"));
        }
      };
      window.addEventListener("gps-entity-place-loaded", this.placesLoadedEventHandler.bind(this));
    }, tick: function() {
      var camera = document.querySelector("[gps-camera]");
      var position = camera.getAttribute("position");
      this.camera_p_x.innerText = position.x.toFixed(6);
      this.camera_p_z.innerText = position.z.toFixed(6);
      var gpsPosition = camera.components["gps-camera"];
      if (gpsPosition) {
        if (gpsPosition.currentCoords) {
          this.current_coords_longitude.innerText = gpsPosition.currentCoords.longitude.toFixed(6);
          this.current_coords_latitude.innerText = gpsPosition.currentCoords.latitude.toFixed(6);
        }
        if (gpsPosition.originCoords) {
          this.origin_coords_longitude.innerText = gpsPosition.originCoords.longitude.toFixed(6);
          this.origin_coords_latitude.innerText = gpsPosition.originCoords.latitude.toFixed(6);
        }
      }
    }, _buildCameraDebugUI: function(parent) {
      var container = document.createElement("div");
      container.classList.add("debug");
      var currentLatLng = document.createElement("div");
      currentLatLng.innerText = "current lng/lat coords: ";
      var spanLng = document.createElement("span");
      spanLng.id = "current_coords_longitude";
      var spanLat = document.createElement("span");
      spanLat.id = "current_coords_latitude";
      currentLatLng.appendChild(spanLng);
      currentLatLng.appendChild(spanLat);
      container.appendChild(currentLatLng);
      var originLatLng = document.createElement("div");
      originLatLng.innerText = "origin lng/lat coords: ";
      var originSpanLng = document.createElement("span");
      originSpanLng.id = "origin_coords_longitude";
      var originSpanLat = document.createElement("span");
      originSpanLat.id = "origin_coords_latitude";
      originLatLng.appendChild(originSpanLng);
      originLatLng.appendChild(originSpanLat);
      container.appendChild(originLatLng);
      var cameraDiv = document.createElement("div");
      cameraDiv.innerText = "camera 3d position: ";
      var cameraSpanX = document.createElement("span");
      cameraSpanX.id = "camera_p_x";
      var cameraSpanZ = document.createElement("span");
      cameraSpanZ.id = "camera_p_z";
      cameraDiv.appendChild(cameraSpanX);
      cameraDiv.appendChild(cameraSpanZ);
      container.appendChild(cameraDiv);
      parent.appendChild(container);
    }, _buildDistancesDebugUI: function() {
      var div = document.querySelector(".debug");
      document.querySelectorAll("[gps-entity-place]").forEach(function(element) {
        var debugDiv = document.createElement("div");
        debugDiv.classList.add("debug-distance");
        debugDiv.innerHTML = element.getAttribute("value");
        console.log(element.getAttribute("value"));
        debugDiv.setAttribute("value", element.getAttribute("value"));
        div.appendChild(debugDiv);
      });
    } });
    AFRAME.registerComponent("gps-camera", { _watchPositionId: null, originCoords: null, currentCoords: null, lookControls: null, heading: null, schema: { simulateLatitude: { type: "number", default: 0 }, simulateLongitude: { type: "number", default: 0 }, simulateAltitude: { type: "number", default: 0 }, positionMinAccuracy: { type: "int", default: 100 }, alert: { type: "boolean", default: false }, minDistance: { type: "int", default: 0 } }, init: function() {
      if (!this.el.components["look-controls"]) {
        return;
      }
      this.loader = document.createElement("DIV");
      this.loader.classList.add("arjs-loader");
      document.body.appendChild(this.loader);
      window.addEventListener("gps-entity-place-added", (function() {
        if (this.originCoords) {
          window.dispatchEvent(new CustomEvent("gps-camera-origin-coord-set"));
          console.debug("gps-camera-origin-coord-set");
        }
        if (this.loader && this.loader.parentElement) {
          document.body.removeChild(this.loader);
        }
      }).bind(this));
      this.lookControls = this.el.components["look-controls"];
      var eventName = this._getDeviceOrientationEventName();
      this._onDeviceOrientation = this._onDeviceOrientation.bind(this);
      if (!!navigator.userAgent.match(/Version\/[\d.]+.*Safari/)) {
        if (typeof DeviceOrientationEvent.requestPermission === "function") {
          var handler = function() {
            console.log("Requesting device orientation permissions...");
            DeviceOrientationEvent.requestPermission();
            document.removeEventListener("touchend", handler);
          };
          document.addEventListener("touchend", function() {
            handler();
          }, false);
          alert("After camera permission prompt, please tap the screen to activate geolocation.");
        } else {
          var timeout = setTimeout(function() {
            alert("Please enable device orientation in Settings > Safari > Motion & Orientation Access.");
          }, 750);
          window.addEventListener(eventName, function() {
            clearTimeout(timeout);
          });
        }
      }
      window.addEventListener(eventName, this._onDeviceOrientation, false);
      this._watchPositionId = this._initWatchGPS((function(position) {
        if (this.data.simulateLatitude !== 0 && this.data.simulateLongitude !== 0) {
          localPosition = Object.assign({}, position.coords);
          localPosition.longitude = this.data.simulateLongitude;
          localPosition.latitude = this.data.simulateLatitude;
          localPosition.altitude = this.data.simulateAltitude;
          this.currentCoords = localPosition;
        } else {
          this.currentCoords = position.coords;
        }
        this._updatePosition();
      }).bind(this));
    }, tick: function() {
      if (this.heading === null) {
        return;
      }
      this._updateRotation();
    }, remove: function() {
      if (this._watchPositionId) {
        navigator.geolocation.clearWatch(this._watchPositionId);
      }
      this._watchPositionId = null;
      var eventName = this._getDeviceOrientationEventName();
      window.removeEventListener(eventName, this._onDeviceOrientation, false);
    }, _getDeviceOrientationEventName: function() {
      if ("ondeviceorientationabsolute" in window) {
        var eventName = "deviceorientationabsolute";
      } else if ("ondeviceorientation" in window) {
        var eventName = "deviceorientation";
      } else {
        var eventName = "";
        console.error("Compass not supported");
      }
      return eventName;
    }, _initWatchGPS: function(onSuccess, onError) {
      if (!onError) {
        onError = function(err) {
          console.warn("ERROR(" + err.code + "): " + err.message);
          if (err.code === 1) {
            alert("Please activate Geolocation and refresh the page. If it is already active, please check permissions for this website.");
            return;
          }
          if (err.code === 3) {
            alert("Cannot retrieve GPS position. Signal is absent.");
            return;
          }
        };
      }
      if ("geolocation" in navigator === false) {
        onError({ code: 0, message: "Geolocation is not supported by your browser" });
        return Promise.resolve();
      }
      return navigator.geolocation.watchPosition(onSuccess, onError, { enableHighAccuracy: true, maximumAge: 0, timeout: 27e3 });
    }, _updatePosition: function() {
      if (this.currentCoords.accuracy > this.data.positionMinAccuracy) {
        if (this.data.alert && !document.getElementById("alert-popup")) {
          var popup = document.createElement("div");
          popup.innerHTML = "GPS signal is very poor. Try move outdoor or to an area with a better signal.";
          popup.setAttribute("id", "alert-popup");
          document.body.appendChild(popup);
        }
        return;
      }
      var alertPopup = document.getElementById("alert-popup");
      if (this.currentCoords.accuracy <= this.data.positionMinAccuracy && alertPopup) {
        document.body.removeChild(alertPopup);
      }
      if (!this.originCoords) {
        this.originCoords = this.currentCoords;
        this._setPosition();
        var loader = document.querySelector(".arjs-loader");
        if (loader) {
          document.body.removeChild(loader);
        }
        window.dispatchEvent(new CustomEvent("gps-camera-origin-coord-set"));
        console.debug("gps-camera-origin-coord-set");
      } else {
        this._setPosition();
      }
    }, _setPosition: function() {
      var position = this.el.getAttribute("position");
      var dstCoords = { longitude: this.currentCoords.longitude, latitude: this.originCoords.latitude };
      position.x = this.computeDistanceMeters(this.originCoords, dstCoords);
      position.x *= this.currentCoords.longitude > this.originCoords.longitude ? 1 : -1;
      var dstCoords = { longitude: this.originCoords.longitude, latitude: this.currentCoords.latitude };
      position.z = this.computeDistanceMeters(this.originCoords, dstCoords);
      position.z *= this.currentCoords.latitude > this.originCoords.latitude ? -1 : 1;
      this.el.setAttribute("position", position);
      window.dispatchEvent(new CustomEvent("gps-camera-update-position", { detail: { position: this.currentCoords, origin: this.originCoords } }));
    }, computeDistanceMeters: function(src, dest, isPlace) {
      var dlongitude = THREE.Math.degToRad(dest.longitude - src.longitude);
      var dlatitude = THREE.Math.degToRad(dest.latitude - src.latitude);
      var a = Math.sin(dlatitude / 2) * Math.sin(dlatitude / 2) + Math.cos(THREE.Math.degToRad(src.latitude)) * Math.cos(THREE.Math.degToRad(dest.latitude)) * (Math.sin(dlongitude / 2) * Math.sin(dlongitude / 2));
      var angle = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
      var distance = angle * 6378160;
      if (isPlace && this.data.minDistance && this.data.minDistance > 0 && distance < this.data.minDistance) {
        return Number.MAX_SAFE_INTEGER;
      }
      return distance;
    }, _computeCompassHeading: function(alpha, beta, gamma) {
      var alphaRad = alpha * (Math.PI / 180);
      var betaRad = beta * (Math.PI / 180);
      var gammaRad = gamma * (Math.PI / 180);
      var cA = Math.cos(alphaRad);
      var sA = Math.sin(alphaRad);
      var sB = Math.sin(betaRad);
      var cG = Math.cos(gammaRad);
      var sG = Math.sin(gammaRad);
      var rA = -cA * sG - sA * sB * cG;
      var rB = -sA * sG + cA * sB * cG;
      var compassHeading = Math.atan(rA / rB);
      if (rB < 0) {
        compassHeading += Math.PI;
      } else if (rA < 0) {
        compassHeading += 2 * Math.PI;
      }
      compassHeading *= 180 / Math.PI;
      return compassHeading;
    }, _onDeviceOrientation: function(event) {
      if (event.webkitCompassHeading !== void 0) {
        if (event.webkitCompassAccuracy < 50) {
          this.heading = event.webkitCompassHeading;
        } else {
          console.warn("webkitCompassAccuracy is event.webkitCompassAccuracy");
        }
      } else if (event.alpha !== null) {
        if (event.absolute === true || event.absolute === void 0) {
          this.heading = this._computeCompassHeading(event.alpha, event.beta, event.gamma);
        } else {
          console.warn("event.absolute === false");
        }
      } else {
        console.warn("event.alpha === null");
      }
    }, _updateRotation: function() {
      var heading = 360 - this.heading;
      var cameraRotation = this.el.getAttribute("rotation").y;
      var yawRotation = THREE.Math.radToDeg(this.lookControls.yawObject.rotation.y);
      var offset = (heading - (cameraRotation - yawRotation)) % 360;
      this.lookControls.yawObject.rotation.y = THREE.Math.degToRad(offset);
    } });
    AFRAME.registerComponent("gps-entity-place", { _cameraGps: null, schema: { longitude: { type: "number", default: 0 }, latitude: { type: "number", default: 0 } }, init: function() {
      window.addEventListener("gps-camera-origin-coord-set", (function() {
        if (!this._cameraGps) {
          var camera = document.querySelector("[gps-camera]");
          if (!camera.components["gps-camera"]) {
            console.error("gps-camera not initialized");
            return;
          }
          this._cameraGps = camera.components["gps-camera"];
        }
        this._updatePosition();
      }).bind(this));
      window.addEventListener("gps-camera-update-position", (function(ev) {
        if (!this.data || !this._cameraGps) {
          return;
        }
        var dstCoords = { longitude: this.data.longitude, latitude: this.data.latitude };
        var distance = this._cameraGps.computeDistanceMeters(ev.detail.position, dstCoords);
        this.el.setAttribute("distance", distance);
        this.el.setAttribute("distanceMsg", formatDistance(distance));
        this.el.dispatchEvent(new CustomEvent("gps-entity-place-update-positon", { detail: { distance } }));
      }).bind(this));
      this._positionXDebug = 0;
      window.dispatchEvent(new CustomEvent("gps-entity-place-added"));
      console.debug("gps-entity-place-added");
      this.debugUIAddedHandler = function() {
        this.setDebugData(this.el);
        window.removeEventListener("debug-ui-added", this.debugUIAddedHandler.bind(this));
      };
      window.addEventListener("debug-ui-added", this.debugUIAddedHandler.bind(this));
    }, _updatePosition: function() {
      var position = { x: 0, y: this.el.getAttribute("position").y || 0, z: 0 };
      var hideEntity = false;
      var dstCoords = { longitude: this.data.longitude, latitude: this._cameraGps.originCoords.latitude };
      position.x = this._cameraGps.computeDistanceMeters(this._cameraGps.originCoords, dstCoords, true);
      if (position.x === Number.MAX_SAFE_INTEGER) {
        hideEntity = true;
      }
      this._positionXDebug = position.x;
      position.x *= this.data.longitude > this._cameraGps.originCoords.longitude ? 1 : -1;
      var dstCoords = { longitude: this._cameraGps.originCoords.longitude, latitude: this.data.latitude };
      position.z = this._cameraGps.computeDistanceMeters(this._cameraGps.originCoords, dstCoords, true);
      if (position.z === Number.MAX_SAFE_INTEGER) {
        hideEntity = true;
      }
      position.z *= this.data.latitude > this._cameraGps.originCoords.latitude ? -1 : 1;
      if (position.y !== 0) {
        position.y = position.y - this._cameraGps.originCoords.altitude;
      }
      if (hideEntity) {
        this.el.setAttribute("visible", false);
      } else {
        this.el.setAttribute("visible", true);
      }
      this.el.setAttribute("position", position);
    }, setDebugData: function(element) {
      var elements = document.querySelectorAll(".debug-distance");
      elements.forEach(function(el) {
        var distance = formatDistance(this._positionXDebug);
        if (element.getAttribute("value") == el.getAttribute("value")) {
          el.innerHTML = el.getAttribute("value") + ": " + distance + "far";
        }
      });
    } });
    function formatDistance(distance) {
      distance = distance.toFixed(0);
      if (distance >= 1e3) {
        return distance / 1e3 + " kilometers";
      }
      return distance + " meters";
    }
    AFRAME.registerSystem("arjs", { schema: { trackingMethod: { type: "string", default: "best" }, debugUIEnabled: { type: "boolean", default: true }, areaLearningButton: { type: "boolean", default: true }, performanceProfile: { type: "string", default: "default" }, debug: { type: "boolean", default: false }, detectionMode: { type: "string", default: "" }, matrixCodeType: { type: "string", default: "" }, patternRatio: { type: "number", default: -1 }, labelingMode: { type: "string", default: "" }, cameraParametersUrl: { type: "string", default: "" }, maxDetectionRate: { type: "number", default: -1 }, sourceType: { type: "string", default: "" }, sourceUrl: { type: "string", default: "" }, sourceWidth: { type: "number", default: -1 }, sourceHeight: { type: "number", default: -1 }, deviceId: { type: "string", default: "" }, displayWidth: { type: "number", default: -1 }, displayHeight: { type: "number", default: -1 }, canvasWidth: { type: "number", default: -1 }, canvasHeight: { type: "number", default: -1 } }, init: function() {
      var _this2 = this;
      var arProfile = this._arProfile = new ARjs.Profile().trackingMethod(this.data.trackingMethod).performance(this.data.performanceProfile).defaultMarker();
      if (this.data.debug !== false)
        arProfile.contextParameters.debug = this.data.debug;
      if (this.data.detectionMode !== "")
        arProfile.contextParameters.detectionMode = this.data.detectionMode;
      if (this.data.matrixCodeType !== "")
        arProfile.contextParameters.matrixCodeType = this.data.matrixCodeType;
      if (this.data.patternRatio !== -1)
        arProfile.contextParameters.patternRatio = this.data.patternRatio;
      if (this.data.labelingMode !== "")
        arProfile.contextParameters.labelingMode = this.data.labelingMode;
      if (this.data.cameraParametersUrl !== "")
        arProfile.contextParameters.cameraParametersUrl = this.data.cameraParametersUrl;
      if (this.data.maxDetectionRate !== -1)
        arProfile.contextParameters.maxDetectionRate = this.data.maxDetectionRate;
      if (this.data.canvasWidth !== -1)
        arProfile.contextParameters.canvasWidth = this.data.canvasWidth;
      if (this.data.canvasHeight !== -1)
        arProfile.contextParameters.canvasHeight = this.data.canvasHeight;
      if (this.data.sourceType !== "")
        arProfile.sourceParameters.sourceType = this.data.sourceType;
      if (this.data.sourceUrl !== "")
        arProfile.sourceParameters.sourceUrl = this.data.sourceUrl;
      if (this.data.sourceWidth !== -1)
        arProfile.sourceParameters.sourceWidth = this.data.sourceWidth;
      if (this.data.sourceHeight !== -1)
        arProfile.sourceParameters.sourceHeight = this.data.sourceHeight;
      if (this.data.deviceId !== "")
        arProfile.sourceParameters.deviceId = this.data.deviceId;
      if (this.data.displayWidth !== -1)
        arProfile.sourceParameters.displayWidth = this.data.displayWidth;
      if (this.data.displayHeight !== -1)
        arProfile.sourceParameters.displayHeight = this.data.displayHeight;
      arProfile.checkIfValid();
      this._arSession = null;
      _this2.isReady = false;
      _this2.needsOverride = true;
      this.el.sceneEl.addEventListener("renderstart", function() {
        var scene = _this2.el.sceneEl.object3D;
        var camera = _this2.el.sceneEl.camera;
        var renderer2 = _this2.el.sceneEl.renderer;
        var arSession = _this2._arSession = new ARjs.Session({ scene, renderer: renderer2, camera, sourceParameters: arProfile.sourceParameters, contextParameters: arProfile.contextParameters });
        _this2.isReady = true;
        window.addEventListener("resize", onResize);
        function onResize() {
          var arSource = _this2._arSession.arSource;
          if (arProfile.contextParameters.trackingBackend !== "tango") {
            arSource.copyElementSizeTo(document.body);
          }
          var buttonElement = document.querySelector(".a-enter-vr");
          if (buttonElement) {
            buttonElement.style.position = "fixed";
          }
        }
        if (_this2.data.debugUIEnabled)
          initDebugUI();
        function initDebugUI() {
          var containerElement = document.querySelector("#arjsDebugUIContainer");
          if (containerElement === null) {
            containerElement = document.createElement("div");
            containerElement.id = "arjsDebugUIContainer";
            containerElement.setAttribute("style", "position: fixed; bottom: 10px; width:100%; text-align: center; z-index: 1;color: grey;");
            document.body.appendChild(containerElement);
          }
          var sessionDebugUI = new ARjs.SessionDebugUI(arSession);
          containerElement.appendChild(sessionDebugUI.domElement);
        }
      });
      var startedAt = Date.now();
      var timerId = setInterval(function() {
        if (Date.now() - startedAt > 1e4 * 1e3) {
          clearInterval(timerId);
          return;
        }
        window.dispatchEvent(new Event("resize"));
      }, 1e3 / 30);
    }, tick: function(now, delta) {
      var _this2 = this;
      if (this.isReady === false)
        return;
      var arSession = this._arSession;
      this._arSession.update();
      this._arSession.onResize();
    } });
  }
});
export default require_aframe_ar_min();
//# sourceMappingURL=ar__js.js.map
